{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = assertNode;\nvar _isNode = require(\"../validators/isNode\");\nfunction assertNode(node) {\n  if (!(0, _isNode.default)(node)) {\n    var _node$type;\n    const type = (_node$type = node == null ? void 0 : node.type) != null ? _node$type : JSON.stringify(node);\n    throw new TypeError(`Not a valid node of type \"${type}\"`);\n  }\n}","map":{"version":3,"sources":["../../src/asserts/assertNode.ts"],"names":["assertNode","node","type","JSON","stringify","TypeError"],"mappings":";;;;;;AAAA,IAAA,OAAA,GAAA,OAAA,CAAA,sBAAA,CAAA;AAGe,SAASA,UAAT,CAAoBC,IAApB,EAAwD;EACrE,IAAI,CAAC,CAAA,CAAA,EAAA,OAAA,CAAA,OAAA,EAAOA,IAAP,CAAL,EAAmB;IAAA,IAAA,UAAA;IACjB,MAAMC,IAAI,GAAA,CAAA,UAAA,GAAGD,IAAH,IAAA,IAAA,GAAA,KAAA,CAAA,GAAGA,IAAI,CAAEC,IAAT,KAAA,IAAA,GAAA,UAAA,GAAiBC,IAAI,CAACC,SAALD,CAAeF,IAAfE,CAA3B;IACA,MAAM,IAAIE,SAAJ,CAAe,6BAA4BH,IAAY,GAAvD,CAAN;EACD;AACF","sourcesContent":["import isNode from \"../validators/isNode\";\nimport type * as t from \"..\";\n\nexport default function assertNode(node?: any): asserts node is t.Node {\n  if (!isNode(node)) {\n    const type = node?.type ?? JSON.stringify(node);\n    throw new TypeError(`Not a valid node of type \"${type as any}\"`);\n  }\n}\n"]},"metadata":{},"sourceType":"script"}