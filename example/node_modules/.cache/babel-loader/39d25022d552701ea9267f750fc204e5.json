{"ast":null,"code":"import { notification } from 'antd';\nvar duration = 10;\nvar visibleNotifies = [];\nvar notify = {\n  success: function success(props) {\n    var id = \"\".concat(props.title, \"-\").concat(props.description);\n    if (!visibleNotifies.includes(id)) {\n      visibleNotifies.push(id);\n      notification.success({\n        message: props.title,\n        description: props.description,\n        duration: duration,\n        onClose: function onClose() {\n          visibleNotifies = visibleNotifies.filter(function (f) {\n            return f !== id;\n          });\n        }\n      });\n    }\n  },\n  info: function info(props) {\n    var id = \"\".concat(props.title, \"-\").concat(props.description);\n    if (!visibleNotifies.includes(id)) {\n      visibleNotifies.push(id);\n      notification.info({\n        message: props.title,\n        description: props.description,\n        duration: duration,\n        onClose: function onClose() {\n          visibleNotifies = visibleNotifies.filter(function (f) {\n            return f !== id;\n          });\n        }\n      });\n    }\n  },\n  error: function error(props) {\n    var id = \"\".concat(props.title, \"-\").concat(props.description);\n    if (!visibleNotifies.includes(id)) {\n      visibleNotifies.push(id);\n      notification.error({\n        message: props.title,\n        description: props.description,\n        duration: duration,\n        onClose: function onClose() {\n          visibleNotifies = visibleNotifies.filter(function (f) {\n            return f !== id;\n          });\n        }\n      });\n    }\n  }\n};\nexport { notify };","map":{"version":3,"sources":["../../../../src/general-ui/notify/notify.component.tsx"],"names":["duration","visibleNotifies","notify","success","props","id","title","description","includes","push","notification","message","onClose","filter","f","info","error"],"mappings":";AAQA,IAAMA,QAAQ,GAAG,EAAE;AACnB,IAAIC,eAAyB,GAAG,EAAE;AAC3B,IAAMC,MAAM,GAAG;EAClBC,OAAO,EAAGC,SAAAA,OAAAA,CAAAA,KAAmB,EAAW;IACpC,IAAMC,EAAE,GAAA,EAAA,CAAA,MAAA,CAAMD,KAAK,CAACE,KAAM,EAAA,GAAA,CAAA,CAAA,MAAA,CAAGF,KAAK,CAACG,WAAY,CAAC;IAChD,IAAI,CAACN,eAAe,CAACO,QAAQ,CAACH,EAAE,CAAC,EAAE;MAC/BJ,eAAe,CAACQ,IAAI,CAACJ,EAAE,CAAC;MAExBK,YAAY,CAACP,OAAO,CAAC;QACjBQ,OAAO,EAAEP,KAAK,CAACE,KAAK;QACpBC,WAAW,EAAEH,KAAK,CAACG,WAAW;QAC9BP,QAAQ,EAARA,QAAQ;QACRY,OAAO,EAAE,SAAA,OAAA,GAAM;UACXX,eAAe,GAAGA,eAAe,CAACY,MAAM,CAAEC,UAAAA,CAAC,EAAA;YAAA,OAAKA,CAAC,KAAKT,EAAE;UAAA,CAAA,CAAC;QAC7D;MACJ,CAAC,CAAC;IACN;EACH,CAAA;EACDU,IAAI,EAAGX,SAAAA,IAAAA,CAAAA,KAAmB,EAAW;IACjC,IAAMC,EAAE,GAAA,EAAA,CAAA,MAAA,CAAMD,KAAK,CAACE,KAAM,EAAA,GAAA,CAAA,CAAA,MAAA,CAAGF,KAAK,CAACG,WAAY,CAAC;IAChD,IAAI,CAACN,eAAe,CAACO,QAAQ,CAACH,EAAE,CAAC,EAAE;MAC/BJ,eAAe,CAACQ,IAAI,CAACJ,EAAE,CAAC;MAExBK,YAAY,CAACK,IAAI,CAAC;QACdJ,OAAO,EAAEP,KAAK,CAACE,KAAK;QACpBC,WAAW,EAAEH,KAAK,CAACG,WAAW;QAC9BP,QAAQ,EAARA,QAAQ;QACRY,OAAO,EAAE,SAAA,OAAA,GAAM;UACXX,eAAe,GAAGA,eAAe,CAACY,MAAM,CAAEC,UAAAA,CAAC,EAAA;YAAA,OAAKA,CAAC,KAAKT,EAAE;UAAA,CAAA,CAAC;QAC7D;MACJ,CAAC,CAAC;IACN;EACH,CAAA;EACDW,KAAK,EAAGZ,SAAAA,KAAAA,CAAAA,KAAmB,EAAW;IAClC,IAAMC,EAAE,GAAA,EAAA,CAAA,MAAA,CAAMD,KAAK,CAACE,KAAM,EAAA,GAAA,CAAA,CAAA,MAAA,CAAGF,KAAK,CAACG,WAAY,CAAC;IAChD,IAAI,CAACN,eAAe,CAACO,QAAQ,CAACH,EAAE,CAAC,EAAE;MAC/BJ,eAAe,CAACQ,IAAI,CAACJ,EAAE,CAAC;MAExBK,YAAY,CAACM,KAAK,CAAC;QACfL,OAAO,EAAEP,KAAK,CAACE,KAAK;QACpBC,WAAW,EAAEH,KAAK,CAACG,WAAW;QAC9BP,QAAQ,EAARA,QAAQ;QACRY,OAAO,EAAE,SAAA,OAAA,GAAM;UACXX,eAAe,GAAGA,eAAe,CAACY,MAAM,CAAEC,UAAAA,CAAC,EAAA;YAAA,OAAKA,CAAC,KAAKT,EAAE;UAAA,CAAA,CAAC;QAC7D;MACJ,CAAC,CAAC;IACN;EACJ;AACJ,CAAA","sourcesContent":["import { notification } from 'antd';\nimport { ReactNode } from 'react';\n\ninterface INotifyProps {\n    title: ReactNode;\n    description?: ReactNode;\n}\n\nconst duration = 10;\nlet visibleNotifies: string[] = [];\nexport const notify = {\n    success: (props: INotifyProps): void => {\n        const id = `${props.title}-${props.description}`;\n        if (!visibleNotifies.includes(id)) {\n            visibleNotifies.push(id);\n\n            notification.success({\n                message: props.title,\n                description: props.description,\n                duration,\n                onClose: () => {\n                    visibleNotifies = visibleNotifies.filter((f) => f !== id);\n                },\n            });\n        }\n    },\n    info: (props: INotifyProps): void => {\n        const id = `${props.title}-${props.description}`;\n        if (!visibleNotifies.includes(id)) {\n            visibleNotifies.push(id);\n\n            notification.info({\n                message: props.title,\n                description: props.description,\n                duration,\n                onClose: () => {\n                    visibleNotifies = visibleNotifies.filter((f) => f !== id);\n                },\n            });\n        }\n    },\n    error: (props: INotifyProps): void => {\n        const id = `${props.title}-${props.description}`;\n        if (!visibleNotifies.includes(id)) {\n            visibleNotifies.push(id);\n\n            notification.error({\n                message: props.title,\n                description: props.description,\n                duration,\n                onClose: () => {\n                    visibleNotifies = visibleNotifies.filter((f) => f !== id);\n                },\n            });\n        }\n    },\n};\n"]},"metadata":{},"sourceType":"module"}