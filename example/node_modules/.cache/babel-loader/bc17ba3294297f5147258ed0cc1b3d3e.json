{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction removeSame(obj1, obj2) {\n  return removeSameInternal(obj1, obj2);\n}\nfunction removeSameInternal(obj1, obj2) {\n  if (obj1) {\n    if (Array.isArray(obj1) && Array.isArray(obj2)) {\n      if (obj1.length === obj2.length) {\n        return obj1.map(function (val1, index) {\n          return removeSameInternal(val1, obj2 ? obj2[index] : undefined);\n        }).filter(function (f) {\n          return f !== undefined;\n        });\n      } else {\n        return obj2.map(function (val2, index) {\n          return removeSameInternal(obj1 ? obj1[index] : undefined, val2);\n        }).filter(function (f) {\n          return f !== undefined;\n        });\n      }\n    }\n    var keys = Object.keys(obj1);\n    var res = {};\n    keys.forEach(function (key) {\n      var val1 = obj1 ? obj1[key] : undefined;\n      var val2 = obj2 ? obj2[key] : undefined;\n      if (_typeof(val1) === 'object' && val1 !== null && Object.keys(val1).length > 0 || _typeof(val2) === 'object' && val2 !== null && Object.keys(val2).length > 0) {\n        res[key] = removeSameInternal(val1, val2);\n      } else if (val1 !== val2) {\n        res[key] = val2;\n      }\n    });\n    return Object.keys(res).length == 0 ? undefined : res;\n  }\n  return undefined;\n}\nexport { removeSame };","map":{"version":3,"sources":["../../../src/utils/remove-same.util.ts"],"names":["removeSame","obj1","obj2","removeSameInternal","Array","isArray","length","map","val1","index","undefined","filter","f","val2","keys","Object","res","forEach","key"],"mappings":";;;;;;;;;AAEO,SAASA,UAAU,CAAIC,IAAO,EAAEC,IAAO,EAAK;EAC/C,OAAOC,kBAAkB,CAACF,IAAI,EAAEC,IAAI,CAAC;AACzC;AAEA,SAASC,kBAAkB,CAAIF,IAAO,EAAEC,IAAO,EAAK;EAChD,IAAID,IAAI,EAAE;IACN,IAAIG,KAAK,CAACC,OAAO,CAACJ,IAAI,CAAC,IAAIG,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,EAAE;MAC5C,IAAID,IAAI,CAACK,MAAM,KAAKJ,IAAI,CAACI,MAAM,EAAE;QAC7B,OAAOL,IAAI,CACNM,GAAG,CAAC,UAACC,IAAI,EAAEC,KAAK,EAAK;UAClB,OAAON,kBAAkB,CAACK,IAAI,EAAEN,IAAI,GAAGA,IAAI,CAACO,KAAK,CAAC,GAAGC,SAAS,CAAC;QAClE,CAAA,CAAC,CACDC,MAAM,CAAEC,UAAAA,CAAC,EAAA;UAAA,OAAKA,CAAC,KAAKF,SAAS;QAAA,CAAA,CAAC;MACvC,CAAC,MAAM;QACH,OAAOR,IAAI,CACNK,GAAG,CAAC,UAACM,IAAI,EAAEJ,KAAK,EAAK;UAClB,OAAON,kBAAkB,CAACF,IAAI,GAAGA,IAAI,CAACQ,KAAK,CAAC,GAAGC,SAAS,EAAEG,IAAI,CAAC;QAClE,CAAA,CAAC,CACDF,MAAM,CAAEC,UAAAA,CAAC,EAAA;UAAA,OAAKA,CAAC,KAAKF,SAAS;QAAA,CAAA,CAAC;MACvC;IACJ;IAEA,IAAMI,IAAI,GAAGC,MAAM,CAACD,IAAI,CAACb,IAAI,CAAC;IAC9B,IAAMe,GAAG,GAAG,CAAA,CAAiB;IAC7BF,IAAI,CAACG,OAAO,CAAEC,UAAAA,GAAG,EAAK;MAClB,IAAMV,IAAI,GAAGP,IAAI,GAAGA,IAAI,CAACiB,GAAG,CAAC,GAAGR,SAAS;MACzC,IAAMG,IAAI,GAAGX,IAAI,GAAGA,IAAI,CAACgB,GAAG,CAAC,GAAGR,SAAS;MACzC,IACK,OAAA,CAAOF,IAAI,CAAA,KAAK,QAAQ,IAAIA,IAAI,KAAK,IAAI,IAAIO,MAAM,CAACD,IAAI,CAACN,IAAI,CAAC,CAACF,MAAM,GAAG,CAAC,IACzE,OAAA,CAAOO,IAAI,CAAA,KAAK,QAAQ,IAAIA,IAAI,KAAK,IAAI,IAAIE,MAAM,CAACD,IAAI,CAACD,IAAI,CAAC,CAACP,MAAM,GAAG,CAAE,EAC7E;QACEU,GAAG,CAACE,GAAG,CAAC,GAAGf,kBAAkB,CAACK,IAAI,EAAEK,IAAI,CAAC;MAC7C,CAAC,MAAM,IAAIL,IAAI,KAAKK,IAAI,EAAE;QACtBG,GAAG,CAACE,GAAG,CAAC,GAAGL,IAAI;MACnB;IACJ,CAAC,CAAC;IAEF,OAAOE,MAAM,CAACD,IAAI,CAACE,GAAG,CAAC,CAACV,MAAM,IAAI,CAAC,GAAII,SAAS,GAAqBM,GAAoB;EAC7F;EACA,OAAON,SAAS;AACpB","sourcesContent":["import { IDictionary } from '@common/interfaces/dictionary.interface';\n\nexport function removeSame<T>(obj1: T, obj2: T): T {\n    return removeSameInternal(obj1, obj2);\n}\n\nfunction removeSameInternal<T>(obj1: T, obj2: T): T {\n    if (obj1) {\n        if (Array.isArray(obj1) && Array.isArray(obj2)) {\n            if (obj1.length === obj2.length) {\n                return obj1\n                    .map((val1, index) => {\n                        return removeSameInternal(val1, obj2 ? obj2[index] : undefined);\n                    })\n                    .filter((f) => f !== undefined) as unknown as T;\n            } else {\n                return obj2\n                    .map((val2, index) => {\n                        return removeSameInternal(obj1 ? obj1[index] : undefined, val2);\n                    })\n                    .filter((f) => f !== undefined) as unknown as T;\n            }\n        }\n\n        const keys = Object.keys(obj1);\n        const res = {} as IDictionary;\n        keys.forEach((key) => {\n            const val1 = obj1 ? obj1[key] : undefined;\n            const val2 = obj2 ? obj2[key] : undefined;\n            if (\n                (typeof val1 === 'object' && val1 !== null && Object.keys(val1).length > 0) ||\n                (typeof val2 === 'object' && val2 !== null && Object.keys(val2).length > 0)\n            ) {\n                res[key] = removeSameInternal(val1, val2);\n            } else if (val1 !== val2) {\n                res[key] = val2;\n            }\n        });\n\n        return Object.keys(res).length == 0 ? (undefined as unknown as T) : (res as unknown as T);\n    }\n    return undefined as unknown as T;\n}\n"]},"metadata":{},"sourceType":"module"}