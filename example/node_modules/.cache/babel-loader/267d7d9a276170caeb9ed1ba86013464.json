{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { PollyClient } from \"./PollyClient\";\nimport { DeleteLexiconCommand } from \"./commands/DeleteLexiconCommand\";\nimport { DescribeVoicesCommand } from \"./commands/DescribeVoicesCommand\";\nimport { GetLexiconCommand } from \"./commands/GetLexiconCommand\";\nimport { GetSpeechSynthesisTaskCommand } from \"./commands/GetSpeechSynthesisTaskCommand\";\nimport { ListLexiconsCommand } from \"./commands/ListLexiconsCommand\";\nimport { ListSpeechSynthesisTasksCommand } from \"./commands/ListSpeechSynthesisTasksCommand\";\nimport { PutLexiconCommand } from \"./commands/PutLexiconCommand\";\nimport { StartSpeechSynthesisTaskCommand } from \"./commands/StartSpeechSynthesisTaskCommand\";\nimport { SynthesizeSpeechCommand } from \"./commands/SynthesizeSpeechCommand\";\n/**\n * <p>Amazon Polly is a web service that makes it easy to synthesize speech from\n *       text.</p>\n *          <p>The Amazon Polly service provides API operations for synthesizing high-quality speech\n *       from plain text and Speech Synthesis Markup Language (SSML), along with managing\n *       pronunciations lexicons that enable you to get the best results for your application\n *       domain.</p>\n */\nvar Polly = /** @class */function (_super) {\n  __extends(Polly, _super);\n  function Polly() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Polly.prototype.deleteLexicon = function (args, optionsOrCb, cb) {\n    var command = new DeleteLexiconCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n  Polly.prototype.describeVoices = function (args, optionsOrCb, cb) {\n    var command = new DescribeVoicesCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n  Polly.prototype.getLexicon = function (args, optionsOrCb, cb) {\n    var command = new GetLexiconCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n  Polly.prototype.getSpeechSynthesisTask = function (args, optionsOrCb, cb) {\n    var command = new GetSpeechSynthesisTaskCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n  Polly.prototype.listLexicons = function (args, optionsOrCb, cb) {\n    var command = new ListLexiconsCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n  Polly.prototype.listSpeechSynthesisTasks = function (args, optionsOrCb, cb) {\n    var command = new ListSpeechSynthesisTasksCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n  Polly.prototype.putLexicon = function (args, optionsOrCb, cb) {\n    var command = new PutLexiconCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n  Polly.prototype.startSpeechSynthesisTask = function (args, optionsOrCb, cb) {\n    var command = new StartSpeechSynthesisTaskCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n  Polly.prototype.synthesizeSpeech = function (args, optionsOrCb, cb) {\n    var command = new SynthesizeSpeechCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n  return Polly;\n}(PollyClient);\nexport { Polly };","map":{"version":3,"sources":["../../Polly.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __extends } from \"tslib\";\nimport { PollyClient } from \"./PollyClient\";\nimport { DeleteLexiconCommand, } from \"./commands/DeleteLexiconCommand\";\nimport { DescribeVoicesCommand, } from \"./commands/DescribeVoicesCommand\";\nimport { GetLexiconCommand } from \"./commands/GetLexiconCommand\";\nimport { GetSpeechSynthesisTaskCommand, } from \"./commands/GetSpeechSynthesisTaskCommand\";\nimport { ListLexiconsCommand, } from \"./commands/ListLexiconsCommand\";\nimport { ListSpeechSynthesisTasksCommand, } from \"./commands/ListSpeechSynthesisTasksCommand\";\nimport { PutLexiconCommand } from \"./commands/PutLexiconCommand\";\nimport { StartSpeechSynthesisTaskCommand, } from \"./commands/StartSpeechSynthesisTaskCommand\";\nimport { SynthesizeSpeechCommand, } from \"./commands/SynthesizeSpeechCommand\";\n/**\n * <p>Amazon Polly is a web service that makes it easy to synthesize speech from\n *       text.</p>\n *          <p>The Amazon Polly service provides API operations for synthesizing high-quality speech\n *       from plain text and Speech Synthesis Markup Language (SSML), along with managing\n *       pronunciations lexicons that enable you to get the best results for your application\n *       domain.</p>\n */\nvar Polly = /** @class */ (function (_super) {\n    __extends(Polly, _super);\n    function Polly() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Polly.prototype.deleteLexicon = function (args, optionsOrCb, cb) {\n        var command = new DeleteLexiconCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    };\n    Polly.prototype.describeVoices = function (args, optionsOrCb, cb) {\n        var command = new DescribeVoicesCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    };\n    Polly.prototype.getLexicon = function (args, optionsOrCb, cb) {\n        var command = new GetLexiconCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    };\n    Polly.prototype.getSpeechSynthesisTask = function (args, optionsOrCb, cb) {\n        var command = new GetSpeechSynthesisTaskCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    };\n    Polly.prototype.listLexicons = function (args, optionsOrCb, cb) {\n        var command = new ListLexiconsCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    };\n    Polly.prototype.listSpeechSynthesisTasks = function (args, optionsOrCb, cb) {\n        var command = new ListSpeechSynthesisTasksCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    };\n    Polly.prototype.putLexicon = function (args, optionsOrCb, cb) {\n        var command = new PutLexiconCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    };\n    Polly.prototype.startSpeechSynthesisTask = function (args, optionsOrCb, cb) {\n        var command = new StartSpeechSynthesisTaskCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    };\n    Polly.prototype.synthesizeSpeech = function (args, optionsOrCb, cb) {\n        var command = new SynthesizeSpeechCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    };\n    return Polly;\n}(PollyClient));\nexport { Polly };\n//# sourceMappingURL=Polly.js.map"]},"metadata":{},"sourceType":"module"}