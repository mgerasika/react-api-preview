{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar const_constant = require('../../constants/const.constant.js');\nvar React = require('react');\nvar reactRouter = require('react-router');\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\nvar React__default = /*#__PURE__*/_interopDefaultLegacy(React);\nconst RenderRoutes = _ref => {\n  let {\n    config,\n    getToken,\n    loginUrl,\n    dontHavePermissionUrl\n  } = _ref;\n  const history = reactRouter.useHistory();\n  return /*#__PURE__*/React__default[\"default\"].createElement(reactRouter.Switch, null, config.routes.map(route => {\n    const Component = route.component;\n    return /*#__PURE__*/React__default[\"default\"].createElement(reactRouter.Route, {\n      key: route.path.toString(),\n      exact: route.exact,\n      path: route.path.toString(),\n      render: props => {\n        if (route.isPrivate && !getToken()) {\n          sessionStorage.setItem(const_constant.CONST.sessionStorageKey_redirectUrl, history.location.pathname);\n          return /*#__PURE__*/React__default[\"default\"].createElement(reactRouter.Redirect, {\n            to: loginUrl.toString(),\n            from: history.location.pathname\n          });\n        }\n        if (!route.hasAccess()) {\n          return /*#__PURE__*/React__default[\"default\"].createElement(reactRouter.Redirect, {\n            to: dontHavePermissionUrl.toString(),\n            from: history.location.pathname\n          });\n        }\n        return /*#__PURE__*/React__default[\"default\"].createElement(Component, props);\n      }\n    });\n  }), config.redirects.map(r => {\n    return /*#__PURE__*/React__default[\"default\"].createElement(reactRouter.Redirect, {\n      key: r.to.toString(),\n      to: {\n        pathname: r.to.toString(),\n        state: r.state\n      },\n      from: r.from?.toString()\n    });\n  }));\n};\nexports.RenderRoutes = RenderRoutes;","map":{"version":3,"sources":["../../../../src/general-ui/render-routes/render-routes.component.tsx"],"names":["RenderRoutes","config","getToken","loginUrl","dontHavePermissionUrl","history","useHistory","React","Switch","routes","map","route","Component","component","Route","path","toString","exact","props","isPrivate","sessionStorage","setItem","CONST","sessionStorageKey_redirectUrl","location","pathname","Redirect","hasAccess","redirects","r","to","state","from"],"mappings":";;;;;;;;;;;;;;AAaO,MAAMA,YAAY,GAAG,QAAgF;EAAA,IAA/E;IAAEC,MAAM;IAAEC,QAAQ;IAAEC,QAAQ;IAAEC;EAA8B,CAAC;EACtF,MAAMC,OAAO,GAAGC,WAAAA,CAAAA,UAAU,EAAE;EAC5B,OAAA,aACIC,cAAAA,CAAAA,SAAAA,CAAAA,CAAAA,aAAAA,CAACC,WAAAA,CAAAA,MAAM,EAAA,IAAA,EACFP,MAAM,CAACQ,MAAM,CAACC,GAAG,CAAEC,KAAK,IAAK;IAC1B,MAAMC,SAAS,GAAGD,KAAK,CAACE,SAAS;IACjC,OAAA,aACIN,cAAAA,CAAAA,SAAAA,CAAAA,CAAAA,aAAAA,CAACO,WAAAA,CAAAA,KAAK,EAAA;MACF,GAAG,EAAEH,KAAK,CAACI,IAAI,CAACC,QAAQ,EAAG;MAC3B,KAAK,EAAEL,KAAK,CAACM,KAAM;MACnB,IAAI,EAAEN,KAAK,CAACI,IAAI,CAACC,QAAQ,EAAG;MAC5B,MAAM,EAAGE,KAAK,IAAkB;QAC5B,IAAIP,KAAK,CAACQ,SAAS,IAAI,CAACjB,QAAQ,EAAE,EAAE;UAChCkB,cAAc,CAACC,OAAO,CAACC,cAAAA,CAAAA,KAAK,CAACC,6BAA6B,EAAElB,OAAO,CAACmB,QAAQ,CAACC,QAAQ,CAAC;UACtF,OAAA,aAAOlB,cAAAA,CAAAA,SAAAA,CAAAA,CAAAA,aAAAA,CAACmB,WAAAA,CAAAA,QAAQ,EAAA;YAAC,EAAE,EAAEvB,QAAQ,CAACa,QAAQ,EAAG;YAAC,IAAI,EAAEX,OAAO,CAACmB,QAAQ,CAACC;WAAY,CAAA;QACjF;QACA,IAAI,CAACd,KAAK,CAACgB,SAAS,EAAE,EAAE;UACpB,OAAA,aAAOpB,cAAAA,CAAAA,SAAAA,CAAAA,CAAAA,aAAAA,CAACmB,WAAAA,CAAAA,QAAQ,EAAA;YAAC,EAAE,EAAEtB,qBAAqB,CAACY,QAAQ,EAAG;YAAC,IAAI,EAAEX,OAAO,CAACmB,QAAQ,CAACC;WAAY,CAAA;QAC9F;QACA,OAAA,aAAOlB,cAAAA,CAAAA,SAAAA,CAAC,CAAA,aAAA,CAAA,SAAS,EAAKW,KAAK,CAAI;MACnC;KACF,CAAA;GAET,CAAC,EAEDjB,MAAM,CAAC2B,SAAS,CAAClB,GAAG,CAAEmB,CAAC,IAAK;IACzB,OAAA,aACItB,cAAAA,CAAAA,SAAAA,CAAAA,CAAAA,aAAAA,CAACmB,WAAAA,CAAAA,QAAQ,EAAA;MACL,GAAG,EAAEG,CAAC,CAACC,EAAE,CAACd,QAAQ,EAAG;MACrB,EAAE,EAAE;QAAES,QAAQ,EAAEI,CAAC,CAACC,EAAE,CAACd,QAAQ,EAAE;QAAEe,KAAK,EAAEF,CAAC,CAACE;OAAQ;MAClD,IAAI,EAAEF,CAAC,CAACG,IAAI,EAAEhB,QAAQ;KACxB,CAAA;EAEV,CAAC,CAAC,CACG;AAEjB,CAAA","sourcesContent":["import { CONST } from '@common/constants/const.constant';\nimport { IRouteConfig } from '@common/interfaces/route.interface';\nimport { ILinkItem } from '@common/utils/make-links.util';\nimport React from 'react';\nimport { Redirect, Route, Switch, useHistory } from 'react-router';\n\ninterface IProps {\n    loginUrl: ILinkItem;\n    dontHavePermissionUrl: ILinkItem;\n    config: IRouteConfig;\n    getToken: () => string | undefined;\n}\n\nexport const RenderRoutes = ({ config, getToken, loginUrl, dontHavePermissionUrl }: IProps): JSX.Element => {\n    const history = useHistory();\n    return (\n        <Switch>\n            {config.routes.map((route) => {\n                const Component = route.component;\n                return (\n                    <Route\n                        key={route.path.toString()}\n                        exact={route.exact}\n                        path={route.path.toString()}\n                        render={(props): JSX.Element => {\n                            if (route.isPrivate && !getToken()) {\n                                sessionStorage.setItem(CONST.sessionStorageKey_redirectUrl, history.location.pathname);\n                                return <Redirect to={loginUrl.toString()} from={history.location.pathname} />;\n                            }\n                            if (!route.hasAccess()) {\n                                return <Redirect to={dontHavePermissionUrl.toString()} from={history.location.pathname} />;\n                            }\n                            return <Component {...props} />;\n                        }}\n                    />\n                );\n            })}\n\n            {config.redirects.map((r) => {\n                return (\n                    <Redirect\n                        key={r.to.toString()}\n                        to={{ pathname: r.to.toString(), state: r.state }}\n                        from={r.from?.toString()}\n                    />\n                );\n            })}\n        </Switch>\n    );\n};\n"]},"metadata":{},"sourceType":"script"}