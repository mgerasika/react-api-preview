{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { GetBucketInventoryConfigurationOutput, GetBucketInventoryConfigurationRequest } from \"../models/models_0\";\nimport { deserializeAws_restXmlGetBucketInventoryConfigurationCommand, serializeAws_restXmlGetBucketInventoryConfigurationCommand } from \"../protocols/Aws_restXml\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Returns an inventory configuration (identified by the inventory configuration ID) from\n *          the bucket.</p>\n *\n *          <p>To use this operation, you must have permissions to perform the\n *             <code>s3:GetInventoryConfiguration</code> action. The bucket owner has this permission\n *          by default and can grant this permission to others. For more information about permissions,\n *          see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources\">Permissions Related to Bucket Subresource Operations</a> and <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html\">Managing Access Permissions to Your Amazon S3\n *             Resources</a>.</p>\n *\n *          <p>For information about the Amazon S3 inventory feature, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-inventory.html\">Amazon S3 Inventory</a>.</p>\n *\n *          <p>The following operations are related to\n *          <code>GetBucketInventoryConfiguration</code>:</p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketInventoryConfiguration.html\">DeleteBucketInventoryConfiguration</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBucketInventoryConfigurations.html\">ListBucketInventoryConfigurations</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketInventoryConfiguration.html\">PutBucketInventoryConfiguration</a>\n *                </p>\n *             </li>\n *          </ul>\n */\nvar GetBucketInventoryConfigurationCommand = /** @class */function (_super) {\n  __extends(GetBucketInventoryConfigurationCommand, _super);\n  // Start section: command_properties\n  // End section: command_properties\n  function GetBucketInventoryConfigurationCommand(input) {\n    var _this =\n    // Start section: command_constructor\n    _super.call(this) || this;\n    _this.input = input;\n    return _this;\n    // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n  GetBucketInventoryConfigurationCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"S3Client\";\n    var commandName = \"GetBucketInventoryConfigurationCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: GetBucketInventoryConfigurationRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: GetBucketInventoryConfigurationOutput.filterSensitiveLog\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n  GetBucketInventoryConfigurationCommand.prototype.serialize = function (input, context) {\n    return serializeAws_restXmlGetBucketInventoryConfigurationCommand(input, context);\n  };\n  GetBucketInventoryConfigurationCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_restXmlGetBucketInventoryConfigurationCommand(output, context);\n  };\n  return GetBucketInventoryConfigurationCommand;\n}($Command);\nexport { GetBucketInventoryConfigurationCommand };","map":{"version":3,"sources":["../../../commands/GetBucketInventoryConfigurationCommand.ts"],"names":[],"mappings":";AACA,SAAS,qCAAqC,EAAE,sCAAsC,QAAQ,oBAAoB;AAClH,SACE,4DAA4D,EAC5D,0DAA0D,QACrD,0BAA0B;AACjC,SAAS,uBAAuB,QAAQ,qCAAqC;AAC7E,SAAS,cAAc,QAAQ,2BAA2B;AAE1D,SAAS,OAAO,IAAI,QAAQ,QAAQ,wBAAwB;AAc5D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BG;AACH,IAAA,sCAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAA4D,SAAA,CAAA,sCAAA,EAAA,MAAA,CAAA;EAK1D;EACA;EAEA,SAAA,sCAAA,CAAqB,KAAkD,EAAA;IAAvE,IAAA,KAAA;IACE;IACA,MAAA,CAAA,IAAA,CAAA,IAAA,CAAO,IAAA,IAAA;IAFY,KAAA,CAAA,KAAK,GAAL,KAAK;;IAGxB;EACF;EAEA;;AAEG;EACH,sCAAA,CAAA,SAAA,CAAA,iBAAiB,GAAjB,UACE,WAAmE,EACnE,aAAqC,EACrC,OAA8B,EAAA;IAE9B,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,cAAc,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IACzF,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,uBAAuB,CAAC,aAAa,CAAC,CAAC;IAEhE,IAAM,KAAK,GAAG,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC;IAE9C,IAAA,MAAM,GAAK,aAAa,CAAA,MAAlB;IACd,IAAM,UAAU,GAAG,UAAU;IAC7B,IAAM,WAAW,GAAG,wCAAwC;IAC5D,IAAM,uBAAuB,GAA4B;MACvD,MAAM,EAAA,MAAA;MACN,UAAU,EAAA,UAAA;MACV,WAAW,EAAA,WAAA;MACX,uBAAuB,EAAE,sCAAsC,CAAC,kBAAkB;MAClF,wBAAwB,EAAE,qCAAqC,CAAC;KACjE;IACO,IAAA,cAAc,GAAK,aAAa,CAAA,cAAlB;IACtB,OAAO,KAAK,CAAC,OAAO,CAClB,UAAC,OAAsC,EAAA;MACrC,OAAA,cAAc,CAAC,MAAM,CAAC,OAAO,CAAC,OAAwB,EAAE,OAAO,IAAI,CAAA,CAAE,CAAC;IAAtE,CAAsE,EACxE,uBAAuB,CACxB;EACH,CAAC;EAEO,sCAAA,CAAA,SAAA,CAAA,SAAS,GAAjB,UACE,KAAkD,EAClD,OAAuB,EAAA;IAEvB,OAAO,0DAA0D,CAAC,KAAK,EAAE,OAAO,CAAC;EACnF,CAAC;EAEO,sCAAA,CAAA,SAAA,CAAA,WAAW,GAAnB,UACE,MAAsB,EACtB,OAAuB,EAAA;IAEvB,OAAO,4DAA4D,CAAC,MAAM,EAAE,OAAO,CAAC;EACtF,CAAC;EAIH,OAAA,sCAAC;AAAD,CAAC,CA7D2D,QAAQ,CAAA","sourceRoot":"","sourcesContent":["import { __extends } from \"tslib\";\nimport { GetBucketInventoryConfigurationOutput, GetBucketInventoryConfigurationRequest } from \"../models/models_0\";\nimport { deserializeAws_restXmlGetBucketInventoryConfigurationCommand, serializeAws_restXmlGetBucketInventoryConfigurationCommand, } from \"../protocols/Aws_restXml\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Returns an inventory configuration (identified by the inventory configuration ID) from\n *          the bucket.</p>\n *\n *          <p>To use this operation, you must have permissions to perform the\n *             <code>s3:GetInventoryConfiguration</code> action. The bucket owner has this permission\n *          by default and can grant this permission to others. For more information about permissions,\n *          see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources\">Permissions Related to Bucket Subresource Operations</a> and <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html\">Managing Access Permissions to Your Amazon S3\n *             Resources</a>.</p>\n *\n *          <p>For information about the Amazon S3 inventory feature, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-inventory.html\">Amazon S3 Inventory</a>.</p>\n *\n *          <p>The following operations are related to\n *          <code>GetBucketInventoryConfiguration</code>:</p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketInventoryConfiguration.html\">DeleteBucketInventoryConfiguration</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBucketInventoryConfigurations.html\">ListBucketInventoryConfigurations</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketInventoryConfiguration.html\">PutBucketInventoryConfiguration</a>\n *                </p>\n *             </li>\n *          </ul>\n */\nvar GetBucketInventoryConfigurationCommand = /** @class */ (function (_super) {\n    __extends(GetBucketInventoryConfigurationCommand, _super);\n    // Start section: command_properties\n    // End section: command_properties\n    function GetBucketInventoryConfigurationCommand(input) {\n        var _this = \n        // Start section: command_constructor\n        _super.call(this) || this;\n        _this.input = input;\n        return _this;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    GetBucketInventoryConfigurationCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n        var stack = clientStack.concat(this.middlewareStack);\n        var logger = configuration.logger;\n        var clientName = \"S3Client\";\n        var commandName = \"GetBucketInventoryConfigurationCommand\";\n        var handlerExecutionContext = {\n            logger: logger,\n            clientName: clientName,\n            commandName: commandName,\n            inputFilterSensitiveLog: GetBucketInventoryConfigurationRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: GetBucketInventoryConfigurationOutput.filterSensitiveLog,\n        };\n        var requestHandler = configuration.requestHandler;\n        return stack.resolve(function (request) {\n            return requestHandler.handle(request.request, options || {});\n        }, handlerExecutionContext);\n    };\n    GetBucketInventoryConfigurationCommand.prototype.serialize = function (input, context) {\n        return serializeAws_restXmlGetBucketInventoryConfigurationCommand(input, context);\n    };\n    GetBucketInventoryConfigurationCommand.prototype.deserialize = function (output, context) {\n        return deserializeAws_restXmlGetBucketInventoryConfigurationCommand(output, context);\n    };\n    return GetBucketInventoryConfigurationCommand;\n}($Command));\nexport { GetBucketInventoryConfigurationCommand };\n//# sourceMappingURL=GetBucketInventoryConfigurationCommand.js.map"]},"metadata":{},"sourceType":"module"}