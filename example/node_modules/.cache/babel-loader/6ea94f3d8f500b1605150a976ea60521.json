{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { PutBucketInventoryConfigurationRequest } from \"../models/models_0\";\nimport { deserializeAws_restXmlPutBucketInventoryConfigurationCommand, serializeAws_restXmlPutBucketInventoryConfigurationCommand } from \"../protocols/Aws_restXml\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>This implementation of the <code>PUT</code> operation adds an inventory configuration\n *          (identified by the inventory ID) to the bucket. You can have up to 1,000 inventory\n *          configurations per bucket. </p>\n *          <p>Amazon S3 inventory generates inventories of the objects in the bucket on a daily or weekly\n *          basis, and the results are published to a flat file. The bucket that is inventoried is\n *          called the <i>source</i> bucket, and the bucket where the inventory flat file\n *          is stored is called the <i>destination</i> bucket. The\n *             <i>destination</i> bucket must be in the same AWS Region as the\n *             <i>source</i> bucket. </p>\n *          <p>When you configure an inventory for a <i>source</i> bucket, you specify\n *          the <i>destination</i> bucket where you want the inventory to be stored, and\n *          whether to generate the inventory daily or weekly. You can also configure what object\n *          metadata to include and whether to inventory all object versions or only current versions.\n *          For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-inventory.html\">Amazon S3\n *             Inventory</a> in the Amazon Simple Storage Service Developer Guide.</p>\n *          <important>\n *             <p>You must create a bucket policy on the <i>destination</i> bucket to\n *             grant permissions to Amazon S3 to write objects to the bucket in the defined location. For an\n *             example policy, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/example-bucket-policies.html#example-bucket-policies-use-case-9\">\n *                Granting Permissions for Amazon S3 Inventory and Storage Class Analysis</a>.</p>\n *          </important>\n *          <p>To use this operation, you must have permissions to perform the\n *             <code>s3:PutInventoryConfiguration</code> action. The bucket owner has this permission\n *          by default and can grant this permission to others. For more information about permissions,\n *          see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources\">Permissions Related to Bucket Subresource Operations</a> and <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html\">Managing Access Permissions to Your Amazon S3\n *             Resources</a> in the Amazon Simple Storage Service Developer Guide.</p>\n *\n *          <p class=\"title\">\n *             <b>Special Errors</b>\n *          </p>\n *          <ul>\n *             <li>\n *                <p class=\"title\">\n *                   <b>HTTP 400 Bad Request Error</b>\n *                </p>\n *                <ul>\n *                   <li>\n *                      <p>\n *                         <i>Code:</i> InvalidArgument</p>\n *                   </li>\n *                   <li>\n *                      <p>\n *                         <i>Cause:</i> Invalid Argument</p>\n *                   </li>\n *                </ul>\n *             </li>\n *             <li>\n *                <p class=\"title\">\n *                   <b>HTTP 400 Bad Request Error</b>\n *                </p>\n *                <ul>\n *                   <li>\n *                      <p>\n *                         <i>Code:</i> TooManyConfigurations</p>\n *                   </li>\n *                   <li>\n *                      <p>\n *                         <i>Cause:</i> You are attempting to create a new configuration\n *                      but have already reached the 1,000-configuration limit. </p>\n *                   </li>\n *                </ul>\n *             </li>\n *             <li>\n *                <p class=\"title\">\n *                   <b>HTTP 403 Forbidden Error</b>\n *                </p>\n *                <ul>\n *                   <li>\n *                      <p>\n *                         <i>Code:</i> AccessDenied</p>\n *                   </li>\n *                   <li>\n *                      <p>\n *                         <i>Cause:</i> You are not the owner of the specified bucket,\n *                      or you do not have the <code>s3:PutInventoryConfiguration</code> bucket\n *                      permission to set the configuration on the bucket. </p>\n *                   </li>\n *                </ul>\n *             </li>\n *          </ul>\n *\n *          <p class=\"title\">\n *             <b>Related Resources</b>\n *          </p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketInventoryConfiguration.html\">GetBucketInventoryConfiguration</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketInventoryConfiguration.html\">DeleteBucketInventoryConfiguration</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBucketInventoryConfigurations.html\">ListBucketInventoryConfigurations</a>\n *                </p>\n *             </li>\n *          </ul>\n */\nvar PutBucketInventoryConfigurationCommand = /** @class */function (_super) {\n  __extends(PutBucketInventoryConfigurationCommand, _super);\n  // Start section: command_properties\n  // End section: command_properties\n  function PutBucketInventoryConfigurationCommand(input) {\n    var _this =\n    // Start section: command_constructor\n    _super.call(this) || this;\n    _this.input = input;\n    return _this;\n    // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n  PutBucketInventoryConfigurationCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"S3Client\";\n    var commandName = \"PutBucketInventoryConfigurationCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: PutBucketInventoryConfigurationRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: function (output) {\n        return output;\n      }\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n  PutBucketInventoryConfigurationCommand.prototype.serialize = function (input, context) {\n    return serializeAws_restXmlPutBucketInventoryConfigurationCommand(input, context);\n  };\n  PutBucketInventoryConfigurationCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_restXmlPutBucketInventoryConfigurationCommand(output, context);\n  };\n  return PutBucketInventoryConfigurationCommand;\n}($Command);\nexport { PutBucketInventoryConfigurationCommand };","map":{"version":3,"sources":["../../../commands/PutBucketInventoryConfigurationCommand.ts"],"names":[],"mappings":";AACA,SAAS,sCAAsC,QAAQ,oBAAoB;AAC3E,SACE,4DAA4D,EAC5D,0DAA0D,QACrD,0BAA0B;AACjC,SAAS,uBAAuB,QAAQ,qCAAqC;AAC7E,SAAS,cAAc,QAAQ,2BAA2B;AAE1D,SAAS,OAAO,IAAI,QAAQ,QAAQ,wBAAwB;AAc5D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsGG;AACH,IAAA,sCAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAA4D,SAAA,CAAA,sCAAA,EAAA,MAAA,CAAA;EAK1D;EACA;EAEA,SAAA,sCAAA,CAAqB,KAAkD,EAAA;IAAvE,IAAA,KAAA;IACE;IACA,MAAA,CAAA,IAAA,CAAA,IAAA,CAAO,IAAA,IAAA;IAFY,KAAA,CAAA,KAAK,GAAL,KAAK;;IAGxB;EACF;EAEA;;AAEG;EACH,sCAAA,CAAA,SAAA,CAAA,iBAAiB,GAAjB,UACE,WAAmE,EACnE,aAAqC,EACrC,OAA8B,EAAA;IAE9B,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,cAAc,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IACzF,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,uBAAuB,CAAC,aAAa,CAAC,CAAC;IAEhE,IAAM,KAAK,GAAG,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC;IAE9C,IAAA,MAAM,GAAK,aAAa,CAAA,MAAlB;IACd,IAAM,UAAU,GAAG,UAAU;IAC7B,IAAM,WAAW,GAAG,wCAAwC;IAC5D,IAAM,uBAAuB,GAA4B;MACvD,MAAM,EAAA,MAAA;MACN,UAAU,EAAA,UAAA;MACV,WAAW,EAAA,WAAA;MACX,uBAAuB,EAAE,sCAAsC,CAAC,kBAAkB;MAClF,wBAAwB,EAAE,UAAC,MAAW,EAAA;QAAK,OAAA,MAAM;MAAN;KAC5C;IACO,IAAA,cAAc,GAAK,aAAa,CAAA,cAAlB;IACtB,OAAO,KAAK,CAAC,OAAO,CAClB,UAAC,OAAsC,EAAA;MACrC,OAAA,cAAc,CAAC,MAAM,CAAC,OAAO,CAAC,OAAwB,EAAE,OAAO,IAAI,CAAA,CAAE,CAAC;IAAtE,CAAsE,EACxE,uBAAuB,CACxB;EACH,CAAC;EAEO,sCAAA,CAAA,SAAA,CAAA,SAAS,GAAjB,UACE,KAAkD,EAClD,OAAuB,EAAA;IAEvB,OAAO,0DAA0D,CAAC,KAAK,EAAE,OAAO,CAAC;EACnF,CAAC;EAEO,sCAAA,CAAA,SAAA,CAAA,WAAW,GAAnB,UACE,MAAsB,EACtB,OAAuB,EAAA;IAEvB,OAAO,4DAA4D,CAAC,MAAM,EAAE,OAAO,CAAC;EACtF,CAAC;EAIH,OAAA,sCAAC;AAAD,CAAC,CA7D2D,QAAQ,CAAA","sourceRoot":"","sourcesContent":["import { __extends } from \"tslib\";\nimport { PutBucketInventoryConfigurationRequest } from \"../models/models_0\";\nimport { deserializeAws_restXmlPutBucketInventoryConfigurationCommand, serializeAws_restXmlPutBucketInventoryConfigurationCommand, } from \"../protocols/Aws_restXml\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>This implementation of the <code>PUT</code> operation adds an inventory configuration\n *          (identified by the inventory ID) to the bucket. You can have up to 1,000 inventory\n *          configurations per bucket. </p>\n *          <p>Amazon S3 inventory generates inventories of the objects in the bucket on a daily or weekly\n *          basis, and the results are published to a flat file. The bucket that is inventoried is\n *          called the <i>source</i> bucket, and the bucket where the inventory flat file\n *          is stored is called the <i>destination</i> bucket. The\n *             <i>destination</i> bucket must be in the same AWS Region as the\n *             <i>source</i> bucket. </p>\n *          <p>When you configure an inventory for a <i>source</i> bucket, you specify\n *          the <i>destination</i> bucket where you want the inventory to be stored, and\n *          whether to generate the inventory daily or weekly. You can also configure what object\n *          metadata to include and whether to inventory all object versions or only current versions.\n *          For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-inventory.html\">Amazon S3\n *             Inventory</a> in the Amazon Simple Storage Service Developer Guide.</p>\n *          <important>\n *             <p>You must create a bucket policy on the <i>destination</i> bucket to\n *             grant permissions to Amazon S3 to write objects to the bucket in the defined location. For an\n *             example policy, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/example-bucket-policies.html#example-bucket-policies-use-case-9\">\n *                Granting Permissions for Amazon S3 Inventory and Storage Class Analysis</a>.</p>\n *          </important>\n *          <p>To use this operation, you must have permissions to perform the\n *             <code>s3:PutInventoryConfiguration</code> action. The bucket owner has this permission\n *          by default and can grant this permission to others. For more information about permissions,\n *          see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources\">Permissions Related to Bucket Subresource Operations</a> and <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html\">Managing Access Permissions to Your Amazon S3\n *             Resources</a> in the Amazon Simple Storage Service Developer Guide.</p>\n *\n *          <p class=\"title\">\n *             <b>Special Errors</b>\n *          </p>\n *          <ul>\n *             <li>\n *                <p class=\"title\">\n *                   <b>HTTP 400 Bad Request Error</b>\n *                </p>\n *                <ul>\n *                   <li>\n *                      <p>\n *                         <i>Code:</i> InvalidArgument</p>\n *                   </li>\n *                   <li>\n *                      <p>\n *                         <i>Cause:</i> Invalid Argument</p>\n *                   </li>\n *                </ul>\n *             </li>\n *             <li>\n *                <p class=\"title\">\n *                   <b>HTTP 400 Bad Request Error</b>\n *                </p>\n *                <ul>\n *                   <li>\n *                      <p>\n *                         <i>Code:</i> TooManyConfigurations</p>\n *                   </li>\n *                   <li>\n *                      <p>\n *                         <i>Cause:</i> You are attempting to create a new configuration\n *                      but have already reached the 1,000-configuration limit. </p>\n *                   </li>\n *                </ul>\n *             </li>\n *             <li>\n *                <p class=\"title\">\n *                   <b>HTTP 403 Forbidden Error</b>\n *                </p>\n *                <ul>\n *                   <li>\n *                      <p>\n *                         <i>Code:</i> AccessDenied</p>\n *                   </li>\n *                   <li>\n *                      <p>\n *                         <i>Cause:</i> You are not the owner of the specified bucket,\n *                      or you do not have the <code>s3:PutInventoryConfiguration</code> bucket\n *                      permission to set the configuration on the bucket. </p>\n *                   </li>\n *                </ul>\n *             </li>\n *          </ul>\n *\n *          <p class=\"title\">\n *             <b>Related Resources</b>\n *          </p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketInventoryConfiguration.html\">GetBucketInventoryConfiguration</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketInventoryConfiguration.html\">DeleteBucketInventoryConfiguration</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBucketInventoryConfigurations.html\">ListBucketInventoryConfigurations</a>\n *                </p>\n *             </li>\n *          </ul>\n */\nvar PutBucketInventoryConfigurationCommand = /** @class */ (function (_super) {\n    __extends(PutBucketInventoryConfigurationCommand, _super);\n    // Start section: command_properties\n    // End section: command_properties\n    function PutBucketInventoryConfigurationCommand(input) {\n        var _this = \n        // Start section: command_constructor\n        _super.call(this) || this;\n        _this.input = input;\n        return _this;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    PutBucketInventoryConfigurationCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n        var stack = clientStack.concat(this.middlewareStack);\n        var logger = configuration.logger;\n        var clientName = \"S3Client\";\n        var commandName = \"PutBucketInventoryConfigurationCommand\";\n        var handlerExecutionContext = {\n            logger: logger,\n            clientName: clientName,\n            commandName: commandName,\n            inputFilterSensitiveLog: PutBucketInventoryConfigurationRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: function (output) { return output; },\n        };\n        var requestHandler = configuration.requestHandler;\n        return stack.resolve(function (request) {\n            return requestHandler.handle(request.request, options || {});\n        }, handlerExecutionContext);\n    };\n    PutBucketInventoryConfigurationCommand.prototype.serialize = function (input, context) {\n        return serializeAws_restXmlPutBucketInventoryConfigurationCommand(input, context);\n    };\n    PutBucketInventoryConfigurationCommand.prototype.deserialize = function (output, context) {\n        return deserializeAws_restXmlPutBucketInventoryConfigurationCommand(output, context);\n    };\n    return PutBucketInventoryConfigurationCommand;\n}($Command));\nexport { PutBucketInventoryConfigurationCommand };\n//# sourceMappingURL=PutBucketInventoryConfigurationCommand.js.map"]},"metadata":{},"sourceType":"module"}