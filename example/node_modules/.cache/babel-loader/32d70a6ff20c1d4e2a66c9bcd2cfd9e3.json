{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function sent() {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n          case 7:\n            op = _.ops.pop();\n            _.trys.pop();\n            continue;\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n              _.ops.push(op);\n              break;\n            }\n            if (t[2]) _.ops.pop();\n            _.trys.pop();\n            continue;\n        }\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nimport { ModelPredicateCreator } from '../predicates';\nimport { QueryOne } from '../types';\nimport { USER, SYNC, valuesEqual } from '../util';\nimport { getIdentifierValue, TransformerMutationType } from './utils';\n// TODO: Persist deleted ids\n// https://github.com/aws-amplify/amplify-js/blob/datastore-docs/packages/datastore/docs/sync-engine.md#outbox\nvar MutationEventOutbox = /** @class */function () {\n  function MutationEventOutbox(schema, MutationEvent, modelInstanceCreator, ownSymbol) {\n    this.schema = schema;\n    this.MutationEvent = MutationEvent;\n    this.modelInstanceCreator = modelInstanceCreator;\n    this.ownSymbol = ownSymbol;\n  }\n  MutationEventOutbox.prototype.enqueue = function (storage, mutationEvent) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, storage.runExclusive(function (s) {\n              return __awaiter(_this, void 0, void 0, function () {\n                var mutationEventModelDefinition, predicate, _a, first, incomingMutationType, merged_1, incomingConditionJSON, incomingCondition, merged;\n                var _this = this;\n                return __generator(this, function (_b) {\n                  switch (_b.label) {\n                    case 0:\n                      mutationEventModelDefinition = this.schema.namespaces[SYNC].models['MutationEvent'];\n                      predicate = ModelPredicateCreator.createFromExisting(mutationEventModelDefinition, function (c) {\n                        return c.modelId('eq', mutationEvent.modelId).id('ne', _this.inProgressMutationEventId);\n                      });\n                      return [4 /*yield*/, s.query(this.MutationEvent, predicate)];\n                    case 1:\n                      _a = __read.apply(void 0, [_b.sent(), 1]), first = _a[0];\n                      if (!(first === undefined)) return [3 /*break*/, 3];\n                      return [4 /*yield*/, s.save(mutationEvent, undefined, this.ownSymbol)];\n                    case 2:\n                      _b.sent();\n                      return [2 /*return*/];\n                    case 3:\n                      incomingMutationType = mutationEvent.operation;\n                      if (!(first.operation === TransformerMutationType.CREATE)) return [3 /*break*/, 8];\n                      if (!(incomingMutationType === TransformerMutationType.DELETE)) return [3 /*break*/, 5];\n                      return [4 /*yield*/, s.delete(this.MutationEvent, predicate)];\n                    case 4:\n                      _b.sent();\n                      return [3 /*break*/, 7];\n                    case 5:\n                      merged_1 = this.mergeUserFields(first, mutationEvent);\n                      return [4 /*yield*/, s.save(this.MutationEvent.copyOf(first, function (draft) {\n                        draft.data = merged_1.data;\n                      }), undefined, this.ownSymbol)];\n                    case 6:\n                      _b.sent();\n                      _b.label = 7;\n                    case 7:\n                      return [3 /*break*/, 12];\n                    case 8:\n                      incomingConditionJSON = mutationEvent.condition;\n                      incomingCondition = JSON.parse(incomingConditionJSON);\n                      merged = void 0;\n                      if (!(Object.keys(incomingCondition).length === 0)) return [3 /*break*/, 10];\n                      merged = this.mergeUserFields(first, mutationEvent);\n                      // delete all for model\n                      return [4 /*yield*/, s.delete(this.MutationEvent, predicate)];\n                    case 9:\n                      // delete all for model\n                      _b.sent();\n                      _b.label = 10;\n                    case 10:\n                      merged = merged || mutationEvent;\n                      // Enqueue new one\n                      return [4 /*yield*/, s.save(merged, undefined, this.ownSymbol)];\n                    case 11:\n                      // Enqueue new one\n                      _b.sent();\n                      _b.label = 12;\n                    case 12:\n                      return [2 /*return*/];\n                  }\n                });\n              });\n            })];\n\n          case 1:\n            _a.sent();\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  MutationEventOutbox.prototype.dequeue = function (storage, record, recordOp) {\n    return __awaiter(this, void 0, void 0, function () {\n      var head;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.peek(storage)];\n          case 1:\n            head = _a.sent();\n            if (!record) return [3 /*break*/, 3];\n            return [4 /*yield*/, this.syncOutboxVersionsOnDequeue(storage, record, head, recordOp)];\n          case 2:\n            _a.sent();\n            _a.label = 3;\n          case 3:\n            return [4 /*yield*/, storage.delete(head)];\n          case 4:\n            _a.sent();\n            this.inProgressMutationEventId = undefined;\n            return [2 /*return*/, head];\n        }\n      });\n    });\n  };\n  /**\n   * Doing a peek() implies that the mutation goes \"inProgress\"\n   *\n   * @param storage\n   */\n  MutationEventOutbox.prototype.peek = function (storage) {\n    return __awaiter(this, void 0, void 0, function () {\n      var head;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, storage.queryOne(this.MutationEvent, QueryOne.FIRST)];\n          case 1:\n            head = _a.sent();\n            this.inProgressMutationEventId = head ? head.id : undefined;\n            return [2 /*return*/, head];\n        }\n      });\n    });\n  };\n  MutationEventOutbox.prototype.getForModel = function (storage, model, userModelDefinition) {\n    return __awaiter(this, void 0, void 0, function () {\n      var mutationEventModelDefinition, modelId, mutationEvents;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            mutationEventModelDefinition = this.schema.namespaces[SYNC].models.MutationEvent;\n            modelId = getIdentifierValue(userModelDefinition, model);\n            return [4 /*yield*/, storage.query(this.MutationEvent, ModelPredicateCreator.createFromExisting(mutationEventModelDefinition, function (c) {\n              return c.modelId('eq', modelId);\n            }))];\n          case 1:\n            mutationEvents = _a.sent();\n            return [2 /*return*/, mutationEvents];\n        }\n      });\n    });\n  };\n  MutationEventOutbox.prototype.getModelIds = function (storage) {\n    return __awaiter(this, void 0, void 0, function () {\n      var mutationEvents, result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, storage.query(this.MutationEvent)];\n          case 1:\n            mutationEvents = _a.sent();\n            result = new Set();\n            mutationEvents.forEach(function (_a) {\n              var modelId = _a.modelId;\n              return result.add(modelId);\n            });\n            return [2 /*return*/, result];\n        }\n      });\n    });\n  };\n  // applies _version from the AppSync mutation response to other items\n  // in the mutation queue with the same id\n  // see https://github.com/aws-amplify/amplify-js/pull/7354 for more details\n  MutationEventOutbox.prototype.syncOutboxVersionsOnDequeue = function (storage, record, head, recordOp) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _version, _lastChangedAt, _deleted, _incomingData, incomingData, data, __version, __lastChangedAt, __deleted, _outgoingData, outgoingData, mutationEventModelDefinition, userModelDefinition, recordId, predicate, outdatedMutations, reconciledMutations;\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (head.operation !== recordOp) {\n              return [2 /*return*/];\n            }\n\n            _version = record._version, _lastChangedAt = record._lastChangedAt, _deleted = record._deleted, _incomingData = __rest(record, [\"_version\", \"_lastChangedAt\", \"_deleted\"]);\n            incomingData = this.removeTimestampFields(head.model, _incomingData);\n            data = JSON.parse(head.data);\n            if (!data) {\n              return [2 /*return*/];\n            }\n\n            __version = data._version, __lastChangedAt = data._lastChangedAt, __deleted = data._deleted, _outgoingData = __rest(data, [\"_version\", \"_lastChangedAt\", \"_deleted\"]);\n            outgoingData = this.removeTimestampFields(head.model, _outgoingData);\n            // Don't sync the version when the data in the response does not match the data\n            // in the request, i.e., when there's a handled conflict\n            if (!valuesEqual(incomingData, outgoingData, true)) {\n              return [2 /*return*/];\n            }\n\n            mutationEventModelDefinition = this.schema.namespaces[SYNC].models['MutationEvent'];\n            userModelDefinition = this.schema.namespaces['user'].models[head.model];\n            recordId = getIdentifierValue(userModelDefinition, record);\n            predicate = ModelPredicateCreator.createFromExisting(mutationEventModelDefinition, function (c) {\n              return c.modelId('eq', recordId).id('ne', _this.inProgressMutationEventId);\n            });\n            return [4 /*yield*/, storage.query(this.MutationEvent, predicate)];\n          case 1:\n            outdatedMutations = _a.sent();\n            if (!outdatedMutations.length) {\n              return [2 /*return*/];\n            }\n\n            reconciledMutations = outdatedMutations.map(function (m) {\n              var oldData = JSON.parse(m.data);\n              var newData = __assign(__assign({}, oldData), {\n                _version: _version,\n                _lastChangedAt: _lastChangedAt\n              });\n              return _this.MutationEvent.copyOf(m, function (draft) {\n                draft.data = JSON.stringify(newData);\n              });\n            });\n            return [4 /*yield*/, storage.delete(this.MutationEvent, predicate)];\n          case 2:\n            _a.sent();\n            return [4 /*yield*/, Promise.all(reconciledMutations.map(function (m) {\n              return __awaiter(_this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                  switch (_a.label) {\n                    case 0:\n                      return [4 /*yield*/, storage.save(m, undefined, this.ownSymbol)];\n                    case 1:\n                      return [2 /*return*/, _a.sent()];\n                  }\n                });\n              });\n            }))];\n          case 3:\n            _a.sent();\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  MutationEventOutbox.prototype.mergeUserFields = function (previous, current) {\n    var _a = JSON.parse(previous.data),\n      _version = _a._version,\n      _lastChangedAt = _a._lastChangedAt,\n      _deleted = _a._deleted,\n      previousData = __rest(_a, [\"_version\", \"_lastChangedAt\", \"_deleted\"]);\n    var _b = JSON.parse(current.data),\n      __version = _b._version,\n      __lastChangedAt = _b._lastChangedAt,\n      __deleted = _b._deleted,\n      currentData = __rest(_b, [\"_version\", \"_lastChangedAt\", \"_deleted\"]);\n    var data = JSON.stringify(__assign(__assign({\n      _version: _version,\n      _lastChangedAt: _lastChangedAt,\n      _deleted: _deleted\n    }, previousData), currentData));\n    return this.modelInstanceCreator(this.MutationEvent, __assign(__assign({}, current), {\n      data: data\n    }));\n  };\n  /*\n  if a model is using custom timestamp fields\n  the custom field names will be stored in the model attributes\n   e.g.\n  \"attributes\": [\n  {\n          \"type\": \"model\",\n          \"properties\": {\n              \"timestamps\": {\n                  \"createdAt\": \"createdOn\",\n                  \"updatedAt\": \"updatedOn\"\n              }\n          }\n  }\n  ]\n  */\n  MutationEventOutbox.prototype.removeTimestampFields = function (model, record) {\n    var _a, _b;\n    var CREATED_AT_DEFAULT_KEY = 'createdAt';\n    var UPDATED_AT_DEFAULT_KEY = 'updatedAt';\n    var createdTimestampKey = CREATED_AT_DEFAULT_KEY;\n    var updatedTimestampKey = UPDATED_AT_DEFAULT_KEY;\n    var modelAttributes = (_a = this.schema.namespaces[USER].models[model].attributes) === null || _a === void 0 ? void 0 : _a.find(function (attr) {\n      return attr.type === 'model';\n    });\n    var timestampFieldsMap = (_b = modelAttributes === null || modelAttributes === void 0 ? void 0 : modelAttributes.properties) === null || _b === void 0 ? void 0 : _b.timestamps;\n    if (timestampFieldsMap) {\n      createdTimestampKey = timestampFieldsMap[CREATED_AT_DEFAULT_KEY];\n      updatedTimestampKey = timestampFieldsMap[UPDATED_AT_DEFAULT_KEY];\n    }\n    delete record[createdTimestampKey];\n    delete record[updatedTimestampKey];\n    return record;\n  };\n  return MutationEventOutbox;\n}();\nexport { MutationEventOutbox };","map":{"version":3,"sources":["../../src/sync/outbox.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nimport { ModelPredicateCreator } from '../predicates';\nimport { QueryOne, } from '../types';\nimport { USER, SYNC, valuesEqual } from '../util';\nimport { getIdentifierValue, TransformerMutationType } from './utils';\n// TODO: Persist deleted ids\n// https://github.com/aws-amplify/amplify-js/blob/datastore-docs/packages/datastore/docs/sync-engine.md#outbox\nvar MutationEventOutbox = /** @class */ (function () {\n    function MutationEventOutbox(schema, MutationEvent, modelInstanceCreator, ownSymbol) {\n        this.schema = schema;\n        this.MutationEvent = MutationEvent;\n        this.modelInstanceCreator = modelInstanceCreator;\n        this.ownSymbol = ownSymbol;\n    }\n    MutationEventOutbox.prototype.enqueue = function (storage, mutationEvent) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, storage.runExclusive(function (s) { return __awaiter(_this, void 0, void 0, function () {\n                            var mutationEventModelDefinition, predicate, _a, first, incomingMutationType, merged_1, incomingConditionJSON, incomingCondition, merged;\n                            var _this = this;\n                            return __generator(this, function (_b) {\n                                switch (_b.label) {\n                                    case 0:\n                                        mutationEventModelDefinition = this.schema.namespaces[SYNC].models['MutationEvent'];\n                                        predicate = ModelPredicateCreator.createFromExisting(mutationEventModelDefinition, function (c) {\n                                            return c\n                                                .modelId('eq', mutationEvent.modelId)\n                                                .id('ne', _this.inProgressMutationEventId);\n                                        });\n                                        return [4 /*yield*/, s.query(this.MutationEvent, predicate)];\n                                    case 1:\n                                        _a = __read.apply(void 0, [_b.sent(), 1]), first = _a[0];\n                                        if (!(first === undefined)) return [3 /*break*/, 3];\n                                        return [4 /*yield*/, s.save(mutationEvent, undefined, this.ownSymbol)];\n                                    case 2:\n                                        _b.sent();\n                                        return [2 /*return*/];\n                                    case 3:\n                                        incomingMutationType = mutationEvent.operation;\n                                        if (!(first.operation === TransformerMutationType.CREATE)) return [3 /*break*/, 8];\n                                        if (!(incomingMutationType === TransformerMutationType.DELETE)) return [3 /*break*/, 5];\n                                        return [4 /*yield*/, s.delete(this.MutationEvent, predicate)];\n                                    case 4:\n                                        _b.sent();\n                                        return [3 /*break*/, 7];\n                                    case 5:\n                                        merged_1 = this.mergeUserFields(first, mutationEvent);\n                                        return [4 /*yield*/, s.save(this.MutationEvent.copyOf(first, function (draft) {\n                                                draft.data = merged_1.data;\n                                            }), undefined, this.ownSymbol)];\n                                    case 6:\n                                        _b.sent();\n                                        _b.label = 7;\n                                    case 7: return [3 /*break*/, 12];\n                                    case 8:\n                                        incomingConditionJSON = mutationEvent.condition;\n                                        incomingCondition = JSON.parse(incomingConditionJSON);\n                                        merged = void 0;\n                                        if (!(Object.keys(incomingCondition).length === 0)) return [3 /*break*/, 10];\n                                        merged = this.mergeUserFields(first, mutationEvent);\n                                        // delete all for model\n                                        return [4 /*yield*/, s.delete(this.MutationEvent, predicate)];\n                                    case 9:\n                                        // delete all for model\n                                        _b.sent();\n                                        _b.label = 10;\n                                    case 10:\n                                        merged = merged || mutationEvent;\n                                        // Enqueue new one\n                                        return [4 /*yield*/, s.save(merged, undefined, this.ownSymbol)];\n                                    case 11:\n                                        // Enqueue new one\n                                        _b.sent();\n                                        _b.label = 12;\n                                    case 12: return [2 /*return*/];\n                                }\n                            });\n                        }); })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    MutationEventOutbox.prototype.dequeue = function (storage, record, recordOp) {\n        return __awaiter(this, void 0, void 0, function () {\n            var head;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.peek(storage)];\n                    case 1:\n                        head = _a.sent();\n                        if (!record) return [3 /*break*/, 3];\n                        return [4 /*yield*/, this.syncOutboxVersionsOnDequeue(storage, record, head, recordOp)];\n                    case 2:\n                        _a.sent();\n                        _a.label = 3;\n                    case 3: return [4 /*yield*/, storage.delete(head)];\n                    case 4:\n                        _a.sent();\n                        this.inProgressMutationEventId = undefined;\n                        return [2 /*return*/, head];\n                }\n            });\n        });\n    };\n    /**\n     * Doing a peek() implies that the mutation goes \"inProgress\"\n     *\n     * @param storage\n     */\n    MutationEventOutbox.prototype.peek = function (storage) {\n        return __awaiter(this, void 0, void 0, function () {\n            var head;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, storage.queryOne(this.MutationEvent, QueryOne.FIRST)];\n                    case 1:\n                        head = _a.sent();\n                        this.inProgressMutationEventId = head ? head.id : undefined;\n                        return [2 /*return*/, head];\n                }\n            });\n        });\n    };\n    MutationEventOutbox.prototype.getForModel = function (storage, model, userModelDefinition) {\n        return __awaiter(this, void 0, void 0, function () {\n            var mutationEventModelDefinition, modelId, mutationEvents;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        mutationEventModelDefinition = this.schema.namespaces[SYNC].models.MutationEvent;\n                        modelId = getIdentifierValue(userModelDefinition, model);\n                        return [4 /*yield*/, storage.query(this.MutationEvent, ModelPredicateCreator.createFromExisting(mutationEventModelDefinition, function (c) { return c.modelId('eq', modelId); }))];\n                    case 1:\n                        mutationEvents = _a.sent();\n                        return [2 /*return*/, mutationEvents];\n                }\n            });\n        });\n    };\n    MutationEventOutbox.prototype.getModelIds = function (storage) {\n        return __awaiter(this, void 0, void 0, function () {\n            var mutationEvents, result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, storage.query(this.MutationEvent)];\n                    case 1:\n                        mutationEvents = _a.sent();\n                        result = new Set();\n                        mutationEvents.forEach(function (_a) {\n                            var modelId = _a.modelId;\n                            return result.add(modelId);\n                        });\n                        return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    // applies _version from the AppSync mutation response to other items\n    // in the mutation queue with the same id\n    // see https://github.com/aws-amplify/amplify-js/pull/7354 for more details\n    MutationEventOutbox.prototype.syncOutboxVersionsOnDequeue = function (storage, record, head, recordOp) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _version, _lastChangedAt, _deleted, _incomingData, incomingData, data, __version, __lastChangedAt, __deleted, _outgoingData, outgoingData, mutationEventModelDefinition, userModelDefinition, recordId, predicate, outdatedMutations, reconciledMutations;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (head.operation !== recordOp) {\n                            return [2 /*return*/];\n                        }\n                        _version = record._version, _lastChangedAt = record._lastChangedAt, _deleted = record._deleted, _incomingData = __rest(record, [\"_version\", \"_lastChangedAt\", \"_deleted\"]);\n                        incomingData = this.removeTimestampFields(head.model, _incomingData);\n                        data = JSON.parse(head.data);\n                        if (!data) {\n                            return [2 /*return*/];\n                        }\n                        __version = data._version, __lastChangedAt = data._lastChangedAt, __deleted = data._deleted, _outgoingData = __rest(data, [\"_version\", \"_lastChangedAt\", \"_deleted\"]);\n                        outgoingData = this.removeTimestampFields(head.model, _outgoingData);\n                        // Don't sync the version when the data in the response does not match the data\n                        // in the request, i.e., when there's a handled conflict\n                        if (!valuesEqual(incomingData, outgoingData, true)) {\n                            return [2 /*return*/];\n                        }\n                        mutationEventModelDefinition = this.schema.namespaces[SYNC].models['MutationEvent'];\n                        userModelDefinition = this.schema.namespaces['user'].models[head.model];\n                        recordId = getIdentifierValue(userModelDefinition, record);\n                        predicate = ModelPredicateCreator.createFromExisting(mutationEventModelDefinition, function (c) { return c.modelId('eq', recordId).id('ne', _this.inProgressMutationEventId); });\n                        return [4 /*yield*/, storage.query(this.MutationEvent, predicate)];\n                    case 1:\n                        outdatedMutations = _a.sent();\n                        if (!outdatedMutations.length) {\n                            return [2 /*return*/];\n                        }\n                        reconciledMutations = outdatedMutations.map(function (m) {\n                            var oldData = JSON.parse(m.data);\n                            var newData = __assign(__assign({}, oldData), { _version: _version, _lastChangedAt: _lastChangedAt });\n                            return _this.MutationEvent.copyOf(m, function (draft) {\n                                draft.data = JSON.stringify(newData);\n                            });\n                        });\n                        return [4 /*yield*/, storage.delete(this.MutationEvent, predicate)];\n                    case 2:\n                        _a.sent();\n                        return [4 /*yield*/, Promise.all(reconciledMutations.map(function (m) { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0: return [4 /*yield*/, storage.save(m, undefined, this.ownSymbol)];\n                                    case 1: return [2 /*return*/, _a.sent()];\n                                }\n                            }); }); }))];\n                    case 3:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    MutationEventOutbox.prototype.mergeUserFields = function (previous, current) {\n        var _a = JSON.parse(previous.data), _version = _a._version, _lastChangedAt = _a._lastChangedAt, _deleted = _a._deleted, previousData = __rest(_a, [\"_version\", \"_lastChangedAt\", \"_deleted\"]);\n        var _b = JSON.parse(current.data), __version = _b._version, __lastChangedAt = _b._lastChangedAt, __deleted = _b._deleted, currentData = __rest(_b, [\"_version\", \"_lastChangedAt\", \"_deleted\"]);\n        var data = JSON.stringify(__assign(__assign({ _version: _version,\n            _lastChangedAt: _lastChangedAt,\n            _deleted: _deleted }, previousData), currentData));\n        return this.modelInstanceCreator(this.MutationEvent, __assign(__assign({}, current), { data: data }));\n    };\n    /*\n    if a model is using custom timestamp fields\n    the custom field names will be stored in the model attributes\n\n    e.g.\n    \"attributes\": [\n    {\n            \"type\": \"model\",\n            \"properties\": {\n                \"timestamps\": {\n                    \"createdAt\": \"createdOn\",\n                    \"updatedAt\": \"updatedOn\"\n                }\n            }\n    }\n    ]\n    */\n    MutationEventOutbox.prototype.removeTimestampFields = function (model, record) {\n        var _a, _b;\n        var CREATED_AT_DEFAULT_KEY = 'createdAt';\n        var UPDATED_AT_DEFAULT_KEY = 'updatedAt';\n        var createdTimestampKey = CREATED_AT_DEFAULT_KEY;\n        var updatedTimestampKey = UPDATED_AT_DEFAULT_KEY;\n        var modelAttributes = (_a = this.schema.namespaces[USER].models[model].attributes) === null || _a === void 0 ? void 0 : _a.find(function (attr) { return attr.type === 'model'; });\n        var timestampFieldsMap = (_b = modelAttributes === null || modelAttributes === void 0 ? void 0 : modelAttributes.properties) === null || _b === void 0 ? void 0 : _b.timestamps;\n        if (timestampFieldsMap) {\n            createdTimestampKey = timestampFieldsMap[CREATED_AT_DEFAULT_KEY];\n            updatedTimestampKey = timestampFieldsMap[UPDATED_AT_DEFAULT_KEY];\n        }\n        delete record[createdTimestampKey];\n        delete record[updatedTimestampKey];\n        return record;\n    };\n    return MutationEventOutbox;\n}());\nexport { MutationEventOutbox };\n//# sourceMappingURL=outbox.js.map"]},"metadata":{},"sourceType":"module"}