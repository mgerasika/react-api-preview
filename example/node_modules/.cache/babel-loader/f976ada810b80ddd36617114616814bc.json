{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar React = require('react');\nfunction useTimeout(callback, interval) {\n  const i = React.useRef(0);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(i.current);\n    };\n  }, [callback, interval]);\n  return {\n    start: React.useCallback(arg => {\n      clearTimeout(i.current);\n      i.current = setTimeout(() => callback(arg), interval);\n    }, [callback, interval]),\n    clear: React.useCallback(() => {\n      clearTimeout(i.current);\n    }, [])\n  };\n}\nexports.useTimeout = useTimeout;","map":{"version":3,"sources":["../../../src/hooks/use-timeout.hook.ts"],"names":["useTimeout","callback","interval","i","useRef","useEffect","clearTimeout","current","start","useCallback","arg","setTimeout","clear"],"mappings":";;;;;;AAOO,SAASA,UAAU,CAAIC,QAA0B,EAAEC,QAAiB,EAAc;EACrF,MAAMC,CAAC,GAAGC,KAAAA,CAAAA,MAAM,CAAS,CAAC,CAAC;EAE3BC,KAAAA,CAAAA,SAAS,CAAC,MAAM;IACZ,OAAO,MAAY;MACfC,YAAY,CAACH,CAAC,CAACI,OAAO,CAAC;KAC1B;EACL,CAAC,EAAE,CAACN,QAAQ,EAAEC,QAAQ,CAAC,CAAC;EAExB,OAAO;IACHM,KAAK,EAAEC,KAAAA,CAAAA,WAAW,CACbC,GAAM,IAAW;MACdJ,YAAY,CAACH,CAAC,CAACI,OAAO,CAAC;MACvBJ,CAAC,CAACI,OAAO,GAAGI,UAAU,CAAC,MAAMV,QAAQ,CAACS,GAAG,CAAC,EAAER,QAAQ,CAAsB;IAC9E,CAAC,EACD,CAACD,QAAQ,EAAEC,QAAQ,CAAC,CACvB;IAEDU,KAAK,EAAEH,KAAAA,CAAAA,WAAW,CAAC,MAAY;MAC3BH,YAAY,CAACH,CAAC,CAACI,OAAO,CAAC;IAC3B,CAAC,EAAE,EAAE;GACR;AACL","sourcesContent":["import { useCallback, useEffect, useRef } from 'react';\n\ninterface IReturn<T> {\n    start: (arg: T) => void;\n    clear: () => void;\n}\n\nexport function useTimeout<T>(callback: (arg: T) => void, interval?: number): IReturn<T> {\n    const i = useRef<number>(0);\n\n    useEffect(() => {\n        return (): void => {\n            clearTimeout(i.current);\n        };\n    }, [callback, interval]);\n\n    return {\n        start: useCallback(\n            (arg: T): void => {\n                clearTimeout(i.current);\n                i.current = setTimeout(() => callback(arg), interval) as unknown as number;\n            },\n            [callback, interval],\n        ),\n\n        clear: useCallback((): void => {\n            clearTimeout(i.current);\n        }, []),\n    };\n}\n"]},"metadata":{},"sourceType":"script"}