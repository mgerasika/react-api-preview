{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isLet;\nvar _generated = require(\"./generated\");\nvar _constants = require(\"../constants\");\nfunction isLet(node) {\n  return (0, _generated.isVariableDeclaration)(node) && (node.kind !== \"var\" || node[_constants.BLOCK_SCOPED_SYMBOL]);\n}","map":{"version":3,"sources":["../../src/validators/isLet.ts"],"names":["isLet","node","kind","BLOCK_SCOPED_SYMBOL"],"mappings":";;;;;;AAAA,IAAA,UAAA,GAAA,OAAA,CAAA,aAAA,CAAA;AACA,IAAA,UAAA,GAAA,OAAA,CAAA,cAAA,CAAA;AAMe,SAASA,KAAT,CAAeC,IAAf,EAAsC;EACnD,OACE,CAAA,CAAA,EAAA,UAAA,CAAA,qBAAA,EAAsBA,IAAtB,CAAA,KACCA,IAAI,CAACC,IAALD,KAAc,KAAdA,IAECA,IAAI,CAACE,UAAAA,CAAAA,mBAAD,CAHN,CADF;AAMD","sourcesContent":["import { isVariableDeclaration } from \"./generated\";\nimport { BLOCK_SCOPED_SYMBOL } from \"../constants\";\nimport type * as t from \"..\";\n\n/**\n * Check if the input `node` is a `let` variable declaration.\n */\nexport default function isLet(node: t.Node): boolean {\n  return (\n    isVariableDeclaration(node) &&\n    (node.kind !== \"var\" ||\n      // @ts-expect-error Fixme: document private properties\n      node[BLOCK_SCOPED_SYMBOL])\n  );\n}\n"]},"metadata":{},"sourceType":"script"}