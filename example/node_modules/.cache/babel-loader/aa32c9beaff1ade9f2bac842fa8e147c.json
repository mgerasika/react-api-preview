{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport { DragOutlined } from '@ant-design/icons';\nimport { Icon } from '../icon/icon.component.js';\nimport { Switch } from '../switch/switch.component.js';\nimport { toBoolean } from '../../utils/to-boolean.util.js';\nimport React, { useCallback } from 'react';\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() {\n  return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";\n}\nvar _ref = process.env.NODE_ENV === \"production\" ? {\n  name: \"oc9ddb\",\n  styles: \"display:flex;justify-content:space-between;padding-top:0.25rem;padding-left:0.25rem;padding-right:0.25rem;align-items:center;border-radius:4px\"\n} : {\n  name: \"i7q16r-ColumnChooserItem\",\n  styles: \"display:flex;justify-content:space-between;padding-top:0.25rem;padding-left:0.25rem;padding-right:0.25rem;align-items:center;border-radius:4px;label:ColumnChooserItem;\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\nvar _ref2 = process.env.NODE_ENV === \"production\" ? {\n  name: \"zjik7\",\n  styles: \"display:flex\"\n} : {\n  name: \"lddrd3-ColumnChooserItem\",\n  styles: \"display:flex;label:ColumnChooserItem;\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\nvar _ref3 = process.env.NODE_ENV === \"production\" ? {\n  name: \"acrv8p\",\n  styles: \"margin-top:0.125rem;margin-right:0.5rem\"\n} : {\n  name: \"zwo5vx-ColumnChooserItem\",\n  styles: \"margin-top:0.125rem;margin-right:0.5rem;label:ColumnChooserItem;\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\nvar ColumnChooserItem = function ColumnChooserItem(_ref4) {\n  var column = _ref4.column,\n    onChange = _ref4.onChange;\n  var handleChange = useCallback(function (e) {\n    onChange(_objectSpread(_objectSpread({}, column), {}, {\n      isHidden: !toBoolean(e.target.value)\n    }));\n  }, [onChange, column]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    css: _ref,\n    \"data-testid\": \"column-item-\".concat(column.id)\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    css: _ref2\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: DragOutlined,\n    css: _ref3\n  }), /*#__PURE__*/React.createElement(\"span\", null, column.title)), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(Switch, {\n    name: column.id,\n    value: !column.isHidden,\n    onChange: handleChange,\n    readOnly: column.isAlwaysVisible\n  })));\n};\nexport { ColumnChooserItem };","map":{"version":3,"sources":["../../../../src/general-ui/column-chooser/column-chooser-item.component.tsx"],"names":["ColumnChooserItem","column","onChange","handleChange","useCallback","e","isHidden","toBoolean","target","value","css","id","React","Icon","icon","DragOutlined","title","Switch","name","readOnly","isAlwaysVisible"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAI2C,IAAA,IAAA,GAAA,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,YAAA,GAAA;EAAA,IAAA,EAAA,QAAA;EAAA,MAAA,EAAA;AAAA,CAAA,GAAA;EAAA,IAAA,EAAA,0BAAA;EAAA,MAAA,EAAA,yKAAA;EAAA,QAAA,EAAA;AAAA,CAAA;AAAA,IAAA,KAAA,GAAA,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,YAAA,GAAA;EAAA,IAAA,EAAA,OAAA;EAAA,MAAA,EAAA;AAAA,CAAA,GAAA;EAAA,IAAA,EAAA,0BAAA;EAAA,MAAA,EAAA,uCAAA;EAAA,QAAA,EAAA;AAAA,CAAA;AAAA,IAAA,KAAA,GAAA,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,YAAA,GAAA;EAAA,IAAA,EAAA,QAAA;EAAA,MAAA,EAAA;AAAA,CAAA,GAAA;EAAA,IAAA,EAAA,0BAAA;EAAA,MAAA,EAAA,kEAAA;EAAA,QAAA,EAAA;AAAA,CAAA;AASpC,IAAMA,iBAAiB,GAAG,SAApBA,iBAAiB,CAAA,KAAA,EAAmE;EAAA,IAA7DC,MAAM,GAAA,KAAA,CAANA,MAAM;IAAEC,QAAAA,GAAAA,KAAAA,CAAAA,QAAAA;EACxC,IAAMC,YAAY,GAAGC,WAAW,CAC3BC,UAAAA,CAAsC,EAAK;IACxCH,QAAQ,CAAA,aAAA,CAAA,aAAA,CAAA,CAAA,CAAA,EAAMD,MAAM,CAAA,EAAA,CAAA,CAAA,EAAA;MAAEK,QAAQ,EAAE,CAACC,SAAS,CAACF,CAAC,CAACG,MAAM,CAACC,KAAK;IAAA,CAAA,CAAA,CAAI;EACjE,CAAC,EACD,CAACP,QAAQ,EAAED,MAAM,CAAC,CACrB;EACD,OAAA,aACIS,KAAAA,CAAAA,aAAAA,CAAAA,KAAAA,EAAAA;IAAAA,GAAAA,EAAAA,IAAAA;IAAyE,aAAc,EAAA,cAAA,CAAA,MAAA,CAAcT,MAAM,CAACU,EAAG;GAC3G,EAAA,aAAA,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;IAAA,GAAA,EAAA;EAAA,CAAA,EAAA,aACIC,KAAAA,CAAAA,aAAAA,CAACC,IAAI,EAAA;IAACC,IAAI,EAAEC,YAAaL;IAAAA,GAAAA,EAAAA;GAAoB,CAAA,EAAA,aAC7CE,KAAOX,CAAAA,aAAAA,CAAAA,MAAAA,EAAAA,IAAAA,EAAAA,MAAM,CAACe,KAAK,CAAQ,CACzB,EAAA,aACNJ,KACI,CAAA,aAAA,CAAA,KAAA,EAAA,IAAA,EAAA,aAAA,KAAA,CAAA,aAAA,CAACK,MAAM,EAAA;IACHC,IAAI,EAAEjB,MAAM,CAACU,EAAG;IAChBF,KAAK,EAAE,CAACR,MAAM,CAACK,QAAS;IACxBJ,QAAQ,EAAEC,YAAa;IACvBgB,QAAQ,EAAElB,MAAM,CAACmB;EAAgB,CAAA,CACnC,CACA,CACJ;AAEd,CAAA","sourcesContent":["import { DragOutlined } from '@ant-design/icons';\nimport { Icon } from '@common/general-ui/icon/icon.component';\nimport { Switch } from '@common/general-ui/switch/switch.component';\nimport { toBoolean } from '@common/utils/to-boolean.util';\nimport React, { useCallback } from 'react';\nimport 'twin.macro';\nimport { IColumnChooser } from './column-chooser.component';\n\ninterface IColumnChooserItemProps {\n    column: IColumnChooser;\n    onChange: (c: IColumnChooser) => void;\n}\n\nexport const ColumnChooserItem = ({ column, onChange }: IColumnChooserItemProps): JSX.Element => {\n    const handleChange = useCallback(\n        (e: React.ChangeEvent<HTMLInputElement>) => {\n            onChange({ ...column, isHidden: !toBoolean(e.target.value) });\n        },\n        [onChange, column],\n    );\n    return (\n        <div tw=\"flex justify-between pt-1 px-1 items-center border-radius[4px]\" data-testid={`column-item-${column.id}`}>\n            <div tw=\"flex\">\n                <Icon icon={DragOutlined} tw=\"mt-0.5 mr-2\" />\n                <span>{column.title}</span>\n            </div>\n            <div>\n                <Switch\n                    name={column.id}\n                    value={!column.isHidden}\n                    onChange={handleChange}\n                    readOnly={column.isAlwaysVisible}\n                />\n            </div>\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}