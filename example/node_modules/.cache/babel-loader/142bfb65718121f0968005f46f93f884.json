{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport API from '@aws-amplify/api';\nimport { Auth } from '@aws-amplify/auth';\nimport { AmplifyClass, Credentials, UniversalStorage } from '@aws-amplify/core';\nimport { DataStore } from '@aws-amplify/datastore';\n// ! We have to use this exact reference, since it gets mutated with Amplify.Auth\nimport { Amplify } from './index';\nvar requiredModules = [\n// API cannot function without Auth\nAuth,\n// Auth cannot function without Credentials\nCredentials];\n// These modules have been tested with SSR\nvar defaultModules = [API, Auth, DataStore];\nexport function withSSRContext(context) {\n  if (context === void 0) {\n    context = {};\n  }\n  var _a = context.modules,\n    modules = _a === void 0 ? defaultModules : _a,\n    req = context.req;\n  var previousConfig = Amplify.configure();\n  var amplify = new AmplifyClass();\n  var storage = new UniversalStorage({\n    req: req\n  });\n  requiredModules.forEach(function (m) {\n    if (!modules.includes(m)) {\n      // @ts-ignore This expression is not constructable.\n      // Type 'Function' has no construct signatures.ts(2351)\n      amplify.register(new m.constructor());\n    }\n  });\n  // Associate new module instances with this amplify\n  modules.forEach(function (m) {\n    amplify.register(new m.constructor());\n  });\n  // Configure new Amplify instances with previous configuration\n  amplify.configure(__assign(__assign({}, previousConfig), {\n    storage: storage\n  }));\n  return amplify;\n}","map":{"version":3,"sources":["../src/withSSRContext.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,OAAO,GAAG,MAAM,kBAAkB;AAClC,SAAS,IAAI,QAAQ,mBAAmB;AACxC,SAAS,YAAY,EAAE,WAAW,EAAE,gBAAgB,QAAQ,mBAAmB;AAC/E,SAAS,SAAS,QAAQ,wBAAwB;AAElD;AACA,SAAS,OAAO,QAAQ,SAAS;AAEjC,IAAM,eAAe,GAAG;AACvB;AACA,IAAI;AACJ;AACA,WAAW,CACX;AAED;AACA,IAAM,cAAc,GAAG,CAAC,GAAG,EAAE,IAAI,EAAE,SAAS,CAAC;AAO7C,OAAM,SAAU,cAAc,CAAC,OAAqB,EAAA;EAArB,IAAA,OAAA,KAAA,KAAA,CAAA,EAAA;IAAA,OAAA,GAAA,CAAA,CAAqB;EAAA;EAC3C,IAAA,EAAA,GAAA,OAAA,CAAA,OAAwB;IAAxB,OAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,cAAA,GAAA,EAAwB;IAAE,GAAA,GAAA,OAAA,CAAA,GAAG;EACrC,IAAM,cAAc,GAAG,OAAO,CAAC,SAAS,EAAE;EAC1C,IAAM,OAAO,GAAG,IAAI,YAAY,EAAE;EAClC,IAAM,OAAO,GAAG,IAAI,gBAAgB,CAAC;IAAE,GAAG,EAAA;EAAA,CAAE,CAAC;EAE7C,eAAe,CAAC,OAAO,CAAC,UAAA,CAAC,EAAA;IACxB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;MACzB;MACA;MACA,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC;IACrC;EACF,CAAC,CAAC;EAEF;EACA,OAAO,CAAC,OAAO,CAAC,UAAA,CAAC,EAAA;IAChB,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC;EACtC,CAAC,CAAC;EAEF;EACA,OAAO,CAAC,SAAS,CAAA,QAAA,CAAA,QAAA,CAAA,CAAA,CAAA,EAAM,cAAc,CAAA,EAAA;IAAE,OAAO,EAAA;EAAA,CAAA,CAAA,CAAG;EAEjD,OAAO,OAAO;AACf","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport API from '@aws-amplify/api';\nimport { Auth } from '@aws-amplify/auth';\nimport { AmplifyClass, Credentials, UniversalStorage } from '@aws-amplify/core';\nimport { DataStore } from '@aws-amplify/datastore';\n// ! We have to use this exact reference, since it gets mutated with Amplify.Auth\nimport { Amplify } from './index';\nvar requiredModules = [\n    // API cannot function without Auth\n    Auth,\n    // Auth cannot function without Credentials\n    Credentials,\n];\n// These modules have been tested with SSR\nvar defaultModules = [API, Auth, DataStore];\nexport function withSSRContext(context) {\n    if (context === void 0) { context = {}; }\n    var _a = context.modules, modules = _a === void 0 ? defaultModules : _a, req = context.req;\n    var previousConfig = Amplify.configure();\n    var amplify = new AmplifyClass();\n    var storage = new UniversalStorage({ req: req });\n    requiredModules.forEach(function (m) {\n        if (!modules.includes(m)) {\n            // @ts-ignore This expression is not constructable.\n            // Type 'Function' has no construct signatures.ts(2351)\n            amplify.register(new m.constructor());\n        }\n    });\n    // Associate new module instances with this amplify\n    modules.forEach(function (m) {\n        amplify.register(new m.constructor());\n    });\n    // Configure new Amplify instances with previous configuration\n    amplify.configure(__assign(__assign({}, previousConfig), { storage: storage }));\n    return amplify;\n}\n//# sourceMappingURL=withSSRContext.js.map"]},"metadata":{},"sourceType":"module"}