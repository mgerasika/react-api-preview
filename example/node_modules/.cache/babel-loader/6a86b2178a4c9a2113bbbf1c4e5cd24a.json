{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  _setPrototypeOf(subClass, superClass);\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction _construct(Parent, args, Class) {\n  if (_isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}\nfunction _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !_isNativeFunction(Class)) return Class;\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n      _cache.set(Class, Wrapper);\n    }\n    function Wrapper() {\n      return _construct(Class, arguments, _getPrototypeOf(this).constructor);\n    }\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return _setPrototypeOf(Wrapper, Class);\n  };\n  return _wrapNativeSuper(Class);\n}\n\n/* eslint no-console:0 */\nvar formatRegExp = /%[sdj%]/g;\nvar warning = function warning() {}; // don't print warning message when in production env or node runtime\n\nif (typeof process !== 'undefined' && process.env && process.env.NODE_ENV !== 'production' && typeof window !== 'undefined' && typeof document !== 'undefined') {\n  warning = function warning(type, errors) {\n    if (typeof console !== 'undefined' && console.warn) {\n      if (errors.every(function (e) {\n        return typeof e === 'string';\n      })) {\n        console.warn(type, errors);\n      }\n    }\n  };\n}\nfunction convertFieldsError(errors) {\n  if (!errors || !errors.length) return null;\n  var fields = {};\n  errors.forEach(function (error) {\n    var field = error.field;\n    fields[field] = fields[field] || [];\n    fields[field].push(error);\n  });\n  return fields;\n}\nfunction format() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  var i = 1;\n  var f = args[0];\n  var len = args.length;\n  if (typeof f === 'function') {\n    return f.apply(null, args.slice(1));\n  }\n  if (typeof f === 'string') {\n    var str = String(f).replace(formatRegExp, function (x) {\n      if (x === '%%') {\n        return '%';\n      }\n      if (i >= len) {\n        return x;\n      }\n      switch (x) {\n        case '%s':\n          return String(args[i++]);\n        case '%d':\n          return Number(args[i++]);\n        case '%j':\n          try {\n            return JSON.stringify(args[i++]);\n          } catch (_) {\n            return '[Circular]';\n          }\n          break;\n        default:\n          return x;\n      }\n    });\n    return str;\n  }\n  return f;\n}\nfunction isNativeStringType(type) {\n  return type === 'string' || type === 'url' || type === 'hex' || type === 'email' || type === 'date' || type === 'pattern';\n}\nfunction isEmptyValue(value, type) {\n  if (value === undefined || value === null) {\n    return true;\n  }\n  if (type === 'array' && Array.isArray(value) && !value.length) {\n    return true;\n  }\n  if (isNativeStringType(type) && typeof value === 'string' && !value) {\n    return true;\n  }\n  return false;\n}\nfunction asyncParallelArray(arr, func, callback) {\n  var results = [];\n  var total = 0;\n  var arrLength = arr.length;\n  function count(errors) {\n    results.push.apply(results, errors);\n    total++;\n    if (total === arrLength) {\n      callback(results);\n    }\n  }\n  arr.forEach(function (a) {\n    func(a, count);\n  });\n}\nfunction asyncSerialArray(arr, func, callback) {\n  var index = 0;\n  var arrLength = arr.length;\n  function next(errors) {\n    if (errors && errors.length) {\n      callback(errors);\n      return;\n    }\n    var original = index;\n    index = index + 1;\n    if (original < arrLength) {\n      func(arr[original], next);\n    } else {\n      callback([]);\n    }\n  }\n  next([]);\n}\nfunction flattenObjArr(objArr) {\n  var ret = [];\n  Object.keys(objArr).forEach(function (k) {\n    ret.push.apply(ret, objArr[k]);\n  });\n  return ret;\n}\nvar AsyncValidationError = /*#__PURE__*/function (_Error) {\n  _inheritsLoose(AsyncValidationError, _Error);\n  function AsyncValidationError(errors, fields) {\n    var _this;\n    _this = _Error.call(this, 'Async Validation Error') || this;\n    _this.errors = errors;\n    _this.fields = fields;\n    return _this;\n  }\n  return AsyncValidationError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\nfunction asyncMap(objArr, option, func, callback) {\n  if (option.first) {\n    var _pending = new Promise(function (resolve, reject) {\n      var next = function next(errors) {\n        callback(errors);\n        return errors.length ? reject(new AsyncValidationError(errors, convertFieldsError(errors))) : resolve();\n      };\n      var flattenArr = flattenObjArr(objArr);\n      asyncSerialArray(flattenArr, func, next);\n    });\n    _pending[\"catch\"](function (e) {\n      return e;\n    });\n    return _pending;\n  }\n  var firstFields = option.firstFields || [];\n  if (firstFields === true) {\n    firstFields = Object.keys(objArr);\n  }\n  var objArrKeys = Object.keys(objArr);\n  var objArrLength = objArrKeys.length;\n  var total = 0;\n  var results = [];\n  var pending = new Promise(function (resolve, reject) {\n    var next = function next(errors) {\n      results.push.apply(results, errors);\n      total++;\n      if (total === objArrLength) {\n        callback(results);\n        return results.length ? reject(new AsyncValidationError(results, convertFieldsError(results))) : resolve();\n      }\n    };\n    if (!objArrKeys.length) {\n      callback(results);\n      resolve();\n    }\n    objArrKeys.forEach(function (key) {\n      var arr = objArr[key];\n      if (firstFields.indexOf(key) !== -1) {\n        asyncSerialArray(arr, func, next);\n      } else {\n        asyncParallelArray(arr, func, next);\n      }\n    });\n  });\n  pending[\"catch\"](function (e) {\n    return e;\n  });\n  return pending;\n}\nfunction complementError(rule) {\n  return function (oe) {\n    if (oe && oe.message) {\n      oe.field = oe.field || rule.fullField;\n      return oe;\n    }\n    return {\n      message: typeof oe === 'function' ? oe() : oe,\n      field: oe.field || rule.fullField\n    };\n  };\n}\nfunction deepMerge(target, source) {\n  if (source) {\n    for (var s in source) {\n      if (source.hasOwnProperty(s)) {\n        var value = source[s];\n        if (typeof value === 'object' && typeof target[s] === 'object') {\n          target[s] = _extends({}, target[s], value);\n        } else {\n          target[s] = value;\n        }\n      }\n    }\n  }\n  return target;\n}\n\n/**\n *  Rule for validating required fields.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param source The source object being validated.\n *  @param errors An array of errors that this rule may add\n *  validation errors to.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\n\nfunction required(rule, value, source, errors, options, type) {\n  if (rule.required && (!source.hasOwnProperty(rule.field) || isEmptyValue(value, type || rule.type))) {\n    errors.push(format(options.messages.required, rule.fullField));\n  }\n}\n\n/**\n *  Rule for validating whitespace.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param source The source object being validated.\n *  @param errors An array of errors that this rule may add\n *  validation errors to.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\n\nfunction whitespace(rule, value, source, errors, options) {\n  if (/^\\s+$/.test(value) || value === '') {\n    errors.push(format(options.messages.whitespace, rule.fullField));\n  }\n}\n\n/* eslint max-len:0 */\n\nvar pattern = {\n  // http://emailregex.com/\n  email: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n  url: new RegExp(\"^(?!mailto:)(?:(?:http|https|ftp)://|//)(?:\\\\S+(?::\\\\S*)?@)?(?:(?:(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}(?:\\\\.(?:[0-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))|(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]+-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]+-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)*(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,})))|localhost)(?::\\\\d{2,5})?(?:(/|\\\\?|#)[^\\\\s]*)?$\", 'i'),\n  hex: /^#?([a-f0-9]{6}|[a-f0-9]{3})$/i\n};\nvar types = {\n  integer: function integer(value) {\n    return types.number(value) && parseInt(value, 10) === value;\n  },\n  \"float\": function float(value) {\n    return types.number(value) && !types.integer(value);\n  },\n  array: function array(value) {\n    return Array.isArray(value);\n  },\n  regexp: function regexp(value) {\n    if (value instanceof RegExp) {\n      return true;\n    }\n    try {\n      return !!new RegExp(value);\n    } catch (e) {\n      return false;\n    }\n  },\n  date: function date(value) {\n    return typeof value.getTime === 'function' && typeof value.getMonth === 'function' && typeof value.getYear === 'function' && !isNaN(value.getTime());\n  },\n  number: function number(value) {\n    if (isNaN(value)) {\n      return false;\n    }\n    return typeof value === 'number';\n  },\n  object: function object(value) {\n    return typeof value === 'object' && !types.array(value);\n  },\n  method: function method(value) {\n    return typeof value === 'function';\n  },\n  email: function email(value) {\n    return typeof value === 'string' && !!value.match(pattern.email) && value.length < 255;\n  },\n  url: function url(value) {\n    return typeof value === 'string' && !!value.match(pattern.url);\n  },\n  hex: function hex(value) {\n    return typeof value === 'string' && !!value.match(pattern.hex);\n  }\n};\n/**\n *  Rule for validating the type of a value.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param source The source object being validated.\n *  @param errors An array of errors that this rule may add\n *  validation errors to.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\n\nfunction type(rule, value, source, errors, options) {\n  if (rule.required && value === undefined) {\n    required(rule, value, source, errors, options);\n    return;\n  }\n  var custom = ['integer', 'float', 'array', 'regexp', 'object', 'method', 'email', 'number', 'date', 'url', 'hex'];\n  var ruleType = rule.type;\n  if (custom.indexOf(ruleType) > -1) {\n    if (!types[ruleType](value)) {\n      errors.push(format(options.messages.types[ruleType], rule.fullField, rule.type));\n    } // straight typeof check\n  } else if (ruleType && typeof value !== rule.type) {\n    errors.push(format(options.messages.types[ruleType], rule.fullField, rule.type));\n  }\n}\n\n/**\n *  Rule for validating minimum and maximum allowed values.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param source The source object being validated.\n *  @param errors An array of errors that this rule may add\n *  validation errors to.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\n\nfunction range(rule, value, source, errors, options) {\n  var len = typeof rule.len === 'number';\n  var min = typeof rule.min === 'number';\n  var max = typeof rule.max === 'number'; // 正则匹配码点范围从U+010000一直到U+10FFFF的文字（补充平面Supplementary Plane）\n\n  var spRegexp = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n  var val = value;\n  var key = null;\n  var num = typeof value === 'number';\n  var str = typeof value === 'string';\n  var arr = Array.isArray(value);\n  if (num) {\n    key = 'number';\n  } else if (str) {\n    key = 'string';\n  } else if (arr) {\n    key = 'array';\n  } // if the value is not of a supported type for range validation\n  // the validation rule rule should use the\n  // type property to also test for a particular type\n\n  if (!key) {\n    return false;\n  }\n  if (arr) {\n    val = value.length;\n  }\n  if (str) {\n    // 处理码点大于U+010000的文字length属性不准确的bug，如\"𠮷𠮷𠮷\".lenght !== 3\n    val = value.replace(spRegexp, '_').length;\n  }\n  if (len) {\n    if (val !== rule.len) {\n      errors.push(format(options.messages[key].len, rule.fullField, rule.len));\n    }\n  } else if (min && !max && val < rule.min) {\n    errors.push(format(options.messages[key].min, rule.fullField, rule.min));\n  } else if (max && !min && val > rule.max) {\n    errors.push(format(options.messages[key].max, rule.fullField, rule.max));\n  } else if (min && max && (val < rule.min || val > rule.max)) {\n    errors.push(format(options.messages[key].range, rule.fullField, rule.min, rule.max));\n  }\n}\nvar ENUM = 'enum';\n/**\n *  Rule for validating a value exists in an enumerable list.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param source The source object being validated.\n *  @param errors An array of errors that this rule may add\n *  validation errors to.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\n\nfunction enumerable(rule, value, source, errors, options) {\n  rule[ENUM] = Array.isArray(rule[ENUM]) ? rule[ENUM] : [];\n  if (rule[ENUM].indexOf(value) === -1) {\n    errors.push(format(options.messages[ENUM], rule.fullField, rule[ENUM].join(', ')));\n  }\n}\n\n/**\n *  Rule for validating a regular expression pattern.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param source The source object being validated.\n *  @param errors An array of errors that this rule may add\n *  validation errors to.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\n\nfunction pattern$1(rule, value, source, errors, options) {\n  if (rule.pattern) {\n    if (rule.pattern instanceof RegExp) {\n      // if a RegExp instance is passed, reset `lastIndex` in case its `global`\n      // flag is accidentally set to `true`, which in a validation scenario\n      // is not necessary and the result might be misleading\n      rule.pattern.lastIndex = 0;\n      if (!rule.pattern.test(value)) {\n        errors.push(format(options.messages.pattern.mismatch, rule.fullField, value, rule.pattern));\n      }\n    } else if (typeof rule.pattern === 'string') {\n      var _pattern = new RegExp(rule.pattern);\n      if (!_pattern.test(value)) {\n        errors.push(format(options.messages.pattern.mismatch, rule.fullField, value, rule.pattern));\n      }\n    }\n  }\n}\nvar rules = {\n  required: required,\n  whitespace: whitespace,\n  type: type,\n  range: range,\n  \"enum\": enumerable,\n  pattern: pattern$1\n};\n\n/**\n *  Performs validation for string types.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param callback The callback function.\n *  @param source The source object being validated.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\n\nfunction string(rule, value, callback, source, options) {\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n  if (validate) {\n    if (isEmptyValue(value, 'string') && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options, 'string');\n    if (!isEmptyValue(value, 'string')) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n      rules.pattern(rule, value, source, errors, options);\n      if (rule.whitespace === true) {\n        rules.whitespace(rule, value, source, errors, options);\n      }\n    }\n  }\n  callback(errors);\n}\n\n/**\n *  Validates a function.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param callback The callback function.\n *  @param source The source object being validated.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\n\nfunction method(rule, value, callback, source, options) {\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n}\n\n/**\n *  Validates a number.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param callback The callback function.\n *  @param source The source object being validated.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\n\nfunction number(rule, value, callback, source, options) {\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n  if (validate) {\n    if (value === '') {\n      value = undefined;\n    }\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n}\n\n/**\n *  Validates a boolean.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param callback The callback function.\n *  @param source The source object being validated.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\n\nfunction _boolean(rule, value, callback, source, options) {\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n}\n\n/**\n *  Validates the regular expression type.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param callback The callback function.\n *  @param source The source object being validated.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\n\nfunction regexp(rule, value, callback, source, options) {\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (!isEmptyValue(value)) {\n      rules.type(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n}\n\n/**\n *  Validates a number is an integer.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param callback The callback function.\n *  @param source The source object being validated.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\n\nfunction integer(rule, value, callback, source, options) {\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n}\n\n/**\n *  Validates a number is a floating point number.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param callback The callback function.\n *  @param source The source object being validated.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\n\nfunction floatFn(rule, value, callback, source, options) {\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n}\n\n/**\n *  Validates an array.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param callback The callback function.\n *  @param source The source object being validated.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\n\nfunction array(rule, value, callback, source, options) {\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n  if (validate) {\n    if ((value === undefined || value === null) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options, 'array');\n    if (value !== undefined && value !== null) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n}\n\n/**\n *  Validates an object.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param callback The callback function.\n *  @param source The source object being validated.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\n\nfunction object(rule, value, callback, source, options) {\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n}\nvar ENUM$1 = 'enum';\n/**\n *  Validates an enumerable list.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param callback The callback function.\n *  @param source The source object being validated.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\n\nfunction enumerable$1(rule, value, callback, source, options) {\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules[ENUM$1](rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n}\n\n/**\n *  Validates a regular expression pattern.\n *\n *  Performs validation when a rule only contains\n *  a pattern property but is not declared as a string type.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param callback The callback function.\n *  @param source The source object being validated.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\n\nfunction pattern$2(rule, value, callback, source, options) {\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n  if (validate) {\n    if (isEmptyValue(value, 'string') && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (!isEmptyValue(value, 'string')) {\n      rules.pattern(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n}\nfunction date(rule, value, callback, source, options) {\n  // console.log('integer rule called %j', rule);\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field); // console.log('validate on %s value', value);\n\n  if (validate) {\n    if (isEmptyValue(value, 'date') && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (!isEmptyValue(value, 'date')) {\n      var dateObject;\n      if (value instanceof Date) {\n        dateObject = value;\n      } else {\n        dateObject = new Date(value);\n      }\n      rules.type(rule, dateObject, source, errors, options);\n      if (dateObject) {\n        rules.range(rule, dateObject.getTime(), source, errors, options);\n      }\n    }\n  }\n  callback(errors);\n}\nfunction required$1(rule, value, callback, source, options) {\n  var errors = [];\n  var type = Array.isArray(value) ? 'array' : typeof value;\n  rules.required(rule, value, source, errors, options, type);\n  callback(errors);\n}\nfunction type$1(rule, value, callback, source, options) {\n  var ruleType = rule.type;\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n  if (validate) {\n    if (isEmptyValue(value, ruleType) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options, ruleType);\n    if (!isEmptyValue(value, ruleType)) {\n      rules.type(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n}\n\n/**\n *  Performs validation for any type.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param callback The callback function.\n *  @param source The source object being validated.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\n\nfunction any(rule, value, callback, source, options) {\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n  }\n  callback(errors);\n}\nvar validators = {\n  string: string,\n  method: method,\n  number: number,\n  \"boolean\": _boolean,\n  regexp: regexp,\n  integer: integer,\n  \"float\": floatFn,\n  array: array,\n  object: object,\n  \"enum\": enumerable$1,\n  pattern: pattern$2,\n  date: date,\n  url: type$1,\n  hex: type$1,\n  email: type$1,\n  required: required$1,\n  any: any\n};\nfunction newMessages() {\n  return {\n    \"default\": 'Validation error on field %s',\n    required: '%s is required',\n    \"enum\": '%s must be one of %s',\n    whitespace: '%s cannot be empty',\n    date: {\n      format: '%s date %s is invalid for format %s',\n      parse: '%s date could not be parsed, %s is invalid ',\n      invalid: '%s date %s is invalid'\n    },\n    types: {\n      string: '%s is not a %s',\n      method: '%s is not a %s (function)',\n      array: '%s is not an %s',\n      object: '%s is not an %s',\n      number: '%s is not a %s',\n      date: '%s is not a %s',\n      \"boolean\": '%s is not a %s',\n      integer: '%s is not an %s',\n      \"float\": '%s is not a %s',\n      regexp: '%s is not a valid %s',\n      email: '%s is not a valid %s',\n      url: '%s is not a valid %s',\n      hex: '%s is not a valid %s'\n    },\n    string: {\n      len: '%s must be exactly %s characters',\n      min: '%s must be at least %s characters',\n      max: '%s cannot be longer than %s characters',\n      range: '%s must be between %s and %s characters'\n    },\n    number: {\n      len: '%s must equal %s',\n      min: '%s cannot be less than %s',\n      max: '%s cannot be greater than %s',\n      range: '%s must be between %s and %s'\n    },\n    array: {\n      len: '%s must be exactly %s in length',\n      min: '%s cannot be less than %s in length',\n      max: '%s cannot be greater than %s in length',\n      range: '%s must be between %s and %s in length'\n    },\n    pattern: {\n      mismatch: '%s value %s does not match pattern %s'\n    },\n    clone: function clone() {\n      var cloned = JSON.parse(JSON.stringify(this));\n      cloned.clone = this.clone;\n      return cloned;\n    }\n  };\n}\nvar messages = newMessages();\n\n/**\n *  Encapsulates a validation schema.\n *\n *  @param descriptor An object declaring validation rules\n *  for this schema.\n */\n\nfunction Schema(descriptor) {\n  this.rules = null;\n  this._messages = messages;\n  this.define(descriptor);\n}\nSchema.prototype = {\n  messages: function messages(_messages) {\n    if (_messages) {\n      this._messages = deepMerge(newMessages(), _messages);\n    }\n    return this._messages;\n  },\n  define: function define(rules) {\n    if (!rules) {\n      throw new Error('Cannot configure a schema with no rules');\n    }\n    if (typeof rules !== 'object' || Array.isArray(rules)) {\n      throw new Error('Rules must be an object');\n    }\n    this.rules = {};\n    var z;\n    var item;\n    for (z in rules) {\n      if (rules.hasOwnProperty(z)) {\n        item = rules[z];\n        this.rules[z] = Array.isArray(item) ? item : [item];\n      }\n    }\n  },\n  validate: function validate(source_, o, oc) {\n    var _this = this;\n    if (o === void 0) {\n      o = {};\n    }\n    if (oc === void 0) {\n      oc = function oc() {};\n    }\n    var source = source_;\n    var options = o;\n    var callback = oc;\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    if (!this.rules || Object.keys(this.rules).length === 0) {\n      if (callback) {\n        callback();\n      }\n      return Promise.resolve();\n    }\n    function complete(results) {\n      var i;\n      var errors = [];\n      var fields = {};\n      function add(e) {\n        if (Array.isArray(e)) {\n          var _errors;\n          errors = (_errors = errors).concat.apply(_errors, e);\n        } else {\n          errors.push(e);\n        }\n      }\n      for (i = 0; i < results.length; i++) {\n        add(results[i]);\n      }\n      if (!errors.length) {\n        errors = null;\n        fields = null;\n      } else {\n        fields = convertFieldsError(errors);\n      }\n      callback(errors, fields);\n    }\n    if (options.messages) {\n      var messages$1 = this.messages();\n      if (messages$1 === messages) {\n        messages$1 = newMessages();\n      }\n      deepMerge(messages$1, options.messages);\n      options.messages = messages$1;\n    } else {\n      options.messages = this.messages();\n    }\n    var arr;\n    var value;\n    var series = {};\n    var keys = options.keys || Object.keys(this.rules);\n    keys.forEach(function (z) {\n      arr = _this.rules[z];\n      value = source[z];\n      arr.forEach(function (r) {\n        var rule = r;\n        if (typeof rule.transform === 'function') {\n          if (source === source_) {\n            source = _extends({}, source);\n          }\n          value = source[z] = rule.transform(value);\n        }\n        if (typeof rule === 'function') {\n          rule = {\n            validator: rule\n          };\n        } else {\n          rule = _extends({}, rule);\n        }\n        rule.validator = _this.getValidationMethod(rule);\n        rule.field = z;\n        rule.fullField = rule.fullField || z;\n        rule.type = _this.getType(rule);\n        if (!rule.validator) {\n          return;\n        }\n        series[z] = series[z] || [];\n        series[z].push({\n          rule: rule,\n          value: value,\n          source: source,\n          field: z\n        });\n      });\n    });\n    var errorFields = {};\n    return asyncMap(series, options, function (data, doIt) {\n      var rule = data.rule;\n      var deep = (rule.type === 'object' || rule.type === 'array') && (typeof rule.fields === 'object' || typeof rule.defaultField === 'object');\n      deep = deep && (rule.required || !rule.required && data.value);\n      rule.field = data.field;\n      function addFullfield(key, schema) {\n        return _extends({}, schema, {\n          fullField: rule.fullField + \".\" + key\n        });\n      }\n      function cb(e) {\n        if (e === void 0) {\n          e = [];\n        }\n        var errors = e;\n        if (!Array.isArray(errors)) {\n          errors = [errors];\n        }\n        if (!options.suppressWarning && errors.length) {\n          Schema.warning('async-validator:', errors);\n        }\n        if (errors.length && rule.message !== undefined) {\n          errors = [].concat(rule.message);\n        }\n        errors = errors.map(complementError(rule));\n        if (options.first && errors.length) {\n          errorFields[rule.field] = 1;\n          return doIt(errors);\n        }\n        if (!deep) {\n          doIt(errors);\n        } else {\n          // if rule is required but the target object\n          // does not exist fail at the rule level and don't\n          // go deeper\n          if (rule.required && !data.value) {\n            if (rule.message !== undefined) {\n              errors = [].concat(rule.message).map(complementError(rule));\n            } else if (options.error) {\n              errors = [options.error(rule, format(options.messages.required, rule.field))];\n            }\n            return doIt(errors);\n          }\n          var fieldsSchema = {};\n          if (rule.defaultField) {\n            for (var k in data.value) {\n              if (data.value.hasOwnProperty(k)) {\n                fieldsSchema[k] = rule.defaultField;\n              }\n            }\n          }\n          fieldsSchema = _extends({}, fieldsSchema, data.rule.fields);\n          for (var f in fieldsSchema) {\n            if (fieldsSchema.hasOwnProperty(f)) {\n              var fieldSchema = Array.isArray(fieldsSchema[f]) ? fieldsSchema[f] : [fieldsSchema[f]];\n              fieldsSchema[f] = fieldSchema.map(addFullfield.bind(null, f));\n            }\n          }\n          var schema = new Schema(fieldsSchema);\n          schema.messages(options.messages);\n          if (data.rule.options) {\n            data.rule.options.messages = options.messages;\n            data.rule.options.error = options.error;\n          }\n          schema.validate(data.value, data.rule.options || options, function (errs) {\n            var finalErrors = [];\n            if (errors && errors.length) {\n              finalErrors.push.apply(finalErrors, errors);\n            }\n            if (errs && errs.length) {\n              finalErrors.push.apply(finalErrors, errs);\n            }\n            doIt(finalErrors.length ? finalErrors : null);\n          });\n        }\n      }\n      var res;\n      if (rule.asyncValidator) {\n        res = rule.asyncValidator(rule, data.value, cb, data.source, options);\n      } else if (rule.validator) {\n        res = rule.validator(rule, data.value, cb, data.source, options);\n        if (res === true) {\n          cb();\n        } else if (res === false) {\n          cb(rule.message || rule.field + \" fails\");\n        } else if (res instanceof Array) {\n          cb(res);\n        } else if (res instanceof Error) {\n          cb(res.message);\n        }\n      }\n      if (res && res.then) {\n        res.then(function () {\n          return cb();\n        }, function (e) {\n          return cb(e);\n        });\n      }\n    }, function (results) {\n      complete(results);\n    });\n  },\n  getType: function getType(rule) {\n    if (rule.type === undefined && rule.pattern instanceof RegExp) {\n      rule.type = 'pattern';\n    }\n    if (typeof rule.validator !== 'function' && rule.type && !validators.hasOwnProperty(rule.type)) {\n      throw new Error(format('Unknown rule type %s', rule.type));\n    }\n    return rule.type || 'string';\n  },\n  getValidationMethod: function getValidationMethod(rule) {\n    if (typeof rule.validator === 'function') {\n      return rule.validator;\n    }\n    var keys = Object.keys(rule);\n    var messageIndex = keys.indexOf('message');\n    if (messageIndex !== -1) {\n      keys.splice(messageIndex, 1);\n    }\n    if (keys.length === 1 && keys[0] === 'required') {\n      return validators.required;\n    }\n    return validators[this.getType(rule)] || false;\n  }\n};\nSchema.register = function register(type, validator) {\n  if (typeof validator !== 'function') {\n    throw new Error('Cannot register a validator by type, validator is not a function');\n  }\n  validators[type] = validator;\n};\nSchema.warning = warning;\nSchema.messages = messages;\nSchema.validators = validators;\nexport default Schema;","map":{"version":3,"sources":["../../src/util.js","../../src/rule/required.js","../../src/rule/whitespace.js","../../src/rule/type.js","../../src/rule/range.js","../../src/rule/enum.js","../../src/rule/pattern.js","../../src/rule/index.js","../../src/validator/string.js","../../src/validator/method.js","../../src/validator/number.js","../../src/validator/boolean.js","../../src/validator/regexp.js","../../src/validator/integer.js","../../src/validator/float.js","../../src/validator/array.js","../../src/validator/object.js","../../src/validator/enum.js","../../src/validator/pattern.js","../../src/validator/date.js","../../src/validator/required.js","../../src/validator/type.js","../../src/validator/any.js","../../src/validator/index.js","../../src/messages.js","../../src/index.js"],"names":["formatRegExp","warning","process","env","NODE_ENV","window","document","type","errors","console","warn","every","e","convertFieldsError","length","fields","forEach","field","error","push","format","args","i","f","len","apply","slice","str","replace","x","String","Number","JSON","stringify","_","isNativeStringType","isEmptyValue","value","undefined","Array","isArray","asyncParallelArray","arr","func","callback","results","total","arrLength","count","a","asyncSerialArray","index","next","original","flattenObjArr","objArr","ret","Object","keys","k","AsyncValidationError","Error","asyncMap","option","first","pending","Promise","resolve","reject","flattenArr","firstFields","objArrKeys","objArrLength","key","indexOf","complementError","rule","oe","message","fullField","deepMerge","target","source","s","hasOwnProperty","required","options","util","messages","whitespace","test","pattern","email","url","RegExp","hex","types","integer","number","parseInt","array","regexp","date","getTime","getMonth","getYear","isNaN","object","method","match","custom","ruleType","range","min","max","spRegexp","val","num","ENUM","enumerable","join","lastIndex","mismatch","_pattern","enumRule","string","validate","rules","boolean","floatFn","dateObject","Date","any","enumValidator","newMessages","parse","invalid","clone","cloned","Schema","descriptor","_messages","defaultMessages","define","prototype","z","item","source_","o","oc","complete","add","concat","series","r","transform","validator","getValidationMethod","getType","errorFields","data","doIt","deep","defaultField","addFullfield","schema","cb","suppressWarning","map","fieldsSchema","fieldSchema","bind","finalErrors","errs","res","asyncValidator","then","validators","messageIndex","splice","register"],"mappings":"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","sourcesContent":["/* eslint no-console:0 */\n\nconst formatRegExp = /%[sdj%]/g;\n\nexport let warning = () => {};\n\n// don't print warning message when in production env or node runtime\nif (\n  typeof process !== 'undefined' &&\n  process.env &&\n  process.env.NODE_ENV !== 'production' &&\n  typeof window !== 'undefined' &&\n  typeof document !== 'undefined'\n) {\n  warning = (type, errors) => {\n    if (typeof console !== 'undefined' && console.warn) {\n      if (errors.every(e => typeof e === 'string')) {\n        console.warn(type, errors);\n      }\n    }\n  };\n}\n\nexport function convertFieldsError(errors) {\n  if (!errors || !errors.length) return null;\n  const fields = {};\n  errors.forEach(error => {\n    const field = error.field;\n    fields[field] = fields[field] || [];\n    fields[field].push(error);\n  });\n  return fields;\n}\n\nexport function format(...args) {\n  let i = 1;\n  const f = args[0];\n  const len = args.length;\n  if (typeof f === 'function') {\n    return f.apply(null, args.slice(1));\n  }\n  if (typeof f === 'string') {\n    let str = String(f).replace(formatRegExp, x => {\n      if (x === '%%') {\n        return '%';\n      }\n      if (i >= len) {\n        return x;\n      }\n      switch (x) {\n        case '%s':\n          return String(args[i++]);\n        case '%d':\n          return Number(args[i++]);\n        case '%j':\n          try {\n            return JSON.stringify(args[i++]);\n          } catch (_) {\n            return '[Circular]';\n          }\n          break;\n        default:\n          return x;\n      }\n    });\n    return str;\n  }\n  return f;\n}\n\nfunction isNativeStringType(type) {\n  return (\n    type === 'string' ||\n    type === 'url' ||\n    type === 'hex' ||\n    type === 'email' ||\n    type === 'date' ||\n    type === 'pattern'\n  );\n}\n\nexport function isEmptyValue(value, type) {\n  if (value === undefined || value === null) {\n    return true;\n  }\n  if (type === 'array' && Array.isArray(value) && !value.length) {\n    return true;\n  }\n  if (isNativeStringType(type) && typeof value === 'string' && !value) {\n    return true;\n  }\n  return false;\n}\n\nexport function isEmptyObject(obj) {\n  return Object.keys(obj).length === 0;\n}\n\nfunction asyncParallelArray(arr, func, callback) {\n  const results = [];\n  let total = 0;\n  const arrLength = arr.length;\n\n  function count(errors) {\n    results.push.apply(results, errors);\n    total++;\n    if (total === arrLength) {\n      callback(results);\n    }\n  }\n\n  arr.forEach(a => {\n    func(a, count);\n  });\n}\n\nfunction asyncSerialArray(arr, func, callback) {\n  let index = 0;\n  const arrLength = arr.length;\n\n  function next(errors) {\n    if (errors && errors.length) {\n      callback(errors);\n      return;\n    }\n    const original = index;\n    index = index + 1;\n    if (original < arrLength) {\n      func(arr[original], next);\n    } else {\n      callback([]);\n    }\n  }\n\n  next([]);\n}\n\nfunction flattenObjArr(objArr) {\n  const ret = [];\n  Object.keys(objArr).forEach(k => {\n    ret.push.apply(ret, objArr[k]);\n  });\n  return ret;\n}\n\nexport class AsyncValidationError extends Error {\n  constructor(errors, fields) {\n    super('Async Validation Error');\n    this.errors = errors;\n    this.fields = fields;\n  }\n}\n\nexport function asyncMap(objArr, option, func, callback) {\n  if (option.first) {\n    const pending = new Promise((resolve, reject) => {\n      const next = errors => {\n        callback(errors);\n        return errors.length\n          ? reject(new AsyncValidationError(errors, convertFieldsError(errors)))\n          : resolve();\n      };\n      const flattenArr = flattenObjArr(objArr);\n      asyncSerialArray(flattenArr, func, next);\n    });\n    pending.catch(e => e);\n    return pending;\n  }\n  let firstFields = option.firstFields || [];\n  if (firstFields === true) {\n    firstFields = Object.keys(objArr);\n  }\n  const objArrKeys = Object.keys(objArr);\n  const objArrLength = objArrKeys.length;\n  let total = 0;\n  const results = [];\n  const pending = new Promise((resolve, reject) => {\n    const next = errors => {\n      results.push.apply(results, errors);\n      total++;\n      if (total === objArrLength) {\n        callback(results);\n        return results.length\n          ? reject(\n              new AsyncValidationError(results, convertFieldsError(results)),\n            )\n          : resolve();\n      }\n    };\n    if (!objArrKeys.length) {\n      callback(results);\n      resolve();\n    }\n    objArrKeys.forEach(key => {\n      const arr = objArr[key];\n      if (firstFields.indexOf(key) !== -1) {\n        asyncSerialArray(arr, func, next);\n      } else {\n        asyncParallelArray(arr, func, next);\n      }\n    });\n  });\n  pending.catch(e => e);\n  return pending;\n}\n\nexport function complementError(rule) {\n  return oe => {\n    if (oe && oe.message) {\n      oe.field = oe.field || rule.fullField;\n      return oe;\n    }\n    return {\n      message: typeof oe === 'function' ? oe() : oe,\n      field: oe.field || rule.fullField,\n    };\n  };\n}\n\nexport function deepMerge(target, source) {\n  if (source) {\n    for (const s in source) {\n      if (source.hasOwnProperty(s)) {\n        const value = source[s];\n        if (typeof value === 'object' && typeof target[s] === 'object') {\n          target[s] = {\n            ...target[s],\n            ...value,\n          };\n        } else {\n          target[s] = value;\n        }\n      }\n    }\n  }\n  return target;\n}\n","import * as util from '../util';\n\n/**\n *  Rule for validating required fields.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param source The source object being validated.\n *  @param errors An array of errors that this rule may add\n *  validation errors to.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\nfunction required(rule, value, source, errors, options, type) {\n  if (\n    rule.required &&\n    (!source.hasOwnProperty(rule.field) ||\n      util.isEmptyValue(value, type || rule.type))\n  ) {\n    errors.push(util.format(options.messages.required, rule.fullField));\n  }\n}\n\nexport default required;\n","import * as util from '../util';\n\n/**\n *  Rule for validating whitespace.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param source The source object being validated.\n *  @param errors An array of errors that this rule may add\n *  validation errors to.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\nfunction whitespace(rule, value, source, errors, options) {\n  if (/^\\s+$/.test(value) || value === '') {\n    errors.push(util.format(options.messages.whitespace, rule.fullField));\n  }\n}\n\nexport default whitespace;\n","import * as util from '../util';\nimport required from './required';\n\n/* eslint max-len:0 */\n\nconst pattern = {\n  // http://emailregex.com/\n  email: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n  url: new RegExp(\n    '^(?!mailto:)(?:(?:http|https|ftp)://|//)(?:\\\\S+(?::\\\\S*)?@)?(?:(?:(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}(?:\\\\.(?:[0-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))|(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]+-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]+-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)*(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,})))|localhost)(?::\\\\d{2,5})?(?:(/|\\\\?|#)[^\\\\s]*)?$',\n    'i',\n  ),\n  hex: /^#?([a-f0-9]{6}|[a-f0-9]{3})$/i,\n};\n\nconst types = {\n  integer(value) {\n    return types.number(value) && parseInt(value, 10) === value;\n  },\n  float(value) {\n    return types.number(value) && !types.integer(value);\n  },\n  array(value) {\n    return Array.isArray(value);\n  },\n  regexp(value) {\n    if (value instanceof RegExp) {\n      return true;\n    }\n    try {\n      return !!new RegExp(value);\n    } catch (e) {\n      return false;\n    }\n  },\n  date(value) {\n    return (\n      typeof value.getTime === 'function' &&\n      typeof value.getMonth === 'function' &&\n      typeof value.getYear === 'function' &&\n      !isNaN(value.getTime())\n    );\n  },\n  number(value) {\n    if (isNaN(value)) {\n      return false;\n    }\n    return typeof value === 'number';\n  },\n  object(value) {\n    return typeof value === 'object' && !types.array(value);\n  },\n  method(value) {\n    return typeof value === 'function';\n  },\n  email(value) {\n    return (\n      typeof value === 'string' &&\n      !!value.match(pattern.email) &&\n      value.length < 255\n    );\n  },\n  url(value) {\n    return typeof value === 'string' && !!value.match(pattern.url);\n  },\n  hex(value) {\n    return typeof value === 'string' && !!value.match(pattern.hex);\n  },\n};\n\n/**\n *  Rule for validating the type of a value.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param source The source object being validated.\n *  @param errors An array of errors that this rule may add\n *  validation errors to.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\nfunction type(rule, value, source, errors, options) {\n  if (rule.required && value === undefined) {\n    required(rule, value, source, errors, options);\n    return;\n  }\n  const custom = [\n    'integer',\n    'float',\n    'array',\n    'regexp',\n    'object',\n    'method',\n    'email',\n    'number',\n    'date',\n    'url',\n    'hex',\n  ];\n  const ruleType = rule.type;\n  if (custom.indexOf(ruleType) > -1) {\n    if (!types[ruleType](value)) {\n      errors.push(\n        util.format(\n          options.messages.types[ruleType],\n          rule.fullField,\n          rule.type,\n        ),\n      );\n    }\n    // straight typeof check\n  } else if (ruleType && typeof value !== rule.type) {\n    errors.push(\n      util.format(options.messages.types[ruleType], rule.fullField, rule.type),\n    );\n  }\n}\n\nexport default type;\n","import * as util from '../util';\n\n/**\n *  Rule for validating minimum and maximum allowed values.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param source The source object being validated.\n *  @param errors An array of errors that this rule may add\n *  validation errors to.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\nfunction range(rule, value, source, errors, options) {\n  const len = typeof rule.len === 'number';\n  const min = typeof rule.min === 'number';\n  const max = typeof rule.max === 'number';\n  // 正则匹配码点范围从U+010000一直到U+10FFFF的文字（补充平面Supplementary Plane）\n  const spRegexp = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n  let val = value;\n  let key = null;\n  const num = typeof value === 'number';\n  const str = typeof value === 'string';\n  const arr = Array.isArray(value);\n  if (num) {\n    key = 'number';\n  } else if (str) {\n    key = 'string';\n  } else if (arr) {\n    key = 'array';\n  }\n  // if the value is not of a supported type for range validation\n  // the validation rule rule should use the\n  // type property to also test for a particular type\n  if (!key) {\n    return false;\n  }\n  if (arr) {\n    val = value.length;\n  }\n  if (str) {\n    // 处理码点大于U+010000的文字length属性不准确的bug，如\"𠮷𠮷𠮷\".lenght !== 3\n    val = value.replace(spRegexp, '_').length;\n  }\n  if (len) {\n    if (val !== rule.len) {\n      errors.push(\n        util.format(options.messages[key].len, rule.fullField, rule.len),\n      );\n    }\n  } else if (min && !max && val < rule.min) {\n    errors.push(\n      util.format(options.messages[key].min, rule.fullField, rule.min),\n    );\n  } else if (max && !min && val > rule.max) {\n    errors.push(\n      util.format(options.messages[key].max, rule.fullField, rule.max),\n    );\n  } else if (min && max && (val < rule.min || val > rule.max)) {\n    errors.push(\n      util.format(\n        options.messages[key].range,\n        rule.fullField,\n        rule.min,\n        rule.max,\n      ),\n    );\n  }\n}\n\nexport default range;\n","import * as util from '../util';\n\nconst ENUM = 'enum';\n\n/**\n *  Rule for validating a value exists in an enumerable list.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param source The source object being validated.\n *  @param errors An array of errors that this rule may add\n *  validation errors to.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\nfunction enumerable(rule, value, source, errors, options) {\n  rule[ENUM] = Array.isArray(rule[ENUM]) ? rule[ENUM] : [];\n  if (rule[ENUM].indexOf(value) === -1) {\n    errors.push(\n      util.format(\n        options.messages[ENUM],\n        rule.fullField,\n        rule[ENUM].join(', '),\n      ),\n    );\n  }\n}\n\nexport default enumerable;\n","import * as util from '../util';\n\n/**\n *  Rule for validating a regular expression pattern.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param source The source object being validated.\n *  @param errors An array of errors that this rule may add\n *  validation errors to.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\nfunction pattern(rule, value, source, errors, options) {\n  if (rule.pattern) {\n    if (rule.pattern instanceof RegExp) {\n      // if a RegExp instance is passed, reset `lastIndex` in case its `global`\n      // flag is accidentally set to `true`, which in a validation scenario\n      // is not necessary and the result might be misleading\n      rule.pattern.lastIndex = 0;\n      if (!rule.pattern.test(value)) {\n        errors.push(\n          util.format(\n            options.messages.pattern.mismatch,\n            rule.fullField,\n            value,\n            rule.pattern,\n          ),\n        );\n      }\n    } else if (typeof rule.pattern === 'string') {\n      const _pattern = new RegExp(rule.pattern);\n      if (!_pattern.test(value)) {\n        errors.push(\n          util.format(\n            options.messages.pattern.mismatch,\n            rule.fullField,\n            value,\n            rule.pattern,\n          ),\n        );\n      }\n    }\n  }\n}\n\nexport default pattern;\n","import required from './required';\nimport whitespace from './whitespace';\nimport type from './type';\nimport range from './range';\nimport enumRule from './enum';\nimport pattern from './pattern';\n\nexport default {\n  required,\n  whitespace,\n  type,\n  range,\n  enum: enumRule,\n  pattern,\n};\n","import rules from '../rule/index.js';\nimport { isEmptyValue } from '../util';\n\n/**\n *  Performs validation for string types.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param callback The callback function.\n *  @param source The source object being validated.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\nfunction string(rule, value, callback, source, options) {\n  const errors = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value, 'string') && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options, 'string');\n    if (!isEmptyValue(value, 'string')) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n      rules.pattern(rule, value, source, errors, options);\n      if (rule.whitespace === true) {\n        rules.whitespace(rule, value, source, errors, options);\n      }\n    }\n  }\n  callback(errors);\n}\n\nexport default string;\n","import rules from '../rule/index.js';\nimport { isEmptyValue } from '../util';\n\n/**\n *  Validates a function.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param callback The callback function.\n *  @param source The source object being validated.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\nfunction method(rule, value, callback, source, options) {\n  const errors = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n}\n\nexport default method;\n","import rules from '../rule/index.js';\nimport { isEmptyValue } from '../util';\n\n/**\n *  Validates a number.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param callback The callback function.\n *  @param source The source object being validated.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\nfunction number(rule, value, callback, source, options) {\n  const errors = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (value === '') {\n      value = undefined;\n    }\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n}\n\nexport default number;\n","import { isEmptyValue } from '../util';\nimport rules from '../rule/index.js';\n\n/**\n *  Validates a boolean.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param callback The callback function.\n *  @param source The source object being validated.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\nfunction boolean(rule, value, callback, source, options) {\n  const errors = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n}\n\nexport default boolean;\n","import rules from '../rule/index.js';\nimport { isEmptyValue } from '../util';\n\n/**\n *  Validates the regular expression type.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param callback The callback function.\n *  @param source The source object being validated.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\nfunction regexp(rule, value, callback, source, options) {\n  const errors = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (!isEmptyValue(value)) {\n      rules.type(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n}\n\nexport default regexp;\n","import rules from '../rule/index.js';\nimport { isEmptyValue } from '../util';\n\n/**\n *  Validates a number is an integer.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param callback The callback function.\n *  @param source The source object being validated.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\nfunction integer(rule, value, callback, source, options) {\n  const errors = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n}\n\nexport default integer;\n","import rules from '../rule/index.js';\nimport { isEmptyValue } from '../util';\n\n/**\n *  Validates a number is a floating point number.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param callback The callback function.\n *  @param source The source object being validated.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\nfunction floatFn(rule, value, callback, source, options) {\n  const errors = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n}\n\nexport default floatFn;\n","import rules from '../rule/index';\nimport { isEmptyValue } from '../util';\n/**\n *  Validates an array.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param callback The callback function.\n *  @param source The source object being validated.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\nfunction array(rule, value, callback, source, options) {\n  const errors = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if ((value === undefined || value === null) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options, 'array');\n    if (value !== undefined && value !== null) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n}\n\nexport default array;\n","import rules from '../rule/index.js';\nimport { isEmptyValue } from '../util';\n\n/**\n *  Validates an object.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param callback The callback function.\n *  @param source The source object being validated.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\nfunction object(rule, value, callback, source, options) {\n  const errors = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n}\n\nexport default object;\n","import rules from '../rule/index.js';\nimport { isEmptyValue } from '../util';\n\nconst ENUM = 'enum';\n\n/**\n *  Validates an enumerable list.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param callback The callback function.\n *  @param source The source object being validated.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\nfunction enumerable(rule, value, callback, source, options) {\n  const errors = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules[ENUM](rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n}\n\nexport default enumerable;\n","import rules from '../rule/index.js';\nimport { isEmptyValue } from '../util';\n\n/**\n *  Validates a regular expression pattern.\n *\n *  Performs validation when a rule only contains\n *  a pattern property but is not declared as a string type.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param callback The callback function.\n *  @param source The source object being validated.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\nfunction pattern(rule, value, callback, source, options) {\n  const errors = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value, 'string') && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (!isEmptyValue(value, 'string')) {\n      rules.pattern(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n}\n\nexport default pattern;\n","import rules from '../rule/index.js';\nimport { isEmptyValue } from '../util';\n\nfunction date(rule, value, callback, source, options) {\n  // console.log('integer rule called %j', rule);\n  const errors = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  // console.log('validate on %s value', value);\n  if (validate) {\n    if (isEmptyValue(value, 'date') && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (!isEmptyValue(value, 'date')) {\n      let dateObject;\n\n      if (value instanceof Date) {\n        dateObject = value;\n      } else {\n        dateObject = new Date(value);\n      }\n\n      rules.type(rule, dateObject, source, errors, options);\n      if (dateObject) {\n        rules.range(rule, dateObject.getTime(), source, errors, options);\n      }\n    }\n  }\n  callback(errors);\n}\n\nexport default date;\n","import rules from '../rule/index.js';\n\nfunction required(rule, value, callback, source, options) {\n  const errors = [];\n  const type = Array.isArray(value) ? 'array' : typeof value;\n  rules.required(rule, value, source, errors, options, type);\n  callback(errors);\n}\n\nexport default required;\n","import rules from '../rule/index.js';\nimport { isEmptyValue } from '../util';\n\nfunction type(rule, value, callback, source, options) {\n  const ruleType = rule.type;\n  const errors = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value, ruleType) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options, ruleType);\n    if (!isEmptyValue(value, ruleType)) {\n      rules.type(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n}\n\nexport default type;\n","import rules from '../rule/index.js';\nimport { isEmptyValue } from '../util';\n\n/**\n *  Performs validation for any type.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param callback The callback function.\n *  @param source The source object being validated.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\nfunction any(rule, value, callback, source, options) {\n  const errors = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n  }\n  callback(errors);\n}\n\nexport default any;\n","import string from './string';\nimport method from './method';\nimport number from './number';\nimport boolean from './boolean';\nimport regexp from './regexp';\nimport integer from './integer';\nimport float from './float';\nimport array from './array';\nimport object from './object';\nimport enumValidator from './enum';\nimport pattern from './pattern';\nimport date from './date';\nimport required from './required';\nimport type from './type';\nimport any from './any';\n\nexport default {\n  string,\n  method,\n  number,\n  boolean,\n  regexp,\n  integer,\n  float,\n  array,\n  object,\n  enum: enumValidator,\n  pattern,\n  date,\n  url: type,\n  hex: type,\n  email: type,\n  required,\n  any,\n};\n","export function newMessages() {\n  return {\n    default: 'Validation error on field %s',\n    required: '%s is required',\n    enum: '%s must be one of %s',\n    whitespace: '%s cannot be empty',\n    date: {\n      format: '%s date %s is invalid for format %s',\n      parse: '%s date could not be parsed, %s is invalid ',\n      invalid: '%s date %s is invalid',\n    },\n    types: {\n      string: '%s is not a %s',\n      method: '%s is not a %s (function)',\n      array: '%s is not an %s',\n      object: '%s is not an %s',\n      number: '%s is not a %s',\n      date: '%s is not a %s',\n      boolean: '%s is not a %s',\n      integer: '%s is not an %s',\n      float: '%s is not a %s',\n      regexp: '%s is not a valid %s',\n      email: '%s is not a valid %s',\n      url: '%s is not a valid %s',\n      hex: '%s is not a valid %s',\n    },\n    string: {\n      len: '%s must be exactly %s characters',\n      min: '%s must be at least %s characters',\n      max: '%s cannot be longer than %s characters',\n      range: '%s must be between %s and %s characters',\n    },\n    number: {\n      len: '%s must equal %s',\n      min: '%s cannot be less than %s',\n      max: '%s cannot be greater than %s',\n      range: '%s must be between %s and %s',\n    },\n    array: {\n      len: '%s must be exactly %s in length',\n      min: '%s cannot be less than %s in length',\n      max: '%s cannot be greater than %s in length',\n      range: '%s must be between %s and %s in length',\n    },\n    pattern: {\n      mismatch: '%s value %s does not match pattern %s',\n    },\n    clone() {\n      const cloned = JSON.parse(JSON.stringify(this));\n      cloned.clone = this.clone;\n      return cloned;\n    },\n  };\n}\n\nexport const messages = newMessages();\n","import {\n  format,\n  complementError,\n  asyncMap,\n  warning,\n  deepMerge,\n  convertFieldsError,\n} from './util';\nimport validators from './validator/index';\nimport { messages as defaultMessages, newMessages } from './messages';\n\n/**\n *  Encapsulates a validation schema.\n *\n *  @param descriptor An object declaring validation rules\n *  for this schema.\n */\nfunction Schema(descriptor) {\n  this.rules = null;\n  this._messages = defaultMessages;\n  this.define(descriptor);\n}\n\nSchema.prototype = {\n  messages(messages) {\n    if (messages) {\n      this._messages = deepMerge(newMessages(), messages);\n    }\n    return this._messages;\n  },\n  define(rules) {\n    if (!rules) {\n      throw new Error('Cannot configure a schema with no rules');\n    }\n    if (typeof rules !== 'object' || Array.isArray(rules)) {\n      throw new Error('Rules must be an object');\n    }\n    this.rules = {};\n    let z;\n    let item;\n    for (z in rules) {\n      if (rules.hasOwnProperty(z)) {\n        item = rules[z];\n        this.rules[z] = Array.isArray(item) ? item : [item];\n      }\n    }\n  },\n  validate(source_, o = {}, oc = () => {}) {\n    let source = source_;\n    let options = o;\n    let callback = oc;\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    if (!this.rules || Object.keys(this.rules).length === 0) {\n      if (callback) {\n        callback();\n      }\n      return Promise.resolve();\n    }\n\n    function complete(results) {\n      let i;\n      let errors = [];\n      let fields = {};\n\n      function add(e) {\n        if (Array.isArray(e)) {\n          errors = errors.concat(...e);\n        } else {\n          errors.push(e);\n        }\n      }\n\n      for (i = 0; i < results.length; i++) {\n        add(results[i]);\n      }\n      if (!errors.length) {\n        errors = null;\n        fields = null;\n      } else {\n        fields = convertFieldsError(errors);\n      }\n      callback(errors, fields);\n    }\n\n    if (options.messages) {\n      let messages = this.messages();\n      if (messages === defaultMessages) {\n        messages = newMessages();\n      }\n      deepMerge(messages, options.messages);\n      options.messages = messages;\n    } else {\n      options.messages = this.messages();\n    }\n    let arr;\n    let value;\n    const series = {};\n    const keys = options.keys || Object.keys(this.rules);\n    keys.forEach(z => {\n      arr = this.rules[z];\n      value = source[z];\n      arr.forEach(r => {\n        let rule = r;\n        if (typeof rule.transform === 'function') {\n          if (source === source_) {\n            source = { ...source };\n          }\n          value = source[z] = rule.transform(value);\n        }\n        if (typeof rule === 'function') {\n          rule = {\n            validator: rule,\n          };\n        } else {\n          rule = { ...rule };\n        }\n        rule.validator = this.getValidationMethod(rule);\n        rule.field = z;\n        rule.fullField = rule.fullField || z;\n        rule.type = this.getType(rule);\n        if (!rule.validator) {\n          return;\n        }\n        series[z] = series[z] || [];\n        series[z].push({\n          rule,\n          value,\n          source,\n          field: z,\n        });\n      });\n    });\n    const errorFields = {};\n    return asyncMap(\n      series,\n      options,\n      (data, doIt) => {\n        const rule = data.rule;\n        let deep =\n          (rule.type === 'object' || rule.type === 'array') &&\n          (typeof rule.fields === 'object' ||\n            typeof rule.defaultField === 'object');\n        deep = deep && (rule.required || (!rule.required && data.value));\n        rule.field = data.field;\n\n        function addFullfield(key, schema) {\n          return {\n            ...schema,\n            fullField: `${rule.fullField}.${key}`,\n          };\n        }\n\n        function cb(e = []) {\n          let errors = e;\n          if (!Array.isArray(errors)) {\n            errors = [errors];\n          }\n          if (!options.suppressWarning && errors.length) {\n            Schema.warning('async-validator:', errors);\n          }\n          if (errors.length && rule.message !== undefined) {\n            errors = [].concat(rule.message);\n          }\n\n          errors = errors.map(complementError(rule));\n\n          if (options.first && errors.length) {\n            errorFields[rule.field] = 1;\n            return doIt(errors);\n          }\n          if (!deep) {\n            doIt(errors);\n          } else {\n            // if rule is required but the target object\n            // does not exist fail at the rule level and don't\n            // go deeper\n            if (rule.required && !data.value) {\n              if (rule.message !== undefined) {\n                errors = [].concat(rule.message).map(complementError(rule));\n              } else if (options.error) {\n                errors = [\n                  options.error(\n                    rule,\n                    format(options.messages.required, rule.field),\n                  ),\n                ];\n              }\n              return doIt(errors);\n            }\n\n            let fieldsSchema = {};\n            if (rule.defaultField) {\n              for (const k in data.value) {\n                if (data.value.hasOwnProperty(k)) {\n                  fieldsSchema[k] = rule.defaultField;\n                }\n              }\n            }\n            fieldsSchema = {\n              ...fieldsSchema,\n              ...data.rule.fields,\n            };\n            for (const f in fieldsSchema) {\n              if (fieldsSchema.hasOwnProperty(f)) {\n                const fieldSchema = Array.isArray(fieldsSchema[f])\n                  ? fieldsSchema[f]\n                  : [fieldsSchema[f]];\n                fieldsSchema[f] = fieldSchema.map(addFullfield.bind(null, f));\n              }\n            }\n            const schema = new Schema(fieldsSchema);\n            schema.messages(options.messages);\n            if (data.rule.options) {\n              data.rule.options.messages = options.messages;\n              data.rule.options.error = options.error;\n            }\n            schema.validate(data.value, data.rule.options || options, errs => {\n              const finalErrors = [];\n              if (errors && errors.length) {\n                finalErrors.push(...errors);\n              }\n              if (errs && errs.length) {\n                finalErrors.push(...errs);\n              }\n              doIt(finalErrors.length ? finalErrors : null);\n            });\n          }\n        }\n\n        let res;\n        if (rule.asyncValidator) {\n          res = rule.asyncValidator(rule, data.value, cb, data.source, options);\n        } else if (rule.validator) {\n          res = rule.validator(rule, data.value, cb, data.source, options);\n          if (res === true) {\n            cb();\n          } else if (res === false) {\n            cb(rule.message || `${rule.field} fails`);\n          } else if (res instanceof Array) {\n            cb(res);\n          } else if (res instanceof Error) {\n            cb(res.message);\n          }\n        }\n        if (res && res.then) {\n          res.then(\n            () => cb(),\n            e => cb(e),\n          );\n        }\n      },\n      results => {\n        complete(results);\n      },\n    );\n  },\n  getType(rule) {\n    if (rule.type === undefined && rule.pattern instanceof RegExp) {\n      rule.type = 'pattern';\n    }\n    if (\n      typeof rule.validator !== 'function' &&\n      rule.type &&\n      !validators.hasOwnProperty(rule.type)\n    ) {\n      throw new Error(format('Unknown rule type %s', rule.type));\n    }\n    return rule.type || 'string';\n  },\n  getValidationMethod(rule) {\n    if (typeof rule.validator === 'function') {\n      return rule.validator;\n    }\n    const keys = Object.keys(rule);\n    const messageIndex = keys.indexOf('message');\n    if (messageIndex !== -1) {\n      keys.splice(messageIndex, 1);\n    }\n    if (keys.length === 1 && keys[0] === 'required') {\n      return validators.required;\n    }\n    return validators[this.getType(rule)] || false;\n  },\n};\n\nSchema.register = function register(type, validator) {\n  if (typeof validator !== 'function') {\n    throw new Error(\n      'Cannot register a validator by type, validator is not a function',\n    );\n  }\n  validators[type] = validator;\n};\n\nSchema.warning = warning;\n\nSchema.messages = defaultMessages;\n\nSchema.validators = validators;\n\nexport default Schema;\n"]},"metadata":{},"sourceType":"module"}