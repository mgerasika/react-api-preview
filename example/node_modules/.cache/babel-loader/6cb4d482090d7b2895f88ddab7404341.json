{"ast":null,"code":"/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function sent() {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n          case 7:\n            op = _.ops.pop();\n            _.trys.pop();\n            continue;\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n              _.ops.push(op);\n              break;\n            }\n            if (t[2]) _.ops.pop();\n            _.trys.pop();\n            continue;\n        }\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nimport { ConsoleLogger as Logger, Credentials, getAmplifyUserAgent } from '@aws-amplify/core';\nimport { KinesisClient, PutRecordsCommand } from '@aws-sdk/client-kinesis';\nimport { fromUtf8 } from '@aws-sdk/util-utf8-browser';\nvar logger = new Logger('AWSKinesisProvider');\n// events buffer\nvar BUFFER_SIZE = 1000;\nvar FLUSH_SIZE = 100;\nvar FLUSH_INTERVAL = 5 * 1000; // 5s\nvar RESEND_LIMIT = 5;\nvar AWSKinesisProvider = /** @class */function () {\n  function AWSKinesisProvider(config) {\n    this._buffer = [];\n    this._config = config || {};\n    this._config.bufferSize = this._config.bufferSize || BUFFER_SIZE;\n    this._config.flushSize = this._config.flushSize || FLUSH_SIZE;\n    this._config.flushInterval = this._config.flushInterval || FLUSH_INTERVAL;\n    this._config.resendLimit = this._config.resendLimit || RESEND_LIMIT;\n    this._setupTimer();\n  }\n  AWSKinesisProvider.prototype._setupTimer = function () {\n    var _this = this;\n    if (this._timer) {\n      clearInterval(this._timer);\n    }\n    var _a = this._config,\n      flushSize = _a.flushSize,\n      flushInterval = _a.flushInterval;\n    this._timer = setInterval(function () {\n      var size = _this._buffer.length < flushSize ? _this._buffer.length : flushSize;\n      var events = [];\n      for (var i = 0; i < size; i += 1) {\n        var params = _this._buffer.shift();\n        events.push(params);\n      }\n      _this._sendFromBuffer(events);\n    }, flushInterval);\n  };\n  /**\n   * get the category of the plugin\n   */\n  AWSKinesisProvider.prototype.getCategory = function () {\n    return 'Analytics';\n  };\n  /**\n   * get provider name of the plugin\n   */\n  AWSKinesisProvider.prototype.getProviderName = function () {\n    return 'AWSKinesis';\n  };\n  /**\n   * configure the plugin\n   * @param {Object} config - configuration\n   */\n  AWSKinesisProvider.prototype.configure = function (config) {\n    logger.debug('configure Analytics', config);\n    var conf = config || {};\n    this._config = Object.assign({}, this._config, conf);\n    this._setupTimer();\n    return this._config;\n  };\n  /**\n   * record an event\n   * @param {Object} params - the params of an event\n   */\n  AWSKinesisProvider.prototype.record = function (params) {\n    return __awaiter(this, void 0, void 0, function () {\n      var credentials;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this._getCredentials()];\n          case 1:\n            credentials = _a.sent();\n            if (!credentials) return [2 /*return*/, Promise.resolve(false)];\n            Object.assign(params, {\n              config: this._config,\n              credentials: credentials\n            });\n            return [2 /*return*/, this._putToBuffer(params)];\n        }\n      });\n    });\n  };\n  AWSKinesisProvider.prototype.updateEndpoint = function () {\n    logger.debug('updateEndpoint is not implemented in Kinesis provider');\n    return Promise.resolve(true);\n  };\n  /**\n   * @private\n   * @param params - params for the event recording\n   * Put events into buffer\n   */\n  AWSKinesisProvider.prototype._putToBuffer = function (params) {\n    if (this._buffer.length < BUFFER_SIZE) {\n      this._buffer.push(params);\n      return Promise.resolve(true);\n    } else {\n      logger.debug('exceed analytics events buffer size');\n      return Promise.reject(false);\n    }\n  };\n  AWSKinesisProvider.prototype._sendFromBuffer = function (events) {\n    var _this = this;\n    // collapse events by credentials\n    // events = [ {params} ]\n    var eventsGroups = [];\n    var preCred = null;\n    var group = [];\n    for (var i = 0; i < events.length; i += 1) {\n      var cred = events[i].credentials;\n      if (i === 0) {\n        group.push(events[i]);\n        preCred = cred;\n      } else {\n        if (cred.sessionToken === preCred.sessionToken && cred.identityId === preCred.identityId) {\n          logger.debug('no change for cred, put event in the same group');\n          group.push(events[i]);\n        } else {\n          eventsGroups.push(group);\n          group = [];\n          group.push(events[i]);\n          preCred = cred;\n        }\n      }\n    }\n    eventsGroups.push(group);\n    eventsGroups.map(function (evts) {\n      _this._sendEvents(evts);\n    });\n  };\n  AWSKinesisProvider.prototype._sendEvents = function (group) {\n    var _this = this;\n    if (group.length === 0) {\n      return;\n    }\n    var _a = group[0],\n      config = _a.config,\n      credentials = _a.credentials;\n    var initClients = this._init(config, credentials);\n    if (!initClients) return false;\n    var records = {};\n    group.map(function (params) {\n      // spit by streamName\n      var evt = params.event;\n      var streamName = evt.streamName;\n      if (records[streamName] === undefined) {\n        records[streamName] = [];\n      }\n      var bufferData = evt.data && typeof evt.data !== 'string' ? JSON.stringify(evt.data) : evt.data;\n      var Data = fromUtf8(bufferData);\n      var PartitionKey = evt.partitionKey || 'partition-' + credentials.identityId;\n      var record = {\n        Data: Data,\n        PartitionKey: PartitionKey\n      };\n      records[streamName].push(record);\n    });\n    Object.keys(records).map(function (streamName) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var command, err_1;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              logger.debug('putting records to kinesis with records', records[streamName]);\n              _a.label = 1;\n            case 1:\n              _a.trys.push([1, 3,, 4]);\n              command = new PutRecordsCommand({\n                Records: records[streamName],\n                StreamName: streamName\n              });\n              return [4 /*yield*/, this._kinesis.send(command)];\n            case 2:\n              _a.sent();\n              logger.debug('Upload records to stream', streamName);\n              return [3 /*break*/, 4];\n            case 3:\n              err_1 = _a.sent();\n              logger.debug('Failed to upload records to Kinesis', err_1);\n              return [3 /*break*/, 4];\n            case 4:\n              return [2 /*return*/];\n          }\n        });\n      });\n    });\n  };\n\n  AWSKinesisProvider.prototype._init = function (config, credentials) {\n    logger.debug('init clients');\n    if (this._kinesis && this._config.credentials && this._config.credentials.sessionToken === credentials.sessionToken && this._config.credentials.identityId === credentials.identityId) {\n      logger.debug('no change for analytics config, directly return from init');\n      return true;\n    }\n    this._config.credentials = credentials;\n    var region = config.region,\n      endpoint = config.endpoint;\n    return this._initKinesis(region, endpoint, credentials);\n  };\n  AWSKinesisProvider.prototype._initKinesis = function (region, endpoint, credentials) {\n    logger.debug('initialize kinesis with credentials', credentials);\n    this._kinesis = new KinesisClient({\n      region: region,\n      credentials: credentials,\n      customUserAgent: getAmplifyUserAgent(),\n      endpoint: endpoint\n    });\n    return true;\n  };\n  /**\n   * @private\n   * check if current credentials exists\n   */\n  AWSKinesisProvider.prototype._getCredentials = function () {\n    var _this = this;\n    return Credentials.get().then(function (credentials) {\n      if (!credentials) return null;\n      logger.debug('set credentials for analytics', _this._config.credentials);\n      return Credentials.shear(credentials);\n    }).catch(function (err) {\n      logger.debug('ensure credentials error', err);\n      return null;\n    });\n  };\n  return AWSKinesisProvider;\n}();\nexport { AWSKinesisProvider };\n/**\n * @deprecated use named import\n */\nexport default AWSKinesisProvider;","map":{"version":3,"sources":["../../src/Providers/AWSKinesisProvider.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { ConsoleLogger as Logger, Credentials, getAmplifyUserAgent, } from '@aws-amplify/core';\nimport { KinesisClient, PutRecordsCommand } from '@aws-sdk/client-kinesis';\nimport { fromUtf8 } from '@aws-sdk/util-utf8-browser';\nvar logger = new Logger('AWSKinesisProvider');\n// events buffer\nvar BUFFER_SIZE = 1000;\nvar FLUSH_SIZE = 100;\nvar FLUSH_INTERVAL = 5 * 1000; // 5s\nvar RESEND_LIMIT = 5;\nvar AWSKinesisProvider = /** @class */ (function () {\n    function AWSKinesisProvider(config) {\n        this._buffer = [];\n        this._config = config || {};\n        this._config.bufferSize = this._config.bufferSize || BUFFER_SIZE;\n        this._config.flushSize = this._config.flushSize || FLUSH_SIZE;\n        this._config.flushInterval = this._config.flushInterval || FLUSH_INTERVAL;\n        this._config.resendLimit = this._config.resendLimit || RESEND_LIMIT;\n        this._setupTimer();\n    }\n    AWSKinesisProvider.prototype._setupTimer = function () {\n        var _this = this;\n        if (this._timer) {\n            clearInterval(this._timer);\n        }\n        var _a = this._config, flushSize = _a.flushSize, flushInterval = _a.flushInterval;\n        this._timer = setInterval(function () {\n            var size = _this._buffer.length < flushSize ? _this._buffer.length : flushSize;\n            var events = [];\n            for (var i = 0; i < size; i += 1) {\n                var params = _this._buffer.shift();\n                events.push(params);\n            }\n            _this._sendFromBuffer(events);\n        }, flushInterval);\n    };\n    /**\n     * get the category of the plugin\n     */\n    AWSKinesisProvider.prototype.getCategory = function () {\n        return 'Analytics';\n    };\n    /**\n     * get provider name of the plugin\n     */\n    AWSKinesisProvider.prototype.getProviderName = function () {\n        return 'AWSKinesis';\n    };\n    /**\n     * configure the plugin\n     * @param {Object} config - configuration\n     */\n    AWSKinesisProvider.prototype.configure = function (config) {\n        logger.debug('configure Analytics', config);\n        var conf = config || {};\n        this._config = Object.assign({}, this._config, conf);\n        this._setupTimer();\n        return this._config;\n    };\n    /**\n     * record an event\n     * @param {Object} params - the params of an event\n     */\n    AWSKinesisProvider.prototype.record = function (params) {\n        return __awaiter(this, void 0, void 0, function () {\n            var credentials;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._getCredentials()];\n                    case 1:\n                        credentials = _a.sent();\n                        if (!credentials)\n                            return [2 /*return*/, Promise.resolve(false)];\n                        Object.assign(params, { config: this._config, credentials: credentials });\n                        return [2 /*return*/, this._putToBuffer(params)];\n                }\n            });\n        });\n    };\n    AWSKinesisProvider.prototype.updateEndpoint = function () {\n        logger.debug('updateEndpoint is not implemented in Kinesis provider');\n        return Promise.resolve(true);\n    };\n    /**\n     * @private\n     * @param params - params for the event recording\n     * Put events into buffer\n     */\n    AWSKinesisProvider.prototype._putToBuffer = function (params) {\n        if (this._buffer.length < BUFFER_SIZE) {\n            this._buffer.push(params);\n            return Promise.resolve(true);\n        }\n        else {\n            logger.debug('exceed analytics events buffer size');\n            return Promise.reject(false);\n        }\n    };\n    AWSKinesisProvider.prototype._sendFromBuffer = function (events) {\n        var _this = this;\n        // collapse events by credentials\n        // events = [ {params} ]\n        var eventsGroups = [];\n        var preCred = null;\n        var group = [];\n        for (var i = 0; i < events.length; i += 1) {\n            var cred = events[i].credentials;\n            if (i === 0) {\n                group.push(events[i]);\n                preCred = cred;\n            }\n            else {\n                if (cred.sessionToken === preCred.sessionToken &&\n                    cred.identityId === preCred.identityId) {\n                    logger.debug('no change for cred, put event in the same group');\n                    group.push(events[i]);\n                }\n                else {\n                    eventsGroups.push(group);\n                    group = [];\n                    group.push(events[i]);\n                    preCred = cred;\n                }\n            }\n        }\n        eventsGroups.push(group);\n        eventsGroups.map(function (evts) {\n            _this._sendEvents(evts);\n        });\n    };\n    AWSKinesisProvider.prototype._sendEvents = function (group) {\n        var _this = this;\n        if (group.length === 0) {\n            return;\n        }\n        var _a = group[0], config = _a.config, credentials = _a.credentials;\n        var initClients = this._init(config, credentials);\n        if (!initClients)\n            return false;\n        var records = {};\n        group.map(function (params) {\n            // spit by streamName\n            var evt = params.event;\n            var streamName = evt.streamName;\n            if (records[streamName] === undefined) {\n                records[streamName] = [];\n            }\n            var bufferData = evt.data && typeof evt.data !== 'string'\n                ? JSON.stringify(evt.data)\n                : evt.data;\n            var Data = fromUtf8(bufferData);\n            var PartitionKey = evt.partitionKey || 'partition-' + credentials.identityId;\n            var record = { Data: Data, PartitionKey: PartitionKey };\n            records[streamName].push(record);\n        });\n        Object.keys(records).map(function (streamName) { return __awaiter(_this, void 0, void 0, function () {\n            var command, err_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        logger.debug('putting records to kinesis with records', records[streamName]);\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        command = new PutRecordsCommand({\n                            Records: records[streamName],\n                            StreamName: streamName,\n                        });\n                        return [4 /*yield*/, this._kinesis.send(command)];\n                    case 2:\n                        _a.sent();\n                        logger.debug('Upload records to stream', streamName);\n                        return [3 /*break*/, 4];\n                    case 3:\n                        err_1 = _a.sent();\n                        logger.debug('Failed to upload records to Kinesis', err_1);\n                        return [3 /*break*/, 4];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        }); });\n    };\n    AWSKinesisProvider.prototype._init = function (config, credentials) {\n        logger.debug('init clients');\n        if (this._kinesis &&\n            this._config.credentials &&\n            this._config.credentials.sessionToken === credentials.sessionToken &&\n            this._config.credentials.identityId === credentials.identityId) {\n            logger.debug('no change for analytics config, directly return from init');\n            return true;\n        }\n        this._config.credentials = credentials;\n        var region = config.region, endpoint = config.endpoint;\n        return this._initKinesis(region, endpoint, credentials);\n    };\n    AWSKinesisProvider.prototype._initKinesis = function (region, endpoint, credentials) {\n        logger.debug('initialize kinesis with credentials', credentials);\n        this._kinesis = new KinesisClient({\n            region: region,\n            credentials: credentials,\n            customUserAgent: getAmplifyUserAgent(),\n            endpoint: endpoint,\n        });\n        return true;\n    };\n    /**\n     * @private\n     * check if current credentials exists\n     */\n    AWSKinesisProvider.prototype._getCredentials = function () {\n        var _this = this;\n        return Credentials.get()\n            .then(function (credentials) {\n            if (!credentials)\n                return null;\n            logger.debug('set credentials for analytics', _this._config.credentials);\n            return Credentials.shear(credentials);\n        })\n            .catch(function (err) {\n            logger.debug('ensure credentials error', err);\n            return null;\n        });\n    };\n    return AWSKinesisProvider;\n}());\nexport { AWSKinesisProvider };\n/**\n * @deprecated use named import\n */\nexport default AWSKinesisProvider;\n//# sourceMappingURL=AWSKinesisProvider.js.map"]},"metadata":{},"sourceType":"module"}