{"ast":null,"code":"import { objectWithoutProperties as _objectWithoutProperties, slicedToArray as _slicedToArray, objectSpread2 as _objectSpread2, extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport { jsx, css } from '@emotion/react';\nimport { THEME } from '../../constants/theme.constant.js';\nimport { Field } from '../field/field.component.js';\nimport { Readonly } from '../readonly.component.js';\nimport { Switch as Switch$1 } from 'antd';\nimport React, { useState, useCallback, useEffect } from 'react';\nvar _excluded = [\"onChange\", \"errorMessage\", \"helperText\", \"variant\"];\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() {\n  return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";\n}\nvar _ref = process.env.NODE_ENV === \"production\" ? {\n  name: \"bjn8wh\",\n  styles: \"position:relative\"\n} : {\n  name: \"1xi92f2-Switch\",\n  styles: \"position:relative;label:Switch;\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\nvar _ref2 = process.env.NODE_ENV === \"production\" ? {\n  name: \"3mtano\",\n  styles: \"padding-top:0.25rem\"\n} : {\n  name: \"o9zhwj-Switch\",\n  styles: \"padding-top:0.25rem;label:Switch;\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\nvar _ref3 = process.env.NODE_ENV === \"production\" ? {\n  name: \"1z012eu\",\n  styles: \"position:relative;display:inline\"\n} : {\n  name: \"144tb0m-Switch\",\n  styles: \"position:relative;display:inline;label:Switch;\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\nvar Switch = function Switch(props) {\n  var onChange = props.onChange;\n  props.errorMessage;\n  props.helperText;\n  var _props$variant = props.variant,\n    variant = _props$variant === void 0 ? 'inline' : _props$variant,\n    rest = _objectWithoutProperties(props, _excluded);\n  var _useState = useState(props.value),\n    _useState2 = _slicedToArray(_useState, 2),\n    checked = _useState2[0],\n    setChecked = _useState2[1];\n  var handleChange = useCallback(function (val, e) {\n    setChecked(val);\n    onChange && onChange(_objectSpread2(_objectSpread2({}, e), {}, {\n      target: _objectSpread2(_objectSpread2({}, e.target), {}, {\n        checked: val,\n        value: val\n      })\n    }));\n  }, [onChange]);\n  useEffect(function () {\n    setChecked(props.value);\n  }, [props.value]);\n  return jsx(Field, _extends({}, props, {\n    css: _ref\n  }), props.label && jsx(React.Fragment, null, \"\\xA0\"), variant === 'block' && jsx(\"div\", {\n    css: _ref2\n  }), jsx(\"div\", {\n    css: _ref3\n  }, props.readOnly && jsx(Readonly, null), jsx(Switch$1, _extends({}, rest, {\n    checked: checked,\n    onChange: handleChange,\n    className: props.className,\n    css: styles.switch(!!props.readOnly)\n  }))));\n};\nvar styles = {\n  switch: function _switch(readOnly) {\n    return [readOnly && /*#__PURE__*/\n    /*#__PURE__*/\n    /*#__PURE__*/\n    /*#__PURE__*/\n    css(\"&&.ant-switch-checked{background-color:\", THEME.READONLY_COLOR, \";}\" + (process.env.NODE_ENV === \"production\" ? \"\" : \";label:styles;\"), process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN3aXRjaC5jb21wb25lbnQudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQThEZSIsImZpbGUiOiJzd2l0Y2guY29tcG9uZW50LnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRIRU1FIH0gZnJvbSAnQGNvbW1vbi9jb25zdGFudHMvdGhlbWUuY29uc3RhbnQnO1xuaW1wb3J0IHsgRmllbGQsIElGaWVsZFByb3BzIH0gZnJvbSAnQGNvbW1vbi9nZW5lcmFsLXVpL2ZpZWxkL2ZpZWxkLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBSZWFkb25seSB9IGZyb20gJ0Bjb21tb24vZ2VuZXJhbC11aS9yZWFkb25seS5jb21wb25lbnQnO1xuaW1wb3J0IHsgU2VyaWFsaXplZFN0eWxlcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcbmltcG9ydCB7IFN3aXRjaCBhcyBBbnRkU3dpdGNoIH0gZnJvbSAnYW50ZCc7XG5pbXBvcnQgeyBTd2l0Y2hDaGFuZ2VFdmVudEhhbmRsZXIgfSBmcm9tICdhbnRkL2xpYi9zd2l0Y2gnO1xuaW1wb3J0IFJlYWN0LCB7IHVzZUNhbGxiYWNrLCB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAndHdpbi5tYWNybyc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgSVN3aXRjaFByb3BzPFROYW1lID0gc3RyaW5nPiBleHRlbmRzIElGaWVsZFByb3BzPGJvb2xlYW4sIFROYW1lPiB7XG4gICAgY2xhc3NOYW1lPzogc3RyaW5nO1xuICAgIHJlYWRPbmx5PzogYm9vbGVhbjtcbiAgICBvbkNoYW5nZT86IChlOiBSZWFjdC5DaGFuZ2VFdmVudDxIVE1MSW5wdXRFbGVtZW50PikgPT4gdm9pZDtcbiAgICBvbkJsdXI/OiAoZTogUmVhY3QuRm9jdXNFdmVudDxIVE1MSW5wdXRFbGVtZW50PikgPT4gdm9pZDtcbiAgICB2YXJpYW50PzogJ2Jsb2NrJyB8ICdpbmxpbmUnO1xufVxuXG5leHBvcnQgY29uc3QgU3dpdGNoID0gKHByb3BzOiBJU3dpdGNoUHJvcHMpOiBKU1guRWxlbWVudCA9PiB7XG4gICAgY29uc3QgeyBvbkNoYW5nZSwgZXJyb3JNZXNzYWdlLCBoZWxwZXJUZXh0LCB2YXJpYW50ID0gJ2lubGluZScsIC4uLnJlc3QgfSA9IHByb3BzO1xuICAgIGNvbnN0IFtjaGVja2VkLCBzZXRDaGVja2VkXSA9IHVzZVN0YXRlKHByb3BzLnZhbHVlKTtcblxuICAgIGNvbnN0IGhhbmRsZUNoYW5nZSA9IHVzZUNhbGxiYWNrPFN3aXRjaENoYW5nZUV2ZW50SGFuZGxlcj4oXG4gICAgICAgICh2YWwsIGUpID0+IHtcbiAgICAgICAgICAgIHNldENoZWNrZWQodmFsKTtcblxuICAgICAgICAgICAgb25DaGFuZ2UgJiZcbiAgICAgICAgICAgICAgICBvbkNoYW5nZSh7XG4gICAgICAgICAgICAgICAgICAgIC4uLmUsXG4gICAgICAgICAgICAgICAgICAgIHRhcmdldDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgLi4uZS50YXJnZXQsXG4gICAgICAgICAgICAgICAgICAgICAgICBjaGVja2VkOiB2YWwsXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogdmFsLFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIH0gYXMgdW5rbm93biBhcyBSZWFjdC5DaGFuZ2VFdmVudDxIVE1MSW5wdXRFbGVtZW50Pik7XG4gICAgICAgIH0sXG4gICAgICAgIFtvbkNoYW5nZV0sXG4gICAgKTtcblxuICAgIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIHNldENoZWNrZWQocHJvcHMudmFsdWUpO1xuICAgIH0sIFtwcm9wcy52YWx1ZV0pO1xuICAgIHJldHVybiAoXG4gICAgICAgIDxGaWVsZCB7Li4ucHJvcHN9IHR3PVwicmVsYXRpdmVcIj5cbiAgICAgICAgICAgIHtwcm9wcy5sYWJlbCAmJiA8PiZuYnNwOzwvPn1cbiAgICAgICAgICAgIHt2YXJpYW50ID09PSAnYmxvY2snICYmIDxkaXYgdHc9XCJwdC0xXCIgLz59XG4gICAgICAgICAgICA8ZGl2IHR3PVwicmVsYXRpdmUgaW5saW5lXCI+XG4gICAgICAgICAgICAgICAge3Byb3BzLnJlYWRPbmx5ICYmIDxSZWFkb25seSAvPn1cbiAgICAgICAgICAgICAgICA8QW50ZFN3aXRjaFxuICAgICAgICAgICAgICAgICAgICB7Li4ucmVzdH1cbiAgICAgICAgICAgICAgICAgICAgY2hlY2tlZD17Y2hlY2tlZH1cbiAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9e2hhbmRsZUNoYW5nZX1cbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPXtwcm9wcy5jbGFzc05hbWV9XG4gICAgICAgICAgICAgICAgICAgIGNzcz17c3R5bGVzLnN3aXRjaCghIXByb3BzLnJlYWRPbmx5KX1cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvRmllbGQ+XG4gICAgKTtcbn07XG5cbmNvbnN0IHN0eWxlcyA9IHtcbiAgICBzd2l0Y2g6IChyZWFkT25seTogYm9vbGVhbik6IChTZXJpYWxpemVkU3R5bGVzIHwgYm9vbGVhbilbXSA9PiBbXG4gICAgICAgIHJlYWRPbmx5ICYmXG4gICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgJiYuYW50LXN3aXRjaC1jaGVja2VkIHtcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtUSEVNRS5SRUFET05MWV9DT0xPUn07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgYCxcbiAgICBdLFxufTtcbiJdfQ== */\", process.env.NODE_ENV === \"production\" ? \"\" : \";label:styles;\", process.env.NODE_ENV === \"production\" ? \"\" : \";label:styles;\", process.env.NODE_ENV === \"production\" ? \"\" : \";label:styles;\")];\n  }\n};\nexport { Switch };","map":{"version":3,"sources":["../../../../src/general-ui/switch/switch.component.tsx"],"names":["Switch","props","onChange","errorMessage","helperText","_props$variant","variant","rest","checked","setChecked","useState","value","_useState2","handleChange","useCallback","val","e","target","useEffect","___EmotionJSX","Field","css","label","readOnly","Readonly","AntdSwitch","className","styles","switch","THEME","READONLY_COLOR"],"mappings":"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","sourcesContent":["import { THEME } from '@common/constants/theme.constant';\nimport { Field, IFieldProps } from '@common/general-ui/field/field.component';\nimport { Readonly } from '@common/general-ui/readonly.component';\nimport { SerializedStyles } from '@emotion/react';\nimport { Switch as AntdSwitch } from 'antd';\nimport { SwitchChangeEventHandler } from 'antd/lib/switch';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { css } from 'twin.macro';\n\nexport interface ISwitchProps<TName = string> extends IFieldProps<boolean, TName> {\n    className?: string;\n    readOnly?: boolean;\n    onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\n    onBlur?: (e: React.FocusEvent<HTMLInputElement>) => void;\n    variant?: 'block' | 'inline';\n}\n\nexport const Switch = (props: ISwitchProps): JSX.Element => {\n    const { onChange, errorMessage, helperText, variant = 'inline', ...rest } = props;\n    const [checked, setChecked] = useState(props.value);\n\n    const handleChange = useCallback<SwitchChangeEventHandler>(\n        (val, e) => {\n            setChecked(val);\n\n            onChange &&\n                onChange({\n                    ...e,\n                    target: {\n                        ...e.target,\n                        checked: val,\n                        value: val,\n                    },\n                } as unknown as React.ChangeEvent<HTMLInputElement>);\n        },\n        [onChange],\n    );\n\n    useEffect(() => {\n        setChecked(props.value);\n    }, [props.value]);\n    return (\n        <Field {...props} tw=\"relative\">\n            {props.label && <>&nbsp;</>}\n            {variant === 'block' && <div tw=\"pt-1\" />}\n            <div tw=\"relative inline\">\n                {props.readOnly && <Readonly />}\n                <AntdSwitch\n                    {...rest}\n                    checked={checked}\n                    onChange={handleChange}\n                    className={props.className}\n                    css={styles.switch(!!props.readOnly)}\n                />\n            </div>\n        </Field>\n    );\n};\n\nconst styles = {\n    switch: (readOnly: boolean): (SerializedStyles | boolean)[] => [\n        readOnly &&\n            css`\n                &&.ant-switch-checked {\n                    background-color: ${THEME.READONLY_COLOR};\n                }\n            `,\n    ],\n};\n"]},"metadata":{},"sourceType":"module"}