{"ast":null,"code":"import { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport { useField } from '../../hooks/use-field.hook.js';\nimport React, { useCallback } from 'react';\nimport { Address } from './address.component.js';\nfunction FormAddress(props) {\n  const {\n    onChange,\n    getCustomErrorMessage\n  } = props;\n  const {\n    setFieldValue,\n    value,\n    errorMessage,\n    setFieldTouched: setFieldTouched\n  } = useField({\n    ...props,\n    getCustomErrorMessage\n  });\n  const handleChange = useCallback(e => {\n    setFieldValue(e.value);\n    onChange && onChange(e);\n    setFieldTouched();\n  }, [onChange, setFieldTouched, setFieldValue]);\n  return /*#__PURE__*/React.createElement(Address, _extends({\n    errorMessage: errorMessage\n  }, props, {\n    onChange: handleChange,\n    name: props.name,\n    defaultValue: value,\n    value: value\n  }));\n}\nexport { FormAddress };","map":{"version":3,"sources":["../../../../src/general-ui/address/form-address.component.tsx"],"names":["FormAddress","props","onChange","getCustomErrorMessage","setFieldValue","value","errorMessage","setFieldTouched","useField","handleChange","useCallback","e","name"],"mappings":";;;;AAKO,SAASA,WAAW,CACvBC,KAAuE,EAC5D;EACX,MAAM;IAAEC,QAAQ;IAAEC;EAAsB,CAAC,GAAGF,KAAK;EACjD,MAAM;IACFG,aAAa;IAEbC,KAAK;IACLC,YAAY;IACZC,eAAe,EAAEA;GACpB,GAAGC,QAAQ,CAAoB;IAC5B,GAAGP,KAAK;IACRE;EACJ,CAAC,CAAC;EAEF,MAAMM,YAAY,GAAGC,WAAW,CAC3BC,CAAC,IAAK;IACHP,aAAa,CAACO,CAAC,CAACN,KAAK,CAAC;IACtBH,QAAQ,IAAIA,QAAQ,CAACS,CAAC,CAAC;IACvBJ,eAAe,EAAE;GACpB,EACD,CAACL,QAAQ,EAAEK,eAAe,EAAEH,aAAa,CAAC,CAC7C;EACD,OAAA,aACI,KAAA,CAAA,aAAA,CAAC,OAAO,EAAA,QAAA,CAAA;IACJ,YAAY,EAAEE;EAAa,CAAA,EACvBL,KAAK,EAAA;IACT,QAAQ,EAAEQ,YAAa;IACvB,IAAI,EAAER,KAAK,CAACW,IAAe;IAC3B,YAAY,EAAEP,KAAM;IACpB,KAAK,EAAEA;GACT,CAAA,CAAA;AAEV","sourcesContent":["import { IInputLoqateValue } from '@common/general-ui/input-loqate/input-loqate.component';\nimport { useField } from '@common/hooks/use-field.hook';\nimport React, { useCallback } from 'react';\nimport { Address, IAddressChangeHandler, IAddressProps } from './address.component';\n\nexport function FormAddress<TFormValues>(\n    props: Omit<IAddressProps<keyof TFormValues>, 'value' | 'defaultValue'>,\n): JSX.Element {\n    const { onChange, getCustomErrorMessage } = props;\n    const {\n        setFieldValue,\n\n        value,\n        errorMessage,\n        setFieldTouched: setFieldTouched,\n    } = useField<IInputLoqateValue>({\n        ...props,\n        getCustomErrorMessage,\n    });\n\n    const handleChange = useCallback<IAddressChangeHandler>(\n        (e) => {\n            setFieldValue(e.value);\n            onChange && onChange(e);\n            setFieldTouched();\n        },\n        [onChange, setFieldTouched, setFieldValue],\n    );\n    return (\n        <Address\n            errorMessage={errorMessage}\n            {...props}\n            onChange={handleChange}\n            name={props.name as string}\n            defaultValue={value}\n            value={value}\n        />\n    );\n}\n"]},"metadata":{},"sourceType":"module"}