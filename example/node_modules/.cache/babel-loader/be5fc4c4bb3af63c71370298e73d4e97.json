{"ast":null,"code":"/*\n * Copyright 2019-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function sent() {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n          case 7:\n            op = _.ops.pop();\n            _.trys.pop();\n            continue;\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n              _.ops.push(op);\n              break;\n            }\n            if (t[2]) _.ops.pop();\n            _.trys.pop();\n            continue;\n        }\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nimport { ConsoleLogger as Logger, Credentials, JS, getAmplifyUserAgent } from '@aws-amplify/core';\nimport { PersonalizeEventsClient, PutEventsCommand } from '@aws-sdk/client-personalize-events';\nimport { SessionInfoManager, MediaAutoTrack } from './AmazonPersonalizeHelper';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\nimport isEqual from 'lodash/isEqual';\nvar logger = new Logger('AmazonPersonalizeProvider');\n// events buffer\nvar FLUSH_SIZE = 5;\nvar FLUSH_SIZE_THRESHHOLD = 10;\nvar FLUSH_INTERVAL = 5 * 1000; // 5s\nvar IDENTIFY_EVENT = 'Identify';\nvar AmazonPersonalizeProvider = /** @class */function () {\n  function AmazonPersonalizeProvider(config) {\n    this._buffer = [];\n    this._config = config ? config : {};\n    this._config.flushSize = this._config.flushSize > 0 && this._config.flushSize <= FLUSH_SIZE_THRESHHOLD ? this._config.flushSize : FLUSH_SIZE;\n    this._config.flushInterval = this._config.flushInterval || FLUSH_INTERVAL;\n    this._sessionManager = new SessionInfoManager();\n    if (!isEmpty(this._config.trackingId)) {\n      this._sessionInfo = this._sessionManager.retrieveSessionInfo(this._config.trackingId);\n    }\n    this._isBrowser = JS.browserOrNode().isBrowser;\n    // flush event buffer\n    this._setupTimer();\n  }\n  AmazonPersonalizeProvider.prototype._setupTimer = function () {\n    if (this._timer) {\n      clearInterval(this._timer);\n    }\n    var flushInterval = this._config.flushInterval;\n    var that = this;\n    this._timer = setInterval(function () {\n      that._sendFromBuffer();\n    }, flushInterval);\n  };\n  /**\n   * Record event\n   * @param eventType      - type of the event action. e.g. \"Click\"\n   * @param properties     - properties of the event\n   * @return Promise\n   */\n  AmazonPersonalizeProvider.prototype.record = function (params) {\n    return __awaiter(this, void 0, void 0, function () {\n      var credentials, _a, eventType, properties, requestParams, isLoaded;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4 /*yield*/, this._getCredentials()];\n          case 1:\n            credentials = _b.sent();\n            if (!credentials) return [2 /*return*/, Promise.resolve(false)];\n            Object.assign(params, {\n              config: this._config,\n              credentials: credentials,\n              sentAt: new Date()\n            });\n            _a = params.event, eventType = _a.eventType, properties = _a.properties;\n            if (eventType === IDENTIFY_EVENT) {\n              this._sessionManager.updateSessionInfo(properties && properties.userId ? properties.userId : '', this._sessionInfo);\n              return [2 /*return*/];\n            } else if (!isEmpty(params.event.userId)) {\n              this._sessionManager.updateSessionInfo(params.event.userId, this._sessionInfo);\n            }\n            requestParams = this.generateRequestParams(params, this._sessionInfo);\n            if (!(eventType === 'MediaAutoTrack')) return [3 /*break*/, 7];\n            if (!this._isBrowser) return [3 /*break*/, 5];\n            if (!!isEmpty(get(requestParams, 'eventData.properties.domElementId', null))) return [3 /*break*/, 3];\n            return [4 /*yield*/, this.isElementFullyLoaded(this.loadElement, requestParams.eventData.properties['domElementId'], 500, 5)];\n          case 2:\n            isLoaded = _b.sent();\n            if (isLoaded) {\n              new MediaAutoTrack(requestParams, this);\n            } else {\n              logger.debug('Cannot find the media element.');\n            }\n            return [3 /*break*/, 4];\n          case 3:\n            logger.debug(\"Missing domElementId field in 'properties' for MediaAutoTrack event type.\");\n            _b.label = 4;\n          case 4:\n            return [3 /*break*/, 6];\n          case 5:\n            logger.debug('MediaAutoTrack only for browser');\n            _b.label = 6;\n          case 6:\n            return [2 /*return*/];\n          case 7:\n            return [2 /*return*/, this.putToBuffer(requestParams)];\n        }\n      });\n    });\n  };\n  AmazonPersonalizeProvider.prototype.loadElement = function (domId) {\n    return new Promise(function (resolve, reject) {\n      if (document.getElementById(domId) && document.getElementById(domId).clientHeight) {\n        return resolve(true);\n      } else {\n        return reject(true);\n      }\n    });\n  };\n  AmazonPersonalizeProvider.prototype.isElementFullyLoaded = function (operation, params, delay, times) {\n    var _this = this;\n    var wait = function wait(ms) {\n      return new Promise(function (r) {\n        return setTimeout(r, ms);\n      });\n    };\n    return new Promise(function (resolve, reject) {\n      return operation(params).then(resolve).catch(function (reason) {\n        if (times - 1 > 0) {\n          return wait(delay).then(_this.isElementFullyLoaded.bind(null, operation, params, delay, times - 1)).then(resolve).catch(reject);\n        }\n        return reject(reason);\n      });\n    });\n  };\n  /**\n   * get the category of the plugin\n   */\n  AmazonPersonalizeProvider.prototype.getCategory = function () {\n    return 'Analytics';\n  };\n  /**\n   * get provider name of the plugin\n   */\n  AmazonPersonalizeProvider.prototype.getProviderName = function () {\n    return 'AmazonPersonalize';\n  };\n  /**\n   * configure the plugin\n   * @param {Object} config - configuration\n   */\n  AmazonPersonalizeProvider.prototype.configure = function (config) {\n    logger.debug('configure Analytics', config);\n    var conf = config ? config : {};\n    this._config = Object.assign({}, this._config, conf);\n    if (!isEmpty(this._config.trackingId)) {\n      this._sessionInfo = this._sessionManager.retrieveSessionInfo(this._config.trackingId);\n    }\n    this._setupTimer();\n    return this._config;\n  };\n  /**\n   * Generate the requestParams from customer input params and sessionInfo\n   * @private\n   * @param eventData      - customer input for event data\n   * @param api            - api name\n   * @return RequestParams - wrapper object with all information required for make request\n   */\n  AmazonPersonalizeProvider.prototype.generateRequestParams = function (params, sessionInfo) {\n    var requestParams = {};\n    var _a = params.event,\n      eventType = _a.eventType,\n      properties = _a.properties;\n    requestParams.eventData = {\n      eventType: eventType,\n      properties: properties\n    };\n    requestParams.sessionInfo = sessionInfo;\n    requestParams.sentAt = params.sentAt;\n    requestParams.credentials = params.credentials;\n    requestParams.config = params.config;\n    return requestParams;\n  };\n  /**\n   * record an event\n   * @param {Object} params - the params of an event\n   */\n  AmazonPersonalizeProvider.prototype._sendEvents = function (group) {\n    var groupLen = group.length;\n    if (groupLen === 0) {\n      logger.debug('events array is empty, directly return');\n      return;\n    }\n    var _a = group[0],\n      config = _a.config,\n      credentials = _a.credentials,\n      sessionInfo = _a.sessionInfo;\n    var initClients = this._init(config, credentials);\n    if (!initClients) return false;\n    if (groupLen > 0) {\n      var events = [];\n      for (var i = 0; i < groupLen; i += 1) {\n        var params = group.shift();\n        var eventPayload = this._generateSingleRecordPayload(params, sessionInfo);\n        events.push(eventPayload);\n      }\n      var payload_1 = {};\n      payload_1.trackingId = sessionInfo.trackingId;\n      payload_1.sessionId = sessionInfo.sessionId;\n      payload_1.userId = sessionInfo.userId;\n      payload_1.eventList = [];\n      events.forEach(function (event) {\n        // @ts-ignore\n        payload_1.eventList.push(event);\n      });\n      var command = new PutEventsCommand(payload_1);\n      this._personalize.send(command, function (err) {\n        if (err) logger.debug('Failed to call putEvents in Personalize', err);else logger.debug('Put events');\n      });\n    }\n  };\n  /**\n   * Put event into buffer\n   * @private\n   * @param params - params for the event recording\n   */\n  AmazonPersonalizeProvider.prototype.putToBuffer = function (params) {\n    if (this._buffer.length < this._config.flushSize) {\n      this._buffer.push(params);\n    } else {\n      this._buffer.push(params);\n      this._sendFromBuffer();\n    }\n    return Promise.resolve(true);\n  };\n  /**\n   * flush the buffer and batch sending the request\n   * @private\n   * @param eventsParams - the buffer for cache the payload\n   */\n  AmazonPersonalizeProvider.prototype._sendFromBuffer = function () {\n    var _this = this;\n    var size = this._buffer.length;\n    if (size <= 0) return;\n    var eventsGroups = [];\n    var preCred = null;\n    var group = [];\n    for (var i = 0; i < size; i += 1) {\n      var currRequestParams = this._buffer.shift();\n      var cred = currRequestParams.credentials;\n      var sessionInfo = currRequestParams.sessionInfo;\n      if (i === 0) {\n        group.push(currRequestParams);\n        preCred = cred;\n      } else {\n        if (isEqual(sessionInfo, this._sessionInfo) && cred.sessionToken === preCred.sessionToken && cred.identityId === preCred.identityId) {\n          logger.debug('no change for cred, put event in the same group');\n          group.push(currRequestParams);\n        } else {\n          eventsGroups.push(group);\n          group = [];\n          group.push(currRequestParams);\n          preCred = cred;\n          this._sessionInfo = sessionInfo;\n        }\n      }\n    }\n    eventsGroups.push(group);\n    eventsGroups.map(function (group) {\n      _this._sendEvents(group);\n    });\n  };\n  /**\n   * Generate the record payload for single event\n   * @private\n   * @param params - RequestParams\n   */\n  AmazonPersonalizeProvider.prototype._generateSingleRecordPayload = function (params, sessionInfo) {\n    var eventData = params.eventData,\n      sentAt = params.sentAt;\n    var trackPayload = {};\n    trackPayload.sentAt = sentAt;\n    trackPayload.properties = eventData.properties && JSON.stringify(eventData.properties);\n    trackPayload.eventId = this._sessionManager.getTimerKey() + sessionInfo.sessionId;\n    trackPayload.eventType = eventData.eventType;\n    return trackPayload;\n  };\n  /**\n   * Initialize the personalize client\n   * @private\n   * @param params - RequestParams\n   */\n  AmazonPersonalizeProvider.prototype._init = function (config, credentials) {\n    logger.debug('init clients');\n    if (this._personalize && this._config.credentials && this._config.credentials.sessionToken === credentials.sessionToken && this._config.credentials.identityId === credentials.identityId) {\n      logger.debug('no change for analytics config, directly return from init');\n      return true;\n    }\n    this._config.credentials = credentials;\n    var region = config.region;\n    logger.debug('initialize personalize with credentials', credentials);\n    this._personalize = new PersonalizeEventsClient({\n      region: region,\n      credentials: credentials,\n      customUserAgent: getAmplifyUserAgent()\n    });\n    return true;\n  };\n  /**\n   * check if current credentials exists\n   * @private\n   */\n  AmazonPersonalizeProvider.prototype._getCredentials = function () {\n    var that = this;\n    return Credentials.get().then(function (credentials) {\n      if (!credentials) return null;\n      logger.debug('set credentials for analytics', that._config.credentials);\n      return Credentials.shear(credentials);\n    }).catch(function (err) {\n      logger.debug('ensure credentials error', err);\n      return null;\n    });\n  };\n  return AmazonPersonalizeProvider;\n}();\nexport { AmazonPersonalizeProvider };\n/**\n * @deprecated use named import\n */\nexport default AmazonPersonalizeProvider;","map":{"version":3,"sources":["../../src/Providers/AmazonPersonalizeProvider.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\n * Copyright 2019-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { ConsoleLogger as Logger, Credentials, JS, getAmplifyUserAgent, } from '@aws-amplify/core';\nimport { PersonalizeEventsClient, PutEventsCommand, } from '@aws-sdk/client-personalize-events';\nimport { SessionInfoManager, MediaAutoTrack, } from './AmazonPersonalizeHelper';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\nimport isEqual from 'lodash/isEqual';\nvar logger = new Logger('AmazonPersonalizeProvider');\n// events buffer\nvar FLUSH_SIZE = 5;\nvar FLUSH_SIZE_THRESHHOLD = 10;\nvar FLUSH_INTERVAL = 5 * 1000; // 5s\nvar IDENTIFY_EVENT = 'Identify';\nvar AmazonPersonalizeProvider = /** @class */ (function () {\n    function AmazonPersonalizeProvider(config) {\n        this._buffer = [];\n        this._config = config ? config : {};\n        this._config.flushSize =\n            this._config.flushSize > 0 &&\n                this._config.flushSize <= FLUSH_SIZE_THRESHHOLD\n                ? this._config.flushSize\n                : FLUSH_SIZE;\n        this._config.flushInterval = this._config.flushInterval || FLUSH_INTERVAL;\n        this._sessionManager = new SessionInfoManager();\n        if (!isEmpty(this._config.trackingId)) {\n            this._sessionInfo = this._sessionManager.retrieveSessionInfo(this._config.trackingId);\n        }\n        this._isBrowser = JS.browserOrNode().isBrowser;\n        // flush event buffer\n        this._setupTimer();\n    }\n    AmazonPersonalizeProvider.prototype._setupTimer = function () {\n        if (this._timer) {\n            clearInterval(this._timer);\n        }\n        var flushInterval = this._config.flushInterval;\n        var that = this;\n        this._timer = setInterval(function () {\n            that._sendFromBuffer();\n        }, flushInterval);\n    };\n    /**\n     * Record event\n     * @param eventType      - type of the event action. e.g. \"Click\"\n     * @param properties     - properties of the event\n     * @return Promise\n     */\n    AmazonPersonalizeProvider.prototype.record = function (params) {\n        return __awaiter(this, void 0, void 0, function () {\n            var credentials, _a, eventType, properties, requestParams, isLoaded;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this._getCredentials()];\n                    case 1:\n                        credentials = _b.sent();\n                        if (!credentials)\n                            return [2 /*return*/, Promise.resolve(false)];\n                        Object.assign(params, {\n                            config: this._config,\n                            credentials: credentials,\n                            sentAt: new Date(),\n                        });\n                        _a = params.event, eventType = _a.eventType, properties = _a.properties;\n                        if (eventType === IDENTIFY_EVENT) {\n                            this._sessionManager.updateSessionInfo(properties && properties.userId ? properties.userId : '', this._sessionInfo);\n                            return [2 /*return*/];\n                        }\n                        else if (!isEmpty(params.event.userId)) {\n                            this._sessionManager.updateSessionInfo(params.event.userId, this._sessionInfo);\n                        }\n                        requestParams = this.generateRequestParams(params, this._sessionInfo);\n                        if (!(eventType === 'MediaAutoTrack')) return [3 /*break*/, 7];\n                        if (!this._isBrowser) return [3 /*break*/, 5];\n                        if (!!isEmpty(get(requestParams, 'eventData.properties.domElementId', null))) return [3 /*break*/, 3];\n                        return [4 /*yield*/, this.isElementFullyLoaded(this.loadElement, requestParams.eventData.properties['domElementId'], 500, 5)];\n                    case 2:\n                        isLoaded = _b.sent();\n                        if (isLoaded) {\n                            new MediaAutoTrack(requestParams, this);\n                        }\n                        else {\n                            logger.debug('Cannot find the media element.');\n                        }\n                        return [3 /*break*/, 4];\n                    case 3:\n                        logger.debug(\"Missing domElementId field in 'properties' for MediaAutoTrack event type.\");\n                        _b.label = 4;\n                    case 4: return [3 /*break*/, 6];\n                    case 5:\n                        logger.debug('MediaAutoTrack only for browser');\n                        _b.label = 6;\n                    case 6: return [2 /*return*/];\n                    case 7: return [2 /*return*/, this.putToBuffer(requestParams)];\n                }\n            });\n        });\n    };\n    AmazonPersonalizeProvider.prototype.loadElement = function (domId) {\n        return new Promise(function (resolve, reject) {\n            if (document.getElementById(domId) &&\n                document.getElementById(domId).clientHeight) {\n                return resolve(true);\n            }\n            else {\n                return reject(true);\n            }\n        });\n    };\n    AmazonPersonalizeProvider.prototype.isElementFullyLoaded = function (operation, params, delay, times) {\n        var _this = this;\n        var wait = function (ms) { return new Promise(function (r) { return setTimeout(r, ms); }); };\n        return new Promise(function (resolve, reject) {\n            return operation(params)\n                .then(resolve)\n                .catch(function (reason) {\n                if (times - 1 > 0) {\n                    return wait(delay)\n                        .then(_this.isElementFullyLoaded.bind(null, operation, params, delay, times - 1))\n                        .then(resolve)\n                        .catch(reject);\n                }\n                return reject(reason);\n            });\n        });\n    };\n    /**\n     * get the category of the plugin\n     */\n    AmazonPersonalizeProvider.prototype.getCategory = function () {\n        return 'Analytics';\n    };\n    /**\n     * get provider name of the plugin\n     */\n    AmazonPersonalizeProvider.prototype.getProviderName = function () {\n        return 'AmazonPersonalize';\n    };\n    /**\n     * configure the plugin\n     * @param {Object} config - configuration\n     */\n    AmazonPersonalizeProvider.prototype.configure = function (config) {\n        logger.debug('configure Analytics', config);\n        var conf = config ? config : {};\n        this._config = Object.assign({}, this._config, conf);\n        if (!isEmpty(this._config.trackingId)) {\n            this._sessionInfo = this._sessionManager.retrieveSessionInfo(this._config.trackingId);\n        }\n        this._setupTimer();\n        return this._config;\n    };\n    /**\n     * Generate the requestParams from customer input params and sessionInfo\n     * @private\n     * @param eventData      - customer input for event data\n     * @param api            - api name\n     * @return RequestParams - wrapper object with all information required for make request\n     */\n    AmazonPersonalizeProvider.prototype.generateRequestParams = function (params, sessionInfo) {\n        var requestParams = {};\n        var _a = params.event, eventType = _a.eventType, properties = _a.properties;\n        requestParams.eventData = { eventType: eventType, properties: properties };\n        requestParams.sessionInfo = sessionInfo;\n        requestParams.sentAt = params.sentAt;\n        requestParams.credentials = params.credentials;\n        requestParams.config = params.config;\n        return requestParams;\n    };\n    /**\n     * record an event\n     * @param {Object} params - the params of an event\n     */\n    AmazonPersonalizeProvider.prototype._sendEvents = function (group) {\n        var groupLen = group.length;\n        if (groupLen === 0) {\n            logger.debug('events array is empty, directly return');\n            return;\n        }\n        var _a = group[0], config = _a.config, credentials = _a.credentials, sessionInfo = _a.sessionInfo;\n        var initClients = this._init(config, credentials);\n        if (!initClients)\n            return false;\n        if (groupLen > 0) {\n            var events = [];\n            for (var i = 0; i < groupLen; i += 1) {\n                var params = group.shift();\n                var eventPayload = this._generateSingleRecordPayload(params, sessionInfo);\n                events.push(eventPayload);\n            }\n            var payload_1 = {};\n            payload_1.trackingId = sessionInfo.trackingId;\n            payload_1.sessionId = sessionInfo.sessionId;\n            payload_1.userId = sessionInfo.userId;\n            payload_1.eventList = [];\n            events.forEach(function (event) {\n                // @ts-ignore\n                payload_1.eventList.push(event);\n            });\n            var command = new PutEventsCommand(payload_1);\n            this._personalize.send(command, function (err) {\n                if (err)\n                    logger.debug('Failed to call putEvents in Personalize', err);\n                else\n                    logger.debug('Put events');\n            });\n        }\n    };\n    /**\n     * Put event into buffer\n     * @private\n     * @param params - params for the event recording\n     */\n    AmazonPersonalizeProvider.prototype.putToBuffer = function (params) {\n        if (this._buffer.length < this._config.flushSize) {\n            this._buffer.push(params);\n        }\n        else {\n            this._buffer.push(params);\n            this._sendFromBuffer();\n        }\n        return Promise.resolve(true);\n    };\n    /**\n     * flush the buffer and batch sending the request\n     * @private\n     * @param eventsParams - the buffer for cache the payload\n     */\n    AmazonPersonalizeProvider.prototype._sendFromBuffer = function () {\n        var _this = this;\n        var size = this._buffer.length;\n        if (size <= 0)\n            return;\n        var eventsGroups = [];\n        var preCred = null;\n        var group = [];\n        for (var i = 0; i < size; i += 1) {\n            var currRequestParams = this._buffer.shift();\n            var cred = currRequestParams.credentials;\n            var sessionInfo = currRequestParams.sessionInfo;\n            if (i === 0) {\n                group.push(currRequestParams);\n                preCred = cred;\n            }\n            else {\n                if (isEqual(sessionInfo, this._sessionInfo) &&\n                    cred.sessionToken === preCred.sessionToken &&\n                    cred.identityId === preCred.identityId) {\n                    logger.debug('no change for cred, put event in the same group');\n                    group.push(currRequestParams);\n                }\n                else {\n                    eventsGroups.push(group);\n                    group = [];\n                    group.push(currRequestParams);\n                    preCred = cred;\n                    this._sessionInfo = sessionInfo;\n                }\n            }\n        }\n        eventsGroups.push(group);\n        eventsGroups.map(function (group) {\n            _this._sendEvents(group);\n        });\n    };\n    /**\n     * Generate the record payload for single event\n     * @private\n     * @param params - RequestParams\n     */\n    AmazonPersonalizeProvider.prototype._generateSingleRecordPayload = function (params, sessionInfo) {\n        var eventData = params.eventData, sentAt = params.sentAt;\n        var trackPayload = {};\n        trackPayload.sentAt = sentAt;\n        trackPayload.properties =\n            eventData.properties && JSON.stringify(eventData.properties);\n        trackPayload.eventId =\n            this._sessionManager.getTimerKey() + sessionInfo.sessionId;\n        trackPayload.eventType = eventData.eventType;\n        return trackPayload;\n    };\n    /**\n     * Initialize the personalize client\n     * @private\n     * @param params - RequestParams\n     */\n    AmazonPersonalizeProvider.prototype._init = function (config, credentials) {\n        logger.debug('init clients');\n        if (this._personalize &&\n            this._config.credentials &&\n            this._config.credentials.sessionToken === credentials.sessionToken &&\n            this._config.credentials.identityId === credentials.identityId) {\n            logger.debug('no change for analytics config, directly return from init');\n            return true;\n        }\n        this._config.credentials = credentials;\n        var region = config.region;\n        logger.debug('initialize personalize with credentials', credentials);\n        this._personalize = new PersonalizeEventsClient({\n            region: region,\n            credentials: credentials,\n            customUserAgent: getAmplifyUserAgent(),\n        });\n        return true;\n    };\n    /**\n     * check if current credentials exists\n     * @private\n     */\n    AmazonPersonalizeProvider.prototype._getCredentials = function () {\n        var that = this;\n        return Credentials.get()\n            .then(function (credentials) {\n            if (!credentials)\n                return null;\n            logger.debug('set credentials for analytics', that._config.credentials);\n            return Credentials.shear(credentials);\n        })\n            .catch(function (err) {\n            logger.debug('ensure credentials error', err);\n            return null;\n        });\n    };\n    return AmazonPersonalizeProvider;\n}());\nexport { AmazonPersonalizeProvider };\n/**\n * @deprecated use named import\n */\nexport default AmazonPersonalizeProvider;\n//# sourceMappingURL=AmazonPersonalizeProvider.js.map"]},"metadata":{},"sourceType":"module"}