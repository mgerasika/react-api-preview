{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar store_context = require('../store/store.context.js');\nvar React = require('react');\nconst useStore = () => {\n  const context = React.useContext(store_context.StoreContext);\n  return React.useMemo(() => {\n    return {\n      store: context.store,\n      updateStore: context.updateStore\n    };\n  }, [context]);\n};\nexports.useStore = useStore;","map":{"version":3,"sources":["../../../src/hooks/use-store.hook.ts"],"names":["useStore","context","useContext","StoreContext","useMemo","store","updateStore"],"mappings":";;;;;;;AAUO,MAAMA,QAAQ,GAAG,MAAe;EACnC,MAAMC,OAAO,GAAGC,KAAAA,CAAAA,UAAU,CAACC,aAAAA,CAAAA,YAAY,CAAC;EAExC,OAAOC,KAAAA,CAAAA,OAAO,CAAU,MAAe;IACnC,OAAO;MACHC,KAAK,EAAEJ,OAAO,CAACI,KAAK;MACpBC,WAAW,EAAEL,OAAO,CAACK;KACxB;EACL,CAAC,EAAE,CAACL,OAAO,CAAC,CAAC;AACjB,CAAA","sourcesContent":["import { IStore, StoreContext } from '@common/store/store.context';\nimport { useContext, useMemo } from 'react';\n\nexport type TLayoutType = 'tabs' | 'groupBar';\n\ninterface IResult {\n    store: IStore;\n    updateStore: (data: IStore) => void;\n}\n\nexport const useStore = (): IResult => {\n    const context = useContext(StoreContext);\n\n    return useMemo<IResult>((): IResult => {\n        return {\n            store: context.store,\n            updateStore: context.updateStore,\n        };\n    }, [context]);\n};\n"]},"metadata":{},"sourceType":"script"}