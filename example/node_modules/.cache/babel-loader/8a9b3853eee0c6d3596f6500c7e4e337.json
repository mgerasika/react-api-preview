{"ast":null,"code":"import { buildQueryString } from \"@aws-sdk/querystring-builder\";\nexport function formatUrl(request) {\n  var port = request.port,\n    query = request.query;\n  var protocol = request.protocol,\n    path = request.path,\n    hostname = request.hostname;\n  if (protocol && protocol.substr(-1) !== \":\") {\n    protocol += \":\";\n  }\n  if (port) {\n    hostname += \":\" + port;\n  }\n  if (path && path.charAt(0) !== \"/\") {\n    path = \"/\" + path;\n  }\n  var queryString = query ? buildQueryString(query) : \"\";\n  if (queryString && queryString[0] !== \"?\") {\n    queryString = \"?\" + queryString;\n  }\n  return protocol + \"//\" + hostname + path + queryString;\n}","map":{"version":3,"sources":["../../src/index.ts"],"names":[],"mappings":"AAAA,SAAS,gBAAgB,QAAQ,8BAA8B;AAG/D,OAAM,SAAU,SAAS,CAAC,OAAgD,EAAA;EAChE,IAAA,IAAI,GAAY,OAAO,CAAA,IAAnB;IAAE,KAAK,GAAK,OAAO,CAAA,KAAZ;EACb,IAAA,QAAQ,GAAqB,OAAO,CAAA,QAA5B;IAAE,IAAI,GAAe,OAAO,CAAA,IAAtB;IAAE,QAAQ,GAAK,OAAO,CAAA,QAAZ;EAC9B,IAAI,QAAQ,IAAI,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;IAC3C,QAAQ,IAAI,GAAG;EAChB;EACD,IAAI,IAAI,EAAE;IACR,QAAQ,IAAI,GAAA,GAAI,IAAM;EACvB;EACD,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;IAClC,IAAI,GAAG,GAAA,GAAI,IAAM;EAClB;EACD,IAAI,WAAW,GAAG,KAAK,GAAG,gBAAgB,CAAC,KAAK,CAAC,GAAG,EAAE;EACtD,IAAI,WAAW,IAAI,WAAW,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;IACzC,WAAW,GAAG,GAAA,GAAI,WAAa;EAChC;EACD,OAAU,QAAQ,GAAA,IAAA,GAAK,QAAQ,GAAG,IAAI,GAAG,WAAa;AACxD","sourcesContent":["import { buildQueryString } from \"@aws-sdk/querystring-builder\";\nimport { HttpRequest } from \"@aws-sdk/types\";\n\nexport function formatUrl(request: Omit<HttpRequest, \"headers\" | \"method\">): string {\n  const { port, query } = request;\n  let { protocol, path, hostname } = request;\n  if (protocol && protocol.substr(-1) !== \":\") {\n    protocol += \":\";\n  }\n  if (port) {\n    hostname += `:${port}`;\n  }\n  if (path && path.charAt(0) !== \"/\") {\n    path = `/${path}`;\n  }\n  let queryString = query ? buildQueryString(query) : \"\";\n  if (queryString && queryString[0] !== \"?\") {\n    queryString = `?${queryString}`;\n  }\n  return `${protocol}//${hostname}${path}${queryString}`;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}