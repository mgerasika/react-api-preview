{"ast":null,"code":"import '@emotion/react';\nimport { EditFilled } from '@ant-design/icons';\nimport { CONST } from '../../constants/const.constant.js';\nimport { Countries } from '../../constants/countries.constant.js';\nimport { getInputLoqateLabel } from '../input-loqate/input-loqate.component.js';\nimport { Input } from '../input/input.component.js';\nimport { Link } from '../link/link.component.js';\nimport { Select } from '../select/select.component.js';\nimport { SimpleCollapse } from '../simple-collapse/simple-collapse.component.js';\nimport { t } from '../../hooks/use-t.hook.js';\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() {\n  return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";\n}\nvar _ref = process.env.NODE_ENV === \"production\" ? {\n  name: \"1mn17or\",\n  styles: \"padding-top:0.5rem;padding-bottom:0.5rem\"\n} : {\n  name: \"5kkiu-renderOneLineEditable\",\n  styles: \"padding-top:0.5rem;padding-bottom:0.5rem;label:renderOneLineEditable;\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\nvar _ref2 = process.env.NODE_ENV === \"production\" ? {\n  name: \"zjik7\",\n  styles: \"display:flex\"\n} : {\n  name: \"ucpb73-renderOneLineEditable\",\n  styles: \"display:flex;label:renderOneLineEditable;\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\nvar _ref3 = process.env.NODE_ENV === \"production\" ? {\n  name: \"b9l38d\",\n  styles: \"width:min-content\"\n} : {\n  name: \"1r6gc0j-renderOneLineEditable\",\n  styles: \"width:min-content;label:renderOneLineEditable;\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\nvar _ref4 = process.env.NODE_ENV === \"production\" ? {\n  name: \"xrh8zp\",\n  styles: \"display:grid;grid-column-gap:16px;grid-row-gap:16px;padding-top:0.5rem;padding-bottom:0.5rem;@media (min-width: 1024px){grid-template-columns:repeat(2, minmax(0, 1fr));}\"\n} : {\n  name: \"1e436rc-renderAllEditable\",\n  styles: \"display:grid;grid-column-gap:16px;grid-row-gap:16px;padding-top:0.5rem;padding-bottom:0.5rem;@media (min-width: 1024px){grid-template-columns:repeat(2, minmax(0, 1fr));};label:renderAllEditable;\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\nvar _ref5 = process.env.NODE_ENV === \"production\" ? {\n  name: \"mmvz9h\",\n  styles: \"font-weight:400\"\n} : {\n  name: \"9efovn-Address\",\n  styles: \"font-weight:400;label:Address;\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\nvar _ref6 = process.env.NODE_ENV === \"production\" ? {\n  name: \"mmvz9h\",\n  styles: \"font-weight:400\"\n} : {\n  name: \"9efovn-Address\",\n  styles: \"font-weight:400;label:Address;\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\nconst Address = _ref7 => {\n  let {\n    className,\n    showCollapsePanel,\n    mode = 'oneLineEditable',\n    ...rest\n  } = _ref7;\n  const [value, setValue] = useState(rest.defaultValue || rest.value);\n  const [blur, setBlur] = useState({\n    addressLine1: false,\n    addressLine2: false,\n    addressLine3: false,\n    city: false,\n    country: false,\n    label: false,\n    originalLabel: false,\n    postCode: false\n  });\n  const [isEditMode, setEditMode] = useState(false);\n  useEffect(() => {\n    if (rest.value) {\n      setValue({\n        ...rest.value,\n        label: getInputLoqateLabel(rest.value),\n        originalLabel: getInputLoqateLabel(rest.value)\n      });\n    }\n  }, [rest.value]);\n  const createAddressChangeHandler = useCallback(propertyName => {\n    return e => {\n      setValue(val => {\n        const newValue = {\n          ...val,\n          [propertyName]: e.target.value\n        };\n        newValue.label = getInputLoqateLabel(newValue);\n        newValue.originalLabel = getInputLoqateLabel(newValue);\n        rest.onChange && rest.onChange({\n          name: rest.name,\n          value: newValue\n        });\n        return newValue;\n      });\n    };\n  }, [rest]);\n  const createBlurHandler = useCallback(propertyName => () => {\n    setBlur(prev => {\n      return {\n        ...prev,\n        [propertyName]: true\n      };\n    });\n  }, []);\n  const handleCountryChange = useCallback(e => {\n    setValue(val => {\n      const newValue = {\n        ...val,\n        country: e.value\n      };\n      newValue.label = getInputLoqateLabel(newValue);\n      newValue.originalLabel = getInputLoqateLabel(newValue);\n      rest.onChange && rest.onChange({\n        name: rest.name,\n        value: newValue\n      });\n      return newValue;\n    });\n  }, [rest.name, rest.onChange]);\n  const createGetErrorMessage = (propertyName, required) => {\n    const val = value ? value[propertyName] : undefined;\n    if (!blur[propertyName]) {\n      return;\n    }\n    if (required && !val) {\n      return CONST.thisFieldRequired;\n    }\n    return undefined;\n  };\n  const countryOptions = useMemo(() => {\n    return Countries.map(c => {\n      return {\n        label: c.name,\n        value: c['alpha-2']\n      };\n    });\n  }, []);\n  const renderOneLineEditable = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      css: _ref\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      css: _ref2\n    }, !value?.addressLine1 && !isEditMode ? /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"span\", {\n      css: styles.error\n    }, \"First line not found\"), /*#__PURE__*/React.createElement(Link, {\n      name: \"edit\",\n      onClick: () => setEditMode(true)\n    }, /*#__PURE__*/React.createElement(EditFilled, null), \" Edit first line\")) : /*#__PURE__*/React.createElement(Input, {\n      name: \"line1\",\n      type: \"text\",\n      css: _ref3,\n      value: value?.addressLine1,\n      onChange: createAddressChangeHandler('addressLine1'),\n      onBlur: () => {\n        createBlurHandler('addressLine1')();\n        // setEditMode(!!rest?.value?.addressLine1);\n      },\n\n      errorMessage: createGetErrorMessage('addressLine1', true)\n    })), value?.addressLine1 && /*#__PURE__*/React.createElement(\"div\", null, value?.addressLine2), value?.addressLine3 && /*#__PURE__*/React.createElement(\"div\", null, value?.addressLine3), /*#__PURE__*/React.createElement(\"div\", null, value?.city), /*#__PURE__*/React.createElement(\"div\", null, value?.postCode));\n  };\n  const renderAllEditable = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      css: _ref4,\n      className: className\n    }, /*#__PURE__*/React.createElement(Input, {\n      name: \"line1\",\n      required: true,\n      label: t('Address line 1'),\n      type: \"text\",\n      value: value?.addressLine1,\n      errorMessage: createGetErrorMessage('addressLine1', true),\n      onBlur: createBlurHandler('addressLine1'),\n      onChange: createAddressChangeHandler('addressLine1')\n    }), /*#__PURE__*/React.createElement(Input, {\n      name: \"line2\",\n      label: t('Address line 2'),\n      type: \"text\",\n      value: value?.addressLine2,\n      errorMessage: createGetErrorMessage('addressLine2', false),\n      onBlur: createBlurHandler('addressLine2'),\n      onChange: createAddressChangeHandler('addressLine2')\n    }), /*#__PURE__*/React.createElement(Input, {\n      name: \"line2\",\n      label: t('Address line 3'),\n      type: \"text\",\n      value: value?.addressLine3,\n      errorMessage: createGetErrorMessage('addressLine3', false),\n      onBlur: createBlurHandler('addressLine3'),\n      onChange: createAddressChangeHandler('addressLine3')\n    }), /*#__PURE__*/React.createElement(Input, {\n      name: \"city\",\n      required: true,\n      label: t('City'),\n      type: \"text\",\n      value: value?.city,\n      errorMessage: createGetErrorMessage('city', true),\n      onBlur: createBlurHandler('city'),\n      onChange: createAddressChangeHandler('city')\n    }), /*#__PURE__*/React.createElement(Select, {\n      name: \"country\",\n      required: true,\n      label: t('Country'),\n      options: countryOptions,\n      value: value?.country,\n      showSearch: true,\n      allowClear: true,\n      errorMessage: createGetErrorMessage('country', true),\n      onBlur: createBlurHandler('country'),\n      onChange: handleCountryChange\n    }), /*#__PURE__*/React.createElement(Input, {\n      name: \"postCode\",\n      required: true,\n      label: t('Postcode'),\n      type: \"text\",\n      value: value?.postCode,\n      errorMessage: createGetErrorMessage('postCode', true),\n      onBlur: createBlurHandler('postCode'),\n      onChange: createAddressChangeHandler('postCode')\n    }));\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, mode === 'oneLineEditable' ? showCollapsePanel ? /*#__PURE__*/React.createElement(SimpleCollapse, {\n    className: className,\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      css: _ref5\n    }, \" Edit delivery address\")\n  }, renderOneLineEditable()) : renderOneLineEditable() : showCollapsePanel ? /*#__PURE__*/React.createElement(SimpleCollapse, {\n    className: className,\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      css: _ref6\n    }, \" Edit billing address\")\n  }, renderAllEditable()) : renderAllEditable());\n};\nconst styles = {\n  error: process.env.NODE_ENV === \"production\" ? {\n    name: \"hwfcu5\",\n    styles: \"color:red\"\n  } : {\n    name: \"kvksw2-error\",\n    styles: \"color:red;label:error;\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  }\n};\nconst validateBillingAddress = val => {\n  return !val.addressLine1 || !val.city || !val.postCode || !val.country ? CONST.thisFieldRequired : undefined;\n};\nconst validateShippingAddress = val => {\n  return !val.addressLine1 ? CONST.thisFieldRequired : undefined;\n};\nexport { Address, validateBillingAddress, validateShippingAddress };","map":{"version":3,"sources":["../../../../src/general-ui/address/address.component.tsx"],"names":["Address","className","showCollapsePanel","mode","rest","value","setValue","useState","defaultValue","blur","setBlur","addressLine1","addressLine2","addressLine3","city","country","label","originalLabel","postCode","isEditMode","setEditMode","useEffect","getInputLoqateLabel","createAddressChangeHandler","useCallback","propertyName","e","val","newValue","target","onChange","name","createBlurHandler","prev","handleCountryChange","createGetErrorMessage","required","undefined","CONST","thisFieldRequired","countryOptions","useMemo","Countries","map","c","renderOneLineEditable","styles","error","renderAllEditable","t","validateBillingAddress","validateShippingAddress"],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { EditFilled } from '@ant-design/icons';\nimport { CONST } from '@common/constants/const.constant';\nimport { Countries } from '@common/constants/countries.constant';\nimport { IFieldProps } from '@common/general-ui/field/field.component';\nimport { getInputLoqateLabel, IInputLoqateValue } from '@common/general-ui/input-loqate/input-loqate.component';\nimport { Input } from '@common/general-ui/input/input.component';\nimport { Link } from '@common/general-ui/link/link.component';\nimport { ISelectChangeHandler, Select } from '@common/general-ui/select/select.component';\nimport { SimpleCollapse } from '@common/general-ui/simple-collapse/simple-collapse.component';\nimport { t } from '@common/hooks/use-t.hook';\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { css } from 'twin.macro';\n\nexport type IAddressChangeHandler = (arg: { name: string; value: IInputLoqateValue }) => void;\nexport interface IAddressProps<TName = string> extends IFieldProps<IInputLoqateValue, TName> {\n    className?: string;\n    onChange?: IAddressChangeHandler;\n    onBlur?: (e: React.FocusEvent) => void;\n    mode?: 'oneLineEditable' | 'allEditable';\n    showCollapsePanel?: boolean;\n}\n\nexport const Address = ({ className, showCollapsePanel, mode = 'oneLineEditable', ...rest }: IAddressProps): JSX.Element => {\n    const [value, setValue] = useState<IInputLoqateValue | undefined>(rest.defaultValue || rest.value);\n    const [blur, setBlur] = useState<{ [key in keyof IInputLoqateValue]: boolean }>({\n        addressLine1: false,\n        addressLine2: false,\n        addressLine3: false,\n        city: false,\n        country: false,\n        label: false,\n        originalLabel: false,\n        postCode: false,\n    });\n    const [isEditMode, setEditMode] = useState(false);\n\n    useEffect(() => {\n        if (rest.value) {\n            setValue({\n                ...rest.value,\n                label: getInputLoqateLabel(rest.value),\n                originalLabel: getInputLoqateLabel(rest.value),\n            });\n        }\n    }, [rest.value]);\n\n    const createAddressChangeHandler = useCallback(\n        (propertyName: keyof IInputLoqateValue) => {\n            return (e: React.ChangeEvent<HTMLInputElement>): void => {\n                setValue((val: IInputLoqateValue | undefined): IInputLoqateValue => {\n                    const newValue = {\n                        ...val,\n                        [propertyName]: e.target.value,\n                    } as IInputLoqateValue;\n                    newValue.label = getInputLoqateLabel(newValue);\n                    newValue.originalLabel = getInputLoqateLabel(newValue);\n                    rest.onChange && rest.onChange({ name: rest.name, value: newValue });\n                    return newValue;\n                });\n            };\n        },\n        [rest],\n    );\n\n    const createBlurHandler = useCallback(\n        (propertyName: keyof IInputLoqateValue) => (): void => {\n            setBlur((prev) => {\n                return {\n                    ...prev,\n                    [propertyName]: true,\n                };\n            });\n        },\n        [],\n    );\n\n    const handleCountryChange = useCallback<ISelectChangeHandler>(\n        (e) => {\n            setValue((val: IInputLoqateValue | undefined): IInputLoqateValue => {\n                const newValue = {\n                    ...val,\n                    country: e.value,\n                } as IInputLoqateValue;\n                newValue.label = getInputLoqateLabel(newValue);\n                newValue.originalLabel = getInputLoqateLabel(newValue);\n                rest.onChange && rest.onChange({ name: rest.name, value: newValue });\n                return newValue;\n            });\n        },\n        [rest.name, rest.onChange],\n    );\n\n    const createGetErrorMessage = (propertyName: keyof IInputLoqateValue, required: boolean): string | undefined => {\n        const val = value ? value[propertyName] : undefined;\n        if (!blur[propertyName]) {\n            return;\n        }\n        if (required && !val) {\n            return CONST.thisFieldRequired;\n        }\n        return undefined;\n    };\n\n    const countryOptions = useMemo(() => {\n        return Countries.map((c) => {\n            return {\n                label: c.name,\n                value: c['alpha-2'],\n            };\n        });\n    }, []);\n\n    const renderOneLineEditable = (): JSX.Element => {\n        return (\n            <div tw=\"py-2\">\n                <div tw=\"flex\">\n                    {!value?.addressLine1 && !isEditMode ? (\n                        <div>\n                            <span css={styles.error}>First line not found</span>\n                            <Link name=\"edit\" onClick={(): void => setEditMode(true)}>\n                                <EditFilled /> Edit first line\n                            </Link>\n                        </div>\n                    ) : (\n                        <Input\n                            name=\"line1\"\n                            type=\"text\"\n                            tw=\"w-min\"\n                            value={value?.addressLine1}\n                            onChange={createAddressChangeHandler('addressLine1')}\n                            onBlur={(): void => {\n                                createBlurHandler('addressLine1')();\n                                // setEditMode(!!rest?.value?.addressLine1);\n                            }}\n                            errorMessage={createGetErrorMessage('addressLine1', true)}\n                        />\n                    )}\n                </div>\n                {value?.addressLine1 && <div>{value?.addressLine2}</div>}\n                {value?.addressLine3 && <div>{value?.addressLine3}</div>}\n                <div>{value?.city}</div>\n                <div>{value?.postCode}</div>\n            </div>\n        );\n    };\n\n    const renderAllEditable = (): JSX.Element => {\n        return (\n            <div tw=\"grid lg:grid-cols-2 grid-column-gap[16px] grid-row-gap[16px] py-2\" className={className}>\n                <Input\n                    name=\"line1\"\n                    required\n                    label={t('Address line 1')}\n                    type=\"text\"\n                    value={value?.addressLine1}\n                    errorMessage={createGetErrorMessage('addressLine1', true)}\n                    onBlur={createBlurHandler('addressLine1')}\n                    onChange={createAddressChangeHandler('addressLine1')}\n                />\n                <Input\n                    name=\"line2\"\n                    label={t('Address line 2')}\n                    type=\"text\"\n                    value={value?.addressLine2}\n                    errorMessage={createGetErrorMessage('addressLine2', false)}\n                    onBlur={createBlurHandler('addressLine2')}\n                    onChange={createAddressChangeHandler('addressLine2')}\n                />\n                <Input\n                    name=\"line2\"\n                    label={t('Address line 3')}\n                    type=\"text\"\n                    value={value?.addressLine3}\n                    errorMessage={createGetErrorMessage('addressLine3', false)}\n                    onBlur={createBlurHandler('addressLine3')}\n                    onChange={createAddressChangeHandler('addressLine3')}\n                />\n                <Input\n                    name=\"city\"\n                    required\n                    label={t('City')}\n                    type=\"text\"\n                    value={value?.city}\n                    errorMessage={createGetErrorMessage('city', true)}\n                    onBlur={createBlurHandler('city')}\n                    onChange={createAddressChangeHandler('city')}\n                />\n                <Select\n                    name=\"country\"\n                    required\n                    label={t('Country')}\n                    options={countryOptions}\n                    value={value?.country}\n                    showSearch={true}\n                    allowClear={true}\n                    errorMessage={createGetErrorMessage('country', true)}\n                    onBlur={createBlurHandler('country')}\n                    onChange={handleCountryChange}\n                />\n                <Input\n                    name=\"postCode\"\n                    required\n                    label={t('Postcode')}\n                    type=\"text\"\n                    value={value?.postCode}\n                    errorMessage={createGetErrorMessage('postCode', true)}\n                    onBlur={createBlurHandler('postCode')}\n                    onChange={createAddressChangeHandler('postCode')}\n                />\n            </div>\n        );\n    };\n\n    return (\n        <>\n            {mode === 'oneLineEditable' ? (\n                showCollapsePanel ? (\n                    <SimpleCollapse className={className} label={<span tw=\"font-normal\"> Edit delivery address</span>}>\n                        {renderOneLineEditable()}\n                    </SimpleCollapse>\n                ) : (\n                    renderOneLineEditable()\n                )\n            ) : showCollapsePanel ? (\n                <SimpleCollapse className={className} label={<span tw=\"font-normal\"> Edit billing address</span>}>\n                    {renderAllEditable()}\n                </SimpleCollapse>\n            ) : (\n                renderAllEditable()\n            )}\n        </>\n    );\n};\n\nconst styles = {\n    error: css`\n        color: red;\n    `,\n};\n\nexport const validateBillingAddress = (val: IInputLoqateValue): string | undefined => {\n    return !val.addressLine1 || !val.city || !val.postCode || !val.country ? CONST.thisFieldRequired : undefined;\n};\nexport const validateShippingAddress = (val: IInputLoqateValue): string | undefined => {\n    return !val.addressLine1 ? CONST.thisFieldRequired : undefined;\n};\n"]},"metadata":{},"sourceType":"module"}