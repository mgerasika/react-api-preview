{"ast":null,"code":"/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nimport { AWSKinesisProvider } from './AWSKinesisProvider';\nimport { PutRecordBatchCommand, FirehoseClient } from '@aws-sdk/client-firehose';\nimport { fromUtf8 } from '@aws-sdk/util-utf8-browser';\nvar logger = new Logger('AWSKineisFirehoseProvider');\nvar AWSKinesisFirehoseProvider = /** @class */function (_super) {\n  __extends(AWSKinesisFirehoseProvider, _super);\n  function AWSKinesisFirehoseProvider(config) {\n    return _super.call(this, config) || this;\n  }\n  /**\n   * get provider name of the plugin\n   */\n  AWSKinesisFirehoseProvider.prototype.getProviderName = function () {\n    return 'AWSKinesisFirehose';\n  };\n  AWSKinesisFirehoseProvider.prototype._sendEvents = function (group) {\n    var _this = this;\n    if (group.length === 0) {\n      return;\n    }\n    var _a = group[0],\n      config = _a.config,\n      credentials = _a.credentials;\n    var initClients = this._init(config, credentials);\n    if (!initClients) return false;\n    var records = {};\n    group.map(function (params) {\n      // split by streamName\n      var evt = params.event;\n      var streamName = evt.streamName,\n        data = evt.data;\n      if (records[streamName] === undefined) {\n        records[streamName] = [];\n      }\n      var bufferData = data && typeof data !== 'string' ? JSON.stringify(data) : data;\n      var Data = fromUtf8(bufferData);\n      var record = {\n        Data: Data\n      };\n      records[streamName].push(record);\n    });\n    Object.keys(records).map(function (streamName) {\n      logger.debug('putting records to kinesis', streamName, 'with records', records[streamName]);\n      _this._kinesisFirehose.send(new PutRecordBatchCommand({\n        Records: records[streamName],\n        DeliveryStreamName: streamName\n      })).then(function (res) {\n        return logger.debug('Upload records to stream', streamName);\n      }).catch(function (err) {\n        return logger.debug('Failed to upload records to Kinesis', err);\n      });\n    });\n  };\n  AWSKinesisFirehoseProvider.prototype._init = function (config, credentials) {\n    logger.debug('init clients');\n    if (this._kinesisFirehose && this._config.credentials && this._config.credentials.sessionToken === credentials.sessionToken && this._config.credentials.identityId === credentials.identityId) {\n      logger.debug('no change for analytics config, directly return from init');\n      return true;\n    }\n    this._config.credentials = credentials;\n    var region = config.region;\n    return this._initFirehose(region, credentials);\n  };\n  AWSKinesisFirehoseProvider.prototype._initFirehose = function (region, credentials) {\n    logger.debug('initialize kinesis firehose with credentials', credentials);\n    this._kinesisFirehose = new FirehoseClient({\n      apiVersion: '2015-08-04',\n      region: region,\n      credentials: credentials\n    });\n    return true;\n  };\n  return AWSKinesisFirehoseProvider;\n}(AWSKinesisProvider);\nexport { AWSKinesisFirehoseProvider };\n/**\n * @deprecated use named import\n */\nexport default AWSKinesisFirehoseProvider;","map":{"version":3,"sources":["../../src/Providers/AWSKinesisFirehoseProvider.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nimport { AWSKinesisProvider } from './AWSKinesisProvider';\nimport { PutRecordBatchCommand, FirehoseClient, } from '@aws-sdk/client-firehose';\nimport { fromUtf8 } from '@aws-sdk/util-utf8-browser';\nvar logger = new Logger('AWSKineisFirehoseProvider');\nvar AWSKinesisFirehoseProvider = /** @class */ (function (_super) {\n    __extends(AWSKinesisFirehoseProvider, _super);\n    function AWSKinesisFirehoseProvider(config) {\n        return _super.call(this, config) || this;\n    }\n    /**\n     * get provider name of the plugin\n     */\n    AWSKinesisFirehoseProvider.prototype.getProviderName = function () {\n        return 'AWSKinesisFirehose';\n    };\n    AWSKinesisFirehoseProvider.prototype._sendEvents = function (group) {\n        var _this = this;\n        if (group.length === 0) {\n            return;\n        }\n        var _a = group[0], config = _a.config, credentials = _a.credentials;\n        var initClients = this._init(config, credentials);\n        if (!initClients)\n            return false;\n        var records = {};\n        group.map(function (params) {\n            // split by streamName\n            var evt = params.event;\n            var streamName = evt.streamName, data = evt.data;\n            if (records[streamName] === undefined) {\n                records[streamName] = [];\n            }\n            var bufferData = data && typeof data !== 'string' ? JSON.stringify(data) : data;\n            var Data = fromUtf8(bufferData);\n            var record = { Data: Data };\n            records[streamName].push(record);\n        });\n        Object.keys(records).map(function (streamName) {\n            logger.debug('putting records to kinesis', streamName, 'with records', records[streamName]);\n            _this._kinesisFirehose\n                .send(new PutRecordBatchCommand({\n                Records: records[streamName],\n                DeliveryStreamName: streamName,\n            }))\n                .then(function (res) { return logger.debug('Upload records to stream', streamName); })\n                .catch(function (err) { return logger.debug('Failed to upload records to Kinesis', err); });\n        });\n    };\n    AWSKinesisFirehoseProvider.prototype._init = function (config, credentials) {\n        logger.debug('init clients');\n        if (this._kinesisFirehose &&\n            this._config.credentials &&\n            this._config.credentials.sessionToken === credentials.sessionToken &&\n            this._config.credentials.identityId === credentials.identityId) {\n            logger.debug('no change for analytics config, directly return from init');\n            return true;\n        }\n        this._config.credentials = credentials;\n        var region = config.region;\n        return this._initFirehose(region, credentials);\n    };\n    AWSKinesisFirehoseProvider.prototype._initFirehose = function (region, credentials) {\n        logger.debug('initialize kinesis firehose with credentials', credentials);\n        this._kinesisFirehose = new FirehoseClient({\n            apiVersion: '2015-08-04',\n            region: region,\n            credentials: credentials,\n        });\n        return true;\n    };\n    return AWSKinesisFirehoseProvider;\n}(AWSKinesisProvider));\nexport { AWSKinesisFirehoseProvider };\n/**\n * @deprecated use named import\n */\nexport default AWSKinesisFirehoseProvider;\n//# sourceMappingURL=AWSKinesisFirehoseProvider.js.map"]},"metadata":{},"sourceType":"module"}