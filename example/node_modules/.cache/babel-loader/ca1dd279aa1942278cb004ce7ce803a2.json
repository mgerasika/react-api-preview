{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.errorHandler = exports.GatewayTimeoutError = exports.ServiceUnavailableError = exports.BadGatewayError = exports.InternalServerError = exports.NotFoundError = exports.ForbiddenError = exports.UnauthorizedError = exports.BadRequestError = exports.TransportError = void 0;\nvar TransportError = /** @class */function (_super) {\n  __extends(TransportError, _super);\n  function TransportError(message, status) {\n    var _this = _super.call(this, message) || this;\n    _this.status = status;\n    return _this;\n  }\n  return TransportError;\n}(Error);\nexports.TransportError = TransportError;\nvar BadRequestError = /** @class */function (_super) {\n  __extends(BadRequestError, _super);\n  function BadRequestError(message) {\n    return _super.call(this, message || 'Bad Request', 400) || this;\n  }\n  return BadRequestError;\n}(TransportError);\nexports.BadRequestError = BadRequestError;\nvar UnauthorizedError = /** @class */function (_super) {\n  __extends(UnauthorizedError, _super);\n  function UnauthorizedError(message) {\n    return _super.call(this, message || 'Unauthorized', 401) || this;\n  }\n  return UnauthorizedError;\n}(TransportError);\nexports.UnauthorizedError = UnauthorizedError;\nvar ForbiddenError = /** @class */function (_super) {\n  __extends(ForbiddenError, _super);\n  function ForbiddenError(message) {\n    return _super.call(this, message || 'Forbidden', 403) || this;\n  }\n  return ForbiddenError;\n}(TransportError);\nexports.ForbiddenError = ForbiddenError;\nvar NotFoundError = /** @class */function (_super) {\n  __extends(NotFoundError, _super);\n  function NotFoundError(message) {\n    return _super.call(this, message || 'Not Found', 404) || this;\n  }\n  return NotFoundError;\n}(TransportError);\nexports.NotFoundError = NotFoundError;\nvar InternalServerError = /** @class */function (_super) {\n  __extends(InternalServerError, _super);\n  function InternalServerError(message) {\n    return _super.call(this, message || 'Internal Server Error', 500) || this;\n  }\n  return InternalServerError;\n}(TransportError);\nexports.InternalServerError = InternalServerError;\nvar BadGatewayError = /** @class */function (_super) {\n  __extends(BadGatewayError, _super);\n  function BadGatewayError(message) {\n    return _super.call(this, message || 'Bad Gateway', 502) || this;\n  }\n  return BadGatewayError;\n}(TransportError);\nexports.BadGatewayError = BadGatewayError;\nvar ServiceUnavailableError = /** @class */function (_super) {\n  __extends(ServiceUnavailableError, _super);\n  function ServiceUnavailableError(message) {\n    return _super.call(this, message || 'Service Unavailable', 503) || this;\n  }\n  return ServiceUnavailableError;\n}(TransportError);\nexports.ServiceUnavailableError = ServiceUnavailableError;\nvar GatewayTimeoutError = /** @class */function (_super) {\n  __extends(GatewayTimeoutError, _super);\n  function GatewayTimeoutError(message) {\n    return _super.call(this, message || 'Gateway Timeout', 504) || this;\n  }\n  return GatewayTimeoutError;\n}(TransportError);\nexports.GatewayTimeoutError = GatewayTimeoutError;\nfunction errorHandler(response) {\n  if (!response) return {\n    status: 204,\n    statusText: 'No Content'\n  };\n  var status = response.status,\n    message = response.statusText;\n  if (status >= 400) switch (status) {\n    case 400:\n      throw new BadRequestError(message);\n    case 401:\n      throw new UnauthorizedError(message);\n    case 403:\n      throw new ForbiddenError(message);\n    case 404:\n      throw new NotFoundError(message);\n    case 500:\n      throw new InternalServerError(message);\n    case 502:\n      throw new BadGatewayError(message);\n    case 503:\n      throw new ServiceUnavailableError(message);\n    case 504:\n      throw new GatewayTimeoutError(message);\n    default:\n      throw new TransportError(message || 'Transport Error', status);\n  }\n  return response;\n}\nexports.errorHandler = errorHandler;","map":{"version":3,"sources":["../../../src/lib/transport/error.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.errorHandler = exports.GatewayTimeoutError = exports.ServiceUnavailableError = exports.BadGatewayError = exports.InternalServerError = exports.NotFoundError = exports.ForbiddenError = exports.UnauthorizedError = exports.BadRequestError = exports.TransportError = void 0;\nvar TransportError = /** @class */ (function (_super) {\n    __extends(TransportError, _super);\n    function TransportError(message, status) {\n        var _this = _super.call(this, message) || this;\n        _this.status = status;\n        return _this;\n    }\n    return TransportError;\n}(Error));\nexports.TransportError = TransportError;\nvar BadRequestError = /** @class */ (function (_super) {\n    __extends(BadRequestError, _super);\n    function BadRequestError(message) {\n        return _super.call(this, message || 'Bad Request', 400) || this;\n    }\n    return BadRequestError;\n}(TransportError));\nexports.BadRequestError = BadRequestError;\nvar UnauthorizedError = /** @class */ (function (_super) {\n    __extends(UnauthorizedError, _super);\n    function UnauthorizedError(message) {\n        return _super.call(this, message || 'Unauthorized', 401) || this;\n    }\n    return UnauthorizedError;\n}(TransportError));\nexports.UnauthorizedError = UnauthorizedError;\nvar ForbiddenError = /** @class */ (function (_super) {\n    __extends(ForbiddenError, _super);\n    function ForbiddenError(message) {\n        return _super.call(this, message || 'Forbidden', 403) || this;\n    }\n    return ForbiddenError;\n}(TransportError));\nexports.ForbiddenError = ForbiddenError;\nvar NotFoundError = /** @class */ (function (_super) {\n    __extends(NotFoundError, _super);\n    function NotFoundError(message) {\n        return _super.call(this, message || 'Not Found', 404) || this;\n    }\n    return NotFoundError;\n}(TransportError));\nexports.NotFoundError = NotFoundError;\nvar InternalServerError = /** @class */ (function (_super) {\n    __extends(InternalServerError, _super);\n    function InternalServerError(message) {\n        return _super.call(this, message || 'Internal Server Error', 500) || this;\n    }\n    return InternalServerError;\n}(TransportError));\nexports.InternalServerError = InternalServerError;\nvar BadGatewayError = /** @class */ (function (_super) {\n    __extends(BadGatewayError, _super);\n    function BadGatewayError(message) {\n        return _super.call(this, message || 'Bad Gateway', 502) || this;\n    }\n    return BadGatewayError;\n}(TransportError));\nexports.BadGatewayError = BadGatewayError;\nvar ServiceUnavailableError = /** @class */ (function (_super) {\n    __extends(ServiceUnavailableError, _super);\n    function ServiceUnavailableError(message) {\n        return _super.call(this, message || 'Service Unavailable', 503) || this;\n    }\n    return ServiceUnavailableError;\n}(TransportError));\nexports.ServiceUnavailableError = ServiceUnavailableError;\nvar GatewayTimeoutError = /** @class */ (function (_super) {\n    __extends(GatewayTimeoutError, _super);\n    function GatewayTimeoutError(message) {\n        return _super.call(this, message || 'Gateway Timeout', 504) || this;\n    }\n    return GatewayTimeoutError;\n}(TransportError));\nexports.GatewayTimeoutError = GatewayTimeoutError;\nfunction errorHandler(response) {\n    if (!response)\n        return { status: 204, statusText: 'No Content' };\n    var status = response.status, message = response.statusText;\n    if (status >= 400)\n        switch (status) {\n            case 400:\n                throw new BadRequestError(message);\n            case 401:\n                throw new UnauthorizedError(message);\n            case 403:\n                throw new ForbiddenError(message);\n            case 404:\n                throw new NotFoundError(message);\n            case 500:\n                throw new InternalServerError(message);\n            case 502:\n                throw new BadGatewayError(message);\n            case 503:\n                throw new ServiceUnavailableError(message);\n            case 504:\n                throw new GatewayTimeoutError(message);\n            default:\n                throw new TransportError(message || 'Transport Error', status);\n        }\n    return response;\n}\nexports.errorHandler = errorHandler;\n//# sourceMappingURL=error.js.map"]},"metadata":{},"sourceType":"script"}