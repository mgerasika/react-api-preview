{"ast":null,"code":"import { __assign, __awaiter, __generator } from \"tslib\";\nimport { AnalyticsFilter, LifecycleRuleFilter, MetricsFilter, ReplicationRuleFilter } from \"../models/models_0\";\nimport { HttpRequest as __HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { dateToUtcString as __dateToUtcString, extendedEncodeURIComponent as __extendedEncodeURIComponent, getArrayIfSingleItem as __getArrayIfSingleItem, getValueFromTextNode as __getValueFromTextNode } from \"@aws-sdk/smithy-client\";\nimport { XmlNode as __XmlNode, XmlText as __XmlText } from \"@aws-sdk/xml-builder\";\nimport { parse as xmlParse } from \"fast-xml-parser\";\nexport var serializeAws_restXmlAbortMultipartUploadCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign({}, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n          query = __assign({\n            \"x-id\": \"AbortMultipartUpload\"\n          }, input.UploadId !== undefined && {\n            uploadId: input.UploadId\n          });\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlCompleteMultipartUploadCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n          query = __assign({}, input.UploadId !== undefined && {\n            uploadId: input.UploadId\n          });\n          if (input.MultipartUpload !== undefined) {\n            contents = serializeAws_restXmlCompletedMultipartUpload(input.MultipartUpload, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlCopyObjectCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, isSerializableHeaderValue(input.ACL) && {\n            \"x-amz-acl\": input.ACL\n          }), isSerializableHeaderValue(input.CacheControl) && {\n            \"cache-control\": input.CacheControl\n          }), isSerializableHeaderValue(input.ContentDisposition) && {\n            \"content-disposition\": input.ContentDisposition\n          }), isSerializableHeaderValue(input.ContentEncoding) && {\n            \"content-encoding\": input.ContentEncoding\n          }), isSerializableHeaderValue(input.ContentLanguage) && {\n            \"content-language\": input.ContentLanguage\n          }), isSerializableHeaderValue(input.ContentType) && {\n            \"content-type\": input.ContentType\n          }), isSerializableHeaderValue(input.CopySource) && {\n            \"x-amz-copy-source\": input.CopySource\n          }), isSerializableHeaderValue(input.CopySourceIfMatch) && {\n            \"x-amz-copy-source-if-match\": input.CopySourceIfMatch\n          }), isSerializableHeaderValue(input.CopySourceIfModifiedSince) && {\n            \"x-amz-copy-source-if-modified-since\": __dateToUtcString(input.CopySourceIfModifiedSince).toString()\n          }), isSerializableHeaderValue(input.CopySourceIfNoneMatch) && {\n            \"x-amz-copy-source-if-none-match\": input.CopySourceIfNoneMatch\n          }), isSerializableHeaderValue(input.CopySourceIfUnmodifiedSince) && {\n            \"x-amz-copy-source-if-unmodified-since\": __dateToUtcString(input.CopySourceIfUnmodifiedSince).toString()\n          }), isSerializableHeaderValue(input.Expires) && {\n            expires: __dateToUtcString(input.Expires).toString()\n          }), isSerializableHeaderValue(input.GrantFullControl) && {\n            \"x-amz-grant-full-control\": input.GrantFullControl\n          }), isSerializableHeaderValue(input.GrantRead) && {\n            \"x-amz-grant-read\": input.GrantRead\n          }), isSerializableHeaderValue(input.GrantReadACP) && {\n            \"x-amz-grant-read-acp\": input.GrantReadACP\n          }), isSerializableHeaderValue(input.GrantWriteACP) && {\n            \"x-amz-grant-write-acp\": input.GrantWriteACP\n          }), isSerializableHeaderValue(input.MetadataDirective) && {\n            \"x-amz-metadata-directive\": input.MetadataDirective\n          }), isSerializableHeaderValue(input.TaggingDirective) && {\n            \"x-amz-tagging-directive\": input.TaggingDirective\n          }), isSerializableHeaderValue(input.ServerSideEncryption) && {\n            \"x-amz-server-side-encryption\": input.ServerSideEncryption\n          }), isSerializableHeaderValue(input.StorageClass) && {\n            \"x-amz-storage-class\": input.StorageClass\n          }), isSerializableHeaderValue(input.WebsiteRedirectLocation) && {\n            \"x-amz-website-redirect-location\": input.WebsiteRedirectLocation\n          }), isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n            \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.SSECustomerKey) && {\n            \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey\n          }), isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n            \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5\n          }), isSerializableHeaderValue(input.SSEKMSKeyId) && {\n            \"x-amz-server-side-encryption-aws-kms-key-id\": input.SSEKMSKeyId\n          }), isSerializableHeaderValue(input.SSEKMSEncryptionContext) && {\n            \"x-amz-server-side-encryption-context\": input.SSEKMSEncryptionContext\n          }), isSerializableHeaderValue(input.BucketKeyEnabled) && {\n            \"x-amz-server-side-encryption-bucket-key-enabled\": input.BucketKeyEnabled.toString()\n          }), isSerializableHeaderValue(input.CopySourceSSECustomerAlgorithm) && {\n            \"x-amz-copy-source-server-side-encryption-customer-algorithm\": input.CopySourceSSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.CopySourceSSECustomerKey) && {\n            \"x-amz-copy-source-server-side-encryption-customer-key\": input.CopySourceSSECustomerKey\n          }), isSerializableHeaderValue(input.CopySourceSSECustomerKeyMD5) && {\n            \"x-amz-copy-source-server-side-encryption-customer-key-md5\": input.CopySourceSSECustomerKeyMD5\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.Tagging) && {\n            \"x-amz-tagging\": input.Tagging\n          }), isSerializableHeaderValue(input.ObjectLockMode) && {\n            \"x-amz-object-lock-mode\": input.ObjectLockMode\n          }), isSerializableHeaderValue(input.ObjectLockRetainUntilDate) && {\n            \"x-amz-object-lock-retain-until-date\": (input.ObjectLockRetainUntilDate.toISOString().split(\".\")[0] + \"Z\").toString()\n          }), isSerializableHeaderValue(input.ObjectLockLegalHoldStatus) && {\n            \"x-amz-object-lock-legal-hold\": input.ObjectLockLegalHoldStatus\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          }), isSerializableHeaderValue(input.ExpectedSourceBucketOwner) && {\n            \"x-amz-source-expected-bucket-owner\": input.ExpectedSourceBucketOwner\n          }), input.Metadata !== undefined && Object.keys(input.Metadata).reduce(function (acc, suffix) {\n            var _a;\n            return __assign(__assign({}, acc), (_a = {}, _a[\"x-amz-meta-\" + suffix.toLowerCase()] = input.Metadata[suffix], _a));\n          }, {}));\n          resolvedPath = \"/{Bucket}/{Key+}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n          query = {\n            \"x-id\": \"CopyObject\"\n          };\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlCreateBucketCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, contents, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ACL) && {\n            \"x-amz-acl\": input.ACL\n          }), isSerializableHeaderValue(input.GrantFullControl) && {\n            \"x-amz-grant-full-control\": input.GrantFullControl\n          }), isSerializableHeaderValue(input.GrantRead) && {\n            \"x-amz-grant-read\": input.GrantRead\n          }), isSerializableHeaderValue(input.GrantReadACP) && {\n            \"x-amz-grant-read-acp\": input.GrantReadACP\n          }), isSerializableHeaderValue(input.GrantWrite) && {\n            \"x-amz-grant-write\": input.GrantWrite\n          }), isSerializableHeaderValue(input.GrantWriteACP) && {\n            \"x-amz-grant-write-acp\": input.GrantWriteACP\n          }), isSerializableHeaderValue(input.ObjectLockEnabledForBucket) && {\n            \"x-amz-bucket-object-lock-enabled\": input.ObjectLockEnabledForBucket.toString()\n          });\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          if (input.CreateBucketConfiguration !== undefined) {\n            contents = serializeAws_restXmlCreateBucketConfiguration(input.CreateBucketConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlCreateMultipartUploadCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, isSerializableHeaderValue(input.ACL) && {\n            \"x-amz-acl\": input.ACL\n          }), isSerializableHeaderValue(input.CacheControl) && {\n            \"cache-control\": input.CacheControl\n          }), isSerializableHeaderValue(input.ContentDisposition) && {\n            \"content-disposition\": input.ContentDisposition\n          }), isSerializableHeaderValue(input.ContentEncoding) && {\n            \"content-encoding\": input.ContentEncoding\n          }), isSerializableHeaderValue(input.ContentLanguage) && {\n            \"content-language\": input.ContentLanguage\n          }), isSerializableHeaderValue(input.ContentType) && {\n            \"content-type\": input.ContentType\n          }), isSerializableHeaderValue(input.Expires) && {\n            expires: __dateToUtcString(input.Expires).toString()\n          }), isSerializableHeaderValue(input.GrantFullControl) && {\n            \"x-amz-grant-full-control\": input.GrantFullControl\n          }), isSerializableHeaderValue(input.GrantRead) && {\n            \"x-amz-grant-read\": input.GrantRead\n          }), isSerializableHeaderValue(input.GrantReadACP) && {\n            \"x-amz-grant-read-acp\": input.GrantReadACP\n          }), isSerializableHeaderValue(input.GrantWriteACP) && {\n            \"x-amz-grant-write-acp\": input.GrantWriteACP\n          }), isSerializableHeaderValue(input.ServerSideEncryption) && {\n            \"x-amz-server-side-encryption\": input.ServerSideEncryption\n          }), isSerializableHeaderValue(input.StorageClass) && {\n            \"x-amz-storage-class\": input.StorageClass\n          }), isSerializableHeaderValue(input.WebsiteRedirectLocation) && {\n            \"x-amz-website-redirect-location\": input.WebsiteRedirectLocation\n          }), isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n            \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.SSECustomerKey) && {\n            \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey\n          }), isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n            \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5\n          }), isSerializableHeaderValue(input.SSEKMSKeyId) && {\n            \"x-amz-server-side-encryption-aws-kms-key-id\": input.SSEKMSKeyId\n          }), isSerializableHeaderValue(input.SSEKMSEncryptionContext) && {\n            \"x-amz-server-side-encryption-context\": input.SSEKMSEncryptionContext\n          }), isSerializableHeaderValue(input.BucketKeyEnabled) && {\n            \"x-amz-server-side-encryption-bucket-key-enabled\": input.BucketKeyEnabled.toString()\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.Tagging) && {\n            \"x-amz-tagging\": input.Tagging\n          }), isSerializableHeaderValue(input.ObjectLockMode) && {\n            \"x-amz-object-lock-mode\": input.ObjectLockMode\n          }), isSerializableHeaderValue(input.ObjectLockRetainUntilDate) && {\n            \"x-amz-object-lock-retain-until-date\": (input.ObjectLockRetainUntilDate.toISOString().split(\".\")[0] + \"Z\").toString()\n          }), isSerializableHeaderValue(input.ObjectLockLegalHoldStatus) && {\n            \"x-amz-object-lock-legal-hold\": input.ObjectLockLegalHoldStatus\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          }), input.Metadata !== undefined && Object.keys(input.Metadata).reduce(function (acc, suffix) {\n            var _a;\n            return __assign(__assign({}, acc), (_a = {}, _a[\"x-amz-meta-\" + suffix.toLowerCase()] = input.Metadata[suffix], _a));\n          }, {}));\n          resolvedPath = \"/{Bucket}/{Key+}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n          query = {\n            uploads: \"\"\n          };\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketAnalyticsConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = __assign({\n            analytics: \"\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketCorsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = {\n            cors: \"\"\n          };\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketEncryptionCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = {\n            encryption: \"\"\n          };\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketIntelligentTieringConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = __assign({\n            \"intelligent-tiering\": \"\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketInventoryConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = __assign({\n            inventory: \"\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketLifecycleCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = {\n            lifecycle: \"\"\n          };\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketMetricsConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = __assign({\n            metrics: \"\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketOwnershipControlsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = {\n            ownershipControls: \"\"\n          };\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketPolicyCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = {\n            policy: \"\"\n          };\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketReplicationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = {\n            replication: \"\"\n          };\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketTaggingCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = {\n            tagging: \"\"\n          };\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketWebsiteCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = {\n            website: \"\"\n          };\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteObjectCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign(__assign({}, isSerializableHeaderValue(input.MFA) && {\n            \"x-amz-mfa\": input.MFA\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.BypassGovernanceRetention) && {\n            \"x-amz-bypass-governance-retention\": input.BypassGovernanceRetention.toString()\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n          query = __assign({\n            \"x-id\": \"DeleteObject\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteObjectsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.MFA) && {\n            \"x-amz-mfa\": input.MFA\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.BypassGovernanceRetention) && {\n            \"x-amz-bypass-governance-retention\": input.BypassGovernanceRetention.toString()\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = {\n            delete: \"\"\n          };\n          if (input.Delete !== undefined) {\n            contents = serializeAws_restXmlDelete(input.Delete, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteObjectTaggingCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n          query = __assign({\n            tagging: \"\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeletePublicAccessBlockCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = {\n            publicAccessBlock: \"\"\n          };\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketAccelerateConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = {\n            accelerate: \"\"\n          };\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketAclCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = {\n            acl: \"\"\n          };\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketAnalyticsConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = __assign({\n            analytics: \"\",\n            \"x-id\": \"GetBucketAnalyticsConfiguration\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketCorsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = {\n            cors: \"\"\n          };\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketEncryptionCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = {\n            encryption: \"\"\n          };\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketIntelligentTieringConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = __assign({\n            \"intelligent-tiering\": \"\",\n            \"x-id\": \"GetBucketIntelligentTieringConfiguration\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketInventoryConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = __assign({\n            inventory: \"\",\n            \"x-id\": \"GetBucketInventoryConfiguration\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketLifecycleConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = {\n            lifecycle: \"\"\n          };\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketLocationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = {\n            location: \"\"\n          };\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketLoggingCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = {\n            logging: \"\"\n          };\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketMetricsConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = __assign({\n            metrics: \"\",\n            \"x-id\": \"GetBucketMetricsConfiguration\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketNotificationConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = {\n            notification: \"\"\n          };\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketOwnershipControlsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = {\n            ownershipControls: \"\"\n          };\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketPolicyCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = {\n            policy: \"\"\n          };\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketPolicyStatusCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = {\n            policyStatus: \"\"\n          };\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketReplicationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = {\n            replication: \"\"\n          };\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketRequestPaymentCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = {\n            requestPayment: \"\"\n          };\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketTaggingCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = {\n            tagging: \"\"\n          };\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketVersioningCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = {\n            versioning: \"\"\n          };\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketWebsiteCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = {\n            website: \"\"\n          };\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetObjectCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, isSerializableHeaderValue(input.IfMatch) && {\n            \"if-match\": input.IfMatch\n          }), isSerializableHeaderValue(input.IfModifiedSince) && {\n            \"if-modified-since\": __dateToUtcString(input.IfModifiedSince).toString()\n          }), isSerializableHeaderValue(input.IfNoneMatch) && {\n            \"if-none-match\": input.IfNoneMatch\n          }), isSerializableHeaderValue(input.IfUnmodifiedSince) && {\n            \"if-unmodified-since\": __dateToUtcString(input.IfUnmodifiedSince).toString()\n          }), isSerializableHeaderValue(input.Range) && {\n            range: input.Range\n          }), isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n            \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.SSECustomerKey) && {\n            \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey\n          }), isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n            \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n          query = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({\n            \"x-id\": \"GetObject\"\n          }, input.ResponseCacheControl !== undefined && {\n            \"response-cache-control\": input.ResponseCacheControl\n          }), input.ResponseContentDisposition !== undefined && {\n            \"response-content-disposition\": input.ResponseContentDisposition\n          }), input.ResponseContentEncoding !== undefined && {\n            \"response-content-encoding\": input.ResponseContentEncoding\n          }), input.ResponseContentLanguage !== undefined && {\n            \"response-content-language\": input.ResponseContentLanguage\n          }), input.ResponseContentType !== undefined && {\n            \"response-content-type\": input.ResponseContentType\n          }), input.ResponseExpires !== undefined && {\n            \"response-expires\": (input.ResponseExpires.toISOString().split(\".\")[0] + \"Z\").toString()\n          }), input.VersionId !== undefined && {\n            versionId: input.VersionId\n          }), input.PartNumber !== undefined && {\n            partNumber: input.PartNumber.toString()\n          });\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetObjectAclCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign({}, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n          query = __assign({\n            acl: \"\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetObjectLegalHoldCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign({}, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n          query = __assign({\n            \"legal-hold\": \"\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetObjectLockConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = {\n            \"object-lock\": \"\"\n          };\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetObjectRetentionCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign({}, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n          query = __assign({\n            retention: \"\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetObjectTaggingCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n          query = __assign({\n            tagging: \"\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetObjectTorrentCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign({}, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n          query = {\n            torrent: \"\"\n          };\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetPublicAccessBlockCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = {\n            publicAccessBlock: \"\"\n          };\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlHeadBucketCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"HEAD\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlHeadObjectCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, isSerializableHeaderValue(input.IfMatch) && {\n            \"if-match\": input.IfMatch\n          }), isSerializableHeaderValue(input.IfModifiedSince) && {\n            \"if-modified-since\": __dateToUtcString(input.IfModifiedSince).toString()\n          }), isSerializableHeaderValue(input.IfNoneMatch) && {\n            \"if-none-match\": input.IfNoneMatch\n          }), isSerializableHeaderValue(input.IfUnmodifiedSince) && {\n            \"if-unmodified-since\": __dateToUtcString(input.IfUnmodifiedSince).toString()\n          }), isSerializableHeaderValue(input.Range) && {\n            range: input.Range\n          }), isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n            \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.SSECustomerKey) && {\n            \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey\n          }), isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n            \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n          query = __assign(__assign({}, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          }), input.PartNumber !== undefined && {\n            partNumber: input.PartNumber.toString()\n          });\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"HEAD\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlListBucketAnalyticsConfigurationsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = __assign({\n            analytics: \"\",\n            \"x-id\": \"ListBucketAnalyticsConfigurations\"\n          }, input.ContinuationToken !== undefined && {\n            \"continuation-token\": input.ContinuationToken\n          });\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlListBucketIntelligentTieringConfigurationsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = __assign({\n            \"intelligent-tiering\": \"\",\n            \"x-id\": \"ListBucketIntelligentTieringConfigurations\"\n          }, input.ContinuationToken !== undefined && {\n            \"continuation-token\": input.ContinuationToken\n          });\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlListBucketInventoryConfigurationsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = __assign({\n            inventory: \"\",\n            \"x-id\": \"ListBucketInventoryConfigurations\"\n          }, input.ContinuationToken !== undefined && {\n            \"continuation-token\": input.ContinuationToken\n          });\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlListBucketMetricsConfigurationsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = __assign({\n            metrics: \"\",\n            \"x-id\": \"ListBucketMetricsConfigurations\"\n          }, input.ContinuationToken !== undefined && {\n            \"continuation-token\": input.ContinuationToken\n          });\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlListBucketsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/\";\n          body = \"\";\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlListMultipartUploadsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = __assign(__assign(__assign(__assign(__assign(__assign({\n            uploads: \"\"\n          }, input.Delimiter !== undefined && {\n            delimiter: input.Delimiter\n          }), input.EncodingType !== undefined && {\n            \"encoding-type\": input.EncodingType\n          }), input.KeyMarker !== undefined && {\n            \"key-marker\": input.KeyMarker\n          }), input.MaxUploads !== undefined && {\n            \"max-uploads\": input.MaxUploads.toString()\n          }), input.Prefix !== undefined && {\n            prefix: input.Prefix\n          }), input.UploadIdMarker !== undefined && {\n            \"upload-id-marker\": input.UploadIdMarker\n          });\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlListObjectsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign({}, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = __assign(__assign(__assign(__assign(__assign({}, input.Delimiter !== undefined && {\n            delimiter: input.Delimiter\n          }), input.EncodingType !== undefined && {\n            \"encoding-type\": input.EncodingType\n          }), input.Marker !== undefined && {\n            marker: input.Marker\n          }), input.MaxKeys !== undefined && {\n            \"max-keys\": input.MaxKeys.toString()\n          }), input.Prefix !== undefined && {\n            prefix: input.Prefix\n          });\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlListObjectsV2Command = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign({}, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = __assign(__assign(__assign(__assign(__assign(__assign(__assign({\n            \"list-type\": \"2\"\n          }, input.Delimiter !== undefined && {\n            delimiter: input.Delimiter\n          }), input.EncodingType !== undefined && {\n            \"encoding-type\": input.EncodingType\n          }), input.MaxKeys !== undefined && {\n            \"max-keys\": input.MaxKeys.toString()\n          }), input.Prefix !== undefined && {\n            prefix: input.Prefix\n          }), input.ContinuationToken !== undefined && {\n            \"continuation-token\": input.ContinuationToken\n          }), input.FetchOwner !== undefined && {\n            \"fetch-owner\": input.FetchOwner.toString()\n          }), input.StartAfter !== undefined && {\n            \"start-after\": input.StartAfter\n          });\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlListObjectVersionsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = __assign(__assign(__assign(__assign(__assign(__assign({\n            versions: \"\"\n          }, input.Delimiter !== undefined && {\n            delimiter: input.Delimiter\n          }), input.EncodingType !== undefined && {\n            \"encoding-type\": input.EncodingType\n          }), input.KeyMarker !== undefined && {\n            \"key-marker\": input.KeyMarker\n          }), input.MaxKeys !== undefined && {\n            \"max-keys\": input.MaxKeys.toString()\n          }), input.Prefix !== undefined && {\n            prefix: input.Prefix\n          }), input.VersionIdMarker !== undefined && {\n            \"version-id-marker\": input.VersionIdMarker\n          });\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlListPartsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign({}, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n          query = __assign(__assign(__assign({\n            \"x-id\": \"ListParts\"\n          }, input.MaxParts !== undefined && {\n            \"max-parts\": input.MaxParts.toString()\n          }), input.PartNumberMarker !== undefined && {\n            \"part-number-marker\": input.PartNumberMarker\n          }), input.UploadId !== undefined && {\n            uploadId: input.UploadId\n          });\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketAccelerateConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = {\n            accelerate: \"\"\n          };\n          if (input.AccelerateConfiguration !== undefined) {\n            contents = serializeAws_restXmlAccelerateConfiguration(input.AccelerateConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketAclCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ACL) && {\n            \"x-amz-acl\": input.ACL\n          }), isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.GrantFullControl) && {\n            \"x-amz-grant-full-control\": input.GrantFullControl\n          }), isSerializableHeaderValue(input.GrantRead) && {\n            \"x-amz-grant-read\": input.GrantRead\n          }), isSerializableHeaderValue(input.GrantReadACP) && {\n            \"x-amz-grant-read-acp\": input.GrantReadACP\n          }), isSerializableHeaderValue(input.GrantWrite) && {\n            \"x-amz-grant-write\": input.GrantWrite\n          }), isSerializableHeaderValue(input.GrantWriteACP) && {\n            \"x-amz-grant-write-acp\": input.GrantWriteACP\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = {\n            acl: \"\"\n          };\n          if (input.AccessControlPolicy !== undefined) {\n            contents = serializeAws_restXmlAccessControlPolicy(input.AccessControlPolicy, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketAnalyticsConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = __assign({\n            analytics: \"\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n          if (input.AnalyticsConfiguration !== undefined) {\n            contents = serializeAws_restXmlAnalyticsConfiguration(input.AnalyticsConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketCorsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = {\n            cors: \"\"\n          };\n          if (input.CORSConfiguration !== undefined) {\n            contents = serializeAws_restXmlCORSConfiguration(input.CORSConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketEncryptionCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = {\n            encryption: \"\"\n          };\n          if (input.ServerSideEncryptionConfiguration !== undefined) {\n            contents = serializeAws_restXmlServerSideEncryptionConfiguration(input.ServerSideEncryptionConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketIntelligentTieringConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/xml\"\n          };\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = __assign({\n            \"intelligent-tiering\": \"\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n          if (input.IntelligentTieringConfiguration !== undefined) {\n            contents = serializeAws_restXmlIntelligentTieringConfiguration(input.IntelligentTieringConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketInventoryConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = __assign({\n            inventory: \"\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n          if (input.InventoryConfiguration !== undefined) {\n            contents = serializeAws_restXmlInventoryConfiguration(input.InventoryConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketLifecycleConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = {\n            lifecycle: \"\"\n          };\n          if (input.LifecycleConfiguration !== undefined) {\n            contents = serializeAws_restXmlBucketLifecycleConfiguration(input.LifecycleConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketLoggingCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = {\n            logging: \"\"\n          };\n          if (input.BucketLoggingStatus !== undefined) {\n            contents = serializeAws_restXmlBucketLoggingStatus(input.BucketLoggingStatus, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketMetricsConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = __assign({\n            metrics: \"\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n          if (input.MetricsConfiguration !== undefined) {\n            contents = serializeAws_restXmlMetricsConfiguration(input.MetricsConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketNotificationConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = {\n            notification: \"\"\n          };\n          if (input.NotificationConfiguration !== undefined) {\n            contents = serializeAws_restXmlNotificationConfiguration(input.NotificationConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketOwnershipControlsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = {\n            ownershipControls: \"\"\n          };\n          if (input.OwnershipControls !== undefined) {\n            contents = serializeAws_restXmlOwnershipControls(input.OwnershipControls, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketPolicyCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign({\n            \"content-type\": \"text/plain\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ConfirmRemoveSelfBucketAccess) && {\n            \"x-amz-confirm-remove-self-bucket-access\": input.ConfirmRemoveSelfBucketAccess.toString()\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = {\n            policy: \"\"\n          };\n          if (input.Policy !== undefined) {\n            contents = input.Policy;\n            body = contents;\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketReplicationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.Token) && {\n            \"x-amz-bucket-object-lock-token\": input.Token\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = {\n            replication: \"\"\n          };\n          if (input.ReplicationConfiguration !== undefined) {\n            contents = serializeAws_restXmlReplicationConfiguration(input.ReplicationConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketRequestPaymentCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = {\n            requestPayment: \"\"\n          };\n          if (input.RequestPaymentConfiguration !== undefined) {\n            contents = serializeAws_restXmlRequestPaymentConfiguration(input.RequestPaymentConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketTaggingCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = {\n            tagging: \"\"\n          };\n          if (input.Tagging !== undefined) {\n            contents = serializeAws_restXmlTagging(input.Tagging, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketVersioningCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.MFA) && {\n            \"x-amz-mfa\": input.MFA\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = {\n            versioning: \"\"\n          };\n          if (input.VersioningConfiguration !== undefined) {\n            contents = serializeAws_restXmlVersioningConfiguration(input.VersioningConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketWebsiteCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = {\n            website: \"\"\n          };\n          if (input.WebsiteConfiguration !== undefined) {\n            contents = serializeAws_restXmlWebsiteConfiguration(input.WebsiteConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutObjectCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({\n            \"content-type\": \"application/octet-stream\"\n          }, isSerializableHeaderValue(input.ACL) && {\n            \"x-amz-acl\": input.ACL\n          }), isSerializableHeaderValue(input.CacheControl) && {\n            \"cache-control\": input.CacheControl\n          }), isSerializableHeaderValue(input.ContentDisposition) && {\n            \"content-disposition\": input.ContentDisposition\n          }), isSerializableHeaderValue(input.ContentEncoding) && {\n            \"content-encoding\": input.ContentEncoding\n          }), isSerializableHeaderValue(input.ContentLanguage) && {\n            \"content-language\": input.ContentLanguage\n          }), isSerializableHeaderValue(input.ContentLength) && {\n            \"content-length\": input.ContentLength.toString()\n          }), isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ContentType) && {\n            \"content-type\": input.ContentType\n          }), isSerializableHeaderValue(input.Expires) && {\n            expires: __dateToUtcString(input.Expires).toString()\n          }), isSerializableHeaderValue(input.GrantFullControl) && {\n            \"x-amz-grant-full-control\": input.GrantFullControl\n          }), isSerializableHeaderValue(input.GrantRead) && {\n            \"x-amz-grant-read\": input.GrantRead\n          }), isSerializableHeaderValue(input.GrantReadACP) && {\n            \"x-amz-grant-read-acp\": input.GrantReadACP\n          }), isSerializableHeaderValue(input.GrantWriteACP) && {\n            \"x-amz-grant-write-acp\": input.GrantWriteACP\n          }), isSerializableHeaderValue(input.ServerSideEncryption) && {\n            \"x-amz-server-side-encryption\": input.ServerSideEncryption\n          }), isSerializableHeaderValue(input.StorageClass) && {\n            \"x-amz-storage-class\": input.StorageClass\n          }), isSerializableHeaderValue(input.WebsiteRedirectLocation) && {\n            \"x-amz-website-redirect-location\": input.WebsiteRedirectLocation\n          }), isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n            \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.SSECustomerKey) && {\n            \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey\n          }), isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n            \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5\n          }), isSerializableHeaderValue(input.SSEKMSKeyId) && {\n            \"x-amz-server-side-encryption-aws-kms-key-id\": input.SSEKMSKeyId\n          }), isSerializableHeaderValue(input.SSEKMSEncryptionContext) && {\n            \"x-amz-server-side-encryption-context\": input.SSEKMSEncryptionContext\n          }), isSerializableHeaderValue(input.BucketKeyEnabled) && {\n            \"x-amz-server-side-encryption-bucket-key-enabled\": input.BucketKeyEnabled.toString()\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.Tagging) && {\n            \"x-amz-tagging\": input.Tagging\n          }), isSerializableHeaderValue(input.ObjectLockMode) && {\n            \"x-amz-object-lock-mode\": input.ObjectLockMode\n          }), isSerializableHeaderValue(input.ObjectLockRetainUntilDate) && {\n            \"x-amz-object-lock-retain-until-date\": (input.ObjectLockRetainUntilDate.toISOString().split(\".\")[0] + \"Z\").toString()\n          }), isSerializableHeaderValue(input.ObjectLockLegalHoldStatus) && {\n            \"x-amz-object-lock-legal-hold\": input.ObjectLockLegalHoldStatus\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          }), input.Metadata !== undefined && Object.keys(input.Metadata).reduce(function (acc, suffix) {\n            var _a;\n            return __assign(__assign({}, acc), (_a = {}, _a[\"x-amz-meta-\" + suffix.toLowerCase()] = input.Metadata[suffix], _a));\n          }, {}));\n          resolvedPath = \"/{Bucket}/{Key+}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n          query = {\n            \"x-id\": \"PutObject\"\n          };\n          if (input.Body !== undefined) {\n            contents = input.Body;\n            body = contents;\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutObjectAclCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ACL) && {\n            \"x-amz-acl\": input.ACL\n          }), isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.GrantFullControl) && {\n            \"x-amz-grant-full-control\": input.GrantFullControl\n          }), isSerializableHeaderValue(input.GrantRead) && {\n            \"x-amz-grant-read\": input.GrantRead\n          }), isSerializableHeaderValue(input.GrantReadACP) && {\n            \"x-amz-grant-read-acp\": input.GrantReadACP\n          }), isSerializableHeaderValue(input.GrantWrite) && {\n            \"x-amz-grant-write\": input.GrantWrite\n          }), isSerializableHeaderValue(input.GrantWriteACP) && {\n            \"x-amz-grant-write-acp\": input.GrantWriteACP\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n          query = __assign({\n            acl: \"\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n          if (input.AccessControlPolicy !== undefined) {\n            contents = serializeAws_restXmlAccessControlPolicy(input.AccessControlPolicy, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutObjectLegalHoldCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n          query = __assign({\n            \"legal-hold\": \"\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n          if (input.LegalHold !== undefined) {\n            contents = serializeAws_restXmlObjectLockLegalHold(input.LegalHold, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutObjectLockConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.Token) && {\n            \"x-amz-bucket-object-lock-token\": input.Token\n          }), isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = {\n            \"object-lock\": \"\"\n          };\n          if (input.ObjectLockConfiguration !== undefined) {\n            contents = serializeAws_restXmlObjectLockConfiguration(input.ObjectLockConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutObjectRetentionCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.BypassGovernanceRetention) && {\n            \"x-amz-bypass-governance-retention\": input.BypassGovernanceRetention.toString()\n          }), isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n          query = __assign({\n            retention: \"\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n          if (input.Retention !== undefined) {\n            contents = serializeAws_restXmlObjectLockRetention(input.Retention, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutObjectTaggingCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n          query = __assign({\n            tagging: \"\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n          if (input.Tagging !== undefined) {\n            contents = serializeAws_restXmlTagging(input.Tagging, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutPublicAccessBlockCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          query = {\n            publicAccessBlock: \"\"\n          };\n          if (input.PublicAccessBlockConfiguration !== undefined) {\n            contents = serializeAws_restXmlPublicAccessBlockConfiguration(input.PublicAccessBlockConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlRestoreObjectCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n          query = __assign({\n            restore: \"\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n          if (input.RestoreRequest !== undefined) {\n            contents = serializeAws_restXmlRestoreRequest(input.RestoreRequest, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlSelectObjectContentCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, bodyNode, node, node, node, node, node, node, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n            \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.SSECustomerKey) && {\n            \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey\n          }), isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n            \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n          query = {\n            select: \"\",\n            \"select-type\": \"2\"\n          };\n          body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n          bodyNode = new __XmlNode(\"SelectObjectContentRequest\");\n          bodyNode.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n          if (input.Expression !== undefined) {\n            node = new __XmlNode(\"Expression\").addChildNode(new __XmlText(input.Expression)).withName(\"Expression\");\n            bodyNode.addChildNode(node);\n          }\n          if (input.ExpressionType !== undefined) {\n            node = new __XmlNode(\"ExpressionType\").addChildNode(new __XmlText(input.ExpressionType)).withName(\"ExpressionType\");\n            bodyNode.addChildNode(node);\n          }\n          if (input.InputSerialization !== undefined) {\n            node = serializeAws_restXmlInputSerialization(input.InputSerialization, context).withName(\"InputSerialization\");\n            bodyNode.addChildNode(node);\n          }\n          if (input.OutputSerialization !== undefined) {\n            node = serializeAws_restXmlOutputSerialization(input.OutputSerialization, context).withName(\"OutputSerialization\");\n            bodyNode.addChildNode(node);\n          }\n          if (input.RequestProgress !== undefined) {\n            node = serializeAws_restXmlRequestProgress(input.RequestProgress, context).withName(\"RequestProgress\");\n            bodyNode.addChildNode(node);\n          }\n          if (input.ScanRange !== undefined) {\n            node = serializeAws_restXmlScanRange(input.ScanRange, context).withName(\"ScanRange\");\n            bodyNode.addChildNode(node);\n          }\n          body += bodyNode.toString();\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlUploadPartCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign({\n            \"content-type\": \"application/octet-stream\"\n          }, isSerializableHeaderValue(input.ContentLength) && {\n            \"content-length\": input.ContentLength.toString()\n          }), isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n            \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.SSECustomerKey) && {\n            \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey\n          }), isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n            \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n          query = __assign(__assign({\n            \"x-id\": \"UploadPart\"\n          }, input.PartNumber !== undefined && {\n            partNumber: input.PartNumber.toString()\n          }), input.UploadId !== undefined && {\n            uploadId: input.UploadId\n          });\n          if (input.Body !== undefined) {\n            contents = input.Body;\n            body = contents;\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlUploadPartCopyCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, isSerializableHeaderValue(input.CopySource) && {\n            \"x-amz-copy-source\": input.CopySource\n          }), isSerializableHeaderValue(input.CopySourceIfMatch) && {\n            \"x-amz-copy-source-if-match\": input.CopySourceIfMatch\n          }), isSerializableHeaderValue(input.CopySourceIfModifiedSince) && {\n            \"x-amz-copy-source-if-modified-since\": __dateToUtcString(input.CopySourceIfModifiedSince).toString()\n          }), isSerializableHeaderValue(input.CopySourceIfNoneMatch) && {\n            \"x-amz-copy-source-if-none-match\": input.CopySourceIfNoneMatch\n          }), isSerializableHeaderValue(input.CopySourceIfUnmodifiedSince) && {\n            \"x-amz-copy-source-if-unmodified-since\": __dateToUtcString(input.CopySourceIfUnmodifiedSince).toString()\n          }), isSerializableHeaderValue(input.CopySourceRange) && {\n            \"x-amz-copy-source-range\": input.CopySourceRange\n          }), isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n            \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.SSECustomerKey) && {\n            \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey\n          }), isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n            \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5\n          }), isSerializableHeaderValue(input.CopySourceSSECustomerAlgorithm) && {\n            \"x-amz-copy-source-server-side-encryption-customer-algorithm\": input.CopySourceSSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.CopySourceSSECustomerKey) && {\n            \"x-amz-copy-source-server-side-encryption-customer-key\": input.CopySourceSSECustomerKey\n          }), isSerializableHeaderValue(input.CopySourceSSECustomerKeyMD5) && {\n            \"x-amz-copy-source-server-side-encryption-customer-key-md5\": input.CopySourceSSECustomerKeyMD5\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          }), isSerializableHeaderValue(input.ExpectedSourceBucketOwner) && {\n            \"x-amz-source-expected-bucket-owner\": input.ExpectedSourceBucketOwner\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n          query = __assign(__assign({\n            \"x-id\": \"UploadPartCopy\"\n          }, input.PartNumber !== undefined && {\n            partNumber: input.PartNumber.toString()\n          }), input.UploadId !== undefined && {\n            uploadId: input.UploadId\n          });\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlAbortMultipartUploadCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlAbortMultipartUploadCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            RequestCharged: undefined\n          };\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlAbortMultipartUploadCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;\n    var _d;\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _d = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"NoSuchUpload\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.s3#NoSuchUpload\":\n              return [3 /*break*/, 2];\n          }\n          return [3 /*break*/, 4];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restXmlNoSuchUploadResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 5];\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlCompleteMultipartUploadCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlCompleteMultipartUploadCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Bucket: undefined,\n            BucketKeyEnabled: undefined,\n            ETag: undefined,\n            Expiration: undefined,\n            Key: undefined,\n            Location: undefined,\n            RequestCharged: undefined,\n            SSEKMSKeyId: undefined,\n            ServerSideEncryption: undefined,\n            VersionId: undefined\n          };\n          if (output.headers[\"x-amz-expiration\"] !== undefined) {\n            contents.Expiration = output.headers[\"x-amz-expiration\"];\n          }\n          if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n            contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n          }\n          if (output.headers[\"x-amz-version-id\"] !== undefined) {\n            contents.VersionId = output.headers[\"x-amz-version-id\"];\n          }\n          if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n            contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n          }\n          if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n            contents.BucketKeyEnabled = output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] === \"true\";\n          }\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          if (data[\"Bucket\"] !== undefined) {\n            contents.Bucket = data[\"Bucket\"];\n          }\n          if (data[\"ETag\"] !== undefined) {\n            contents.ETag = data[\"ETag\"];\n          }\n          if (data[\"Key\"] !== undefined) {\n            contents.Key = data[\"Key\"];\n          }\n          if (data[\"Location\"] !== undefined) {\n            contents.Location = data[\"Location\"];\n          }\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlCompleteMultipartUploadCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlCopyObjectCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlCopyObjectCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            BucketKeyEnabled: undefined,\n            CopyObjectResult: undefined,\n            CopySourceVersionId: undefined,\n            Expiration: undefined,\n            RequestCharged: undefined,\n            SSECustomerAlgorithm: undefined,\n            SSECustomerKeyMD5: undefined,\n            SSEKMSEncryptionContext: undefined,\n            SSEKMSKeyId: undefined,\n            ServerSideEncryption: undefined,\n            VersionId: undefined\n          };\n          if (output.headers[\"x-amz-expiration\"] !== undefined) {\n            contents.Expiration = output.headers[\"x-amz-expiration\"];\n          }\n          if (output.headers[\"x-amz-copy-source-version-id\"] !== undefined) {\n            contents.CopySourceVersionId = output.headers[\"x-amz-copy-source-version-id\"];\n          }\n          if (output.headers[\"x-amz-version-id\"] !== undefined) {\n            contents.VersionId = output.headers[\"x-amz-version-id\"];\n          }\n          if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n            contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n          }\n          if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n            contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n          }\n          if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n            contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n          }\n          if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n            contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n          }\n          if (output.headers[\"x-amz-server-side-encryption-context\"] !== undefined) {\n            contents.SSEKMSEncryptionContext = output.headers[\"x-amz-server-side-encryption-context\"];\n          }\n          if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n            contents.BucketKeyEnabled = output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] === \"true\";\n          }\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.CopyObjectResult = deserializeAws_restXmlCopyObjectResult(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlCopyObjectCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;\n    var _d;\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _d = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"ObjectNotInActiveTierError\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.s3#ObjectNotInActiveTierError\":\n              return [3 /*break*/, 2];\n          }\n          return [3 /*break*/, 4];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restXmlObjectNotInActiveTierErrorResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 5];\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlCreateBucketCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlCreateBucketCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Location: undefined\n          };\n          if (output.headers[\"location\"] !== undefined) {\n            contents.Location = output.headers[\"location\"];\n          }\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlCreateBucketCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;\n    var _e;\n    return __generator(this, function (_f) {\n      switch (_f.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _e = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BucketAlreadyExists\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.s3#BucketAlreadyExists\":\n              return [3 /*break*/, 2];\n            case \"BucketAlreadyOwnedByYou\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.s3#BucketAlreadyOwnedByYou\":\n              return [3 /*break*/, 4];\n          }\n          return [3 /*break*/, 6];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restXmlBucketAlreadyExistsResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 7];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restXmlBucketAlreadyOwnedByYouResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 7];\n        case 6:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _f.label = 7;\n        case 7:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlCreateMultipartUploadCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlCreateMultipartUploadCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            AbortDate: undefined,\n            AbortRuleId: undefined,\n            Bucket: undefined,\n            BucketKeyEnabled: undefined,\n            Key: undefined,\n            RequestCharged: undefined,\n            SSECustomerAlgorithm: undefined,\n            SSECustomerKeyMD5: undefined,\n            SSEKMSEncryptionContext: undefined,\n            SSEKMSKeyId: undefined,\n            ServerSideEncryption: undefined,\n            UploadId: undefined\n          };\n          if (output.headers[\"x-amz-abort-date\"] !== undefined) {\n            contents.AbortDate = new Date(output.headers[\"x-amz-abort-date\"]);\n          }\n          if (output.headers[\"x-amz-abort-rule-id\"] !== undefined) {\n            contents.AbortRuleId = output.headers[\"x-amz-abort-rule-id\"];\n          }\n          if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n            contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n          }\n          if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n            contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n          }\n          if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n            contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n          }\n          if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n            contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n          }\n          if (output.headers[\"x-amz-server-side-encryption-context\"] !== undefined) {\n            contents.SSEKMSEncryptionContext = output.headers[\"x-amz-server-side-encryption-context\"];\n          }\n          if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n            contents.BucketKeyEnabled = output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] === \"true\";\n          }\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          if (data[\"Bucket\"] !== undefined) {\n            contents.Bucket = data[\"Bucket\"];\n          }\n          if (data[\"Key\"] !== undefined) {\n            contents.Key = data[\"Key\"];\n          }\n          if (data[\"UploadId\"] !== undefined) {\n            contents.UploadId = data[\"UploadId\"];\n          }\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlCreateMultipartUploadCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlDeleteBucketCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlDeleteBucketCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlDeleteBucketCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlDeleteBucketAnalyticsConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlDeleteBucketAnalyticsConfigurationCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlDeleteBucketAnalyticsConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlDeleteBucketCorsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlDeleteBucketCorsCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlDeleteBucketCorsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlDeleteBucketEncryptionCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlDeleteBucketEncryptionCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlDeleteBucketEncryptionCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlDeleteBucketIntelligentTieringConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlDeleteBucketIntelligentTieringConfigurationCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlDeleteBucketIntelligentTieringConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlDeleteBucketInventoryConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlDeleteBucketInventoryConfigurationCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlDeleteBucketInventoryConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlDeleteBucketLifecycleCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlDeleteBucketLifecycleCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlDeleteBucketLifecycleCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlDeleteBucketMetricsConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlDeleteBucketMetricsConfigurationCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlDeleteBucketMetricsConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlDeleteBucketOwnershipControlsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlDeleteBucketOwnershipControlsCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlDeleteBucketOwnershipControlsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlDeleteBucketPolicyCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlDeleteBucketPolicyCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlDeleteBucketPolicyCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlDeleteBucketReplicationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlDeleteBucketReplicationCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlDeleteBucketReplicationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlDeleteBucketTaggingCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlDeleteBucketTaggingCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlDeleteBucketTaggingCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlDeleteBucketWebsiteCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlDeleteBucketWebsiteCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlDeleteBucketWebsiteCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlDeleteObjectCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlDeleteObjectCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            DeleteMarker: undefined,\n            RequestCharged: undefined,\n            VersionId: undefined\n          };\n          if (output.headers[\"x-amz-delete-marker\"] !== undefined) {\n            contents.DeleteMarker = output.headers[\"x-amz-delete-marker\"] === \"true\";\n          }\n          if (output.headers[\"x-amz-version-id\"] !== undefined) {\n            contents.VersionId = output.headers[\"x-amz-version-id\"];\n          }\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlDeleteObjectCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlDeleteObjectsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlDeleteObjectsCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Deleted: undefined,\n            Errors: undefined,\n            RequestCharged: undefined\n          };\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          if (data.Deleted === \"\") {\n            contents.Deleted = [];\n          }\n          if (data[\"Deleted\"] !== undefined) {\n            contents.Deleted = deserializeAws_restXmlDeletedObjects(__getArrayIfSingleItem(data[\"Deleted\"]), context);\n          }\n          if (data.Error === \"\") {\n            contents.Errors = [];\n          }\n          if (data[\"Error\"] !== undefined) {\n            contents.Errors = deserializeAws_restXmlErrors(__getArrayIfSingleItem(data[\"Error\"]), context);\n          }\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlDeleteObjectsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlDeleteObjectTaggingCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlDeleteObjectTaggingCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            VersionId: undefined\n          };\n          if (output.headers[\"x-amz-version-id\"] !== undefined) {\n            contents.VersionId = output.headers[\"x-amz-version-id\"];\n          }\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlDeleteObjectTaggingCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlDeletePublicAccessBlockCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlDeletePublicAccessBlockCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlDeletePublicAccessBlockCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlGetBucketAccelerateConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlGetBucketAccelerateConfigurationCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Status: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          if (data[\"Status\"] !== undefined) {\n            contents.Status = data[\"Status\"];\n          }\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlGetBucketAccelerateConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlGetBucketAclCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlGetBucketAclCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Grants: undefined,\n            Owner: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          if (data.AccessControlList === \"\") {\n            contents.Grants = [];\n          }\n          if (data[\"AccessControlList\"] !== undefined && data[\"AccessControlList\"][\"Grant\"] !== undefined) {\n            contents.Grants = deserializeAws_restXmlGrants(__getArrayIfSingleItem(data[\"AccessControlList\"][\"Grant\"]), context);\n          }\n          if (data[\"Owner\"] !== undefined) {\n            contents.Owner = deserializeAws_restXmlOwner(data[\"Owner\"], context);\n          }\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlGetBucketAclCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlGetBucketAnalyticsConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlGetBucketAnalyticsConfigurationCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            AnalyticsConfiguration: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.AnalyticsConfiguration = deserializeAws_restXmlAnalyticsConfiguration(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlGetBucketAnalyticsConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlGetBucketCorsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlGetBucketCorsCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            CORSRules: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          if (data.CORSRule === \"\") {\n            contents.CORSRules = [];\n          }\n          if (data[\"CORSRule\"] !== undefined) {\n            contents.CORSRules = deserializeAws_restXmlCORSRules(__getArrayIfSingleItem(data[\"CORSRule\"]), context);\n          }\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlGetBucketCorsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlGetBucketEncryptionCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlGetBucketEncryptionCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ServerSideEncryptionConfiguration: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.ServerSideEncryptionConfiguration = deserializeAws_restXmlServerSideEncryptionConfiguration(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlGetBucketEncryptionCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlGetBucketIntelligentTieringConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlGetBucketIntelligentTieringConfigurationCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            IntelligentTieringConfiguration: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.IntelligentTieringConfiguration = deserializeAws_restXmlIntelligentTieringConfiguration(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlGetBucketIntelligentTieringConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlGetBucketInventoryConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlGetBucketInventoryConfigurationCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            InventoryConfiguration: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.InventoryConfiguration = deserializeAws_restXmlInventoryConfiguration(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlGetBucketInventoryConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlGetBucketLifecycleConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlGetBucketLifecycleConfigurationCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Rules: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          if (data.Rule === \"\") {\n            contents.Rules = [];\n          }\n          if (data[\"Rule\"] !== undefined) {\n            contents.Rules = deserializeAws_restXmlLifecycleRules(__getArrayIfSingleItem(data[\"Rule\"]), context);\n          }\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlGetBucketLifecycleConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlGetBucketLocationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlGetBucketLocationCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            LocationConstraint: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          if (data[\"LocationConstraint\"] !== undefined) {\n            contents.LocationConstraint = data[\"LocationConstraint\"];\n          }\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlGetBucketLocationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlGetBucketLoggingCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlGetBucketLoggingCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            LoggingEnabled: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          if (data[\"LoggingEnabled\"] !== undefined) {\n            contents.LoggingEnabled = deserializeAws_restXmlLoggingEnabled(data[\"LoggingEnabled\"], context);\n          }\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlGetBucketLoggingCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlGetBucketMetricsConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlGetBucketMetricsConfigurationCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            MetricsConfiguration: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.MetricsConfiguration = deserializeAws_restXmlMetricsConfiguration(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlGetBucketMetricsConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlGetBucketNotificationConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlGetBucketNotificationConfigurationCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            LambdaFunctionConfigurations: undefined,\n            QueueConfigurations: undefined,\n            TopicConfigurations: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          if (data.CloudFunctionConfiguration === \"\") {\n            contents.LambdaFunctionConfigurations = [];\n          }\n          if (data[\"CloudFunctionConfiguration\"] !== undefined) {\n            contents.LambdaFunctionConfigurations = deserializeAws_restXmlLambdaFunctionConfigurationList(__getArrayIfSingleItem(data[\"CloudFunctionConfiguration\"]), context);\n          }\n          if (data.QueueConfiguration === \"\") {\n            contents.QueueConfigurations = [];\n          }\n          if (data[\"QueueConfiguration\"] !== undefined) {\n            contents.QueueConfigurations = deserializeAws_restXmlQueueConfigurationList(__getArrayIfSingleItem(data[\"QueueConfiguration\"]), context);\n          }\n          if (data.TopicConfiguration === \"\") {\n            contents.TopicConfigurations = [];\n          }\n          if (data[\"TopicConfiguration\"] !== undefined) {\n            contents.TopicConfigurations = deserializeAws_restXmlTopicConfigurationList(__getArrayIfSingleItem(data[\"TopicConfiguration\"]), context);\n          }\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlGetBucketNotificationConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlGetBucketOwnershipControlsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlGetBucketOwnershipControlsCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            OwnershipControls: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.OwnershipControls = deserializeAws_restXmlOwnershipControls(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlGetBucketOwnershipControlsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlGetBucketPolicyCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlGetBucketPolicyCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Policy: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          if (data[\"Policy\"] !== undefined) {\n            contents.Policy = data[\"Policy\"];\n          }\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlGetBucketPolicyCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlGetBucketPolicyStatusCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlGetBucketPolicyStatusCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            PolicyStatus: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.PolicyStatus = deserializeAws_restXmlPolicyStatus(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlGetBucketPolicyStatusCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlGetBucketReplicationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlGetBucketReplicationCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ReplicationConfiguration: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.ReplicationConfiguration = deserializeAws_restXmlReplicationConfiguration(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlGetBucketReplicationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlGetBucketRequestPaymentCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlGetBucketRequestPaymentCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Payer: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          if (data[\"Payer\"] !== undefined) {\n            contents.Payer = data[\"Payer\"];\n          }\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlGetBucketRequestPaymentCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlGetBucketTaggingCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlGetBucketTaggingCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            TagSet: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          if (data.TagSet === \"\") {\n            contents.TagSet = [];\n          }\n          if (data[\"TagSet\"] !== undefined && data[\"TagSet\"][\"Tag\"] !== undefined) {\n            contents.TagSet = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(data[\"TagSet\"][\"Tag\"]), context);\n          }\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlGetBucketTaggingCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlGetBucketVersioningCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlGetBucketVersioningCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            MFADelete: undefined,\n            Status: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          if (data[\"MfaDelete\"] !== undefined) {\n            contents.MFADelete = data[\"MfaDelete\"];\n          }\n          if (data[\"Status\"] !== undefined) {\n            contents.Status = data[\"Status\"];\n          }\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlGetBucketVersioningCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlGetBucketWebsiteCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlGetBucketWebsiteCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ErrorDocument: undefined,\n            IndexDocument: undefined,\n            RedirectAllRequestsTo: undefined,\n            RoutingRules: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          if (data[\"ErrorDocument\"] !== undefined) {\n            contents.ErrorDocument = deserializeAws_restXmlErrorDocument(data[\"ErrorDocument\"], context);\n          }\n          if (data[\"IndexDocument\"] !== undefined) {\n            contents.IndexDocument = deserializeAws_restXmlIndexDocument(data[\"IndexDocument\"], context);\n          }\n          if (data[\"RedirectAllRequestsTo\"] !== undefined) {\n            contents.RedirectAllRequestsTo = deserializeAws_restXmlRedirectAllRequestsTo(data[\"RedirectAllRequestsTo\"], context);\n          }\n          if (data.RoutingRules === \"\") {\n            contents.RoutingRules = [];\n          }\n          if (data[\"RoutingRules\"] !== undefined && data[\"RoutingRules\"][\"RoutingRule\"] !== undefined) {\n            contents.RoutingRules = deserializeAws_restXmlRoutingRules(__getArrayIfSingleItem(data[\"RoutingRules\"][\"RoutingRule\"]), context);\n          }\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlGetBucketWebsiteCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlGetObjectCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return [2 /*return*/, deserializeAws_restXmlGetObjectCommandError(output, context)];\n      }\n      contents = {\n        $metadata: deserializeMetadata(output),\n        AcceptRanges: undefined,\n        Body: undefined,\n        BucketKeyEnabled: undefined,\n        CacheControl: undefined,\n        ContentDisposition: undefined,\n        ContentEncoding: undefined,\n        ContentLanguage: undefined,\n        ContentLength: undefined,\n        ContentRange: undefined,\n        ContentType: undefined,\n        DeleteMarker: undefined,\n        ETag: undefined,\n        Expiration: undefined,\n        Expires: undefined,\n        LastModified: undefined,\n        Metadata: undefined,\n        MissingMeta: undefined,\n        ObjectLockLegalHoldStatus: undefined,\n        ObjectLockMode: undefined,\n        ObjectLockRetainUntilDate: undefined,\n        PartsCount: undefined,\n        ReplicationStatus: undefined,\n        RequestCharged: undefined,\n        Restore: undefined,\n        SSECustomerAlgorithm: undefined,\n        SSECustomerKeyMD5: undefined,\n        SSEKMSKeyId: undefined,\n        ServerSideEncryption: undefined,\n        StorageClass: undefined,\n        TagCount: undefined,\n        VersionId: undefined,\n        WebsiteRedirectLocation: undefined\n      };\n      if (output.headers[\"x-amz-delete-marker\"] !== undefined) {\n        contents.DeleteMarker = output.headers[\"x-amz-delete-marker\"] === \"true\";\n      }\n      if (output.headers[\"accept-ranges\"] !== undefined) {\n        contents.AcceptRanges = output.headers[\"accept-ranges\"];\n      }\n      if (output.headers[\"x-amz-expiration\"] !== undefined) {\n        contents.Expiration = output.headers[\"x-amz-expiration\"];\n      }\n      if (output.headers[\"x-amz-restore\"] !== undefined) {\n        contents.Restore = output.headers[\"x-amz-restore\"];\n      }\n      if (output.headers[\"last-modified\"] !== undefined) {\n        contents.LastModified = new Date(output.headers[\"last-modified\"]);\n      }\n      if (output.headers[\"content-length\"] !== undefined) {\n        contents.ContentLength = parseInt(output.headers[\"content-length\"], 10);\n      }\n      if (output.headers[\"etag\"] !== undefined) {\n        contents.ETag = output.headers[\"etag\"];\n      }\n      if (output.headers[\"x-amz-missing-meta\"] !== undefined) {\n        contents.MissingMeta = parseInt(output.headers[\"x-amz-missing-meta\"], 10);\n      }\n      if (output.headers[\"x-amz-version-id\"] !== undefined) {\n        contents.VersionId = output.headers[\"x-amz-version-id\"];\n      }\n      if (output.headers[\"cache-control\"] !== undefined) {\n        contents.CacheControl = output.headers[\"cache-control\"];\n      }\n      if (output.headers[\"content-disposition\"] !== undefined) {\n        contents.ContentDisposition = output.headers[\"content-disposition\"];\n      }\n      if (output.headers[\"content-encoding\"] !== undefined) {\n        contents.ContentEncoding = output.headers[\"content-encoding\"];\n      }\n      if (output.headers[\"content-language\"] !== undefined) {\n        contents.ContentLanguage = output.headers[\"content-language\"];\n      }\n      if (output.headers[\"content-range\"] !== undefined) {\n        contents.ContentRange = output.headers[\"content-range\"];\n      }\n      if (output.headers[\"content-type\"] !== undefined) {\n        contents.ContentType = output.headers[\"content-type\"];\n      }\n      if (output.headers[\"expires\"] !== undefined) {\n        contents.Expires = new Date(output.headers[\"expires\"]);\n      }\n      if (output.headers[\"x-amz-website-redirect-location\"] !== undefined) {\n        contents.WebsiteRedirectLocation = output.headers[\"x-amz-website-redirect-location\"];\n      }\n      if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n        contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n      }\n      if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n        contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n      }\n      if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n        contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n      }\n      if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n        contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n      }\n      if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n        contents.BucketKeyEnabled = output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] === \"true\";\n      }\n      if (output.headers[\"x-amz-storage-class\"] !== undefined) {\n        contents.StorageClass = output.headers[\"x-amz-storage-class\"];\n      }\n      if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n        contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n      }\n      if (output.headers[\"x-amz-replication-status\"] !== undefined) {\n        contents.ReplicationStatus = output.headers[\"x-amz-replication-status\"];\n      }\n      if (output.headers[\"x-amz-mp-parts-count\"] !== undefined) {\n        contents.PartsCount = parseInt(output.headers[\"x-amz-mp-parts-count\"], 10);\n      }\n      if (output.headers[\"x-amz-tagging-count\"] !== undefined) {\n        contents.TagCount = parseInt(output.headers[\"x-amz-tagging-count\"], 10);\n      }\n      if (output.headers[\"x-amz-object-lock-mode\"] !== undefined) {\n        contents.ObjectLockMode = output.headers[\"x-amz-object-lock-mode\"];\n      }\n      if (output.headers[\"x-amz-object-lock-retain-until-date\"] !== undefined) {\n        contents.ObjectLockRetainUntilDate = new Date(output.headers[\"x-amz-object-lock-retain-until-date\"]);\n      }\n      if (output.headers[\"x-amz-object-lock-legal-hold\"] !== undefined) {\n        contents.ObjectLockLegalHoldStatus = output.headers[\"x-amz-object-lock-legal-hold\"];\n      }\n      Object.keys(output.headers).forEach(function (header) {\n        if (contents.Metadata === undefined) {\n          contents.Metadata = {};\n        }\n        if (header.startsWith(\"x-amz-meta-\")) {\n          contents.Metadata[header.substring(11)] = output.headers[header];\n        }\n      });\n      data = output.body;\n      contents.Body = data;\n      return [2 /*return*/, Promise.resolve(contents)];\n    });\n  });\n};\nvar deserializeAws_restXmlGetObjectCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;\n    var _e;\n    return __generator(this, function (_f) {\n      switch (_f.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _e = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidObjectState\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.s3#InvalidObjectState\":\n              return [3 /*break*/, 2];\n            case \"NoSuchKey\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.s3#NoSuchKey\":\n              return [3 /*break*/, 4];\n          }\n          return [3 /*break*/, 6];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restXmlInvalidObjectStateResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 7];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restXmlNoSuchKeyResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 7];\n        case 6:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _f.label = 7;\n        case 7:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlGetObjectAclCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlGetObjectAclCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Grants: undefined,\n            Owner: undefined,\n            RequestCharged: undefined\n          };\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          if (data.AccessControlList === \"\") {\n            contents.Grants = [];\n          }\n          if (data[\"AccessControlList\"] !== undefined && data[\"AccessControlList\"][\"Grant\"] !== undefined) {\n            contents.Grants = deserializeAws_restXmlGrants(__getArrayIfSingleItem(data[\"AccessControlList\"][\"Grant\"]), context);\n          }\n          if (data[\"Owner\"] !== undefined) {\n            contents.Owner = deserializeAws_restXmlOwner(data[\"Owner\"], context);\n          }\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlGetObjectAclCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;\n    var _d;\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _d = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"NoSuchKey\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.s3#NoSuchKey\":\n              return [3 /*break*/, 2];\n          }\n          return [3 /*break*/, 4];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restXmlNoSuchKeyResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 5];\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlGetObjectLegalHoldCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlGetObjectLegalHoldCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            LegalHold: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.LegalHold = deserializeAws_restXmlObjectLockLegalHold(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlGetObjectLegalHoldCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlGetObjectLockConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlGetObjectLockConfigurationCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ObjectLockConfiguration: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.ObjectLockConfiguration = deserializeAws_restXmlObjectLockConfiguration(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlGetObjectLockConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlGetObjectRetentionCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlGetObjectRetentionCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Retention: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.Retention = deserializeAws_restXmlObjectLockRetention(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlGetObjectRetentionCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlGetObjectTaggingCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlGetObjectTaggingCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            TagSet: undefined,\n            VersionId: undefined\n          };\n          if (output.headers[\"x-amz-version-id\"] !== undefined) {\n            contents.VersionId = output.headers[\"x-amz-version-id\"];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          if (data.TagSet === \"\") {\n            contents.TagSet = [];\n          }\n          if (data[\"TagSet\"] !== undefined && data[\"TagSet\"][\"Tag\"] !== undefined) {\n            contents.TagSet = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(data[\"TagSet\"][\"Tag\"]), context);\n          }\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlGetObjectTaggingCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlGetObjectTorrentCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return [2 /*return*/, deserializeAws_restXmlGetObjectTorrentCommandError(output, context)];\n      }\n      contents = {\n        $metadata: deserializeMetadata(output),\n        Body: undefined,\n        RequestCharged: undefined\n      };\n      if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n        contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n      }\n      data = output.body;\n      contents.Body = data;\n      return [2 /*return*/, Promise.resolve(contents)];\n    });\n  });\n};\nvar deserializeAws_restXmlGetObjectTorrentCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlGetPublicAccessBlockCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlGetPublicAccessBlockCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            PublicAccessBlockConfiguration: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.PublicAccessBlockConfiguration = deserializeAws_restXmlPublicAccessBlockConfiguration(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlGetPublicAccessBlockCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlHeadBucketCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlHeadBucketCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlHeadBucketCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;\n    var _d;\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _d = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"NoSuchBucket\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.s3#NoSuchBucket\":\n              return [3 /*break*/, 2];\n          }\n          return [3 /*break*/, 4];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restXmlNoSuchBucketResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 5];\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlHeadObjectCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlHeadObjectCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            AcceptRanges: undefined,\n            ArchiveStatus: undefined,\n            BucketKeyEnabled: undefined,\n            CacheControl: undefined,\n            ContentDisposition: undefined,\n            ContentEncoding: undefined,\n            ContentLanguage: undefined,\n            ContentLength: undefined,\n            ContentType: undefined,\n            DeleteMarker: undefined,\n            ETag: undefined,\n            Expiration: undefined,\n            Expires: undefined,\n            LastModified: undefined,\n            Metadata: undefined,\n            MissingMeta: undefined,\n            ObjectLockLegalHoldStatus: undefined,\n            ObjectLockMode: undefined,\n            ObjectLockRetainUntilDate: undefined,\n            PartsCount: undefined,\n            ReplicationStatus: undefined,\n            RequestCharged: undefined,\n            Restore: undefined,\n            SSECustomerAlgorithm: undefined,\n            SSECustomerKeyMD5: undefined,\n            SSEKMSKeyId: undefined,\n            ServerSideEncryption: undefined,\n            StorageClass: undefined,\n            VersionId: undefined,\n            WebsiteRedirectLocation: undefined\n          };\n          if (output.headers[\"x-amz-delete-marker\"] !== undefined) {\n            contents.DeleteMarker = output.headers[\"x-amz-delete-marker\"] === \"true\";\n          }\n          if (output.headers[\"accept-ranges\"] !== undefined) {\n            contents.AcceptRanges = output.headers[\"accept-ranges\"];\n          }\n          if (output.headers[\"x-amz-expiration\"] !== undefined) {\n            contents.Expiration = output.headers[\"x-amz-expiration\"];\n          }\n          if (output.headers[\"x-amz-restore\"] !== undefined) {\n            contents.Restore = output.headers[\"x-amz-restore\"];\n          }\n          if (output.headers[\"x-amz-archive-status\"] !== undefined) {\n            contents.ArchiveStatus = output.headers[\"x-amz-archive-status\"];\n          }\n          if (output.headers[\"last-modified\"] !== undefined) {\n            contents.LastModified = new Date(output.headers[\"last-modified\"]);\n          }\n          if (output.headers[\"content-length\"] !== undefined) {\n            contents.ContentLength = parseInt(output.headers[\"content-length\"], 10);\n          }\n          if (output.headers[\"etag\"] !== undefined) {\n            contents.ETag = output.headers[\"etag\"];\n          }\n          if (output.headers[\"x-amz-missing-meta\"] !== undefined) {\n            contents.MissingMeta = parseInt(output.headers[\"x-amz-missing-meta\"], 10);\n          }\n          if (output.headers[\"x-amz-version-id\"] !== undefined) {\n            contents.VersionId = output.headers[\"x-amz-version-id\"];\n          }\n          if (output.headers[\"cache-control\"] !== undefined) {\n            contents.CacheControl = output.headers[\"cache-control\"];\n          }\n          if (output.headers[\"content-disposition\"] !== undefined) {\n            contents.ContentDisposition = output.headers[\"content-disposition\"];\n          }\n          if (output.headers[\"content-encoding\"] !== undefined) {\n            contents.ContentEncoding = output.headers[\"content-encoding\"];\n          }\n          if (output.headers[\"content-language\"] !== undefined) {\n            contents.ContentLanguage = output.headers[\"content-language\"];\n          }\n          if (output.headers[\"content-type\"] !== undefined) {\n            contents.ContentType = output.headers[\"content-type\"];\n          }\n          if (output.headers[\"expires\"] !== undefined) {\n            contents.Expires = new Date(output.headers[\"expires\"]);\n          }\n          if (output.headers[\"x-amz-website-redirect-location\"] !== undefined) {\n            contents.WebsiteRedirectLocation = output.headers[\"x-amz-website-redirect-location\"];\n          }\n          if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n            contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n          }\n          if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n            contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n          }\n          if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n            contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n          }\n          if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n            contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n          }\n          if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n            contents.BucketKeyEnabled = output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] === \"true\";\n          }\n          if (output.headers[\"x-amz-storage-class\"] !== undefined) {\n            contents.StorageClass = output.headers[\"x-amz-storage-class\"];\n          }\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n          if (output.headers[\"x-amz-replication-status\"] !== undefined) {\n            contents.ReplicationStatus = output.headers[\"x-amz-replication-status\"];\n          }\n          if (output.headers[\"x-amz-mp-parts-count\"] !== undefined) {\n            contents.PartsCount = parseInt(output.headers[\"x-amz-mp-parts-count\"], 10);\n          }\n          if (output.headers[\"x-amz-object-lock-mode\"] !== undefined) {\n            contents.ObjectLockMode = output.headers[\"x-amz-object-lock-mode\"];\n          }\n          if (output.headers[\"x-amz-object-lock-retain-until-date\"] !== undefined) {\n            contents.ObjectLockRetainUntilDate = new Date(output.headers[\"x-amz-object-lock-retain-until-date\"]);\n          }\n          if (output.headers[\"x-amz-object-lock-legal-hold\"] !== undefined) {\n            contents.ObjectLockLegalHoldStatus = output.headers[\"x-amz-object-lock-legal-hold\"];\n          }\n          Object.keys(output.headers).forEach(function (header) {\n            if (contents.Metadata === undefined) {\n              contents.Metadata = {};\n            }\n            if (header.startsWith(\"x-amz-meta-\")) {\n              contents.Metadata[header.substring(11)] = output.headers[header];\n            }\n          });\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlHeadObjectCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;\n    var _d;\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _d = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"NoSuchKey\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.s3#NoSuchKey\":\n              return [3 /*break*/, 2];\n          }\n          return [3 /*break*/, 4];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restXmlNoSuchKeyResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 5];\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlListBucketAnalyticsConfigurationsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlListBucketAnalyticsConfigurationsCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            AnalyticsConfigurationList: undefined,\n            ContinuationToken: undefined,\n            IsTruncated: undefined,\n            NextContinuationToken: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          if (data.AnalyticsConfiguration === \"\") {\n            contents.AnalyticsConfigurationList = [];\n          }\n          if (data[\"AnalyticsConfiguration\"] !== undefined) {\n            contents.AnalyticsConfigurationList = deserializeAws_restXmlAnalyticsConfigurationList(__getArrayIfSingleItem(data[\"AnalyticsConfiguration\"]), context);\n          }\n          if (data[\"ContinuationToken\"] !== undefined) {\n            contents.ContinuationToken = data[\"ContinuationToken\"];\n          }\n          if (data[\"IsTruncated\"] !== undefined) {\n            contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n          }\n          if (data[\"NextContinuationToken\"] !== undefined) {\n            contents.NextContinuationToken = data[\"NextContinuationToken\"];\n          }\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlListBucketAnalyticsConfigurationsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlListBucketIntelligentTieringConfigurationsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlListBucketIntelligentTieringConfigurationsCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ContinuationToken: undefined,\n            IntelligentTieringConfigurationList: undefined,\n            IsTruncated: undefined,\n            NextContinuationToken: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          if (data[\"ContinuationToken\"] !== undefined) {\n            contents.ContinuationToken = data[\"ContinuationToken\"];\n          }\n          if (data.IntelligentTieringConfiguration === \"\") {\n            contents.IntelligentTieringConfigurationList = [];\n          }\n          if (data[\"IntelligentTieringConfiguration\"] !== undefined) {\n            contents.IntelligentTieringConfigurationList = deserializeAws_restXmlIntelligentTieringConfigurationList(__getArrayIfSingleItem(data[\"IntelligentTieringConfiguration\"]), context);\n          }\n          if (data[\"IsTruncated\"] !== undefined) {\n            contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n          }\n          if (data[\"NextContinuationToken\"] !== undefined) {\n            contents.NextContinuationToken = data[\"NextContinuationToken\"];\n          }\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlListBucketIntelligentTieringConfigurationsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlListBucketInventoryConfigurationsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlListBucketInventoryConfigurationsCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ContinuationToken: undefined,\n            InventoryConfigurationList: undefined,\n            IsTruncated: undefined,\n            NextContinuationToken: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          if (data[\"ContinuationToken\"] !== undefined) {\n            contents.ContinuationToken = data[\"ContinuationToken\"];\n          }\n          if (data.InventoryConfiguration === \"\") {\n            contents.InventoryConfigurationList = [];\n          }\n          if (data[\"InventoryConfiguration\"] !== undefined) {\n            contents.InventoryConfigurationList = deserializeAws_restXmlInventoryConfigurationList(__getArrayIfSingleItem(data[\"InventoryConfiguration\"]), context);\n          }\n          if (data[\"IsTruncated\"] !== undefined) {\n            contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n          }\n          if (data[\"NextContinuationToken\"] !== undefined) {\n            contents.NextContinuationToken = data[\"NextContinuationToken\"];\n          }\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlListBucketInventoryConfigurationsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlListBucketMetricsConfigurationsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlListBucketMetricsConfigurationsCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ContinuationToken: undefined,\n            IsTruncated: undefined,\n            MetricsConfigurationList: undefined,\n            NextContinuationToken: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          if (data[\"ContinuationToken\"] !== undefined) {\n            contents.ContinuationToken = data[\"ContinuationToken\"];\n          }\n          if (data[\"IsTruncated\"] !== undefined) {\n            contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n          }\n          if (data.MetricsConfiguration === \"\") {\n            contents.MetricsConfigurationList = [];\n          }\n          if (data[\"MetricsConfiguration\"] !== undefined) {\n            contents.MetricsConfigurationList = deserializeAws_restXmlMetricsConfigurationList(__getArrayIfSingleItem(data[\"MetricsConfiguration\"]), context);\n          }\n          if (data[\"NextContinuationToken\"] !== undefined) {\n            contents.NextContinuationToken = data[\"NextContinuationToken\"];\n          }\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlListBucketMetricsConfigurationsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlListBucketsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlListBucketsCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Buckets: undefined,\n            Owner: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          if (data.Buckets === \"\") {\n            contents.Buckets = [];\n          }\n          if (data[\"Buckets\"] !== undefined && data[\"Buckets\"][\"Bucket\"] !== undefined) {\n            contents.Buckets = deserializeAws_restXmlBuckets(__getArrayIfSingleItem(data[\"Buckets\"][\"Bucket\"]), context);\n          }\n          if (data[\"Owner\"] !== undefined) {\n            contents.Owner = deserializeAws_restXmlOwner(data[\"Owner\"], context);\n          }\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlListBucketsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlListMultipartUploadsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlListMultipartUploadsCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Bucket: undefined,\n            CommonPrefixes: undefined,\n            Delimiter: undefined,\n            EncodingType: undefined,\n            IsTruncated: undefined,\n            KeyMarker: undefined,\n            MaxUploads: undefined,\n            NextKeyMarker: undefined,\n            NextUploadIdMarker: undefined,\n            Prefix: undefined,\n            UploadIdMarker: undefined,\n            Uploads: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          if (data[\"Bucket\"] !== undefined) {\n            contents.Bucket = data[\"Bucket\"];\n          }\n          if (data.CommonPrefixes === \"\") {\n            contents.CommonPrefixes = [];\n          }\n          if (data[\"CommonPrefixes\"] !== undefined) {\n            contents.CommonPrefixes = deserializeAws_restXmlCommonPrefixList(__getArrayIfSingleItem(data[\"CommonPrefixes\"]), context);\n          }\n          if (data[\"Delimiter\"] !== undefined) {\n            contents.Delimiter = data[\"Delimiter\"];\n          }\n          if (data[\"EncodingType\"] !== undefined) {\n            contents.EncodingType = data[\"EncodingType\"];\n          }\n          if (data[\"IsTruncated\"] !== undefined) {\n            contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n          }\n          if (data[\"KeyMarker\"] !== undefined) {\n            contents.KeyMarker = data[\"KeyMarker\"];\n          }\n          if (data[\"MaxUploads\"] !== undefined) {\n            contents.MaxUploads = parseInt(data[\"MaxUploads\"]);\n          }\n          if (data[\"NextKeyMarker\"] !== undefined) {\n            contents.NextKeyMarker = data[\"NextKeyMarker\"];\n          }\n          if (data[\"NextUploadIdMarker\"] !== undefined) {\n            contents.NextUploadIdMarker = data[\"NextUploadIdMarker\"];\n          }\n          if (data[\"Prefix\"] !== undefined) {\n            contents.Prefix = data[\"Prefix\"];\n          }\n          if (data[\"UploadIdMarker\"] !== undefined) {\n            contents.UploadIdMarker = data[\"UploadIdMarker\"];\n          }\n          if (data.Upload === \"\") {\n            contents.Uploads = [];\n          }\n          if (data[\"Upload\"] !== undefined) {\n            contents.Uploads = deserializeAws_restXmlMultipartUploadList(__getArrayIfSingleItem(data[\"Upload\"]), context);\n          }\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlListMultipartUploadsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlListObjectsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlListObjectsCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            CommonPrefixes: undefined,\n            Contents: undefined,\n            Delimiter: undefined,\n            EncodingType: undefined,\n            IsTruncated: undefined,\n            Marker: undefined,\n            MaxKeys: undefined,\n            Name: undefined,\n            NextMarker: undefined,\n            Prefix: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          if (data.CommonPrefixes === \"\") {\n            contents.CommonPrefixes = [];\n          }\n          if (data[\"CommonPrefixes\"] !== undefined) {\n            contents.CommonPrefixes = deserializeAws_restXmlCommonPrefixList(__getArrayIfSingleItem(data[\"CommonPrefixes\"]), context);\n          }\n          if (data.Contents === \"\") {\n            contents.Contents = [];\n          }\n          if (data[\"Contents\"] !== undefined) {\n            contents.Contents = deserializeAws_restXmlObjectList(__getArrayIfSingleItem(data[\"Contents\"]), context);\n          }\n          if (data[\"Delimiter\"] !== undefined) {\n            contents.Delimiter = data[\"Delimiter\"];\n          }\n          if (data[\"EncodingType\"] !== undefined) {\n            contents.EncodingType = data[\"EncodingType\"];\n          }\n          if (data[\"IsTruncated\"] !== undefined) {\n            contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n          }\n          if (data[\"Marker\"] !== undefined) {\n            contents.Marker = data[\"Marker\"];\n          }\n          if (data[\"MaxKeys\"] !== undefined) {\n            contents.MaxKeys = parseInt(data[\"MaxKeys\"]);\n          }\n          if (data[\"Name\"] !== undefined) {\n            contents.Name = data[\"Name\"];\n          }\n          if (data[\"NextMarker\"] !== undefined) {\n            contents.NextMarker = data[\"NextMarker\"];\n          }\n          if (data[\"Prefix\"] !== undefined) {\n            contents.Prefix = data[\"Prefix\"];\n          }\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlListObjectsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;\n    var _d;\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _d = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"NoSuchBucket\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.s3#NoSuchBucket\":\n              return [3 /*break*/, 2];\n          }\n          return [3 /*break*/, 4];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restXmlNoSuchBucketResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 5];\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlListObjectsV2Command = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlListObjectsV2CommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            CommonPrefixes: undefined,\n            Contents: undefined,\n            ContinuationToken: undefined,\n            Delimiter: undefined,\n            EncodingType: undefined,\n            IsTruncated: undefined,\n            KeyCount: undefined,\n            MaxKeys: undefined,\n            Name: undefined,\n            NextContinuationToken: undefined,\n            Prefix: undefined,\n            StartAfter: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          if (data.CommonPrefixes === \"\") {\n            contents.CommonPrefixes = [];\n          }\n          if (data[\"CommonPrefixes\"] !== undefined) {\n            contents.CommonPrefixes = deserializeAws_restXmlCommonPrefixList(__getArrayIfSingleItem(data[\"CommonPrefixes\"]), context);\n          }\n          if (data.Contents === \"\") {\n            contents.Contents = [];\n          }\n          if (data[\"Contents\"] !== undefined) {\n            contents.Contents = deserializeAws_restXmlObjectList(__getArrayIfSingleItem(data[\"Contents\"]), context);\n          }\n          if (data[\"ContinuationToken\"] !== undefined) {\n            contents.ContinuationToken = data[\"ContinuationToken\"];\n          }\n          if (data[\"Delimiter\"] !== undefined) {\n            contents.Delimiter = data[\"Delimiter\"];\n          }\n          if (data[\"EncodingType\"] !== undefined) {\n            contents.EncodingType = data[\"EncodingType\"];\n          }\n          if (data[\"IsTruncated\"] !== undefined) {\n            contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n          }\n          if (data[\"KeyCount\"] !== undefined) {\n            contents.KeyCount = parseInt(data[\"KeyCount\"]);\n          }\n          if (data[\"MaxKeys\"] !== undefined) {\n            contents.MaxKeys = parseInt(data[\"MaxKeys\"]);\n          }\n          if (data[\"Name\"] !== undefined) {\n            contents.Name = data[\"Name\"];\n          }\n          if (data[\"NextContinuationToken\"] !== undefined) {\n            contents.NextContinuationToken = data[\"NextContinuationToken\"];\n          }\n          if (data[\"Prefix\"] !== undefined) {\n            contents.Prefix = data[\"Prefix\"];\n          }\n          if (data[\"StartAfter\"] !== undefined) {\n            contents.StartAfter = data[\"StartAfter\"];\n          }\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlListObjectsV2CommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;\n    var _d;\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _d = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"NoSuchBucket\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.s3#NoSuchBucket\":\n              return [3 /*break*/, 2];\n          }\n          return [3 /*break*/, 4];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restXmlNoSuchBucketResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 5];\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlListObjectVersionsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlListObjectVersionsCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            CommonPrefixes: undefined,\n            DeleteMarkers: undefined,\n            Delimiter: undefined,\n            EncodingType: undefined,\n            IsTruncated: undefined,\n            KeyMarker: undefined,\n            MaxKeys: undefined,\n            Name: undefined,\n            NextKeyMarker: undefined,\n            NextVersionIdMarker: undefined,\n            Prefix: undefined,\n            VersionIdMarker: undefined,\n            Versions: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          if (data.CommonPrefixes === \"\") {\n            contents.CommonPrefixes = [];\n          }\n          if (data[\"CommonPrefixes\"] !== undefined) {\n            contents.CommonPrefixes = deserializeAws_restXmlCommonPrefixList(__getArrayIfSingleItem(data[\"CommonPrefixes\"]), context);\n          }\n          if (data.DeleteMarker === \"\") {\n            contents.DeleteMarkers = [];\n          }\n          if (data[\"DeleteMarker\"] !== undefined) {\n            contents.DeleteMarkers = deserializeAws_restXmlDeleteMarkers(__getArrayIfSingleItem(data[\"DeleteMarker\"]), context);\n          }\n          if (data[\"Delimiter\"] !== undefined) {\n            contents.Delimiter = data[\"Delimiter\"];\n          }\n          if (data[\"EncodingType\"] !== undefined) {\n            contents.EncodingType = data[\"EncodingType\"];\n          }\n          if (data[\"IsTruncated\"] !== undefined) {\n            contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n          }\n          if (data[\"KeyMarker\"] !== undefined) {\n            contents.KeyMarker = data[\"KeyMarker\"];\n          }\n          if (data[\"MaxKeys\"] !== undefined) {\n            contents.MaxKeys = parseInt(data[\"MaxKeys\"]);\n          }\n          if (data[\"Name\"] !== undefined) {\n            contents.Name = data[\"Name\"];\n          }\n          if (data[\"NextKeyMarker\"] !== undefined) {\n            contents.NextKeyMarker = data[\"NextKeyMarker\"];\n          }\n          if (data[\"NextVersionIdMarker\"] !== undefined) {\n            contents.NextVersionIdMarker = data[\"NextVersionIdMarker\"];\n          }\n          if (data[\"Prefix\"] !== undefined) {\n            contents.Prefix = data[\"Prefix\"];\n          }\n          if (data[\"VersionIdMarker\"] !== undefined) {\n            contents.VersionIdMarker = data[\"VersionIdMarker\"];\n          }\n          if (data.Version === \"\") {\n            contents.Versions = [];\n          }\n          if (data[\"Version\"] !== undefined) {\n            contents.Versions = deserializeAws_restXmlObjectVersionList(__getArrayIfSingleItem(data[\"Version\"]), context);\n          }\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlListObjectVersionsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlListPartsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlListPartsCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            AbortDate: undefined,\n            AbortRuleId: undefined,\n            Bucket: undefined,\n            Initiator: undefined,\n            IsTruncated: undefined,\n            Key: undefined,\n            MaxParts: undefined,\n            NextPartNumberMarker: undefined,\n            Owner: undefined,\n            PartNumberMarker: undefined,\n            Parts: undefined,\n            RequestCharged: undefined,\n            StorageClass: undefined,\n            UploadId: undefined\n          };\n          if (output.headers[\"x-amz-abort-date\"] !== undefined) {\n            contents.AbortDate = new Date(output.headers[\"x-amz-abort-date\"]);\n          }\n          if (output.headers[\"x-amz-abort-rule-id\"] !== undefined) {\n            contents.AbortRuleId = output.headers[\"x-amz-abort-rule-id\"];\n          }\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          if (data[\"Bucket\"] !== undefined) {\n            contents.Bucket = data[\"Bucket\"];\n          }\n          if (data[\"Initiator\"] !== undefined) {\n            contents.Initiator = deserializeAws_restXmlInitiator(data[\"Initiator\"], context);\n          }\n          if (data[\"IsTruncated\"] !== undefined) {\n            contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n          }\n          if (data[\"Key\"] !== undefined) {\n            contents.Key = data[\"Key\"];\n          }\n          if (data[\"MaxParts\"] !== undefined) {\n            contents.MaxParts = parseInt(data[\"MaxParts\"]);\n          }\n          if (data[\"NextPartNumberMarker\"] !== undefined) {\n            contents.NextPartNumberMarker = data[\"NextPartNumberMarker\"];\n          }\n          if (data[\"Owner\"] !== undefined) {\n            contents.Owner = deserializeAws_restXmlOwner(data[\"Owner\"], context);\n          }\n          if (data[\"PartNumberMarker\"] !== undefined) {\n            contents.PartNumberMarker = data[\"PartNumberMarker\"];\n          }\n          if (data.Part === \"\") {\n            contents.Parts = [];\n          }\n          if (data[\"Part\"] !== undefined) {\n            contents.Parts = deserializeAws_restXmlParts(__getArrayIfSingleItem(data[\"Part\"]), context);\n          }\n          if (data[\"StorageClass\"] !== undefined) {\n            contents.StorageClass = data[\"StorageClass\"];\n          }\n          if (data[\"UploadId\"] !== undefined) {\n            contents.UploadId = data[\"UploadId\"];\n          }\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlListPartsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlPutBucketAccelerateConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlPutBucketAccelerateConfigurationCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlPutBucketAccelerateConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlPutBucketAclCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlPutBucketAclCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlPutBucketAclCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlPutBucketAnalyticsConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlPutBucketAnalyticsConfigurationCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlPutBucketAnalyticsConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlPutBucketCorsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlPutBucketCorsCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlPutBucketCorsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlPutBucketEncryptionCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlPutBucketEncryptionCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlPutBucketEncryptionCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlPutBucketIntelligentTieringConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlPutBucketIntelligentTieringConfigurationCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlPutBucketIntelligentTieringConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlPutBucketInventoryConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlPutBucketInventoryConfigurationCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlPutBucketInventoryConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlPutBucketLifecycleConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlPutBucketLifecycleConfigurationCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlPutBucketLifecycleConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlPutBucketLoggingCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlPutBucketLoggingCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlPutBucketLoggingCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlPutBucketMetricsConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlPutBucketMetricsConfigurationCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlPutBucketMetricsConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlPutBucketNotificationConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlPutBucketNotificationConfigurationCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlPutBucketNotificationConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlPutBucketOwnershipControlsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlPutBucketOwnershipControlsCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlPutBucketOwnershipControlsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlPutBucketPolicyCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlPutBucketPolicyCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlPutBucketPolicyCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlPutBucketReplicationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlPutBucketReplicationCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlPutBucketReplicationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlPutBucketRequestPaymentCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlPutBucketRequestPaymentCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlPutBucketRequestPaymentCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlPutBucketTaggingCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlPutBucketTaggingCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlPutBucketTaggingCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlPutBucketVersioningCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlPutBucketVersioningCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlPutBucketVersioningCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlPutBucketWebsiteCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlPutBucketWebsiteCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlPutBucketWebsiteCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlPutObjectCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlPutObjectCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            BucketKeyEnabled: undefined,\n            ETag: undefined,\n            Expiration: undefined,\n            RequestCharged: undefined,\n            SSECustomerAlgorithm: undefined,\n            SSECustomerKeyMD5: undefined,\n            SSEKMSEncryptionContext: undefined,\n            SSEKMSKeyId: undefined,\n            ServerSideEncryption: undefined,\n            VersionId: undefined\n          };\n          if (output.headers[\"x-amz-expiration\"] !== undefined) {\n            contents.Expiration = output.headers[\"x-amz-expiration\"];\n          }\n          if (output.headers[\"etag\"] !== undefined) {\n            contents.ETag = output.headers[\"etag\"];\n          }\n          if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n            contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n          }\n          if (output.headers[\"x-amz-version-id\"] !== undefined) {\n            contents.VersionId = output.headers[\"x-amz-version-id\"];\n          }\n          if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n            contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n          }\n          if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n            contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n          }\n          if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n            contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n          }\n          if (output.headers[\"x-amz-server-side-encryption-context\"] !== undefined) {\n            contents.SSEKMSEncryptionContext = output.headers[\"x-amz-server-side-encryption-context\"];\n          }\n          if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n            contents.BucketKeyEnabled = output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] === \"true\";\n          }\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlPutObjectCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlPutObjectAclCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlPutObjectAclCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            RequestCharged: undefined\n          };\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlPutObjectAclCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;\n    var _d;\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _d = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"NoSuchKey\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.s3#NoSuchKey\":\n              return [3 /*break*/, 2];\n          }\n          return [3 /*break*/, 4];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restXmlNoSuchKeyResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 5];\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlPutObjectLegalHoldCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlPutObjectLegalHoldCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            RequestCharged: undefined\n          };\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlPutObjectLegalHoldCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlPutObjectLockConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlPutObjectLockConfigurationCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            RequestCharged: undefined\n          };\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlPutObjectLockConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlPutObjectRetentionCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlPutObjectRetentionCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            RequestCharged: undefined\n          };\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlPutObjectRetentionCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlPutObjectTaggingCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlPutObjectTaggingCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            VersionId: undefined\n          };\n          if (output.headers[\"x-amz-version-id\"] !== undefined) {\n            contents.VersionId = output.headers[\"x-amz-version-id\"];\n          }\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlPutObjectTaggingCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlPutPublicAccessBlockCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlPutPublicAccessBlockCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlPutPublicAccessBlockCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlRestoreObjectCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlRestoreObjectCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            RequestCharged: undefined,\n            RestoreOutputPath: undefined\n          };\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n          if (output.headers[\"x-amz-restore-output-path\"] !== undefined) {\n            contents.RestoreOutputPath = output.headers[\"x-amz-restore-output-path\"];\n          }\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlRestoreObjectCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;\n    var _d;\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _d = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"ObjectAlreadyInActiveTierError\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.s3#ObjectAlreadyInActiveTierError\":\n              return [3 /*break*/, 2];\n          }\n          return [3 /*break*/, 4];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restXmlObjectAlreadyInActiveTierErrorResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 5];\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlSelectObjectContentCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return [2 /*return*/, deserializeAws_restXmlSelectObjectContentCommandError(output, context)];\n      }\n      contents = {\n        $metadata: deserializeMetadata(output),\n        Payload: undefined\n      };\n      data = context.eventStreamMarshaller.deserialize(output.body, function (event) {\n        return __awaiter(void 0, void 0, void 0, function () {\n          var eventName, eventHeaders, eventMessage, parsedEvent;\n          var _a;\n          return __generator(this, function (_b) {\n            switch (_b.label) {\n              case 0:\n                eventName = Object.keys(event)[0];\n                eventHeaders = Object.entries(event[eventName].headers).reduce(function (accummulator, curr) {\n                  accummulator[curr[0]] = curr[1].value;\n                  return accummulator;\n                }, {});\n                eventMessage = {\n                  headers: eventHeaders,\n                  body: event[eventName].body\n                };\n                parsedEvent = (_a = {}, _a[eventName] = eventMessage, _a);\n                return [4 /*yield*/, deserializeAws_restXmlSelectObjectContentEventStream_event(parsedEvent, context)];\n              case 1:\n                return [2 /*return*/, _b.sent()];\n            }\n          });\n        });\n      });\n      contents.Payload = data;\n      return [2 /*return*/, Promise.resolve(contents)];\n    });\n  });\n};\nvar deserializeAws_restXmlSelectObjectContentCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlUploadPartCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlUploadPartCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            BucketKeyEnabled: undefined,\n            ETag: undefined,\n            RequestCharged: undefined,\n            SSECustomerAlgorithm: undefined,\n            SSECustomerKeyMD5: undefined,\n            SSEKMSKeyId: undefined,\n            ServerSideEncryption: undefined\n          };\n          if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n            contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n          }\n          if (output.headers[\"etag\"] !== undefined) {\n            contents.ETag = output.headers[\"etag\"];\n          }\n          if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n            contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n          }\n          if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n            contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n          }\n          if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n            contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n          }\n          if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n            contents.BucketKeyEnabled = output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] === \"true\";\n          }\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlUploadPartCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlUploadPartCopyCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlUploadPartCopyCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            BucketKeyEnabled: undefined,\n            CopyPartResult: undefined,\n            CopySourceVersionId: undefined,\n            RequestCharged: undefined,\n            SSECustomerAlgorithm: undefined,\n            SSECustomerKeyMD5: undefined,\n            SSEKMSKeyId: undefined,\n            ServerSideEncryption: undefined\n          };\n          if (output.headers[\"x-amz-copy-source-version-id\"] !== undefined) {\n            contents.CopySourceVersionId = output.headers[\"x-amz-copy-source-version-id\"];\n          }\n          if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n            contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n          }\n          if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n            contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n          }\n          if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n            contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n          }\n          if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n            contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n          }\n          if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n            contents.BucketKeyEnabled = output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] === \"true\";\n          }\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.CopyPartResult = deserializeAws_restXmlCopyPartResult(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlUploadPartCopyCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlSelectObjectContentEventStream_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, _b, _c, _d, _e;\n    return __generator(this, function (_f) {\n      switch (_f.label) {\n        case 0:\n          if (!(output[\"Records\"] !== undefined)) return [3 /*break*/, 2];\n          _a = {};\n          return [4 /*yield*/, deserializeAws_restXmlRecordsEvent_event(output[\"Records\"], context)];\n        case 1:\n          return [2 /*return*/, (_a.Records = _f.sent(), _a)];\n        case 2:\n          if (!(output[\"Stats\"] !== undefined)) return [3 /*break*/, 4];\n          _b = {};\n          return [4 /*yield*/, deserializeAws_restXmlStatsEvent_event(output[\"Stats\"], context)];\n        case 3:\n          return [2 /*return*/, (_b.Stats = _f.sent(), _b)];\n        case 4:\n          if (!(output[\"Progress\"] !== undefined)) return [3 /*break*/, 6];\n          _c = {};\n          return [4 /*yield*/, deserializeAws_restXmlProgressEvent_event(output[\"Progress\"], context)];\n        case 5:\n          return [2 /*return*/, (_c.Progress = _f.sent(), _c)];\n        case 6:\n          if (!(output[\"Cont\"] !== undefined)) return [3 /*break*/, 8];\n          _d = {};\n          return [4 /*yield*/, deserializeAws_restXmlContinuationEvent_event(output[\"Cont\"], context)];\n        case 7:\n          return [2 /*return*/, (_d.Cont = _f.sent(), _d)];\n        case 8:\n          if (!(output[\"End\"] !== undefined)) return [3 /*break*/, 10];\n          _e = {};\n          return [4 /*yield*/, deserializeAws_restXmlEndEvent_event(output[\"End\"], context)];\n        case 9:\n          return [2 /*return*/, (_e.End = _f.sent(), _e)];\n        case 10:\n          return [2 /*return*/, {\n            $unknown: output\n          }];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlContinuationEvent_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      contents = {};\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_restXmlEndEvent_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      contents = {};\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_restXmlProgressEvent_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, _a;\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          contents = {};\n          _a = contents;\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          _a.Details = _b.sent();\n          return [2 /*return*/, contents];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlRecordsEvent_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      contents = {};\n      contents.Payload = output.body;\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_restXmlStatsEvent_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, _a;\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          contents = {};\n          _a = contents;\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          _a.Details = _b.sent();\n          return [2 /*return*/, contents];\n      }\n    });\n  });\n};\nvar deserializeAws_restXmlBucketAlreadyExistsResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"BucketAlreadyExists\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      };\n      data = parsedOutput.body;\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_restXmlBucketAlreadyOwnedByYouResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"BucketAlreadyOwnedByYou\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      };\n      data = parsedOutput.body;\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_restXmlInvalidObjectStateResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"InvalidObjectState\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        AccessTier: undefined,\n        StorageClass: undefined\n      };\n      data = parsedOutput.body;\n      if (data[\"AccessTier\"] !== undefined) {\n        contents.AccessTier = data[\"AccessTier\"];\n      }\n      if (data[\"StorageClass\"] !== undefined) {\n        contents.StorageClass = data[\"StorageClass\"];\n      }\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_restXmlNoSuchBucketResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"NoSuchBucket\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      };\n      data = parsedOutput.body;\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_restXmlNoSuchKeyResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"NoSuchKey\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      };\n      data = parsedOutput.body;\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_restXmlNoSuchUploadResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"NoSuchUpload\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      };\n      data = parsedOutput.body;\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_restXmlObjectAlreadyInActiveTierErrorResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"ObjectAlreadyInActiveTierError\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      };\n      data = parsedOutput.body;\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_restXmlObjectNotInActiveTierErrorResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"ObjectNotInActiveTierError\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      };\n      data = parsedOutput.body;\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar serializeAws_restXmlAbortIncompleteMultipartUpload = function (input, context) {\n  var bodyNode = new __XmlNode(\"AbortIncompleteMultipartUpload\");\n  if (input.DaysAfterInitiation !== undefined && input.DaysAfterInitiation !== null) {\n    var node = new __XmlNode(\"DaysAfterInitiation\").addChildNode(new __XmlText(String(input.DaysAfterInitiation))).withName(\"DaysAfterInitiation\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlAccelerateConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"AccelerateConfiguration\");\n  if (input.Status !== undefined && input.Status !== null) {\n    var node = new __XmlNode(\"BucketAccelerateStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlAccessControlPolicy = function (input, context) {\n  var bodyNode = new __XmlNode(\"AccessControlPolicy\");\n  if (input.Grants !== undefined && input.Grants !== null) {\n    var nodes = serializeAws_restXmlGrants(input.Grants, context);\n    var containerNode_1 = new __XmlNode(\"AccessControlList\");\n    nodes.map(function (node) {\n      containerNode_1.addChildNode(node);\n    });\n    bodyNode.addChildNode(containerNode_1);\n  }\n  if (input.Owner !== undefined && input.Owner !== null) {\n    var node = serializeAws_restXmlOwner(input.Owner, context).withName(\"Owner\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlAccessControlTranslation = function (input, context) {\n  var bodyNode = new __XmlNode(\"AccessControlTranslation\");\n  if (input.Owner !== undefined && input.Owner !== null) {\n    var node = new __XmlNode(\"OwnerOverride\").addChildNode(new __XmlText(input.Owner)).withName(\"Owner\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlAllowedHeaders = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    var node = new __XmlNode(\"AllowedHeader\").addChildNode(new __XmlText(entry));\n    return node.withName(\"member\");\n  });\n};\nvar serializeAws_restXmlAllowedMethods = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    var node = new __XmlNode(\"AllowedMethod\").addChildNode(new __XmlText(entry));\n    return node.withName(\"member\");\n  });\n};\nvar serializeAws_restXmlAllowedOrigins = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    var node = new __XmlNode(\"AllowedOrigin\").addChildNode(new __XmlText(entry));\n    return node.withName(\"member\");\n  });\n};\nvar serializeAws_restXmlAnalyticsAndOperator = function (input, context) {\n  var bodyNode = new __XmlNode(\"AnalyticsAndOperator\");\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Tags !== undefined && input.Tags !== null) {\n    var nodes = serializeAws_restXmlTagSet(input.Tags, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Tag\");\n      bodyNode.addChildNode(node);\n    });\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlAnalyticsConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"AnalyticsConfiguration\");\n  if (input.Id !== undefined && input.Id !== null) {\n    var node = new __XmlNode(\"AnalyticsId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Filter !== undefined && input.Filter !== null) {\n    var node = serializeAws_restXmlAnalyticsFilter(input.Filter, context).withName(\"Filter\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.StorageClassAnalysis !== undefined && input.StorageClassAnalysis !== null) {\n    var node = serializeAws_restXmlStorageClassAnalysis(input.StorageClassAnalysis, context).withName(\"StorageClassAnalysis\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlAnalyticsExportDestination = function (input, context) {\n  var bodyNode = new __XmlNode(\"AnalyticsExportDestination\");\n  if (input.S3BucketDestination !== undefined && input.S3BucketDestination !== null) {\n    var node = serializeAws_restXmlAnalyticsS3BucketDestination(input.S3BucketDestination, context).withName(\"S3BucketDestination\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlAnalyticsFilter = function (input, context) {\n  var bodyNode = new __XmlNode(\"AnalyticsFilter\");\n  AnalyticsFilter.visit(input, {\n    Prefix: function (value) {\n      var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(value)).withName(\"Prefix\");\n      bodyNode.addChildNode(node);\n    },\n    Tag: function (value) {\n      var node = serializeAws_restXmlTag(value, context).withName(\"Tag\");\n      bodyNode.addChildNode(node);\n    },\n    And: function (value) {\n      var node = serializeAws_restXmlAnalyticsAndOperator(value, context).withName(\"And\");\n      bodyNode.addChildNode(node);\n    },\n    _: function (name, value) {\n      if (!(value instanceof __XmlNode || value instanceof __XmlText)) {\n        throw new Error(\"Unable to serialize unknown union members in XML.\");\n      }\n      bodyNode.addChildNode(new __XmlNode(name).addChildNode(value));\n    }\n  });\n  return bodyNode;\n};\nvar serializeAws_restXmlAnalyticsS3BucketDestination = function (input, context) {\n  var bodyNode = new __XmlNode(\"AnalyticsS3BucketDestination\");\n  if (input.Format !== undefined && input.Format !== null) {\n    var node = new __XmlNode(\"AnalyticsS3ExportFileFormat\").addChildNode(new __XmlText(input.Format)).withName(\"Format\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.BucketAccountId !== undefined && input.BucketAccountId !== null) {\n    var node = new __XmlNode(\"AccountId\").addChildNode(new __XmlText(input.BucketAccountId)).withName(\"BucketAccountId\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Bucket !== undefined && input.Bucket !== null) {\n    var node = new __XmlNode(\"BucketName\").addChildNode(new __XmlText(input.Bucket)).withName(\"Bucket\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlBucketLifecycleConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"BucketLifecycleConfiguration\");\n  if (input.Rules !== undefined && input.Rules !== null) {\n    var nodes = serializeAws_restXmlLifecycleRules(input.Rules, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Rule\");\n      bodyNode.addChildNode(node);\n    });\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlBucketLoggingStatus = function (input, context) {\n  var bodyNode = new __XmlNode(\"BucketLoggingStatus\");\n  if (input.LoggingEnabled !== undefined && input.LoggingEnabled !== null) {\n    var node = serializeAws_restXmlLoggingEnabled(input.LoggingEnabled, context).withName(\"LoggingEnabled\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlCompletedMultipartUpload = function (input, context) {\n  var bodyNode = new __XmlNode(\"CompletedMultipartUpload\");\n  if (input.Parts !== undefined && input.Parts !== null) {\n    var nodes = serializeAws_restXmlCompletedPartList(input.Parts, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Part\");\n      bodyNode.addChildNode(node);\n    });\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlCompletedPart = function (input, context) {\n  var bodyNode = new __XmlNode(\"CompletedPart\");\n  if (input.ETag !== undefined && input.ETag !== null) {\n    var node = new __XmlNode(\"ETag\").addChildNode(new __XmlText(input.ETag)).withName(\"ETag\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.PartNumber !== undefined && input.PartNumber !== null) {\n    var node = new __XmlNode(\"PartNumber\").addChildNode(new __XmlText(String(input.PartNumber))).withName(\"PartNumber\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlCompletedPartList = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    var node = serializeAws_restXmlCompletedPart(entry, context);\n    return node.withName(\"member\");\n  });\n};\nvar serializeAws_restXmlCondition = function (input, context) {\n  var bodyNode = new __XmlNode(\"Condition\");\n  if (input.HttpErrorCodeReturnedEquals !== undefined && input.HttpErrorCodeReturnedEquals !== null) {\n    var node = new __XmlNode(\"HttpErrorCodeReturnedEquals\").addChildNode(new __XmlText(input.HttpErrorCodeReturnedEquals)).withName(\"HttpErrorCodeReturnedEquals\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.KeyPrefixEquals !== undefined && input.KeyPrefixEquals !== null) {\n    var node = new __XmlNode(\"KeyPrefixEquals\").addChildNode(new __XmlText(input.KeyPrefixEquals)).withName(\"KeyPrefixEquals\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlCORSConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"CORSConfiguration\");\n  if (input.CORSRules !== undefined && input.CORSRules !== null) {\n    var nodes = serializeAws_restXmlCORSRules(input.CORSRules, context);\n    nodes.map(function (node) {\n      node = node.withName(\"CORSRule\");\n      bodyNode.addChildNode(node);\n    });\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlCORSRule = function (input, context) {\n  var bodyNode = new __XmlNode(\"CORSRule\");\n  if (input.AllowedHeaders !== undefined && input.AllowedHeaders !== null) {\n    var nodes = serializeAws_restXmlAllowedHeaders(input.AllowedHeaders, context);\n    nodes.map(function (node) {\n      node = node.withName(\"AllowedHeader\");\n      bodyNode.addChildNode(node);\n    });\n  }\n  if (input.AllowedMethods !== undefined && input.AllowedMethods !== null) {\n    var nodes = serializeAws_restXmlAllowedMethods(input.AllowedMethods, context);\n    nodes.map(function (node) {\n      node = node.withName(\"AllowedMethod\");\n      bodyNode.addChildNode(node);\n    });\n  }\n  if (input.AllowedOrigins !== undefined && input.AllowedOrigins !== null) {\n    var nodes = serializeAws_restXmlAllowedOrigins(input.AllowedOrigins, context);\n    nodes.map(function (node) {\n      node = node.withName(\"AllowedOrigin\");\n      bodyNode.addChildNode(node);\n    });\n  }\n  if (input.ExposeHeaders !== undefined && input.ExposeHeaders !== null) {\n    var nodes = serializeAws_restXmlExposeHeaders(input.ExposeHeaders, context);\n    nodes.map(function (node) {\n      node = node.withName(\"ExposeHeader\");\n      bodyNode.addChildNode(node);\n    });\n  }\n  if (input.MaxAgeSeconds !== undefined && input.MaxAgeSeconds !== null) {\n    var node = new __XmlNode(\"MaxAgeSeconds\").addChildNode(new __XmlText(String(input.MaxAgeSeconds))).withName(\"MaxAgeSeconds\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlCORSRules = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    var node = serializeAws_restXmlCORSRule(entry, context);\n    return node.withName(\"member\");\n  });\n};\nvar serializeAws_restXmlCreateBucketConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"CreateBucketConfiguration\");\n  if (input.LocationConstraint !== undefined && input.LocationConstraint !== null) {\n    var node = new __XmlNode(\"BucketLocationConstraint\").addChildNode(new __XmlText(input.LocationConstraint)).withName(\"LocationConstraint\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlCSVInput = function (input, context) {\n  var bodyNode = new __XmlNode(\"CSVInput\");\n  if (input.FileHeaderInfo !== undefined && input.FileHeaderInfo !== null) {\n    var node = new __XmlNode(\"FileHeaderInfo\").addChildNode(new __XmlText(input.FileHeaderInfo)).withName(\"FileHeaderInfo\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Comments !== undefined && input.Comments !== null) {\n    var node = new __XmlNode(\"Comments\").addChildNode(new __XmlText(input.Comments)).withName(\"Comments\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.QuoteEscapeCharacter !== undefined && input.QuoteEscapeCharacter !== null) {\n    var node = new __XmlNode(\"QuoteEscapeCharacter\").addChildNode(new __XmlText(input.QuoteEscapeCharacter)).withName(\"QuoteEscapeCharacter\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.RecordDelimiter !== undefined && input.RecordDelimiter !== null) {\n    var node = new __XmlNode(\"RecordDelimiter\").addChildNode(new __XmlText(input.RecordDelimiter)).withName(\"RecordDelimiter\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.FieldDelimiter !== undefined && input.FieldDelimiter !== null) {\n    var node = new __XmlNode(\"FieldDelimiter\").addChildNode(new __XmlText(input.FieldDelimiter)).withName(\"FieldDelimiter\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.QuoteCharacter !== undefined && input.QuoteCharacter !== null) {\n    var node = new __XmlNode(\"QuoteCharacter\").addChildNode(new __XmlText(input.QuoteCharacter)).withName(\"QuoteCharacter\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.AllowQuotedRecordDelimiter !== undefined && input.AllowQuotedRecordDelimiter !== null) {\n    var node = new __XmlNode(\"AllowQuotedRecordDelimiter\").addChildNode(new __XmlText(String(input.AllowQuotedRecordDelimiter))).withName(\"AllowQuotedRecordDelimiter\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlCSVOutput = function (input, context) {\n  var bodyNode = new __XmlNode(\"CSVOutput\");\n  if (input.QuoteFields !== undefined && input.QuoteFields !== null) {\n    var node = new __XmlNode(\"QuoteFields\").addChildNode(new __XmlText(input.QuoteFields)).withName(\"QuoteFields\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.QuoteEscapeCharacter !== undefined && input.QuoteEscapeCharacter !== null) {\n    var node = new __XmlNode(\"QuoteEscapeCharacter\").addChildNode(new __XmlText(input.QuoteEscapeCharacter)).withName(\"QuoteEscapeCharacter\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.RecordDelimiter !== undefined && input.RecordDelimiter !== null) {\n    var node = new __XmlNode(\"RecordDelimiter\").addChildNode(new __XmlText(input.RecordDelimiter)).withName(\"RecordDelimiter\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.FieldDelimiter !== undefined && input.FieldDelimiter !== null) {\n    var node = new __XmlNode(\"FieldDelimiter\").addChildNode(new __XmlText(input.FieldDelimiter)).withName(\"FieldDelimiter\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.QuoteCharacter !== undefined && input.QuoteCharacter !== null) {\n    var node = new __XmlNode(\"QuoteCharacter\").addChildNode(new __XmlText(input.QuoteCharacter)).withName(\"QuoteCharacter\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlDefaultRetention = function (input, context) {\n  var bodyNode = new __XmlNode(\"DefaultRetention\");\n  if (input.Mode !== undefined && input.Mode !== null) {\n    var node = new __XmlNode(\"ObjectLockRetentionMode\").addChildNode(new __XmlText(input.Mode)).withName(\"Mode\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Days !== undefined && input.Days !== null) {\n    var node = new __XmlNode(\"Days\").addChildNode(new __XmlText(String(input.Days))).withName(\"Days\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Years !== undefined && input.Years !== null) {\n    var node = new __XmlNode(\"Years\").addChildNode(new __XmlText(String(input.Years))).withName(\"Years\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlDelete = function (input, context) {\n  var bodyNode = new __XmlNode(\"Delete\");\n  if (input.Objects !== undefined && input.Objects !== null) {\n    var nodes = serializeAws_restXmlObjectIdentifierList(input.Objects, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Object\");\n      bodyNode.addChildNode(node);\n    });\n  }\n  if (input.Quiet !== undefined && input.Quiet !== null) {\n    var node = new __XmlNode(\"Quiet\").addChildNode(new __XmlText(String(input.Quiet))).withName(\"Quiet\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlDeleteMarkerReplication = function (input, context) {\n  var bodyNode = new __XmlNode(\"DeleteMarkerReplication\");\n  if (input.Status !== undefined && input.Status !== null) {\n    var node = new __XmlNode(\"DeleteMarkerReplicationStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlDestination = function (input, context) {\n  var bodyNode = new __XmlNode(\"Destination\");\n  if (input.Bucket !== undefined && input.Bucket !== null) {\n    var node = new __XmlNode(\"BucketName\").addChildNode(new __XmlText(input.Bucket)).withName(\"Bucket\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Account !== undefined && input.Account !== null) {\n    var node = new __XmlNode(\"AccountId\").addChildNode(new __XmlText(input.Account)).withName(\"Account\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.StorageClass !== undefined && input.StorageClass !== null) {\n    var node = new __XmlNode(\"StorageClass\").addChildNode(new __XmlText(input.StorageClass)).withName(\"StorageClass\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.AccessControlTranslation !== undefined && input.AccessControlTranslation !== null) {\n    var node = serializeAws_restXmlAccessControlTranslation(input.AccessControlTranslation, context).withName(\"AccessControlTranslation\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.EncryptionConfiguration !== undefined && input.EncryptionConfiguration !== null) {\n    var node = serializeAws_restXmlEncryptionConfiguration(input.EncryptionConfiguration, context).withName(\"EncryptionConfiguration\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.ReplicationTime !== undefined && input.ReplicationTime !== null) {\n    var node = serializeAws_restXmlReplicationTime(input.ReplicationTime, context).withName(\"ReplicationTime\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Metrics !== undefined && input.Metrics !== null) {\n    var node = serializeAws_restXmlMetrics(input.Metrics, context).withName(\"Metrics\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlEncryption = function (input, context) {\n  var bodyNode = new __XmlNode(\"Encryption\");\n  if (input.EncryptionType !== undefined && input.EncryptionType !== null) {\n    var node = new __XmlNode(\"ServerSideEncryption\").addChildNode(new __XmlText(input.EncryptionType)).withName(\"EncryptionType\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.KMSKeyId !== undefined && input.KMSKeyId !== null) {\n    var node = new __XmlNode(\"SSEKMSKeyId\").addChildNode(new __XmlText(input.KMSKeyId)).withName(\"KMSKeyId\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.KMSContext !== undefined && input.KMSContext !== null) {\n    var node = new __XmlNode(\"KMSContext\").addChildNode(new __XmlText(input.KMSContext)).withName(\"KMSContext\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlEncryptionConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"EncryptionConfiguration\");\n  if (input.ReplicaKmsKeyID !== undefined && input.ReplicaKmsKeyID !== null) {\n    var node = new __XmlNode(\"ReplicaKmsKeyID\").addChildNode(new __XmlText(input.ReplicaKmsKeyID)).withName(\"ReplicaKmsKeyID\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlErrorDocument = function (input, context) {\n  var bodyNode = new __XmlNode(\"ErrorDocument\");\n  if (input.Key !== undefined && input.Key !== null) {\n    var node = new __XmlNode(\"ObjectKey\").addChildNode(new __XmlText(input.Key)).withName(\"Key\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlEventList = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    var node = new __XmlNode(\"Event\").addChildNode(new __XmlText(entry));\n    return node.withName(\"member\");\n  });\n};\nvar serializeAws_restXmlExistingObjectReplication = function (input, context) {\n  var bodyNode = new __XmlNode(\"ExistingObjectReplication\");\n  if (input.Status !== undefined && input.Status !== null) {\n    var node = new __XmlNode(\"ExistingObjectReplicationStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlExposeHeaders = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    var node = new __XmlNode(\"ExposeHeader\").addChildNode(new __XmlText(entry));\n    return node.withName(\"member\");\n  });\n};\nvar serializeAws_restXmlFilterRule = function (input, context) {\n  var bodyNode = new __XmlNode(\"FilterRule\");\n  if (input.Name !== undefined && input.Name !== null) {\n    var node = new __XmlNode(\"FilterRuleName\").addChildNode(new __XmlText(input.Name)).withName(\"Name\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Value !== undefined && input.Value !== null) {\n    var node = new __XmlNode(\"FilterRuleValue\").addChildNode(new __XmlText(input.Value)).withName(\"Value\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlFilterRuleList = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    var node = serializeAws_restXmlFilterRule(entry, context);\n    return node.withName(\"member\");\n  });\n};\nvar serializeAws_restXmlGlacierJobParameters = function (input, context) {\n  var bodyNode = new __XmlNode(\"GlacierJobParameters\");\n  if (input.Tier !== undefined && input.Tier !== null) {\n    var node = new __XmlNode(\"Tier\").addChildNode(new __XmlText(input.Tier)).withName(\"Tier\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlGrant = function (input, context) {\n  var bodyNode = new __XmlNode(\"Grant\");\n  if (input.Grantee !== undefined && input.Grantee !== null) {\n    var node = serializeAws_restXmlGrantee(input.Grantee, context).withName(\"Grantee\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Permission !== undefined && input.Permission !== null) {\n    var node = new __XmlNode(\"Permission\").addChildNode(new __XmlText(input.Permission)).withName(\"Permission\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlGrantee = function (input, context) {\n  var bodyNode = new __XmlNode(\"Grantee\");\n  if (input.DisplayName !== undefined && input.DisplayName !== null) {\n    var node = new __XmlNode(\"DisplayName\").addChildNode(new __XmlText(input.DisplayName)).withName(\"DisplayName\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.EmailAddress !== undefined && input.EmailAddress !== null) {\n    var node = new __XmlNode(\"EmailAddress\").addChildNode(new __XmlText(input.EmailAddress)).withName(\"EmailAddress\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.ID !== undefined && input.ID !== null) {\n    var node = new __XmlNode(\"ID\").addChildNode(new __XmlText(input.ID)).withName(\"ID\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.URI !== undefined && input.URI !== null) {\n    var node = new __XmlNode(\"URI\").addChildNode(new __XmlText(input.URI)).withName(\"URI\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Type !== undefined && input.Type !== null) {\n    bodyNode.addAttribute(\"xsi:type\", input.Type);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlGrants = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    var node = serializeAws_restXmlGrant(entry, context);\n    return node.withName(\"Grant\");\n  });\n};\nvar serializeAws_restXmlIndexDocument = function (input, context) {\n  var bodyNode = new __XmlNode(\"IndexDocument\");\n  if (input.Suffix !== undefined && input.Suffix !== null) {\n    var node = new __XmlNode(\"Suffix\").addChildNode(new __XmlText(input.Suffix)).withName(\"Suffix\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlInputSerialization = function (input, context) {\n  var bodyNode = new __XmlNode(\"InputSerialization\");\n  if (input.CSV !== undefined && input.CSV !== null) {\n    var node = serializeAws_restXmlCSVInput(input.CSV, context).withName(\"CSV\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.CompressionType !== undefined && input.CompressionType !== null) {\n    var node = new __XmlNode(\"CompressionType\").addChildNode(new __XmlText(input.CompressionType)).withName(\"CompressionType\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.JSON !== undefined && input.JSON !== null) {\n    var node = serializeAws_restXmlJSONInput(input.JSON, context).withName(\"JSON\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Parquet !== undefined && input.Parquet !== null) {\n    var node = serializeAws_restXmlParquetInput(input.Parquet, context).withName(\"Parquet\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlIntelligentTieringAndOperator = function (input, context) {\n  var bodyNode = new __XmlNode(\"IntelligentTieringAndOperator\");\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Tags !== undefined && input.Tags !== null) {\n    var nodes = serializeAws_restXmlTagSet(input.Tags, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Tag\");\n      bodyNode.addChildNode(node);\n    });\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlIntelligentTieringConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"IntelligentTieringConfiguration\");\n  if (input.Id !== undefined && input.Id !== null) {\n    var node = new __XmlNode(\"IntelligentTieringId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Filter !== undefined && input.Filter !== null) {\n    var node = serializeAws_restXmlIntelligentTieringFilter(input.Filter, context).withName(\"Filter\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Status !== undefined && input.Status !== null) {\n    var node = new __XmlNode(\"IntelligentTieringStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Tierings !== undefined && input.Tierings !== null) {\n    var nodes = serializeAws_restXmlTieringList(input.Tierings, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Tiering\");\n      bodyNode.addChildNode(node);\n    });\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlIntelligentTieringFilter = function (input, context) {\n  var bodyNode = new __XmlNode(\"IntelligentTieringFilter\");\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Tag !== undefined && input.Tag !== null) {\n    var node = serializeAws_restXmlTag(input.Tag, context).withName(\"Tag\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.And !== undefined && input.And !== null) {\n    var node = serializeAws_restXmlIntelligentTieringAndOperator(input.And, context).withName(\"And\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlInventoryConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"InventoryConfiguration\");\n  if (input.Destination !== undefined && input.Destination !== null) {\n    var node = serializeAws_restXmlInventoryDestination(input.Destination, context).withName(\"Destination\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.IsEnabled !== undefined && input.IsEnabled !== null) {\n    var node = new __XmlNode(\"IsEnabled\").addChildNode(new __XmlText(String(input.IsEnabled))).withName(\"IsEnabled\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Filter !== undefined && input.Filter !== null) {\n    var node = serializeAws_restXmlInventoryFilter(input.Filter, context).withName(\"Filter\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Id !== undefined && input.Id !== null) {\n    var node = new __XmlNode(\"InventoryId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.IncludedObjectVersions !== undefined && input.IncludedObjectVersions !== null) {\n    var node = new __XmlNode(\"InventoryIncludedObjectVersions\").addChildNode(new __XmlText(input.IncludedObjectVersions)).withName(\"IncludedObjectVersions\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.OptionalFields !== undefined && input.OptionalFields !== null) {\n    var nodes = serializeAws_restXmlInventoryOptionalFields(input.OptionalFields, context);\n    var containerNode_2 = new __XmlNode(\"OptionalFields\");\n    nodes.map(function (node) {\n      containerNode_2.addChildNode(node);\n    });\n    bodyNode.addChildNode(containerNode_2);\n  }\n  if (input.Schedule !== undefined && input.Schedule !== null) {\n    var node = serializeAws_restXmlInventorySchedule(input.Schedule, context).withName(\"Schedule\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlInventoryDestination = function (input, context) {\n  var bodyNode = new __XmlNode(\"InventoryDestination\");\n  if (input.S3BucketDestination !== undefined && input.S3BucketDestination !== null) {\n    var node = serializeAws_restXmlInventoryS3BucketDestination(input.S3BucketDestination, context).withName(\"S3BucketDestination\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlInventoryEncryption = function (input, context) {\n  var bodyNode = new __XmlNode(\"InventoryEncryption\");\n  if (input.SSES3 !== undefined && input.SSES3 !== null) {\n    var node = serializeAws_restXmlSSES3(input.SSES3, context).withName(\"SSE-S3\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.SSEKMS !== undefined && input.SSEKMS !== null) {\n    var node = serializeAws_restXmlSSEKMS(input.SSEKMS, context).withName(\"SSE-KMS\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlInventoryFilter = function (input, context) {\n  var bodyNode = new __XmlNode(\"InventoryFilter\");\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlInventoryOptionalFields = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    var node = new __XmlNode(\"InventoryOptionalField\").addChildNode(new __XmlText(entry));\n    return node.withName(\"Field\");\n  });\n};\nvar serializeAws_restXmlInventoryS3BucketDestination = function (input, context) {\n  var bodyNode = new __XmlNode(\"InventoryS3BucketDestination\");\n  if (input.AccountId !== undefined && input.AccountId !== null) {\n    var node = new __XmlNode(\"AccountId\").addChildNode(new __XmlText(input.AccountId)).withName(\"AccountId\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Bucket !== undefined && input.Bucket !== null) {\n    var node = new __XmlNode(\"BucketName\").addChildNode(new __XmlText(input.Bucket)).withName(\"Bucket\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Format !== undefined && input.Format !== null) {\n    var node = new __XmlNode(\"InventoryFormat\").addChildNode(new __XmlText(input.Format)).withName(\"Format\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Encryption !== undefined && input.Encryption !== null) {\n    var node = serializeAws_restXmlInventoryEncryption(input.Encryption, context).withName(\"Encryption\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlInventorySchedule = function (input, context) {\n  var bodyNode = new __XmlNode(\"InventorySchedule\");\n  if (input.Frequency !== undefined && input.Frequency !== null) {\n    var node = new __XmlNode(\"InventoryFrequency\").addChildNode(new __XmlText(input.Frequency)).withName(\"Frequency\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlJSONInput = function (input, context) {\n  var bodyNode = new __XmlNode(\"JSONInput\");\n  if (input.Type !== undefined && input.Type !== null) {\n    var node = new __XmlNode(\"JSONType\").addChildNode(new __XmlText(input.Type)).withName(\"Type\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlJSONOutput = function (input, context) {\n  var bodyNode = new __XmlNode(\"JSONOutput\");\n  if (input.RecordDelimiter !== undefined && input.RecordDelimiter !== null) {\n    var node = new __XmlNode(\"RecordDelimiter\").addChildNode(new __XmlText(input.RecordDelimiter)).withName(\"RecordDelimiter\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlLambdaFunctionConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"LambdaFunctionConfiguration\");\n  if (input.Id !== undefined && input.Id !== null) {\n    var node = new __XmlNode(\"NotificationId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.LambdaFunctionArn !== undefined && input.LambdaFunctionArn !== null) {\n    var node = new __XmlNode(\"LambdaFunctionArn\").addChildNode(new __XmlText(input.LambdaFunctionArn)).withName(\"CloudFunction\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Events !== undefined && input.Events !== null) {\n    var nodes = serializeAws_restXmlEventList(input.Events, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Event\");\n      bodyNode.addChildNode(node);\n    });\n  }\n  if (input.Filter !== undefined && input.Filter !== null) {\n    var node = serializeAws_restXmlNotificationConfigurationFilter(input.Filter, context).withName(\"Filter\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlLambdaFunctionConfigurationList = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    var node = serializeAws_restXmlLambdaFunctionConfiguration(entry, context);\n    return node.withName(\"member\");\n  });\n};\nvar serializeAws_restXmlLifecycleExpiration = function (input, context) {\n  var bodyNode = new __XmlNode(\"LifecycleExpiration\");\n  if (input.Date !== undefined && input.Date !== null) {\n    var node = new __XmlNode(\"Date\").addChildNode(new __XmlText(input.Date.toISOString().split(\".\")[0] + \"Z\")).withName(\"Date\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Days !== undefined && input.Days !== null) {\n    var node = new __XmlNode(\"Days\").addChildNode(new __XmlText(String(input.Days))).withName(\"Days\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.ExpiredObjectDeleteMarker !== undefined && input.ExpiredObjectDeleteMarker !== null) {\n    var node = new __XmlNode(\"ExpiredObjectDeleteMarker\").addChildNode(new __XmlText(String(input.ExpiredObjectDeleteMarker))).withName(\"ExpiredObjectDeleteMarker\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlLifecycleRule = function (input, context) {\n  var bodyNode = new __XmlNode(\"LifecycleRule\");\n  if (input.Expiration !== undefined && input.Expiration !== null) {\n    var node = serializeAws_restXmlLifecycleExpiration(input.Expiration, context).withName(\"Expiration\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.ID !== undefined && input.ID !== null) {\n    var node = new __XmlNode(\"ID\").addChildNode(new __XmlText(input.ID)).withName(\"ID\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Filter !== undefined && input.Filter !== null) {\n    var node = serializeAws_restXmlLifecycleRuleFilter(input.Filter, context).withName(\"Filter\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Status !== undefined && input.Status !== null) {\n    var node = new __XmlNode(\"ExpirationStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Transitions !== undefined && input.Transitions !== null) {\n    var nodes = serializeAws_restXmlTransitionList(input.Transitions, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Transition\");\n      bodyNode.addChildNode(node);\n    });\n  }\n  if (input.NoncurrentVersionTransitions !== undefined && input.NoncurrentVersionTransitions !== null) {\n    var nodes = serializeAws_restXmlNoncurrentVersionTransitionList(input.NoncurrentVersionTransitions, context);\n    nodes.map(function (node) {\n      node = node.withName(\"NoncurrentVersionTransition\");\n      bodyNode.addChildNode(node);\n    });\n  }\n  if (input.NoncurrentVersionExpiration !== undefined && input.NoncurrentVersionExpiration !== null) {\n    var node = serializeAws_restXmlNoncurrentVersionExpiration(input.NoncurrentVersionExpiration, context).withName(\"NoncurrentVersionExpiration\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.AbortIncompleteMultipartUpload !== undefined && input.AbortIncompleteMultipartUpload !== null) {\n    var node = serializeAws_restXmlAbortIncompleteMultipartUpload(input.AbortIncompleteMultipartUpload, context).withName(\"AbortIncompleteMultipartUpload\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlLifecycleRuleAndOperator = function (input, context) {\n  var bodyNode = new __XmlNode(\"LifecycleRuleAndOperator\");\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Tags !== undefined && input.Tags !== null) {\n    var nodes = serializeAws_restXmlTagSet(input.Tags, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Tag\");\n      bodyNode.addChildNode(node);\n    });\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlLifecycleRuleFilter = function (input, context) {\n  var bodyNode = new __XmlNode(\"LifecycleRuleFilter\");\n  LifecycleRuleFilter.visit(input, {\n    Prefix: function (value) {\n      var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(value)).withName(\"Prefix\");\n      bodyNode.addChildNode(node);\n    },\n    Tag: function (value) {\n      var node = serializeAws_restXmlTag(value, context).withName(\"Tag\");\n      bodyNode.addChildNode(node);\n    },\n    And: function (value) {\n      var node = serializeAws_restXmlLifecycleRuleAndOperator(value, context).withName(\"And\");\n      bodyNode.addChildNode(node);\n    },\n    _: function (name, value) {\n      if (!(value instanceof __XmlNode || value instanceof __XmlText)) {\n        throw new Error(\"Unable to serialize unknown union members in XML.\");\n      }\n      bodyNode.addChildNode(new __XmlNode(name).addChildNode(value));\n    }\n  });\n  return bodyNode;\n};\nvar serializeAws_restXmlLifecycleRules = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    var node = serializeAws_restXmlLifecycleRule(entry, context);\n    return node.withName(\"member\");\n  });\n};\nvar serializeAws_restXmlLoggingEnabled = function (input, context) {\n  var bodyNode = new __XmlNode(\"LoggingEnabled\");\n  if (input.TargetBucket !== undefined && input.TargetBucket !== null) {\n    var node = new __XmlNode(\"TargetBucket\").addChildNode(new __XmlText(input.TargetBucket)).withName(\"TargetBucket\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.TargetGrants !== undefined && input.TargetGrants !== null) {\n    var nodes = serializeAws_restXmlTargetGrants(input.TargetGrants, context);\n    var containerNode_3 = new __XmlNode(\"TargetGrants\");\n    nodes.map(function (node) {\n      containerNode_3.addChildNode(node);\n    });\n    bodyNode.addChildNode(containerNode_3);\n  }\n  if (input.TargetPrefix !== undefined && input.TargetPrefix !== null) {\n    var node = new __XmlNode(\"TargetPrefix\").addChildNode(new __XmlText(input.TargetPrefix)).withName(\"TargetPrefix\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlMetadataEntry = function (input, context) {\n  var bodyNode = new __XmlNode(\"MetadataEntry\");\n  if (input.Name !== undefined && input.Name !== null) {\n    var node = new __XmlNode(\"MetadataKey\").addChildNode(new __XmlText(input.Name)).withName(\"Name\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Value !== undefined && input.Value !== null) {\n    var node = new __XmlNode(\"MetadataValue\").addChildNode(new __XmlText(input.Value)).withName(\"Value\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlMetrics = function (input, context) {\n  var bodyNode = new __XmlNode(\"Metrics\");\n  if (input.Status !== undefined && input.Status !== null) {\n    var node = new __XmlNode(\"MetricsStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.EventThreshold !== undefined && input.EventThreshold !== null) {\n    var node = serializeAws_restXmlReplicationTimeValue(input.EventThreshold, context).withName(\"EventThreshold\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlMetricsAndOperator = function (input, context) {\n  var bodyNode = new __XmlNode(\"MetricsAndOperator\");\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Tags !== undefined && input.Tags !== null) {\n    var nodes = serializeAws_restXmlTagSet(input.Tags, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Tag\");\n      bodyNode.addChildNode(node);\n    });\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlMetricsConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"MetricsConfiguration\");\n  if (input.Id !== undefined && input.Id !== null) {\n    var node = new __XmlNode(\"MetricsId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Filter !== undefined && input.Filter !== null) {\n    var node = serializeAws_restXmlMetricsFilter(input.Filter, context).withName(\"Filter\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlMetricsFilter = function (input, context) {\n  var bodyNode = new __XmlNode(\"MetricsFilter\");\n  MetricsFilter.visit(input, {\n    Prefix: function (value) {\n      var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(value)).withName(\"Prefix\");\n      bodyNode.addChildNode(node);\n    },\n    Tag: function (value) {\n      var node = serializeAws_restXmlTag(value, context).withName(\"Tag\");\n      bodyNode.addChildNode(node);\n    },\n    And: function (value) {\n      var node = serializeAws_restXmlMetricsAndOperator(value, context).withName(\"And\");\n      bodyNode.addChildNode(node);\n    },\n    _: function (name, value) {\n      if (!(value instanceof __XmlNode || value instanceof __XmlText)) {\n        throw new Error(\"Unable to serialize unknown union members in XML.\");\n      }\n      bodyNode.addChildNode(new __XmlNode(name).addChildNode(value));\n    }\n  });\n  return bodyNode;\n};\nvar serializeAws_restXmlNoncurrentVersionExpiration = function (input, context) {\n  var bodyNode = new __XmlNode(\"NoncurrentVersionExpiration\");\n  if (input.NoncurrentDays !== undefined && input.NoncurrentDays !== null) {\n    var node = new __XmlNode(\"Days\").addChildNode(new __XmlText(String(input.NoncurrentDays))).withName(\"NoncurrentDays\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlNoncurrentVersionTransition = function (input, context) {\n  var bodyNode = new __XmlNode(\"NoncurrentVersionTransition\");\n  if (input.NoncurrentDays !== undefined && input.NoncurrentDays !== null) {\n    var node = new __XmlNode(\"Days\").addChildNode(new __XmlText(String(input.NoncurrentDays))).withName(\"NoncurrentDays\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.StorageClass !== undefined && input.StorageClass !== null) {\n    var node = new __XmlNode(\"TransitionStorageClass\").addChildNode(new __XmlText(input.StorageClass)).withName(\"StorageClass\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlNoncurrentVersionTransitionList = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    var node = serializeAws_restXmlNoncurrentVersionTransition(entry, context);\n    return node.withName(\"member\");\n  });\n};\nvar serializeAws_restXmlNotificationConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"NotificationConfiguration\");\n  if (input.TopicConfigurations !== undefined && input.TopicConfigurations !== null) {\n    var nodes = serializeAws_restXmlTopicConfigurationList(input.TopicConfigurations, context);\n    nodes.map(function (node) {\n      node = node.withName(\"TopicConfiguration\");\n      bodyNode.addChildNode(node);\n    });\n  }\n  if (input.QueueConfigurations !== undefined && input.QueueConfigurations !== null) {\n    var nodes = serializeAws_restXmlQueueConfigurationList(input.QueueConfigurations, context);\n    nodes.map(function (node) {\n      node = node.withName(\"QueueConfiguration\");\n      bodyNode.addChildNode(node);\n    });\n  }\n  if (input.LambdaFunctionConfigurations !== undefined && input.LambdaFunctionConfigurations !== null) {\n    var nodes = serializeAws_restXmlLambdaFunctionConfigurationList(input.LambdaFunctionConfigurations, context);\n    nodes.map(function (node) {\n      node = node.withName(\"CloudFunctionConfiguration\");\n      bodyNode.addChildNode(node);\n    });\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlNotificationConfigurationFilter = function (input, context) {\n  var bodyNode = new __XmlNode(\"NotificationConfigurationFilter\");\n  if (input.Key !== undefined && input.Key !== null) {\n    var node = serializeAws_restXmlS3KeyFilter(input.Key, context).withName(\"S3Key\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlObjectIdentifier = function (input, context) {\n  var bodyNode = new __XmlNode(\"ObjectIdentifier\");\n  if (input.Key !== undefined && input.Key !== null) {\n    var node = new __XmlNode(\"ObjectKey\").addChildNode(new __XmlText(input.Key)).withName(\"Key\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.VersionId !== undefined && input.VersionId !== null) {\n    var node = new __XmlNode(\"ObjectVersionId\").addChildNode(new __XmlText(input.VersionId)).withName(\"VersionId\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlObjectIdentifierList = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    var node = serializeAws_restXmlObjectIdentifier(entry, context);\n    return node.withName(\"member\");\n  });\n};\nvar serializeAws_restXmlObjectLockConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"ObjectLockConfiguration\");\n  if (input.ObjectLockEnabled !== undefined && input.ObjectLockEnabled !== null) {\n    var node = new __XmlNode(\"ObjectLockEnabled\").addChildNode(new __XmlText(input.ObjectLockEnabled)).withName(\"ObjectLockEnabled\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Rule !== undefined && input.Rule !== null) {\n    var node = serializeAws_restXmlObjectLockRule(input.Rule, context).withName(\"Rule\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlObjectLockLegalHold = function (input, context) {\n  var bodyNode = new __XmlNode(\"ObjectLockLegalHold\");\n  if (input.Status !== undefined && input.Status !== null) {\n    var node = new __XmlNode(\"ObjectLockLegalHoldStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlObjectLockRetention = function (input, context) {\n  var bodyNode = new __XmlNode(\"ObjectLockRetention\");\n  if (input.Mode !== undefined && input.Mode !== null) {\n    var node = new __XmlNode(\"ObjectLockRetentionMode\").addChildNode(new __XmlText(input.Mode)).withName(\"Mode\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.RetainUntilDate !== undefined && input.RetainUntilDate !== null) {\n    var node = new __XmlNode(\"Date\").addChildNode(new __XmlText(input.RetainUntilDate.toISOString().split(\".\")[0] + \"Z\")).withName(\"RetainUntilDate\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlObjectLockRule = function (input, context) {\n  var bodyNode = new __XmlNode(\"ObjectLockRule\");\n  if (input.DefaultRetention !== undefined && input.DefaultRetention !== null) {\n    var node = serializeAws_restXmlDefaultRetention(input.DefaultRetention, context).withName(\"DefaultRetention\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlOutputLocation = function (input, context) {\n  var bodyNode = new __XmlNode(\"OutputLocation\");\n  if (input.S3 !== undefined && input.S3 !== null) {\n    var node = serializeAws_restXmlS3Location(input.S3, context).withName(\"S3\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlOutputSerialization = function (input, context) {\n  var bodyNode = new __XmlNode(\"OutputSerialization\");\n  if (input.CSV !== undefined && input.CSV !== null) {\n    var node = serializeAws_restXmlCSVOutput(input.CSV, context).withName(\"CSV\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.JSON !== undefined && input.JSON !== null) {\n    var node = serializeAws_restXmlJSONOutput(input.JSON, context).withName(\"JSON\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlOwner = function (input, context) {\n  var bodyNode = new __XmlNode(\"Owner\");\n  if (input.DisplayName !== undefined && input.DisplayName !== null) {\n    var node = new __XmlNode(\"DisplayName\").addChildNode(new __XmlText(input.DisplayName)).withName(\"DisplayName\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.ID !== undefined && input.ID !== null) {\n    var node = new __XmlNode(\"ID\").addChildNode(new __XmlText(input.ID)).withName(\"ID\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlOwnershipControls = function (input, context) {\n  var bodyNode = new __XmlNode(\"OwnershipControls\");\n  if (input.Rules !== undefined && input.Rules !== null) {\n    var nodes = serializeAws_restXmlOwnershipControlsRules(input.Rules, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Rule\");\n      bodyNode.addChildNode(node);\n    });\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlOwnershipControlsRule = function (input, context) {\n  var bodyNode = new __XmlNode(\"OwnershipControlsRule\");\n  if (input.ObjectOwnership !== undefined && input.ObjectOwnership !== null) {\n    var node = new __XmlNode(\"ObjectOwnership\").addChildNode(new __XmlText(input.ObjectOwnership)).withName(\"ObjectOwnership\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlOwnershipControlsRules = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    var node = serializeAws_restXmlOwnershipControlsRule(entry, context);\n    return node.withName(\"member\");\n  });\n};\nvar serializeAws_restXmlParquetInput = function (input, context) {\n  var bodyNode = new __XmlNode(\"ParquetInput\");\n  return bodyNode;\n};\nvar serializeAws_restXmlPublicAccessBlockConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"PublicAccessBlockConfiguration\");\n  if (input.BlockPublicAcls !== undefined && input.BlockPublicAcls !== null) {\n    var node = new __XmlNode(\"Setting\").addChildNode(new __XmlText(String(input.BlockPublicAcls))).withName(\"BlockPublicAcls\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.IgnorePublicAcls !== undefined && input.IgnorePublicAcls !== null) {\n    var node = new __XmlNode(\"Setting\").addChildNode(new __XmlText(String(input.IgnorePublicAcls))).withName(\"IgnorePublicAcls\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.BlockPublicPolicy !== undefined && input.BlockPublicPolicy !== null) {\n    var node = new __XmlNode(\"Setting\").addChildNode(new __XmlText(String(input.BlockPublicPolicy))).withName(\"BlockPublicPolicy\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.RestrictPublicBuckets !== undefined && input.RestrictPublicBuckets !== null) {\n    var node = new __XmlNode(\"Setting\").addChildNode(new __XmlText(String(input.RestrictPublicBuckets))).withName(\"RestrictPublicBuckets\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlQueueConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"QueueConfiguration\");\n  if (input.Id !== undefined && input.Id !== null) {\n    var node = new __XmlNode(\"NotificationId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.QueueArn !== undefined && input.QueueArn !== null) {\n    var node = new __XmlNode(\"QueueArn\").addChildNode(new __XmlText(input.QueueArn)).withName(\"Queue\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Events !== undefined && input.Events !== null) {\n    var nodes = serializeAws_restXmlEventList(input.Events, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Event\");\n      bodyNode.addChildNode(node);\n    });\n  }\n  if (input.Filter !== undefined && input.Filter !== null) {\n    var node = serializeAws_restXmlNotificationConfigurationFilter(input.Filter, context).withName(\"Filter\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlQueueConfigurationList = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    var node = serializeAws_restXmlQueueConfiguration(entry, context);\n    return node.withName(\"member\");\n  });\n};\nvar serializeAws_restXmlRedirect = function (input, context) {\n  var bodyNode = new __XmlNode(\"Redirect\");\n  if (input.HostName !== undefined && input.HostName !== null) {\n    var node = new __XmlNode(\"HostName\").addChildNode(new __XmlText(input.HostName)).withName(\"HostName\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.HttpRedirectCode !== undefined && input.HttpRedirectCode !== null) {\n    var node = new __XmlNode(\"HttpRedirectCode\").addChildNode(new __XmlText(input.HttpRedirectCode)).withName(\"HttpRedirectCode\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Protocol !== undefined && input.Protocol !== null) {\n    var node = new __XmlNode(\"Protocol\").addChildNode(new __XmlText(input.Protocol)).withName(\"Protocol\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.ReplaceKeyPrefixWith !== undefined && input.ReplaceKeyPrefixWith !== null) {\n    var node = new __XmlNode(\"ReplaceKeyPrefixWith\").addChildNode(new __XmlText(input.ReplaceKeyPrefixWith)).withName(\"ReplaceKeyPrefixWith\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.ReplaceKeyWith !== undefined && input.ReplaceKeyWith !== null) {\n    var node = new __XmlNode(\"ReplaceKeyWith\").addChildNode(new __XmlText(input.ReplaceKeyWith)).withName(\"ReplaceKeyWith\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlRedirectAllRequestsTo = function (input, context) {\n  var bodyNode = new __XmlNode(\"RedirectAllRequestsTo\");\n  if (input.HostName !== undefined && input.HostName !== null) {\n    var node = new __XmlNode(\"HostName\").addChildNode(new __XmlText(input.HostName)).withName(\"HostName\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Protocol !== undefined && input.Protocol !== null) {\n    var node = new __XmlNode(\"Protocol\").addChildNode(new __XmlText(input.Protocol)).withName(\"Protocol\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlReplicaModifications = function (input, context) {\n  var bodyNode = new __XmlNode(\"ReplicaModifications\");\n  if (input.Status !== undefined && input.Status !== null) {\n    var node = new __XmlNode(\"ReplicaModificationsStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlReplicationConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"ReplicationConfiguration\");\n  if (input.Role !== undefined && input.Role !== null) {\n    var node = new __XmlNode(\"Role\").addChildNode(new __XmlText(input.Role)).withName(\"Role\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Rules !== undefined && input.Rules !== null) {\n    var nodes = serializeAws_restXmlReplicationRules(input.Rules, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Rule\");\n      bodyNode.addChildNode(node);\n    });\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlReplicationRule = function (input, context) {\n  var bodyNode = new __XmlNode(\"ReplicationRule\");\n  if (input.ID !== undefined && input.ID !== null) {\n    var node = new __XmlNode(\"ID\").addChildNode(new __XmlText(input.ID)).withName(\"ID\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Priority !== undefined && input.Priority !== null) {\n    var node = new __XmlNode(\"Priority\").addChildNode(new __XmlText(String(input.Priority))).withName(\"Priority\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Filter !== undefined && input.Filter !== null) {\n    var node = serializeAws_restXmlReplicationRuleFilter(input.Filter, context).withName(\"Filter\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Status !== undefined && input.Status !== null) {\n    var node = new __XmlNode(\"ReplicationRuleStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.SourceSelectionCriteria !== undefined && input.SourceSelectionCriteria !== null) {\n    var node = serializeAws_restXmlSourceSelectionCriteria(input.SourceSelectionCriteria, context).withName(\"SourceSelectionCriteria\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.ExistingObjectReplication !== undefined && input.ExistingObjectReplication !== null) {\n    var node = serializeAws_restXmlExistingObjectReplication(input.ExistingObjectReplication, context).withName(\"ExistingObjectReplication\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Destination !== undefined && input.Destination !== null) {\n    var node = serializeAws_restXmlDestination(input.Destination, context).withName(\"Destination\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.DeleteMarkerReplication !== undefined && input.DeleteMarkerReplication !== null) {\n    var node = serializeAws_restXmlDeleteMarkerReplication(input.DeleteMarkerReplication, context).withName(\"DeleteMarkerReplication\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlReplicationRuleAndOperator = function (input, context) {\n  var bodyNode = new __XmlNode(\"ReplicationRuleAndOperator\");\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Tags !== undefined && input.Tags !== null) {\n    var nodes = serializeAws_restXmlTagSet(input.Tags, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Tag\");\n      bodyNode.addChildNode(node);\n    });\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlReplicationRuleFilter = function (input, context) {\n  var bodyNode = new __XmlNode(\"ReplicationRuleFilter\");\n  ReplicationRuleFilter.visit(input, {\n    Prefix: function (value) {\n      var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(value)).withName(\"Prefix\");\n      bodyNode.addChildNode(node);\n    },\n    Tag: function (value) {\n      var node = serializeAws_restXmlTag(value, context).withName(\"Tag\");\n      bodyNode.addChildNode(node);\n    },\n    And: function (value) {\n      var node = serializeAws_restXmlReplicationRuleAndOperator(value, context).withName(\"And\");\n      bodyNode.addChildNode(node);\n    },\n    _: function (name, value) {\n      if (!(value instanceof __XmlNode || value instanceof __XmlText)) {\n        throw new Error(\"Unable to serialize unknown union members in XML.\");\n      }\n      bodyNode.addChildNode(new __XmlNode(name).addChildNode(value));\n    }\n  });\n  return bodyNode;\n};\nvar serializeAws_restXmlReplicationRules = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    var node = serializeAws_restXmlReplicationRule(entry, context);\n    return node.withName(\"member\");\n  });\n};\nvar serializeAws_restXmlReplicationTime = function (input, context) {\n  var bodyNode = new __XmlNode(\"ReplicationTime\");\n  if (input.Status !== undefined && input.Status !== null) {\n    var node = new __XmlNode(\"ReplicationTimeStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Time !== undefined && input.Time !== null) {\n    var node = serializeAws_restXmlReplicationTimeValue(input.Time, context).withName(\"Time\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlReplicationTimeValue = function (input, context) {\n  var bodyNode = new __XmlNode(\"ReplicationTimeValue\");\n  if (input.Minutes !== undefined && input.Minutes !== null) {\n    var node = new __XmlNode(\"Minutes\").addChildNode(new __XmlText(String(input.Minutes))).withName(\"Minutes\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlRequestPaymentConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"RequestPaymentConfiguration\");\n  if (input.Payer !== undefined && input.Payer !== null) {\n    var node = new __XmlNode(\"Payer\").addChildNode(new __XmlText(input.Payer)).withName(\"Payer\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlRequestProgress = function (input, context) {\n  var bodyNode = new __XmlNode(\"RequestProgress\");\n  if (input.Enabled !== undefined && input.Enabled !== null) {\n    var node = new __XmlNode(\"EnableRequestProgress\").addChildNode(new __XmlText(String(input.Enabled))).withName(\"Enabled\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlRestoreRequest = function (input, context) {\n  var bodyNode = new __XmlNode(\"RestoreRequest\");\n  if (input.Days !== undefined && input.Days !== null) {\n    var node = new __XmlNode(\"Days\").addChildNode(new __XmlText(String(input.Days))).withName(\"Days\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.GlacierJobParameters !== undefined && input.GlacierJobParameters !== null) {\n    var node = serializeAws_restXmlGlacierJobParameters(input.GlacierJobParameters, context).withName(\"GlacierJobParameters\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Type !== undefined && input.Type !== null) {\n    var node = new __XmlNode(\"RestoreRequestType\").addChildNode(new __XmlText(input.Type)).withName(\"Type\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Tier !== undefined && input.Tier !== null) {\n    var node = new __XmlNode(\"Tier\").addChildNode(new __XmlText(input.Tier)).withName(\"Tier\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Description !== undefined && input.Description !== null) {\n    var node = new __XmlNode(\"Description\").addChildNode(new __XmlText(input.Description)).withName(\"Description\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.SelectParameters !== undefined && input.SelectParameters !== null) {\n    var node = serializeAws_restXmlSelectParameters(input.SelectParameters, context).withName(\"SelectParameters\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.OutputLocation !== undefined && input.OutputLocation !== null) {\n    var node = serializeAws_restXmlOutputLocation(input.OutputLocation, context).withName(\"OutputLocation\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlRoutingRule = function (input, context) {\n  var bodyNode = new __XmlNode(\"RoutingRule\");\n  if (input.Condition !== undefined && input.Condition !== null) {\n    var node = serializeAws_restXmlCondition(input.Condition, context).withName(\"Condition\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Redirect !== undefined && input.Redirect !== null) {\n    var node = serializeAws_restXmlRedirect(input.Redirect, context).withName(\"Redirect\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlRoutingRules = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    var node = serializeAws_restXmlRoutingRule(entry, context);\n    return node.withName(\"RoutingRule\");\n  });\n};\nvar serializeAws_restXmlS3KeyFilter = function (input, context) {\n  var bodyNode = new __XmlNode(\"S3KeyFilter\");\n  if (input.FilterRules !== undefined && input.FilterRules !== null) {\n    var nodes = serializeAws_restXmlFilterRuleList(input.FilterRules, context);\n    nodes.map(function (node) {\n      node = node.withName(\"FilterRule\");\n      bodyNode.addChildNode(node);\n    });\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlS3Location = function (input, context) {\n  var bodyNode = new __XmlNode(\"S3Location\");\n  if (input.BucketName !== undefined && input.BucketName !== null) {\n    var node = new __XmlNode(\"BucketName\").addChildNode(new __XmlText(input.BucketName)).withName(\"BucketName\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    var node = new __XmlNode(\"LocationPrefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Encryption !== undefined && input.Encryption !== null) {\n    var node = serializeAws_restXmlEncryption(input.Encryption, context).withName(\"Encryption\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.CannedACL !== undefined && input.CannedACL !== null) {\n    var node = new __XmlNode(\"ObjectCannedACL\").addChildNode(new __XmlText(input.CannedACL)).withName(\"CannedACL\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.AccessControlList !== undefined && input.AccessControlList !== null) {\n    var nodes = serializeAws_restXmlGrants(input.AccessControlList, context);\n    var containerNode_4 = new __XmlNode(\"AccessControlList\");\n    nodes.map(function (node) {\n      containerNode_4.addChildNode(node);\n    });\n    bodyNode.addChildNode(containerNode_4);\n  }\n  if (input.Tagging !== undefined && input.Tagging !== null) {\n    var node = serializeAws_restXmlTagging(input.Tagging, context).withName(\"Tagging\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.UserMetadata !== undefined && input.UserMetadata !== null) {\n    var nodes = serializeAws_restXmlUserMetadata(input.UserMetadata, context);\n    var containerNode_5 = new __XmlNode(\"UserMetadata\");\n    nodes.map(function (node) {\n      containerNode_5.addChildNode(node);\n    });\n    bodyNode.addChildNode(containerNode_5);\n  }\n  if (input.StorageClass !== undefined && input.StorageClass !== null) {\n    var node = new __XmlNode(\"StorageClass\").addChildNode(new __XmlText(input.StorageClass)).withName(\"StorageClass\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlScanRange = function (input, context) {\n  var bodyNode = new __XmlNode(\"ScanRange\");\n  if (input.Start !== undefined && input.Start !== null) {\n    var node = new __XmlNode(\"Start\").addChildNode(new __XmlText(String(input.Start))).withName(\"Start\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.End !== undefined && input.End !== null) {\n    var node = new __XmlNode(\"End\").addChildNode(new __XmlText(String(input.End))).withName(\"End\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlSelectParameters = function (input, context) {\n  var bodyNode = new __XmlNode(\"SelectParameters\");\n  if (input.InputSerialization !== undefined && input.InputSerialization !== null) {\n    var node = serializeAws_restXmlInputSerialization(input.InputSerialization, context).withName(\"InputSerialization\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.ExpressionType !== undefined && input.ExpressionType !== null) {\n    var node = new __XmlNode(\"ExpressionType\").addChildNode(new __XmlText(input.ExpressionType)).withName(\"ExpressionType\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Expression !== undefined && input.Expression !== null) {\n    var node = new __XmlNode(\"Expression\").addChildNode(new __XmlText(input.Expression)).withName(\"Expression\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.OutputSerialization !== undefined && input.OutputSerialization !== null) {\n    var node = serializeAws_restXmlOutputSerialization(input.OutputSerialization, context).withName(\"OutputSerialization\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlServerSideEncryptionByDefault = function (input, context) {\n  var bodyNode = new __XmlNode(\"ServerSideEncryptionByDefault\");\n  if (input.SSEAlgorithm !== undefined && input.SSEAlgorithm !== null) {\n    var node = new __XmlNode(\"ServerSideEncryption\").addChildNode(new __XmlText(input.SSEAlgorithm)).withName(\"SSEAlgorithm\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.KMSMasterKeyID !== undefined && input.KMSMasterKeyID !== null) {\n    var node = new __XmlNode(\"SSEKMSKeyId\").addChildNode(new __XmlText(input.KMSMasterKeyID)).withName(\"KMSMasterKeyID\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlServerSideEncryptionConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"ServerSideEncryptionConfiguration\");\n  if (input.Rules !== undefined && input.Rules !== null) {\n    var nodes = serializeAws_restXmlServerSideEncryptionRules(input.Rules, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Rule\");\n      bodyNode.addChildNode(node);\n    });\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlServerSideEncryptionRule = function (input, context) {\n  var bodyNode = new __XmlNode(\"ServerSideEncryptionRule\");\n  if (input.ApplyServerSideEncryptionByDefault !== undefined && input.ApplyServerSideEncryptionByDefault !== null) {\n    var node = serializeAws_restXmlServerSideEncryptionByDefault(input.ApplyServerSideEncryptionByDefault, context).withName(\"ApplyServerSideEncryptionByDefault\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.BucketKeyEnabled !== undefined && input.BucketKeyEnabled !== null) {\n    var node = new __XmlNode(\"BucketKeyEnabled\").addChildNode(new __XmlText(String(input.BucketKeyEnabled))).withName(\"BucketKeyEnabled\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlServerSideEncryptionRules = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    var node = serializeAws_restXmlServerSideEncryptionRule(entry, context);\n    return node.withName(\"member\");\n  });\n};\nvar serializeAws_restXmlSourceSelectionCriteria = function (input, context) {\n  var bodyNode = new __XmlNode(\"SourceSelectionCriteria\");\n  if (input.SseKmsEncryptedObjects !== undefined && input.SseKmsEncryptedObjects !== null) {\n    var node = serializeAws_restXmlSseKmsEncryptedObjects(input.SseKmsEncryptedObjects, context).withName(\"SseKmsEncryptedObjects\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.ReplicaModifications !== undefined && input.ReplicaModifications !== null) {\n    var node = serializeAws_restXmlReplicaModifications(input.ReplicaModifications, context).withName(\"ReplicaModifications\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlSSEKMS = function (input, context) {\n  var bodyNode = new __XmlNode(\"SSE-KMS\");\n  if (input.KeyId !== undefined && input.KeyId !== null) {\n    var node = new __XmlNode(\"SSEKMSKeyId\").addChildNode(new __XmlText(input.KeyId)).withName(\"KeyId\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlSseKmsEncryptedObjects = function (input, context) {\n  var bodyNode = new __XmlNode(\"SseKmsEncryptedObjects\");\n  if (input.Status !== undefined && input.Status !== null) {\n    var node = new __XmlNode(\"SseKmsEncryptedObjectsStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlSSES3 = function (input, context) {\n  var bodyNode = new __XmlNode(\"SSE-S3\");\n  return bodyNode;\n};\nvar serializeAws_restXmlStorageClassAnalysis = function (input, context) {\n  var bodyNode = new __XmlNode(\"StorageClassAnalysis\");\n  if (input.DataExport !== undefined && input.DataExport !== null) {\n    var node = serializeAws_restXmlStorageClassAnalysisDataExport(input.DataExport, context).withName(\"DataExport\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlStorageClassAnalysisDataExport = function (input, context) {\n  var bodyNode = new __XmlNode(\"StorageClassAnalysisDataExport\");\n  if (input.OutputSchemaVersion !== undefined && input.OutputSchemaVersion !== null) {\n    var node = new __XmlNode(\"StorageClassAnalysisSchemaVersion\").addChildNode(new __XmlText(input.OutputSchemaVersion)).withName(\"OutputSchemaVersion\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Destination !== undefined && input.Destination !== null) {\n    var node = serializeAws_restXmlAnalyticsExportDestination(input.Destination, context).withName(\"Destination\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlTag = function (input, context) {\n  var bodyNode = new __XmlNode(\"Tag\");\n  if (input.Key !== undefined && input.Key !== null) {\n    var node = new __XmlNode(\"ObjectKey\").addChildNode(new __XmlText(input.Key)).withName(\"Key\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Value !== undefined && input.Value !== null) {\n    var node = new __XmlNode(\"Value\").addChildNode(new __XmlText(input.Value)).withName(\"Value\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlTagging = function (input, context) {\n  var bodyNode = new __XmlNode(\"Tagging\");\n  if (input.TagSet !== undefined && input.TagSet !== null) {\n    var nodes = serializeAws_restXmlTagSet(input.TagSet, context);\n    var containerNode_6 = new __XmlNode(\"TagSet\");\n    nodes.map(function (node) {\n      containerNode_6.addChildNode(node);\n    });\n    bodyNode.addChildNode(containerNode_6);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlTagSet = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    var node = serializeAws_restXmlTag(entry, context);\n    return node.withName(\"Tag\");\n  });\n};\nvar serializeAws_restXmlTargetGrant = function (input, context) {\n  var bodyNode = new __XmlNode(\"TargetGrant\");\n  if (input.Grantee !== undefined && input.Grantee !== null) {\n    var node = serializeAws_restXmlGrantee(input.Grantee, context).withName(\"Grantee\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Permission !== undefined && input.Permission !== null) {\n    var node = new __XmlNode(\"BucketLogsPermission\").addChildNode(new __XmlText(input.Permission)).withName(\"Permission\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlTargetGrants = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    var node = serializeAws_restXmlTargetGrant(entry, context);\n    return node.withName(\"Grant\");\n  });\n};\nvar serializeAws_restXmlTiering = function (input, context) {\n  var bodyNode = new __XmlNode(\"Tiering\");\n  if (input.Days !== undefined && input.Days !== null) {\n    var node = new __XmlNode(\"IntelligentTieringDays\").addChildNode(new __XmlText(String(input.Days))).withName(\"Days\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.AccessTier !== undefined && input.AccessTier !== null) {\n    var node = new __XmlNode(\"IntelligentTieringAccessTier\").addChildNode(new __XmlText(input.AccessTier)).withName(\"AccessTier\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlTieringList = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    var node = serializeAws_restXmlTiering(entry, context);\n    return node.withName(\"member\");\n  });\n};\nvar serializeAws_restXmlTopicConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"TopicConfiguration\");\n  if (input.Id !== undefined && input.Id !== null) {\n    var node = new __XmlNode(\"NotificationId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.TopicArn !== undefined && input.TopicArn !== null) {\n    var node = new __XmlNode(\"TopicArn\").addChildNode(new __XmlText(input.TopicArn)).withName(\"Topic\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Events !== undefined && input.Events !== null) {\n    var nodes = serializeAws_restXmlEventList(input.Events, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Event\");\n      bodyNode.addChildNode(node);\n    });\n  }\n  if (input.Filter !== undefined && input.Filter !== null) {\n    var node = serializeAws_restXmlNotificationConfigurationFilter(input.Filter, context).withName(\"Filter\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlTopicConfigurationList = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    var node = serializeAws_restXmlTopicConfiguration(entry, context);\n    return node.withName(\"member\");\n  });\n};\nvar serializeAws_restXmlTransition = function (input, context) {\n  var bodyNode = new __XmlNode(\"Transition\");\n  if (input.Date !== undefined && input.Date !== null) {\n    var node = new __XmlNode(\"Date\").addChildNode(new __XmlText(input.Date.toISOString().split(\".\")[0] + \"Z\")).withName(\"Date\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Days !== undefined && input.Days !== null) {\n    var node = new __XmlNode(\"Days\").addChildNode(new __XmlText(String(input.Days))).withName(\"Days\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.StorageClass !== undefined && input.StorageClass !== null) {\n    var node = new __XmlNode(\"TransitionStorageClass\").addChildNode(new __XmlText(input.StorageClass)).withName(\"StorageClass\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlTransitionList = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    var node = serializeAws_restXmlTransition(entry, context);\n    return node.withName(\"member\");\n  });\n};\nvar serializeAws_restXmlUserMetadata = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    var node = serializeAws_restXmlMetadataEntry(entry, context);\n    return node.withName(\"MetadataEntry\");\n  });\n};\nvar serializeAws_restXmlVersioningConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"VersioningConfiguration\");\n  if (input.MFADelete !== undefined && input.MFADelete !== null) {\n    var node = new __XmlNode(\"MFADelete\").addChildNode(new __XmlText(input.MFADelete)).withName(\"MfaDelete\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Status !== undefined && input.Status !== null) {\n    var node = new __XmlNode(\"BucketVersioningStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\nvar serializeAws_restXmlWebsiteConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"WebsiteConfiguration\");\n  if (input.ErrorDocument !== undefined && input.ErrorDocument !== null) {\n    var node = serializeAws_restXmlErrorDocument(input.ErrorDocument, context).withName(\"ErrorDocument\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.IndexDocument !== undefined && input.IndexDocument !== null) {\n    var node = serializeAws_restXmlIndexDocument(input.IndexDocument, context).withName(\"IndexDocument\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.RedirectAllRequestsTo !== undefined && input.RedirectAllRequestsTo !== null) {\n    var node = serializeAws_restXmlRedirectAllRequestsTo(input.RedirectAllRequestsTo, context).withName(\"RedirectAllRequestsTo\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.RoutingRules !== undefined && input.RoutingRules !== null) {\n    var nodes = serializeAws_restXmlRoutingRules(input.RoutingRules, context);\n    var containerNode_7 = new __XmlNode(\"RoutingRules\");\n    nodes.map(function (node) {\n      containerNode_7.addChildNode(node);\n    });\n    bodyNode.addChildNode(containerNode_7);\n  }\n  return bodyNode;\n};\nvar deserializeAws_restXmlAbortIncompleteMultipartUpload = function (output, context) {\n  var contents = {\n    DaysAfterInitiation: undefined\n  };\n  if (output[\"DaysAfterInitiation\"] !== undefined) {\n    contents.DaysAfterInitiation = parseInt(output[\"DaysAfterInitiation\"]);\n  }\n  return contents;\n};\nvar deserializeAws_restXmlAccessControlTranslation = function (output, context) {\n  var contents = {\n    Owner: undefined\n  };\n  if (output[\"Owner\"] !== undefined) {\n    contents.Owner = output[\"Owner\"];\n  }\n  return contents;\n};\nvar deserializeAws_restXmlAllowedHeaders = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return entry;\n  });\n};\nvar deserializeAws_restXmlAllowedMethods = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return entry;\n  });\n};\nvar deserializeAws_restXmlAllowedOrigins = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return entry;\n  });\n};\nvar deserializeAws_restXmlAnalyticsAndOperator = function (output, context) {\n  var contents = {\n    Prefix: undefined,\n    Tags: undefined\n  };\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n  if (output.Tag === \"\") {\n    contents.Tags = [];\n  }\n  if (output[\"Tag\"] !== undefined) {\n    contents.Tags = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(output[\"Tag\"]), context);\n  }\n  return contents;\n};\nvar deserializeAws_restXmlAnalyticsConfiguration = function (output, context) {\n  var contents = {\n    Id: undefined,\n    Filter: undefined,\n    StorageClassAnalysis: undefined\n  };\n  if (output[\"Id\"] !== undefined) {\n    contents.Id = output[\"Id\"];\n  }\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlAnalyticsFilter(output[\"Filter\"], context);\n  }\n  if (output[\"StorageClassAnalysis\"] !== undefined) {\n    contents.StorageClassAnalysis = deserializeAws_restXmlStorageClassAnalysis(output[\"StorageClassAnalysis\"], context);\n  }\n  return contents;\n};\nvar deserializeAws_restXmlAnalyticsConfigurationList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_restXmlAnalyticsConfiguration(entry, context);\n  });\n};\nvar deserializeAws_restXmlAnalyticsExportDestination = function (output, context) {\n  var contents = {\n    S3BucketDestination: undefined\n  };\n  if (output[\"S3BucketDestination\"] !== undefined) {\n    contents.S3BucketDestination = deserializeAws_restXmlAnalyticsS3BucketDestination(output[\"S3BucketDestination\"], context);\n  }\n  return contents;\n};\nvar deserializeAws_restXmlAnalyticsFilter = function (output, context) {\n  if (output[\"Prefix\"] !== undefined) {\n    return {\n      Prefix: output[\"Prefix\"]\n    };\n  }\n  if (output[\"Tag\"] !== undefined) {\n    return {\n      Tag: deserializeAws_restXmlTag(output[\"Tag\"], context)\n    };\n  }\n  if (output[\"And\"] !== undefined) {\n    return {\n      And: deserializeAws_restXmlAnalyticsAndOperator(output[\"And\"], context)\n    };\n  }\n  return {\n    $unknown: Object.entries(output)[0]\n  };\n};\nvar deserializeAws_restXmlAnalyticsS3BucketDestination = function (output, context) {\n  var contents = {\n    Format: undefined,\n    BucketAccountId: undefined,\n    Bucket: undefined,\n    Prefix: undefined\n  };\n  if (output[\"Format\"] !== undefined) {\n    contents.Format = output[\"Format\"];\n  }\n  if (output[\"BucketAccountId\"] !== undefined) {\n    contents.BucketAccountId = output[\"BucketAccountId\"];\n  }\n  if (output[\"Bucket\"] !== undefined) {\n    contents.Bucket = output[\"Bucket\"];\n  }\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n  return contents;\n};\nvar deserializeAws_restXmlBucket = function (output, context) {\n  var contents = {\n    Name: undefined,\n    CreationDate: undefined\n  };\n  if (output[\"Name\"] !== undefined) {\n    contents.Name = output[\"Name\"];\n  }\n  if (output[\"CreationDate\"] !== undefined) {\n    contents.CreationDate = new Date(output[\"CreationDate\"]);\n  }\n  return contents;\n};\nvar deserializeAws_restXmlBuckets = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_restXmlBucket(entry, context);\n  });\n};\nvar deserializeAws_restXmlCommonPrefix = function (output, context) {\n  var contents = {\n    Prefix: undefined\n  };\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n  return contents;\n};\nvar deserializeAws_restXmlCommonPrefixList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_restXmlCommonPrefix(entry, context);\n  });\n};\nvar deserializeAws_restXmlCondition = function (output, context) {\n  var contents = {\n    HttpErrorCodeReturnedEquals: undefined,\n    KeyPrefixEquals: undefined\n  };\n  if (output[\"HttpErrorCodeReturnedEquals\"] !== undefined) {\n    contents.HttpErrorCodeReturnedEquals = output[\"HttpErrorCodeReturnedEquals\"];\n  }\n  if (output[\"KeyPrefixEquals\"] !== undefined) {\n    contents.KeyPrefixEquals = output[\"KeyPrefixEquals\"];\n  }\n  return contents;\n};\nvar deserializeAws_restXmlCopyObjectResult = function (output, context) {\n  var contents = {\n    ETag: undefined,\n    LastModified: undefined\n  };\n  if (output[\"ETag\"] !== undefined) {\n    contents.ETag = output[\"ETag\"];\n  }\n  if (output[\"LastModified\"] !== undefined) {\n    contents.LastModified = new Date(output[\"LastModified\"]);\n  }\n  return contents;\n};\nvar deserializeAws_restXmlCopyPartResult = function (output, context) {\n  var contents = {\n    ETag: undefined,\n    LastModified: undefined\n  };\n  if (output[\"ETag\"] !== undefined) {\n    contents.ETag = output[\"ETag\"];\n  }\n  if (output[\"LastModified\"] !== undefined) {\n    contents.LastModified = new Date(output[\"LastModified\"]);\n  }\n  return contents;\n};\nvar deserializeAws_restXmlCORSRule = function (output, context) {\n  var contents = {\n    AllowedHeaders: undefined,\n    AllowedMethods: undefined,\n    AllowedOrigins: undefined,\n    ExposeHeaders: undefined,\n    MaxAgeSeconds: undefined\n  };\n  if (output.AllowedHeader === \"\") {\n    contents.AllowedHeaders = [];\n  }\n  if (output[\"AllowedHeader\"] !== undefined) {\n    contents.AllowedHeaders = deserializeAws_restXmlAllowedHeaders(__getArrayIfSingleItem(output[\"AllowedHeader\"]), context);\n  }\n  if (output.AllowedMethod === \"\") {\n    contents.AllowedMethods = [];\n  }\n  if (output[\"AllowedMethod\"] !== undefined) {\n    contents.AllowedMethods = deserializeAws_restXmlAllowedMethods(__getArrayIfSingleItem(output[\"AllowedMethod\"]), context);\n  }\n  if (output.AllowedOrigin === \"\") {\n    contents.AllowedOrigins = [];\n  }\n  if (output[\"AllowedOrigin\"] !== undefined) {\n    contents.AllowedOrigins = deserializeAws_restXmlAllowedOrigins(__getArrayIfSingleItem(output[\"AllowedOrigin\"]), context);\n  }\n  if (output.ExposeHeader === \"\") {\n    contents.ExposeHeaders = [];\n  }\n  if (output[\"ExposeHeader\"] !== undefined) {\n    contents.ExposeHeaders = deserializeAws_restXmlExposeHeaders(__getArrayIfSingleItem(output[\"ExposeHeader\"]), context);\n  }\n  if (output[\"MaxAgeSeconds\"] !== undefined) {\n    contents.MaxAgeSeconds = parseInt(output[\"MaxAgeSeconds\"]);\n  }\n  return contents;\n};\nvar deserializeAws_restXmlCORSRules = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_restXmlCORSRule(entry, context);\n  });\n};\nvar deserializeAws_restXmlDefaultRetention = function (output, context) {\n  var contents = {\n    Mode: undefined,\n    Days: undefined,\n    Years: undefined\n  };\n  if (output[\"Mode\"] !== undefined) {\n    contents.Mode = output[\"Mode\"];\n  }\n  if (output[\"Days\"] !== undefined) {\n    contents.Days = parseInt(output[\"Days\"]);\n  }\n  if (output[\"Years\"] !== undefined) {\n    contents.Years = parseInt(output[\"Years\"]);\n  }\n  return contents;\n};\nvar deserializeAws_restXmlDeletedObject = function (output, context) {\n  var contents = {\n    Key: undefined,\n    VersionId: undefined,\n    DeleteMarker: undefined,\n    DeleteMarkerVersionId: undefined\n  };\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = output[\"Key\"];\n  }\n  if (output[\"VersionId\"] !== undefined) {\n    contents.VersionId = output[\"VersionId\"];\n  }\n  if (output[\"DeleteMarker\"] !== undefined) {\n    contents.DeleteMarker = output[\"DeleteMarker\"] == \"true\";\n  }\n  if (output[\"DeleteMarkerVersionId\"] !== undefined) {\n    contents.DeleteMarkerVersionId = output[\"DeleteMarkerVersionId\"];\n  }\n  return contents;\n};\nvar deserializeAws_restXmlDeletedObjects = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_restXmlDeletedObject(entry, context);\n  });\n};\nvar deserializeAws_restXmlDeleteMarkerEntry = function (output, context) {\n  var contents = {\n    Owner: undefined,\n    Key: undefined,\n    VersionId: undefined,\n    IsLatest: undefined,\n    LastModified: undefined\n  };\n  if (output[\"Owner\"] !== undefined) {\n    contents.Owner = deserializeAws_restXmlOwner(output[\"Owner\"], context);\n  }\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = output[\"Key\"];\n  }\n  if (output[\"VersionId\"] !== undefined) {\n    contents.VersionId = output[\"VersionId\"];\n  }\n  if (output[\"IsLatest\"] !== undefined) {\n    contents.IsLatest = output[\"IsLatest\"] == \"true\";\n  }\n  if (output[\"LastModified\"] !== undefined) {\n    contents.LastModified = new Date(output[\"LastModified\"]);\n  }\n  return contents;\n};\nvar deserializeAws_restXmlDeleteMarkerReplication = function (output, context) {\n  var contents = {\n    Status: undefined\n  };\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = output[\"Status\"];\n  }\n  return contents;\n};\nvar deserializeAws_restXmlDeleteMarkers = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_restXmlDeleteMarkerEntry(entry, context);\n  });\n};\nvar deserializeAws_restXmlDestination = function (output, context) {\n  var contents = {\n    Bucket: undefined,\n    Account: undefined,\n    StorageClass: undefined,\n    AccessControlTranslation: undefined,\n    EncryptionConfiguration: undefined,\n    ReplicationTime: undefined,\n    Metrics: undefined\n  };\n  if (output[\"Bucket\"] !== undefined) {\n    contents.Bucket = output[\"Bucket\"];\n  }\n  if (output[\"Account\"] !== undefined) {\n    contents.Account = output[\"Account\"];\n  }\n  if (output[\"StorageClass\"] !== undefined) {\n    contents.StorageClass = output[\"StorageClass\"];\n  }\n  if (output[\"AccessControlTranslation\"] !== undefined) {\n    contents.AccessControlTranslation = deserializeAws_restXmlAccessControlTranslation(output[\"AccessControlTranslation\"], context);\n  }\n  if (output[\"EncryptionConfiguration\"] !== undefined) {\n    contents.EncryptionConfiguration = deserializeAws_restXmlEncryptionConfiguration(output[\"EncryptionConfiguration\"], context);\n  }\n  if (output[\"ReplicationTime\"] !== undefined) {\n    contents.ReplicationTime = deserializeAws_restXmlReplicationTime(output[\"ReplicationTime\"], context);\n  }\n  if (output[\"Metrics\"] !== undefined) {\n    contents.Metrics = deserializeAws_restXmlMetrics(output[\"Metrics\"], context);\n  }\n  return contents;\n};\nvar deserializeAws_restXmlEncryptionConfiguration = function (output, context) {\n  var contents = {\n    ReplicaKmsKeyID: undefined\n  };\n  if (output[\"ReplicaKmsKeyID\"] !== undefined) {\n    contents.ReplicaKmsKeyID = output[\"ReplicaKmsKeyID\"];\n  }\n  return contents;\n};\nvar deserializeAws_restXml_Error = function (output, context) {\n  var contents = {\n    Key: undefined,\n    VersionId: undefined,\n    Code: undefined,\n    Message: undefined\n  };\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = output[\"Key\"];\n  }\n  if (output[\"VersionId\"] !== undefined) {\n    contents.VersionId = output[\"VersionId\"];\n  }\n  if (output[\"Code\"] !== undefined) {\n    contents.Code = output[\"Code\"];\n  }\n  if (output[\"Message\"] !== undefined) {\n    contents.Message = output[\"Message\"];\n  }\n  return contents;\n};\nvar deserializeAws_restXmlErrorDocument = function (output, context) {\n  var contents = {\n    Key: undefined\n  };\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = output[\"Key\"];\n  }\n  return contents;\n};\nvar deserializeAws_restXmlErrors = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_restXml_Error(entry, context);\n  });\n};\nvar deserializeAws_restXmlEventList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return entry;\n  });\n};\nvar deserializeAws_restXmlExistingObjectReplication = function (output, context) {\n  var contents = {\n    Status: undefined\n  };\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = output[\"Status\"];\n  }\n  return contents;\n};\nvar deserializeAws_restXmlExposeHeaders = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return entry;\n  });\n};\nvar deserializeAws_restXmlFilterRule = function (output, context) {\n  var contents = {\n    Name: undefined,\n    Value: undefined\n  };\n  if (output[\"Name\"] !== undefined) {\n    contents.Name = output[\"Name\"];\n  }\n  if (output[\"Value\"] !== undefined) {\n    contents.Value = output[\"Value\"];\n  }\n  return contents;\n};\nvar deserializeAws_restXmlFilterRuleList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_restXmlFilterRule(entry, context);\n  });\n};\nvar deserializeAws_restXmlGrant = function (output, context) {\n  var contents = {\n    Grantee: undefined,\n    Permission: undefined\n  };\n  if (output[\"Grantee\"] !== undefined) {\n    contents.Grantee = deserializeAws_restXmlGrantee(output[\"Grantee\"], context);\n  }\n  if (output[\"Permission\"] !== undefined) {\n    contents.Permission = output[\"Permission\"];\n  }\n  return contents;\n};\nvar deserializeAws_restXmlGrantee = function (output, context) {\n  var contents = {\n    DisplayName: undefined,\n    EmailAddress: undefined,\n    ID: undefined,\n    URI: undefined,\n    Type: undefined\n  };\n  if (output[\"DisplayName\"] !== undefined) {\n    contents.DisplayName = output[\"DisplayName\"];\n  }\n  if (output[\"EmailAddress\"] !== undefined) {\n    contents.EmailAddress = output[\"EmailAddress\"];\n  }\n  if (output[\"ID\"] !== undefined) {\n    contents.ID = output[\"ID\"];\n  }\n  if (output[\"URI\"] !== undefined) {\n    contents.URI = output[\"URI\"];\n  }\n  if (output[\"xsi:type\"] !== undefined) {\n    contents.Type = output[\"xsi:type\"];\n  }\n  return contents;\n};\nvar deserializeAws_restXmlGrants = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_restXmlGrant(entry, context);\n  });\n};\nvar deserializeAws_restXmlIndexDocument = function (output, context) {\n  var contents = {\n    Suffix: undefined\n  };\n  if (output[\"Suffix\"] !== undefined) {\n    contents.Suffix = output[\"Suffix\"];\n  }\n  return contents;\n};\nvar deserializeAws_restXmlInitiator = function (output, context) {\n  var contents = {\n    ID: undefined,\n    DisplayName: undefined\n  };\n  if (output[\"ID\"] !== undefined) {\n    contents.ID = output[\"ID\"];\n  }\n  if (output[\"DisplayName\"] !== undefined) {\n    contents.DisplayName = output[\"DisplayName\"];\n  }\n  return contents;\n};\nvar deserializeAws_restXmlIntelligentTieringAndOperator = function (output, context) {\n  var contents = {\n    Prefix: undefined,\n    Tags: undefined\n  };\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n  if (output.Tag === \"\") {\n    contents.Tags = [];\n  }\n  if (output[\"Tag\"] !== undefined) {\n    contents.Tags = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(output[\"Tag\"]), context);\n  }\n  return contents;\n};\nvar deserializeAws_restXmlIntelligentTieringConfiguration = function (output, context) {\n  var contents = {\n    Id: undefined,\n    Filter: undefined,\n    Status: undefined,\n    Tierings: undefined\n  };\n  if (output[\"Id\"] !== undefined) {\n    contents.Id = output[\"Id\"];\n  }\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlIntelligentTieringFilter(output[\"Filter\"], context);\n  }\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = output[\"Status\"];\n  }\n  if (output.Tiering === \"\") {\n    contents.Tierings = [];\n  }\n  if (output[\"Tiering\"] !== undefined) {\n    contents.Tierings = deserializeAws_restXmlTieringList(__getArrayIfSingleItem(output[\"Tiering\"]), context);\n  }\n  return contents;\n};\nvar deserializeAws_restXmlIntelligentTieringConfigurationList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_restXmlIntelligentTieringConfiguration(entry, context);\n  });\n};\nvar deserializeAws_restXmlIntelligentTieringFilter = function (output, context) {\n  var contents = {\n    Prefix: undefined,\n    Tag: undefined,\n    And: undefined\n  };\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n  if (output[\"Tag\"] !== undefined) {\n    contents.Tag = deserializeAws_restXmlTag(output[\"Tag\"], context);\n  }\n  if (output[\"And\"] !== undefined) {\n    contents.And = deserializeAws_restXmlIntelligentTieringAndOperator(output[\"And\"], context);\n  }\n  return contents;\n};\nvar deserializeAws_restXmlInventoryConfiguration = function (output, context) {\n  var contents = {\n    Destination: undefined,\n    IsEnabled: undefined,\n    Filter: undefined,\n    Id: undefined,\n    IncludedObjectVersions: undefined,\n    OptionalFields: undefined,\n    Schedule: undefined\n  };\n  if (output[\"Destination\"] !== undefined) {\n    contents.Destination = deserializeAws_restXmlInventoryDestination(output[\"Destination\"], context);\n  }\n  if (output[\"IsEnabled\"] !== undefined) {\n    contents.IsEnabled = output[\"IsEnabled\"] == \"true\";\n  }\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlInventoryFilter(output[\"Filter\"], context);\n  }\n  if (output[\"Id\"] !== undefined) {\n    contents.Id = output[\"Id\"];\n  }\n  if (output[\"IncludedObjectVersions\"] !== undefined) {\n    contents.IncludedObjectVersions = output[\"IncludedObjectVersions\"];\n  }\n  if (output.OptionalFields === \"\") {\n    contents.OptionalFields = [];\n  }\n  if (output[\"OptionalFields\"] !== undefined && output[\"OptionalFields\"][\"Field\"] !== undefined) {\n    contents.OptionalFields = deserializeAws_restXmlInventoryOptionalFields(__getArrayIfSingleItem(output[\"OptionalFields\"][\"Field\"]), context);\n  }\n  if (output[\"Schedule\"] !== undefined) {\n    contents.Schedule = deserializeAws_restXmlInventorySchedule(output[\"Schedule\"], context);\n  }\n  return contents;\n};\nvar deserializeAws_restXmlInventoryConfigurationList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_restXmlInventoryConfiguration(entry, context);\n  });\n};\nvar deserializeAws_restXmlInventoryDestination = function (output, context) {\n  var contents = {\n    S3BucketDestination: undefined\n  };\n  if (output[\"S3BucketDestination\"] !== undefined) {\n    contents.S3BucketDestination = deserializeAws_restXmlInventoryS3BucketDestination(output[\"S3BucketDestination\"], context);\n  }\n  return contents;\n};\nvar deserializeAws_restXmlInventoryEncryption = function (output, context) {\n  var contents = {\n    SSES3: undefined,\n    SSEKMS: undefined\n  };\n  if (output[\"SSE-S3\"] !== undefined) {\n    contents.SSES3 = deserializeAws_restXmlSSES3(output[\"SSE-S3\"], context);\n  }\n  if (output[\"SSE-KMS\"] !== undefined) {\n    contents.SSEKMS = deserializeAws_restXmlSSEKMS(output[\"SSE-KMS\"], context);\n  }\n  return contents;\n};\nvar deserializeAws_restXmlInventoryFilter = function (output, context) {\n  var contents = {\n    Prefix: undefined\n  };\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n  return contents;\n};\nvar deserializeAws_restXmlInventoryOptionalFields = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return entry;\n  });\n};\nvar deserializeAws_restXmlInventoryS3BucketDestination = function (output, context) {\n  var contents = {\n    AccountId: undefined,\n    Bucket: undefined,\n    Format: undefined,\n    Prefix: undefined,\n    Encryption: undefined\n  };\n  if (output[\"AccountId\"] !== undefined) {\n    contents.AccountId = output[\"AccountId\"];\n  }\n  if (output[\"Bucket\"] !== undefined) {\n    contents.Bucket = output[\"Bucket\"];\n  }\n  if (output[\"Format\"] !== undefined) {\n    contents.Format = output[\"Format\"];\n  }\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n  if (output[\"Encryption\"] !== undefined) {\n    contents.Encryption = deserializeAws_restXmlInventoryEncryption(output[\"Encryption\"], context);\n  }\n  return contents;\n};\nvar deserializeAws_restXmlInventorySchedule = function (output, context) {\n  var contents = {\n    Frequency: undefined\n  };\n  if (output[\"Frequency\"] !== undefined) {\n    contents.Frequency = output[\"Frequency\"];\n  }\n  return contents;\n};\nvar deserializeAws_restXmlLambdaFunctionConfiguration = function (output, context) {\n  var contents = {\n    Id: undefined,\n    LambdaFunctionArn: undefined,\n    Events: undefined,\n    Filter: undefined\n  };\n  if (output[\"Id\"] !== undefined) {\n    contents.Id = output[\"Id\"];\n  }\n  if (output[\"CloudFunction\"] !== undefined) {\n    contents.LambdaFunctionArn = output[\"CloudFunction\"];\n  }\n  if (output.Event === \"\") {\n    contents.Events = [];\n  }\n  if (output[\"Event\"] !== undefined) {\n    contents.Events = deserializeAws_restXmlEventList(__getArrayIfSingleItem(output[\"Event\"]), context);\n  }\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlNotificationConfigurationFilter(output[\"Filter\"], context);\n  }\n  return contents;\n};\nvar deserializeAws_restXmlLambdaFunctionConfigurationList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_restXmlLambdaFunctionConfiguration(entry, context);\n  });\n};\nvar deserializeAws_restXmlLifecycleExpiration = function (output, context) {\n  var contents = {\n    Date: undefined,\n    Days: undefined,\n    ExpiredObjectDeleteMarker: undefined\n  };\n  if (output[\"Date\"] !== undefined) {\n    contents.Date = new Date(output[\"Date\"]);\n  }\n  if (output[\"Days\"] !== undefined) {\n    contents.Days = parseInt(output[\"Days\"]);\n  }\n  if (output[\"ExpiredObjectDeleteMarker\"] !== undefined) {\n    contents.ExpiredObjectDeleteMarker = output[\"ExpiredObjectDeleteMarker\"] == \"true\";\n  }\n  return contents;\n};\nvar deserializeAws_restXmlLifecycleRule = function (output, context) {\n  var contents = {\n    Expiration: undefined,\n    ID: undefined,\n    Prefix: undefined,\n    Filter: undefined,\n    Status: undefined,\n    Transitions: undefined,\n    NoncurrentVersionTransitions: undefined,\n    NoncurrentVersionExpiration: undefined,\n    AbortIncompleteMultipartUpload: undefined\n  };\n  if (output[\"Expiration\"] !== undefined) {\n    contents.Expiration = deserializeAws_restXmlLifecycleExpiration(output[\"Expiration\"], context);\n  }\n  if (output[\"ID\"] !== undefined) {\n    contents.ID = output[\"ID\"];\n  }\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlLifecycleRuleFilter(output[\"Filter\"], context);\n  }\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = output[\"Status\"];\n  }\n  if (output.Transition === \"\") {\n    contents.Transitions = [];\n  }\n  if (output[\"Transition\"] !== undefined) {\n    contents.Transitions = deserializeAws_restXmlTransitionList(__getArrayIfSingleItem(output[\"Transition\"]), context);\n  }\n  if (output.NoncurrentVersionTransition === \"\") {\n    contents.NoncurrentVersionTransitions = [];\n  }\n  if (output[\"NoncurrentVersionTransition\"] !== undefined) {\n    contents.NoncurrentVersionTransitions = deserializeAws_restXmlNoncurrentVersionTransitionList(__getArrayIfSingleItem(output[\"NoncurrentVersionTransition\"]), context);\n  }\n  if (output[\"NoncurrentVersionExpiration\"] !== undefined) {\n    contents.NoncurrentVersionExpiration = deserializeAws_restXmlNoncurrentVersionExpiration(output[\"NoncurrentVersionExpiration\"], context);\n  }\n  if (output[\"AbortIncompleteMultipartUpload\"] !== undefined) {\n    contents.AbortIncompleteMultipartUpload = deserializeAws_restXmlAbortIncompleteMultipartUpload(output[\"AbortIncompleteMultipartUpload\"], context);\n  }\n  return contents;\n};\nvar deserializeAws_restXmlLifecycleRuleAndOperator = function (output, context) {\n  var contents = {\n    Prefix: undefined,\n    Tags: undefined\n  };\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n  if (output.Tag === \"\") {\n    contents.Tags = [];\n  }\n  if (output[\"Tag\"] !== undefined) {\n    contents.Tags = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(output[\"Tag\"]), context);\n  }\n  return contents;\n};\nvar deserializeAws_restXmlLifecycleRuleFilter = function (output, context) {\n  if (output[\"Prefix\"] !== undefined) {\n    return {\n      Prefix: output[\"Prefix\"]\n    };\n  }\n  if (output[\"Tag\"] !== undefined) {\n    return {\n      Tag: deserializeAws_restXmlTag(output[\"Tag\"], context)\n    };\n  }\n  if (output[\"And\"] !== undefined) {\n    return {\n      And: deserializeAws_restXmlLifecycleRuleAndOperator(output[\"And\"], context)\n    };\n  }\n  return {\n    $unknown: Object.entries(output)[0]\n  };\n};\nvar deserializeAws_restXmlLifecycleRules = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_restXmlLifecycleRule(entry, context);\n  });\n};\nvar deserializeAws_restXmlLoggingEnabled = function (output, context) {\n  var contents = {\n    TargetBucket: undefined,\n    TargetGrants: undefined,\n    TargetPrefix: undefined\n  };\n  if (output[\"TargetBucket\"] !== undefined) {\n    contents.TargetBucket = output[\"TargetBucket\"];\n  }\n  if (output.TargetGrants === \"\") {\n    contents.TargetGrants = [];\n  }\n  if (output[\"TargetGrants\"] !== undefined && output[\"TargetGrants\"][\"Grant\"] !== undefined) {\n    contents.TargetGrants = deserializeAws_restXmlTargetGrants(__getArrayIfSingleItem(output[\"TargetGrants\"][\"Grant\"]), context);\n  }\n  if (output[\"TargetPrefix\"] !== undefined) {\n    contents.TargetPrefix = output[\"TargetPrefix\"];\n  }\n  return contents;\n};\nvar deserializeAws_restXmlMetrics = function (output, context) {\n  var contents = {\n    Status: undefined,\n    EventThreshold: undefined\n  };\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = output[\"Status\"];\n  }\n  if (output[\"EventThreshold\"] !== undefined) {\n    contents.EventThreshold = deserializeAws_restXmlReplicationTimeValue(output[\"EventThreshold\"], context);\n  }\n  return contents;\n};\nvar deserializeAws_restXmlMetricsAndOperator = function (output, context) {\n  var contents = {\n    Prefix: undefined,\n    Tags: undefined\n  };\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n  if (output.Tag === \"\") {\n    contents.Tags = [];\n  }\n  if (output[\"Tag\"] !== undefined) {\n    contents.Tags = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(output[\"Tag\"]), context);\n  }\n  return contents;\n};\nvar deserializeAws_restXmlMetricsConfiguration = function (output, context) {\n  var contents = {\n    Id: undefined,\n    Filter: undefined\n  };\n  if (output[\"Id\"] !== undefined) {\n    contents.Id = output[\"Id\"];\n  }\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlMetricsFilter(output[\"Filter\"], context);\n  }\n  return contents;\n};\nvar deserializeAws_restXmlMetricsConfigurationList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_restXmlMetricsConfiguration(entry, context);\n  });\n};\nvar deserializeAws_restXmlMetricsFilter = function (output, context) {\n  if (output[\"Prefix\"] !== undefined) {\n    return {\n      Prefix: output[\"Prefix\"]\n    };\n  }\n  if (output[\"Tag\"] !== undefined) {\n    return {\n      Tag: deserializeAws_restXmlTag(output[\"Tag\"], context)\n    };\n  }\n  if (output[\"And\"] !== undefined) {\n    return {\n      And: deserializeAws_restXmlMetricsAndOperator(output[\"And\"], context)\n    };\n  }\n  return {\n    $unknown: Object.entries(output)[0]\n  };\n};\nvar deserializeAws_restXmlMultipartUpload = function (output, context) {\n  var contents = {\n    UploadId: undefined,\n    Key: undefined,\n    Initiated: undefined,\n    StorageClass: undefined,\n    Owner: undefined,\n    Initiator: undefined\n  };\n  if (output[\"UploadId\"] !== undefined) {\n    contents.UploadId = output[\"UploadId\"];\n  }\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = output[\"Key\"];\n  }\n  if (output[\"Initiated\"] !== undefined) {\n    contents.Initiated = new Date(output[\"Initiated\"]);\n  }\n  if (output[\"StorageClass\"] !== undefined) {\n    contents.StorageClass = output[\"StorageClass\"];\n  }\n  if (output[\"Owner\"] !== undefined) {\n    contents.Owner = deserializeAws_restXmlOwner(output[\"Owner\"], context);\n  }\n  if (output[\"Initiator\"] !== undefined) {\n    contents.Initiator = deserializeAws_restXmlInitiator(output[\"Initiator\"], context);\n  }\n  return contents;\n};\nvar deserializeAws_restXmlMultipartUploadList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_restXmlMultipartUpload(entry, context);\n  });\n};\nvar deserializeAws_restXmlNoncurrentVersionExpiration = function (output, context) {\n  var contents = {\n    NoncurrentDays: undefined\n  };\n  if (output[\"NoncurrentDays\"] !== undefined) {\n    contents.NoncurrentDays = parseInt(output[\"NoncurrentDays\"]);\n  }\n  return contents;\n};\nvar deserializeAws_restXmlNoncurrentVersionTransition = function (output, context) {\n  var contents = {\n    NoncurrentDays: undefined,\n    StorageClass: undefined\n  };\n  if (output[\"NoncurrentDays\"] !== undefined) {\n    contents.NoncurrentDays = parseInt(output[\"NoncurrentDays\"]);\n  }\n  if (output[\"StorageClass\"] !== undefined) {\n    contents.StorageClass = output[\"StorageClass\"];\n  }\n  return contents;\n};\nvar deserializeAws_restXmlNoncurrentVersionTransitionList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_restXmlNoncurrentVersionTransition(entry, context);\n  });\n};\nvar deserializeAws_restXmlNotificationConfigurationFilter = function (output, context) {\n  var contents = {\n    Key: undefined\n  };\n  if (output[\"S3Key\"] !== undefined) {\n    contents.Key = deserializeAws_restXmlS3KeyFilter(output[\"S3Key\"], context);\n  }\n  return contents;\n};\nvar deserializeAws_restXml_Object = function (output, context) {\n  var contents = {\n    Key: undefined,\n    LastModified: undefined,\n    ETag: undefined,\n    Size: undefined,\n    StorageClass: undefined,\n    Owner: undefined\n  };\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = output[\"Key\"];\n  }\n  if (output[\"LastModified\"] !== undefined) {\n    contents.LastModified = new Date(output[\"LastModified\"]);\n  }\n  if (output[\"ETag\"] !== undefined) {\n    contents.ETag = output[\"ETag\"];\n  }\n  if (output[\"Size\"] !== undefined) {\n    contents.Size = parseInt(output[\"Size\"]);\n  }\n  if (output[\"StorageClass\"] !== undefined) {\n    contents.StorageClass = output[\"StorageClass\"];\n  }\n  if (output[\"Owner\"] !== undefined) {\n    contents.Owner = deserializeAws_restXmlOwner(output[\"Owner\"], context);\n  }\n  return contents;\n};\nvar deserializeAws_restXmlObjectList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_restXml_Object(entry, context);\n  });\n};\nvar deserializeAws_restXmlObjectLockConfiguration = function (output, context) {\n  var contents = {\n    ObjectLockEnabled: undefined,\n    Rule: undefined\n  };\n  if (output[\"ObjectLockEnabled\"] !== undefined) {\n    contents.ObjectLockEnabled = output[\"ObjectLockEnabled\"];\n  }\n  if (output[\"Rule\"] !== undefined) {\n    contents.Rule = deserializeAws_restXmlObjectLockRule(output[\"Rule\"], context);\n  }\n  return contents;\n};\nvar deserializeAws_restXmlObjectLockLegalHold = function (output, context) {\n  var contents = {\n    Status: undefined\n  };\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = output[\"Status\"];\n  }\n  return contents;\n};\nvar deserializeAws_restXmlObjectLockRetention = function (output, context) {\n  var contents = {\n    Mode: undefined,\n    RetainUntilDate: undefined\n  };\n  if (output[\"Mode\"] !== undefined) {\n    contents.Mode = output[\"Mode\"];\n  }\n  if (output[\"RetainUntilDate\"] !== undefined) {\n    contents.RetainUntilDate = new Date(output[\"RetainUntilDate\"]);\n  }\n  return contents;\n};\nvar deserializeAws_restXmlObjectLockRule = function (output, context) {\n  var contents = {\n    DefaultRetention: undefined\n  };\n  if (output[\"DefaultRetention\"] !== undefined) {\n    contents.DefaultRetention = deserializeAws_restXmlDefaultRetention(output[\"DefaultRetention\"], context);\n  }\n  return contents;\n};\nvar deserializeAws_restXmlObjectVersion = function (output, context) {\n  var contents = {\n    ETag: undefined,\n    Size: undefined,\n    StorageClass: undefined,\n    Key: undefined,\n    VersionId: undefined,\n    IsLatest: undefined,\n    LastModified: undefined,\n    Owner: undefined\n  };\n  if (output[\"ETag\"] !== undefined) {\n    contents.ETag = output[\"ETag\"];\n  }\n  if (output[\"Size\"] !== undefined) {\n    contents.Size = parseInt(output[\"Size\"]);\n  }\n  if (output[\"StorageClass\"] !== undefined) {\n    contents.StorageClass = output[\"StorageClass\"];\n  }\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = output[\"Key\"];\n  }\n  if (output[\"VersionId\"] !== undefined) {\n    contents.VersionId = output[\"VersionId\"];\n  }\n  if (output[\"IsLatest\"] !== undefined) {\n    contents.IsLatest = output[\"IsLatest\"] == \"true\";\n  }\n  if (output[\"LastModified\"] !== undefined) {\n    contents.LastModified = new Date(output[\"LastModified\"]);\n  }\n  if (output[\"Owner\"] !== undefined) {\n    contents.Owner = deserializeAws_restXmlOwner(output[\"Owner\"], context);\n  }\n  return contents;\n};\nvar deserializeAws_restXmlObjectVersionList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_restXmlObjectVersion(entry, context);\n  });\n};\nvar deserializeAws_restXmlOwner = function (output, context) {\n  var contents = {\n    DisplayName: undefined,\n    ID: undefined\n  };\n  if (output[\"DisplayName\"] !== undefined) {\n    contents.DisplayName = output[\"DisplayName\"];\n  }\n  if (output[\"ID\"] !== undefined) {\n    contents.ID = output[\"ID\"];\n  }\n  return contents;\n};\nvar deserializeAws_restXmlOwnershipControls = function (output, context) {\n  var contents = {\n    Rules: undefined\n  };\n  if (output.Rule === \"\") {\n    contents.Rules = [];\n  }\n  if (output[\"Rule\"] !== undefined) {\n    contents.Rules = deserializeAws_restXmlOwnershipControlsRules(__getArrayIfSingleItem(output[\"Rule\"]), context);\n  }\n  return contents;\n};\nvar deserializeAws_restXmlOwnershipControlsRule = function (output, context) {\n  var contents = {\n    ObjectOwnership: undefined\n  };\n  if (output[\"ObjectOwnership\"] !== undefined) {\n    contents.ObjectOwnership = output[\"ObjectOwnership\"];\n  }\n  return contents;\n};\nvar deserializeAws_restXmlOwnershipControlsRules = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_restXmlOwnershipControlsRule(entry, context);\n  });\n};\nvar deserializeAws_restXmlPart = function (output, context) {\n  var contents = {\n    PartNumber: undefined,\n    LastModified: undefined,\n    ETag: undefined,\n    Size: undefined\n  };\n  if (output[\"PartNumber\"] !== undefined) {\n    contents.PartNumber = parseInt(output[\"PartNumber\"]);\n  }\n  if (output[\"LastModified\"] !== undefined) {\n    contents.LastModified = new Date(output[\"LastModified\"]);\n  }\n  if (output[\"ETag\"] !== undefined) {\n    contents.ETag = output[\"ETag\"];\n  }\n  if (output[\"Size\"] !== undefined) {\n    contents.Size = parseInt(output[\"Size\"]);\n  }\n  return contents;\n};\nvar deserializeAws_restXmlParts = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_restXmlPart(entry, context);\n  });\n};\nvar deserializeAws_restXmlPolicyStatus = function (output, context) {\n  var contents = {\n    IsPublic: undefined\n  };\n  if (output[\"IsPublic\"] !== undefined) {\n    contents.IsPublic = output[\"IsPublic\"] == \"true\";\n  }\n  return contents;\n};\nvar deserializeAws_restXmlPublicAccessBlockConfiguration = function (output, context) {\n  var contents = {\n    BlockPublicAcls: undefined,\n    IgnorePublicAcls: undefined,\n    BlockPublicPolicy: undefined,\n    RestrictPublicBuckets: undefined\n  };\n  if (output[\"BlockPublicAcls\"] !== undefined) {\n    contents.BlockPublicAcls = output[\"BlockPublicAcls\"] == \"true\";\n  }\n  if (output[\"IgnorePublicAcls\"] !== undefined) {\n    contents.IgnorePublicAcls = output[\"IgnorePublicAcls\"] == \"true\";\n  }\n  if (output[\"BlockPublicPolicy\"] !== undefined) {\n    contents.BlockPublicPolicy = output[\"BlockPublicPolicy\"] == \"true\";\n  }\n  if (output[\"RestrictPublicBuckets\"] !== undefined) {\n    contents.RestrictPublicBuckets = output[\"RestrictPublicBuckets\"] == \"true\";\n  }\n  return contents;\n};\nvar deserializeAws_restXmlQueueConfiguration = function (output, context) {\n  var contents = {\n    Id: undefined,\n    QueueArn: undefined,\n    Events: undefined,\n    Filter: undefined\n  };\n  if (output[\"Id\"] !== undefined) {\n    contents.Id = output[\"Id\"];\n  }\n  if (output[\"Queue\"] !== undefined) {\n    contents.QueueArn = output[\"Queue\"];\n  }\n  if (output.Event === \"\") {\n    contents.Events = [];\n  }\n  if (output[\"Event\"] !== undefined) {\n    contents.Events = deserializeAws_restXmlEventList(__getArrayIfSingleItem(output[\"Event\"]), context);\n  }\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlNotificationConfigurationFilter(output[\"Filter\"], context);\n  }\n  return contents;\n};\nvar deserializeAws_restXmlQueueConfigurationList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_restXmlQueueConfiguration(entry, context);\n  });\n};\nvar deserializeAws_restXmlRedirect = function (output, context) {\n  var contents = {\n    HostName: undefined,\n    HttpRedirectCode: undefined,\n    Protocol: undefined,\n    ReplaceKeyPrefixWith: undefined,\n    ReplaceKeyWith: undefined\n  };\n  if (output[\"HostName\"] !== undefined) {\n    contents.HostName = output[\"HostName\"];\n  }\n  if (output[\"HttpRedirectCode\"] !== undefined) {\n    contents.HttpRedirectCode = output[\"HttpRedirectCode\"];\n  }\n  if (output[\"Protocol\"] !== undefined) {\n    contents.Protocol = output[\"Protocol\"];\n  }\n  if (output[\"ReplaceKeyPrefixWith\"] !== undefined) {\n    contents.ReplaceKeyPrefixWith = output[\"ReplaceKeyPrefixWith\"];\n  }\n  if (output[\"ReplaceKeyWith\"] !== undefined) {\n    contents.ReplaceKeyWith = output[\"ReplaceKeyWith\"];\n  }\n  return contents;\n};\nvar deserializeAws_restXmlRedirectAllRequestsTo = function (output, context) {\n  var contents = {\n    HostName: undefined,\n    Protocol: undefined\n  };\n  if (output[\"HostName\"] !== undefined) {\n    contents.HostName = output[\"HostName\"];\n  }\n  if (output[\"Protocol\"] !== undefined) {\n    contents.Protocol = output[\"Protocol\"];\n  }\n  return contents;\n};\nvar deserializeAws_restXmlReplicaModifications = function (output, context) {\n  var contents = {\n    Status: undefined\n  };\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = output[\"Status\"];\n  }\n  return contents;\n};\nvar deserializeAws_restXmlReplicationConfiguration = function (output, context) {\n  var contents = {\n    Role: undefined,\n    Rules: undefined\n  };\n  if (output[\"Role\"] !== undefined) {\n    contents.Role = output[\"Role\"];\n  }\n  if (output.Rule === \"\") {\n    contents.Rules = [];\n  }\n  if (output[\"Rule\"] !== undefined) {\n    contents.Rules = deserializeAws_restXmlReplicationRules(__getArrayIfSingleItem(output[\"Rule\"]), context);\n  }\n  return contents;\n};\nvar deserializeAws_restXmlReplicationRule = function (output, context) {\n  var contents = {\n    ID: undefined,\n    Priority: undefined,\n    Prefix: undefined,\n    Filter: undefined,\n    Status: undefined,\n    SourceSelectionCriteria: undefined,\n    ExistingObjectReplication: undefined,\n    Destination: undefined,\n    DeleteMarkerReplication: undefined\n  };\n  if (output[\"ID\"] !== undefined) {\n    contents.ID = output[\"ID\"];\n  }\n  if (output[\"Priority\"] !== undefined) {\n    contents.Priority = parseInt(output[\"Priority\"]);\n  }\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlReplicationRuleFilter(output[\"Filter\"], context);\n  }\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = output[\"Status\"];\n  }\n  if (output[\"SourceSelectionCriteria\"] !== undefined) {\n    contents.SourceSelectionCriteria = deserializeAws_restXmlSourceSelectionCriteria(output[\"SourceSelectionCriteria\"], context);\n  }\n  if (output[\"ExistingObjectReplication\"] !== undefined) {\n    contents.ExistingObjectReplication = deserializeAws_restXmlExistingObjectReplication(output[\"ExistingObjectReplication\"], context);\n  }\n  if (output[\"Destination\"] !== undefined) {\n    contents.Destination = deserializeAws_restXmlDestination(output[\"Destination\"], context);\n  }\n  if (output[\"DeleteMarkerReplication\"] !== undefined) {\n    contents.DeleteMarkerReplication = deserializeAws_restXmlDeleteMarkerReplication(output[\"DeleteMarkerReplication\"], context);\n  }\n  return contents;\n};\nvar deserializeAws_restXmlReplicationRuleAndOperator = function (output, context) {\n  var contents = {\n    Prefix: undefined,\n    Tags: undefined\n  };\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n  if (output.Tag === \"\") {\n    contents.Tags = [];\n  }\n  if (output[\"Tag\"] !== undefined) {\n    contents.Tags = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(output[\"Tag\"]), context);\n  }\n  return contents;\n};\nvar deserializeAws_restXmlReplicationRuleFilter = function (output, context) {\n  if (output[\"Prefix\"] !== undefined) {\n    return {\n      Prefix: output[\"Prefix\"]\n    };\n  }\n  if (output[\"Tag\"] !== undefined) {\n    return {\n      Tag: deserializeAws_restXmlTag(output[\"Tag\"], context)\n    };\n  }\n  if (output[\"And\"] !== undefined) {\n    return {\n      And: deserializeAws_restXmlReplicationRuleAndOperator(output[\"And\"], context)\n    };\n  }\n  return {\n    $unknown: Object.entries(output)[0]\n  };\n};\nvar deserializeAws_restXmlReplicationRules = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_restXmlReplicationRule(entry, context);\n  });\n};\nvar deserializeAws_restXmlReplicationTime = function (output, context) {\n  var contents = {\n    Status: undefined,\n    Time: undefined\n  };\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = output[\"Status\"];\n  }\n  if (output[\"Time\"] !== undefined) {\n    contents.Time = deserializeAws_restXmlReplicationTimeValue(output[\"Time\"], context);\n  }\n  return contents;\n};\nvar deserializeAws_restXmlReplicationTimeValue = function (output, context) {\n  var contents = {\n    Minutes: undefined\n  };\n  if (output[\"Minutes\"] !== undefined) {\n    contents.Minutes = parseInt(output[\"Minutes\"]);\n  }\n  return contents;\n};\nvar deserializeAws_restXmlRoutingRule = function (output, context) {\n  var contents = {\n    Condition: undefined,\n    Redirect: undefined\n  };\n  if (output[\"Condition\"] !== undefined) {\n    contents.Condition = deserializeAws_restXmlCondition(output[\"Condition\"], context);\n  }\n  if (output[\"Redirect\"] !== undefined) {\n    contents.Redirect = deserializeAws_restXmlRedirect(output[\"Redirect\"], context);\n  }\n  return contents;\n};\nvar deserializeAws_restXmlRoutingRules = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_restXmlRoutingRule(entry, context);\n  });\n};\nvar deserializeAws_restXmlS3KeyFilter = function (output, context) {\n  var contents = {\n    FilterRules: undefined\n  };\n  if (output.FilterRule === \"\") {\n    contents.FilterRules = [];\n  }\n  if (output[\"FilterRule\"] !== undefined) {\n    contents.FilterRules = deserializeAws_restXmlFilterRuleList(__getArrayIfSingleItem(output[\"FilterRule\"]), context);\n  }\n  return contents;\n};\nvar deserializeAws_restXmlServerSideEncryptionByDefault = function (output, context) {\n  var contents = {\n    SSEAlgorithm: undefined,\n    KMSMasterKeyID: undefined\n  };\n  if (output[\"SSEAlgorithm\"] !== undefined) {\n    contents.SSEAlgorithm = output[\"SSEAlgorithm\"];\n  }\n  if (output[\"KMSMasterKeyID\"] !== undefined) {\n    contents.KMSMasterKeyID = output[\"KMSMasterKeyID\"];\n  }\n  return contents;\n};\nvar deserializeAws_restXmlServerSideEncryptionConfiguration = function (output, context) {\n  var contents = {\n    Rules: undefined\n  };\n  if (output.Rule === \"\") {\n    contents.Rules = [];\n  }\n  if (output[\"Rule\"] !== undefined) {\n    contents.Rules = deserializeAws_restXmlServerSideEncryptionRules(__getArrayIfSingleItem(output[\"Rule\"]), context);\n  }\n  return contents;\n};\nvar deserializeAws_restXmlServerSideEncryptionRule = function (output, context) {\n  var contents = {\n    ApplyServerSideEncryptionByDefault: undefined,\n    BucketKeyEnabled: undefined\n  };\n  if (output[\"ApplyServerSideEncryptionByDefault\"] !== undefined) {\n    contents.ApplyServerSideEncryptionByDefault = deserializeAws_restXmlServerSideEncryptionByDefault(output[\"ApplyServerSideEncryptionByDefault\"], context);\n  }\n  if (output[\"BucketKeyEnabled\"] !== undefined) {\n    contents.BucketKeyEnabled = output[\"BucketKeyEnabled\"] == \"true\";\n  }\n  return contents;\n};\nvar deserializeAws_restXmlServerSideEncryptionRules = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_restXmlServerSideEncryptionRule(entry, context);\n  });\n};\nvar deserializeAws_restXmlSourceSelectionCriteria = function (output, context) {\n  var contents = {\n    SseKmsEncryptedObjects: undefined,\n    ReplicaModifications: undefined\n  };\n  if (output[\"SseKmsEncryptedObjects\"] !== undefined) {\n    contents.SseKmsEncryptedObjects = deserializeAws_restXmlSseKmsEncryptedObjects(output[\"SseKmsEncryptedObjects\"], context);\n  }\n  if (output[\"ReplicaModifications\"] !== undefined) {\n    contents.ReplicaModifications = deserializeAws_restXmlReplicaModifications(output[\"ReplicaModifications\"], context);\n  }\n  return contents;\n};\nvar deserializeAws_restXmlSSEKMS = function (output, context) {\n  var contents = {\n    KeyId: undefined\n  };\n  if (output[\"KeyId\"] !== undefined) {\n    contents.KeyId = output[\"KeyId\"];\n  }\n  return contents;\n};\nvar deserializeAws_restXmlSseKmsEncryptedObjects = function (output, context) {\n  var contents = {\n    Status: undefined\n  };\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = output[\"Status\"];\n  }\n  return contents;\n};\nvar deserializeAws_restXmlSSES3 = function (output, context) {\n  var contents = {};\n  return contents;\n};\nvar deserializeAws_restXmlStorageClassAnalysis = function (output, context) {\n  var contents = {\n    DataExport: undefined\n  };\n  if (output[\"DataExport\"] !== undefined) {\n    contents.DataExport = deserializeAws_restXmlStorageClassAnalysisDataExport(output[\"DataExport\"], context);\n  }\n  return contents;\n};\nvar deserializeAws_restXmlStorageClassAnalysisDataExport = function (output, context) {\n  var contents = {\n    OutputSchemaVersion: undefined,\n    Destination: undefined\n  };\n  if (output[\"OutputSchemaVersion\"] !== undefined) {\n    contents.OutputSchemaVersion = output[\"OutputSchemaVersion\"];\n  }\n  if (output[\"Destination\"] !== undefined) {\n    contents.Destination = deserializeAws_restXmlAnalyticsExportDestination(output[\"Destination\"], context);\n  }\n  return contents;\n};\nvar deserializeAws_restXmlTag = function (output, context) {\n  var contents = {\n    Key: undefined,\n    Value: undefined\n  };\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = output[\"Key\"];\n  }\n  if (output[\"Value\"] !== undefined) {\n    contents.Value = output[\"Value\"];\n  }\n  return contents;\n};\nvar deserializeAws_restXmlTagSet = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_restXmlTag(entry, context);\n  });\n};\nvar deserializeAws_restXmlTargetGrant = function (output, context) {\n  var contents = {\n    Grantee: undefined,\n    Permission: undefined\n  };\n  if (output[\"Grantee\"] !== undefined) {\n    contents.Grantee = deserializeAws_restXmlGrantee(output[\"Grantee\"], context);\n  }\n  if (output[\"Permission\"] !== undefined) {\n    contents.Permission = output[\"Permission\"];\n  }\n  return contents;\n};\nvar deserializeAws_restXmlTargetGrants = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_restXmlTargetGrant(entry, context);\n  });\n};\nvar deserializeAws_restXmlTiering = function (output, context) {\n  var contents = {\n    Days: undefined,\n    AccessTier: undefined\n  };\n  if (output[\"Days\"] !== undefined) {\n    contents.Days = parseInt(output[\"Days\"]);\n  }\n  if (output[\"AccessTier\"] !== undefined) {\n    contents.AccessTier = output[\"AccessTier\"];\n  }\n  return contents;\n};\nvar deserializeAws_restXmlTieringList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_restXmlTiering(entry, context);\n  });\n};\nvar deserializeAws_restXmlTopicConfiguration = function (output, context) {\n  var contents = {\n    Id: undefined,\n    TopicArn: undefined,\n    Events: undefined,\n    Filter: undefined\n  };\n  if (output[\"Id\"] !== undefined) {\n    contents.Id = output[\"Id\"];\n  }\n  if (output[\"Topic\"] !== undefined) {\n    contents.TopicArn = output[\"Topic\"];\n  }\n  if (output.Event === \"\") {\n    contents.Events = [];\n  }\n  if (output[\"Event\"] !== undefined) {\n    contents.Events = deserializeAws_restXmlEventList(__getArrayIfSingleItem(output[\"Event\"]), context);\n  }\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlNotificationConfigurationFilter(output[\"Filter\"], context);\n  }\n  return contents;\n};\nvar deserializeAws_restXmlTopicConfigurationList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_restXmlTopicConfiguration(entry, context);\n  });\n};\nvar deserializeAws_restXmlTransition = function (output, context) {\n  var contents = {\n    Date: undefined,\n    Days: undefined,\n    StorageClass: undefined\n  };\n  if (output[\"Date\"] !== undefined) {\n    contents.Date = new Date(output[\"Date\"]);\n  }\n  if (output[\"Days\"] !== undefined) {\n    contents.Days = parseInt(output[\"Days\"]);\n  }\n  if (output[\"StorageClass\"] !== undefined) {\n    contents.StorageClass = output[\"StorageClass\"];\n  }\n  return contents;\n};\nvar deserializeAws_restXmlTransitionList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_restXmlTransition(entry, context);\n  });\n};\nvar deserializeMetadata = function (output) {\n  var _a;\n  return {\n    httpStatusCode: output.statusCode,\n    requestId: (_a = output.headers[\"x-amzn-requestid\"]) !== null && _a !== void 0 ? _a : output.headers[\"x-amzn-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"]\n  };\n};\n// Collect low-level response body stream to Uint8Array.\nvar collectBody = function (streamBody, context) {\n  if (streamBody === void 0) {\n    streamBody = new Uint8Array();\n  }\n  if (streamBody instanceof Uint8Array) {\n    return Promise.resolve(streamBody);\n  }\n  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\n// Encode Uint8Array data into string with utf-8.\nvar collectBodyString = function (streamBody, context) {\n  return collectBody(streamBody, context).then(function (body) {\n    return context.utf8Encoder(body);\n  });\n};\nvar isSerializableHeaderValue = function (value) {\n  return value !== undefined && value !== null && value !== \"\" && (!Object.getOwnPropertyNames(value).includes(\"length\") || value.length != 0) && (!Object.getOwnPropertyNames(value).includes(\"size\") || value.size != 0);\n};\nvar decodeEscapedXML = function (str) {\n  return str.replace(/&amp;/g, \"&\").replace(/&apos;/g, \"'\").replace(/&quot;/g, '\"').replace(/&gt;/g, \">\").replace(/&lt;/g, \"<\");\n};\nvar parseBody = function (streamBody, context) {\n  return collectBodyString(streamBody, context).then(function (encoded) {\n    if (encoded.length) {\n      var parsedObj = xmlParse(encoded, {\n        attributeNamePrefix: \"\",\n        ignoreAttributes: false,\n        parseNodeValue: false,\n        tagValueProcessor: function (val, tagName) {\n          return decodeEscapedXML(val);\n        }\n      });\n      var textNodeName = \"#text\";\n      var key = Object.keys(parsedObj)[0];\n      var parsedObjToReturn = parsedObj[key];\n      if (parsedObjToReturn[textNodeName]) {\n        parsedObjToReturn[key] = parsedObjToReturn[textNodeName];\n        delete parsedObjToReturn[textNodeName];\n      }\n      return __getValueFromTextNode(parsedObjToReturn);\n    }\n    return {};\n  });\n};\nvar loadRestXmlErrorCode = function (output, data) {\n  if (data.Code !== undefined) {\n    return data.Code;\n  }\n  if (output.statusCode == 404) {\n    return \"NotFound\";\n  }\n  return \"\";\n};","map":{"version":3,"sources":["../../../protocols/Aws_restXml.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __assign, __awaiter, __generator } from \"tslib\";\nimport { AnalyticsFilter, LifecycleRuleFilter, MetricsFilter, ReplicationRuleFilter, } from \"../models/models_0\";\nimport { HttpRequest as __HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { dateToUtcString as __dateToUtcString, extendedEncodeURIComponent as __extendedEncodeURIComponent, getArrayIfSingleItem as __getArrayIfSingleItem, getValueFromTextNode as __getValueFromTextNode, } from \"@aws-sdk/smithy-client\";\nimport { XmlNode as __XmlNode, XmlText as __XmlText } from \"@aws-sdk/xml-builder\";\nimport { parse as xmlParse } from \"fast-xml-parser\";\nexport var serializeAws_restXmlAbortMultipartUploadCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign(__assign({}, (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = __assign({ \"x-id\": \"AbortMultipartUpload\" }, (input.UploadId !== undefined && { uploadId: input.UploadId }));\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlCompleteMultipartUploadCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = __assign({}, (input.UploadId !== undefined && { uploadId: input.UploadId }));\n                if (input.MultipartUpload !== undefined) {\n                    contents = serializeAws_restXmlCompletedMultipartUpload(input.MultipartUpload, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"POST\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlCopyObjectCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, (isSerializableHeaderValue(input.ACL) && { \"x-amz-acl\": input.ACL })), (isSerializableHeaderValue(input.CacheControl) && { \"cache-control\": input.CacheControl })), (isSerializableHeaderValue(input.ContentDisposition) && { \"content-disposition\": input.ContentDisposition })), (isSerializableHeaderValue(input.ContentEncoding) && { \"content-encoding\": input.ContentEncoding })), (isSerializableHeaderValue(input.ContentLanguage) && { \"content-language\": input.ContentLanguage })), (isSerializableHeaderValue(input.ContentType) && { \"content-type\": input.ContentType })), (isSerializableHeaderValue(input.CopySource) && { \"x-amz-copy-source\": input.CopySource })), (isSerializableHeaderValue(input.CopySourceIfMatch) && {\n                    \"x-amz-copy-source-if-match\": input.CopySourceIfMatch,\n                })), (isSerializableHeaderValue(input.CopySourceIfModifiedSince) && {\n                    \"x-amz-copy-source-if-modified-since\": __dateToUtcString(input.CopySourceIfModifiedSince).toString(),\n                })), (isSerializableHeaderValue(input.CopySourceIfNoneMatch) && {\n                    \"x-amz-copy-source-if-none-match\": input.CopySourceIfNoneMatch,\n                })), (isSerializableHeaderValue(input.CopySourceIfUnmodifiedSince) && {\n                    \"x-amz-copy-source-if-unmodified-since\": __dateToUtcString(input.CopySourceIfUnmodifiedSince).toString(),\n                })), (isSerializableHeaderValue(input.Expires) && { expires: __dateToUtcString(input.Expires).toString() })), (isSerializableHeaderValue(input.GrantFullControl) && { \"x-amz-grant-full-control\": input.GrantFullControl })), (isSerializableHeaderValue(input.GrantRead) && { \"x-amz-grant-read\": input.GrantRead })), (isSerializableHeaderValue(input.GrantReadACP) && { \"x-amz-grant-read-acp\": input.GrantReadACP })), (isSerializableHeaderValue(input.GrantWriteACP) && { \"x-amz-grant-write-acp\": input.GrantWriteACP })), (isSerializableHeaderValue(input.MetadataDirective) && { \"x-amz-metadata-directive\": input.MetadataDirective })), (isSerializableHeaderValue(input.TaggingDirective) && { \"x-amz-tagging-directive\": input.TaggingDirective })), (isSerializableHeaderValue(input.ServerSideEncryption) && {\n                    \"x-amz-server-side-encryption\": input.ServerSideEncryption,\n                })), (isSerializableHeaderValue(input.StorageClass) && { \"x-amz-storage-class\": input.StorageClass })), (isSerializableHeaderValue(input.WebsiteRedirectLocation) && {\n                    \"x-amz-website-redirect-location\": input.WebsiteRedirectLocation,\n                })), (isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n                    \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm,\n                })), (isSerializableHeaderValue(input.SSECustomerKey) && {\n                    \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey,\n                })), (isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n                    \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5,\n                })), (isSerializableHeaderValue(input.SSEKMSKeyId) && {\n                    \"x-amz-server-side-encryption-aws-kms-key-id\": input.SSEKMSKeyId,\n                })), (isSerializableHeaderValue(input.SSEKMSEncryptionContext) && {\n                    \"x-amz-server-side-encryption-context\": input.SSEKMSEncryptionContext,\n                })), (isSerializableHeaderValue(input.BucketKeyEnabled) && {\n                    \"x-amz-server-side-encryption-bucket-key-enabled\": input.BucketKeyEnabled.toString(),\n                })), (isSerializableHeaderValue(input.CopySourceSSECustomerAlgorithm) && {\n                    \"x-amz-copy-source-server-side-encryption-customer-algorithm\": input.CopySourceSSECustomerAlgorithm,\n                })), (isSerializableHeaderValue(input.CopySourceSSECustomerKey) && {\n                    \"x-amz-copy-source-server-side-encryption-customer-key\": input.CopySourceSSECustomerKey,\n                })), (isSerializableHeaderValue(input.CopySourceSSECustomerKeyMD5) && {\n                    \"x-amz-copy-source-server-side-encryption-customer-key-md5\": input.CopySourceSSECustomerKeyMD5,\n                })), (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.Tagging) && { \"x-amz-tagging\": input.Tagging })), (isSerializableHeaderValue(input.ObjectLockMode) && { \"x-amz-object-lock-mode\": input.ObjectLockMode })), (isSerializableHeaderValue(input.ObjectLockRetainUntilDate) && {\n                    \"x-amz-object-lock-retain-until-date\": (input.ObjectLockRetainUntilDate.toISOString().split(\".\")[0] + \"Z\").toString(),\n                })), (isSerializableHeaderValue(input.ObjectLockLegalHoldStatus) && {\n                    \"x-amz-object-lock-legal-hold\": input.ObjectLockLegalHoldStatus,\n                })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                })), (isSerializableHeaderValue(input.ExpectedSourceBucketOwner) && {\n                    \"x-amz-source-expected-bucket-owner\": input.ExpectedSourceBucketOwner,\n                })), (input.Metadata !== undefined &&\n                    Object.keys(input.Metadata).reduce(function (acc, suffix) {\n                        var _a;\n                        return (__assign(__assign({}, acc), (_a = {}, _a[\"x-amz-meta-\" + suffix.toLowerCase()] = input.Metadata[suffix], _a)));\n                    }, {})));\n                resolvedPath = \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = {\n                    \"x-id\": \"CopyObject\",\n                };\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlCreateBucketCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, contents, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.ACL) && { \"x-amz-acl\": input.ACL })), (isSerializableHeaderValue(input.GrantFullControl) && { \"x-amz-grant-full-control\": input.GrantFullControl })), (isSerializableHeaderValue(input.GrantRead) && { \"x-amz-grant-read\": input.GrantRead })), (isSerializableHeaderValue(input.GrantReadACP) && { \"x-amz-grant-read-acp\": input.GrantReadACP })), (isSerializableHeaderValue(input.GrantWrite) && { \"x-amz-grant-write\": input.GrantWrite })), (isSerializableHeaderValue(input.GrantWriteACP) && { \"x-amz-grant-write-acp\": input.GrantWriteACP })), (isSerializableHeaderValue(input.ObjectLockEnabledForBucket) && {\n                    \"x-amz-bucket-object-lock-enabled\": input.ObjectLockEnabledForBucket.toString(),\n                }));\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.CreateBucketConfiguration !== undefined) {\n                    contents = serializeAws_restXmlCreateBucketConfiguration(input.CreateBucketConfiguration, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlCreateMultipartUploadCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, (isSerializableHeaderValue(input.ACL) && { \"x-amz-acl\": input.ACL })), (isSerializableHeaderValue(input.CacheControl) && { \"cache-control\": input.CacheControl })), (isSerializableHeaderValue(input.ContentDisposition) && { \"content-disposition\": input.ContentDisposition })), (isSerializableHeaderValue(input.ContentEncoding) && { \"content-encoding\": input.ContentEncoding })), (isSerializableHeaderValue(input.ContentLanguage) && { \"content-language\": input.ContentLanguage })), (isSerializableHeaderValue(input.ContentType) && { \"content-type\": input.ContentType })), (isSerializableHeaderValue(input.Expires) && { expires: __dateToUtcString(input.Expires).toString() })), (isSerializableHeaderValue(input.GrantFullControl) && { \"x-amz-grant-full-control\": input.GrantFullControl })), (isSerializableHeaderValue(input.GrantRead) && { \"x-amz-grant-read\": input.GrantRead })), (isSerializableHeaderValue(input.GrantReadACP) && { \"x-amz-grant-read-acp\": input.GrantReadACP })), (isSerializableHeaderValue(input.GrantWriteACP) && { \"x-amz-grant-write-acp\": input.GrantWriteACP })), (isSerializableHeaderValue(input.ServerSideEncryption) && {\n                    \"x-amz-server-side-encryption\": input.ServerSideEncryption,\n                })), (isSerializableHeaderValue(input.StorageClass) && { \"x-amz-storage-class\": input.StorageClass })), (isSerializableHeaderValue(input.WebsiteRedirectLocation) && {\n                    \"x-amz-website-redirect-location\": input.WebsiteRedirectLocation,\n                })), (isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n                    \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm,\n                })), (isSerializableHeaderValue(input.SSECustomerKey) && {\n                    \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey,\n                })), (isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n                    \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5,\n                })), (isSerializableHeaderValue(input.SSEKMSKeyId) && {\n                    \"x-amz-server-side-encryption-aws-kms-key-id\": input.SSEKMSKeyId,\n                })), (isSerializableHeaderValue(input.SSEKMSEncryptionContext) && {\n                    \"x-amz-server-side-encryption-context\": input.SSEKMSEncryptionContext,\n                })), (isSerializableHeaderValue(input.BucketKeyEnabled) && {\n                    \"x-amz-server-side-encryption-bucket-key-enabled\": input.BucketKeyEnabled.toString(),\n                })), (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.Tagging) && { \"x-amz-tagging\": input.Tagging })), (isSerializableHeaderValue(input.ObjectLockMode) && { \"x-amz-object-lock-mode\": input.ObjectLockMode })), (isSerializableHeaderValue(input.ObjectLockRetainUntilDate) && {\n                    \"x-amz-object-lock-retain-until-date\": (input.ObjectLockRetainUntilDate.toISOString().split(\".\")[0] + \"Z\").toString(),\n                })), (isSerializableHeaderValue(input.ObjectLockLegalHoldStatus) && {\n                    \"x-amz-object-lock-legal-hold\": input.ObjectLockLegalHoldStatus,\n                })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                })), (input.Metadata !== undefined &&\n                    Object.keys(input.Metadata).reduce(function (acc, suffix) {\n                        var _a;\n                        return (__assign(__assign({}, acc), (_a = {}, _a[\"x-amz-meta-\" + suffix.toLowerCase()] = input.Metadata[suffix], _a)));\n                    }, {})));\n                resolvedPath = \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = {\n                    uploads: \"\",\n                };\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"POST\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlDeleteBucketCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlDeleteBucketAnalyticsConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = __assign({ analytics: \"\" }, (input.Id !== undefined && { id: input.Id }));\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlDeleteBucketCorsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    cors: \"\",\n                };\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlDeleteBucketEncryptionCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    encryption: \"\",\n                };\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlDeleteBucketIntelligentTieringConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = {};\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = __assign({ \"intelligent-tiering\": \"\" }, (input.Id !== undefined && { id: input.Id }));\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlDeleteBucketInventoryConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = __assign({ inventory: \"\" }, (input.Id !== undefined && { id: input.Id }));\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlDeleteBucketLifecycleCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    lifecycle: \"\",\n                };\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlDeleteBucketMetricsConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = __assign({ metrics: \"\" }, (input.Id !== undefined && { id: input.Id }));\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlDeleteBucketOwnershipControlsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    ownershipControls: \"\",\n                };\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlDeleteBucketPolicyCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    policy: \"\",\n                };\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlDeleteBucketReplicationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    replication: \"\",\n                };\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlDeleteBucketTaggingCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    tagging: \"\",\n                };\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlDeleteBucketWebsiteCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    website: \"\",\n                };\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlDeleteObjectCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign(__assign(__assign(__assign({}, (isSerializableHeaderValue(input.MFA) && { \"x-amz-mfa\": input.MFA })), (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.BypassGovernanceRetention) && {\n                    \"x-amz-bypass-governance-retention\": input.BypassGovernanceRetention.toString(),\n                })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = __assign({ \"x-id\": \"DeleteObject\" }, (input.VersionId !== undefined && { versionId: input.VersionId }));\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlDeleteObjectsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign(__assign(__assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.MFA) && { \"x-amz-mfa\": input.MFA })), (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.BypassGovernanceRetention) && {\n                    \"x-amz-bypass-governance-retention\": input.BypassGovernanceRetention.toString(),\n                })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    delete: \"\",\n                };\n                if (input.Delete !== undefined) {\n                    contents = serializeAws_restXmlDelete(input.Delete, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"POST\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlDeleteObjectTaggingCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = __assign({ tagging: \"\" }, (input.VersionId !== undefined && { versionId: input.VersionId }));\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlDeletePublicAccessBlockCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    publicAccessBlock: \"\",\n                };\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetBucketAccelerateConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    accelerate: \"\",\n                };\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetBucketAclCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    acl: \"\",\n                };\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetBucketAnalyticsConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = __assign({ analytics: \"\", \"x-id\": \"GetBucketAnalyticsConfiguration\" }, (input.Id !== undefined && { id: input.Id }));\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetBucketCorsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    cors: \"\",\n                };\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetBucketEncryptionCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    encryption: \"\",\n                };\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetBucketIntelligentTieringConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = {};\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = __assign({ \"intelligent-tiering\": \"\", \"x-id\": \"GetBucketIntelligentTieringConfiguration\" }, (input.Id !== undefined && { id: input.Id }));\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetBucketInventoryConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = __assign({ inventory: \"\", \"x-id\": \"GetBucketInventoryConfiguration\" }, (input.Id !== undefined && { id: input.Id }));\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetBucketLifecycleConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    lifecycle: \"\",\n                };\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetBucketLocationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    location: \"\",\n                };\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetBucketLoggingCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    logging: \"\",\n                };\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetBucketMetricsConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = __assign({ metrics: \"\", \"x-id\": \"GetBucketMetricsConfiguration\" }, (input.Id !== undefined && { id: input.Id }));\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetBucketNotificationConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    notification: \"\",\n                };\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetBucketOwnershipControlsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    ownershipControls: \"\",\n                };\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetBucketPolicyCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    policy: \"\",\n                };\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetBucketPolicyStatusCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    policyStatus: \"\",\n                };\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetBucketReplicationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    replication: \"\",\n                };\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetBucketRequestPaymentCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    requestPayment: \"\",\n                };\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetBucketTaggingCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    tagging: \"\",\n                };\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetBucketVersioningCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    versioning: \"\",\n                };\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetBucketWebsiteCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    website: \"\",\n                };\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetObjectCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, (isSerializableHeaderValue(input.IfMatch) && { \"if-match\": input.IfMatch })), (isSerializableHeaderValue(input.IfModifiedSince) && {\n                    \"if-modified-since\": __dateToUtcString(input.IfModifiedSince).toString(),\n                })), (isSerializableHeaderValue(input.IfNoneMatch) && { \"if-none-match\": input.IfNoneMatch })), (isSerializableHeaderValue(input.IfUnmodifiedSince) && {\n                    \"if-unmodified-since\": __dateToUtcString(input.IfUnmodifiedSince).toString(),\n                })), (isSerializableHeaderValue(input.Range) && { range: input.Range })), (isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n                    \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm,\n                })), (isSerializableHeaderValue(input.SSECustomerKey) && {\n                    \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey,\n                })), (isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n                    \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5,\n                })), (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({ \"x-id\": \"GetObject\" }, (input.ResponseCacheControl !== undefined && { \"response-cache-control\": input.ResponseCacheControl })), (input.ResponseContentDisposition !== undefined && {\n                    \"response-content-disposition\": input.ResponseContentDisposition,\n                })), (input.ResponseContentEncoding !== undefined && { \"response-content-encoding\": input.ResponseContentEncoding })), (input.ResponseContentLanguage !== undefined && { \"response-content-language\": input.ResponseContentLanguage })), (input.ResponseContentType !== undefined && { \"response-content-type\": input.ResponseContentType })), (input.ResponseExpires !== undefined && {\n                    \"response-expires\": (input.ResponseExpires.toISOString().split(\".\")[0] + \"Z\").toString(),\n                })), (input.VersionId !== undefined && { versionId: input.VersionId })), (input.PartNumber !== undefined && { partNumber: input.PartNumber.toString() }));\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetObjectAclCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign(__assign({}, (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = __assign({ acl: \"\" }, (input.VersionId !== undefined && { versionId: input.VersionId }));\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetObjectLegalHoldCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign(__assign({}, (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = __assign({ \"legal-hold\": \"\" }, (input.VersionId !== undefined && { versionId: input.VersionId }));\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetObjectLockConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    \"object-lock\": \"\",\n                };\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetObjectRetentionCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign(__assign({}, (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = __assign({ retention: \"\" }, (input.VersionId !== undefined && { versionId: input.VersionId }));\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetObjectTaggingCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = __assign({ tagging: \"\" }, (input.VersionId !== undefined && { versionId: input.VersionId }));\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetObjectTorrentCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign(__assign({}, (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = {\n                    torrent: \"\",\n                };\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlGetPublicAccessBlockCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    publicAccessBlock: \"\",\n                };\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlHeadBucketCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"HEAD\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlHeadObjectCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, (isSerializableHeaderValue(input.IfMatch) && { \"if-match\": input.IfMatch })), (isSerializableHeaderValue(input.IfModifiedSince) && {\n                    \"if-modified-since\": __dateToUtcString(input.IfModifiedSince).toString(),\n                })), (isSerializableHeaderValue(input.IfNoneMatch) && { \"if-none-match\": input.IfNoneMatch })), (isSerializableHeaderValue(input.IfUnmodifiedSince) && {\n                    \"if-unmodified-since\": __dateToUtcString(input.IfUnmodifiedSince).toString(),\n                })), (isSerializableHeaderValue(input.Range) && { range: input.Range })), (isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n                    \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm,\n                })), (isSerializableHeaderValue(input.SSECustomerKey) && {\n                    \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey,\n                })), (isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n                    \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5,\n                })), (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = __assign(__assign({}, (input.VersionId !== undefined && { versionId: input.VersionId })), (input.PartNumber !== undefined && { partNumber: input.PartNumber.toString() }));\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"HEAD\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlListBucketAnalyticsConfigurationsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = __assign({ analytics: \"\", \"x-id\": \"ListBucketAnalyticsConfigurations\" }, (input.ContinuationToken !== undefined && { \"continuation-token\": input.ContinuationToken }));\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlListBucketIntelligentTieringConfigurationsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = {};\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = __assign({ \"intelligent-tiering\": \"\", \"x-id\": \"ListBucketIntelligentTieringConfigurations\" }, (input.ContinuationToken !== undefined && { \"continuation-token\": input.ContinuationToken }));\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlListBucketInventoryConfigurationsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = __assign({ inventory: \"\", \"x-id\": \"ListBucketInventoryConfigurations\" }, (input.ContinuationToken !== undefined && { \"continuation-token\": input.ContinuationToken }));\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlListBucketMetricsConfigurationsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = __assign({ metrics: \"\", \"x-id\": \"ListBucketMetricsConfigurations\" }, (input.ContinuationToken !== undefined && { \"continuation-token\": input.ContinuationToken }));\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlListBucketsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = {};\n                resolvedPath = \"/\";\n                body = \"\";\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlListMultipartUploadsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = __assign(__assign(__assign(__assign(__assign(__assign({ uploads: \"\" }, (input.Delimiter !== undefined && { delimiter: input.Delimiter })), (input.EncodingType !== undefined && { \"encoding-type\": input.EncodingType })), (input.KeyMarker !== undefined && { \"key-marker\": input.KeyMarker })), (input.MaxUploads !== undefined && { \"max-uploads\": input.MaxUploads.toString() })), (input.Prefix !== undefined && { prefix: input.Prefix })), (input.UploadIdMarker !== undefined && { \"upload-id-marker\": input.UploadIdMarker }));\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlListObjectsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign(__assign({}, (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = __assign(__assign(__assign(__assign(__assign({}, (input.Delimiter !== undefined && { delimiter: input.Delimiter })), (input.EncodingType !== undefined && { \"encoding-type\": input.EncodingType })), (input.Marker !== undefined && { marker: input.Marker })), (input.MaxKeys !== undefined && { \"max-keys\": input.MaxKeys.toString() })), (input.Prefix !== undefined && { prefix: input.Prefix }));\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlListObjectsV2Command = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign(__assign({}, (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = __assign(__assign(__assign(__assign(__assign(__assign(__assign({ \"list-type\": \"2\" }, (input.Delimiter !== undefined && { delimiter: input.Delimiter })), (input.EncodingType !== undefined && { \"encoding-type\": input.EncodingType })), (input.MaxKeys !== undefined && { \"max-keys\": input.MaxKeys.toString() })), (input.Prefix !== undefined && { prefix: input.Prefix })), (input.ContinuationToken !== undefined && { \"continuation-token\": input.ContinuationToken })), (input.FetchOwner !== undefined && { \"fetch-owner\": input.FetchOwner.toString() })), (input.StartAfter !== undefined && { \"start-after\": input.StartAfter }));\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlListObjectVersionsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign({}, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = __assign(__assign(__assign(__assign(__assign(__assign({ versions: \"\" }, (input.Delimiter !== undefined && { delimiter: input.Delimiter })), (input.EncodingType !== undefined && { \"encoding-type\": input.EncodingType })), (input.KeyMarker !== undefined && { \"key-marker\": input.KeyMarker })), (input.MaxKeys !== undefined && { \"max-keys\": input.MaxKeys.toString() })), (input.Prefix !== undefined && { prefix: input.Prefix })), (input.VersionIdMarker !== undefined && { \"version-id-marker\": input.VersionIdMarker }));\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlListPartsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign(__assign({}, (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = __assign(__assign(__assign({ \"x-id\": \"ListParts\" }, (input.MaxParts !== undefined && { \"max-parts\": input.MaxParts.toString() })), (input.PartNumberMarker !== undefined && { \"part-number-marker\": input.PartNumberMarker })), (input.UploadId !== undefined && { uploadId: input.UploadId }));\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutBucketAccelerateConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    accelerate: \"\",\n                };\n                if (input.AccelerateConfiguration !== undefined) {\n                    contents = serializeAws_restXmlAccelerateConfiguration(input.AccelerateConfiguration, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutBucketAclCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.ACL) && { \"x-amz-acl\": input.ACL })), (isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5 })), (isSerializableHeaderValue(input.GrantFullControl) && { \"x-amz-grant-full-control\": input.GrantFullControl })), (isSerializableHeaderValue(input.GrantRead) && { \"x-amz-grant-read\": input.GrantRead })), (isSerializableHeaderValue(input.GrantReadACP) && { \"x-amz-grant-read-acp\": input.GrantReadACP })), (isSerializableHeaderValue(input.GrantWrite) && { \"x-amz-grant-write\": input.GrantWrite })), (isSerializableHeaderValue(input.GrantWriteACP) && { \"x-amz-grant-write-acp\": input.GrantWriteACP })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    acl: \"\",\n                };\n                if (input.AccessControlPolicy !== undefined) {\n                    contents = serializeAws_restXmlAccessControlPolicy(input.AccessControlPolicy, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutBucketAnalyticsConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = __assign({ analytics: \"\" }, (input.Id !== undefined && { id: input.Id }));\n                if (input.AnalyticsConfiguration !== undefined) {\n                    contents = serializeAws_restXmlAnalyticsConfiguration(input.AnalyticsConfiguration, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutBucketCorsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5 })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    cors: \"\",\n                };\n                if (input.CORSConfiguration !== undefined) {\n                    contents = serializeAws_restXmlCORSConfiguration(input.CORSConfiguration, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutBucketEncryptionCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5 })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    encryption: \"\",\n                };\n                if (input.ServerSideEncryptionConfiguration !== undefined) {\n                    contents = serializeAws_restXmlServerSideEncryptionConfiguration(input.ServerSideEncryptionConfiguration, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutBucketIntelligentTieringConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = {\n                    \"content-type\": \"application/xml\",\n                };\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = __assign({ \"intelligent-tiering\": \"\" }, (input.Id !== undefined && { id: input.Id }));\n                if (input.IntelligentTieringConfiguration !== undefined) {\n                    contents = serializeAws_restXmlIntelligentTieringConfiguration(input.IntelligentTieringConfiguration, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutBucketInventoryConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = __assign({ inventory: \"\" }, (input.Id !== undefined && { id: input.Id }));\n                if (input.InventoryConfiguration !== undefined) {\n                    contents = serializeAws_restXmlInventoryConfiguration(input.InventoryConfiguration, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutBucketLifecycleConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    lifecycle: \"\",\n                };\n                if (input.LifecycleConfiguration !== undefined) {\n                    contents = serializeAws_restXmlBucketLifecycleConfiguration(input.LifecycleConfiguration, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutBucketLoggingCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5 })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    logging: \"\",\n                };\n                if (input.BucketLoggingStatus !== undefined) {\n                    contents = serializeAws_restXmlBucketLoggingStatus(input.BucketLoggingStatus, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutBucketMetricsConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = __assign({ metrics: \"\" }, (input.Id !== undefined && { id: input.Id }));\n                if (input.MetricsConfiguration !== undefined) {\n                    contents = serializeAws_restXmlMetricsConfiguration(input.MetricsConfiguration, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutBucketNotificationConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    notification: \"\",\n                };\n                if (input.NotificationConfiguration !== undefined) {\n                    contents = serializeAws_restXmlNotificationConfiguration(input.NotificationConfiguration, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutBucketOwnershipControlsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5 })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    ownershipControls: \"\",\n                };\n                if (input.OwnershipControls !== undefined) {\n                    contents = serializeAws_restXmlOwnershipControls(input.OwnershipControls, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutBucketPolicyCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign(__assign(__assign({ \"content-type\": \"text/plain\" }, (isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5 })), (isSerializableHeaderValue(input.ConfirmRemoveSelfBucketAccess) && {\n                    \"x-amz-confirm-remove-self-bucket-access\": input.ConfirmRemoveSelfBucketAccess.toString(),\n                })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    policy: \"\",\n                };\n                if (input.Policy !== undefined) {\n                    contents = input.Policy;\n                    body = contents;\n                }\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutBucketReplicationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign(__assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5 })), (isSerializableHeaderValue(input.Token) && { \"x-amz-bucket-object-lock-token\": input.Token })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    replication: \"\",\n                };\n                if (input.ReplicationConfiguration !== undefined) {\n                    contents = serializeAws_restXmlReplicationConfiguration(input.ReplicationConfiguration, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutBucketRequestPaymentCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5 })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    requestPayment: \"\",\n                };\n                if (input.RequestPaymentConfiguration !== undefined) {\n                    contents = serializeAws_restXmlRequestPaymentConfiguration(input.RequestPaymentConfiguration, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutBucketTaggingCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5 })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    tagging: \"\",\n                };\n                if (input.Tagging !== undefined) {\n                    contents = serializeAws_restXmlTagging(input.Tagging, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutBucketVersioningCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign(__assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5 })), (isSerializableHeaderValue(input.MFA) && { \"x-amz-mfa\": input.MFA })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    versioning: \"\",\n                };\n                if (input.VersioningConfiguration !== undefined) {\n                    contents = serializeAws_restXmlVersioningConfiguration(input.VersioningConfiguration, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutBucketWebsiteCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5 })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    website: \"\",\n                };\n                if (input.WebsiteConfiguration !== undefined) {\n                    contents = serializeAws_restXmlWebsiteConfiguration(input.WebsiteConfiguration, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutObjectCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({ \"content-type\": \"application/octet-stream\" }, (isSerializableHeaderValue(input.ACL) && { \"x-amz-acl\": input.ACL })), (isSerializableHeaderValue(input.CacheControl) && { \"cache-control\": input.CacheControl })), (isSerializableHeaderValue(input.ContentDisposition) && { \"content-disposition\": input.ContentDisposition })), (isSerializableHeaderValue(input.ContentEncoding) && { \"content-encoding\": input.ContentEncoding })), (isSerializableHeaderValue(input.ContentLanguage) && { \"content-language\": input.ContentLanguage })), (isSerializableHeaderValue(input.ContentLength) && { \"content-length\": input.ContentLength.toString() })), (isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5 })), (isSerializableHeaderValue(input.ContentType) && { \"content-type\": input.ContentType })), (isSerializableHeaderValue(input.Expires) && { expires: __dateToUtcString(input.Expires).toString() })), (isSerializableHeaderValue(input.GrantFullControl) && { \"x-amz-grant-full-control\": input.GrantFullControl })), (isSerializableHeaderValue(input.GrantRead) && { \"x-amz-grant-read\": input.GrantRead })), (isSerializableHeaderValue(input.GrantReadACP) && { \"x-amz-grant-read-acp\": input.GrantReadACP })), (isSerializableHeaderValue(input.GrantWriteACP) && { \"x-amz-grant-write-acp\": input.GrantWriteACP })), (isSerializableHeaderValue(input.ServerSideEncryption) && {\n                    \"x-amz-server-side-encryption\": input.ServerSideEncryption,\n                })), (isSerializableHeaderValue(input.StorageClass) && { \"x-amz-storage-class\": input.StorageClass })), (isSerializableHeaderValue(input.WebsiteRedirectLocation) && {\n                    \"x-amz-website-redirect-location\": input.WebsiteRedirectLocation,\n                })), (isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n                    \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm,\n                })), (isSerializableHeaderValue(input.SSECustomerKey) && {\n                    \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey,\n                })), (isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n                    \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5,\n                })), (isSerializableHeaderValue(input.SSEKMSKeyId) && {\n                    \"x-amz-server-side-encryption-aws-kms-key-id\": input.SSEKMSKeyId,\n                })), (isSerializableHeaderValue(input.SSEKMSEncryptionContext) && {\n                    \"x-amz-server-side-encryption-context\": input.SSEKMSEncryptionContext,\n                })), (isSerializableHeaderValue(input.BucketKeyEnabled) && {\n                    \"x-amz-server-side-encryption-bucket-key-enabled\": input.BucketKeyEnabled.toString(),\n                })), (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.Tagging) && { \"x-amz-tagging\": input.Tagging })), (isSerializableHeaderValue(input.ObjectLockMode) && { \"x-amz-object-lock-mode\": input.ObjectLockMode })), (isSerializableHeaderValue(input.ObjectLockRetainUntilDate) && {\n                    \"x-amz-object-lock-retain-until-date\": (input.ObjectLockRetainUntilDate.toISOString().split(\".\")[0] + \"Z\").toString(),\n                })), (isSerializableHeaderValue(input.ObjectLockLegalHoldStatus) && {\n                    \"x-amz-object-lock-legal-hold\": input.ObjectLockLegalHoldStatus,\n                })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                })), (input.Metadata !== undefined &&\n                    Object.keys(input.Metadata).reduce(function (acc, suffix) {\n                        var _a;\n                        return (__assign(__assign({}, acc), (_a = {}, _a[\"x-amz-meta-\" + suffix.toLowerCase()] = input.Metadata[suffix], _a)));\n                    }, {})));\n                resolvedPath = \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = {\n                    \"x-id\": \"PutObject\",\n                };\n                if (input.Body !== undefined) {\n                    contents = input.Body;\n                    body = contents;\n                }\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutObjectAclCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.ACL) && { \"x-amz-acl\": input.ACL })), (isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5 })), (isSerializableHeaderValue(input.GrantFullControl) && { \"x-amz-grant-full-control\": input.GrantFullControl })), (isSerializableHeaderValue(input.GrantRead) && { \"x-amz-grant-read\": input.GrantRead })), (isSerializableHeaderValue(input.GrantReadACP) && { \"x-amz-grant-read-acp\": input.GrantReadACP })), (isSerializableHeaderValue(input.GrantWrite) && { \"x-amz-grant-write\": input.GrantWrite })), (isSerializableHeaderValue(input.GrantWriteACP) && { \"x-amz-grant-write-acp\": input.GrantWriteACP })), (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = __assign({ acl: \"\" }, (input.VersionId !== undefined && { versionId: input.VersionId }));\n                if (input.AccessControlPolicy !== undefined) {\n                    contents = serializeAws_restXmlAccessControlPolicy(input.AccessControlPolicy, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutObjectLegalHoldCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign(__assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5 })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = __assign({ \"legal-hold\": \"\" }, (input.VersionId !== undefined && { versionId: input.VersionId }));\n                if (input.LegalHold !== undefined) {\n                    contents = serializeAws_restXmlObjectLockLegalHold(input.LegalHold, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutObjectLockConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign(__assign(__assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.Token) && { \"x-amz-bucket-object-lock-token\": input.Token })), (isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5 })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    \"object-lock\": \"\",\n                };\n                if (input.ObjectLockConfiguration !== undefined) {\n                    contents = serializeAws_restXmlObjectLockConfiguration(input.ObjectLockConfiguration, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutObjectRetentionCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign(__assign(__assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.BypassGovernanceRetention) && {\n                    \"x-amz-bypass-governance-retention\": input.BypassGovernanceRetention.toString(),\n                })), (isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5 })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = __assign({ retention: \"\" }, (input.VersionId !== undefined && { versionId: input.VersionId }));\n                if (input.Retention !== undefined) {\n                    contents = serializeAws_restXmlObjectLockRetention(input.Retention, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutObjectTaggingCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5 })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = __assign({ tagging: \"\" }, (input.VersionId !== undefined && { versionId: input.VersionId }));\n                if (input.Tagging !== undefined) {\n                    contents = serializeAws_restXmlTagging(input.Tagging, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlPutPublicAccessBlockCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5 })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                query = {\n                    publicAccessBlock: \"\",\n                };\n                if (input.PublicAccessBlockConfiguration !== undefined) {\n                    contents = serializeAws_restXmlPublicAccessBlockConfiguration(input.PublicAccessBlockConfiguration, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlRestoreObjectCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = __assign({ restore: \"\" }, (input.VersionId !== undefined && { versionId: input.VersionId }));\n                if (input.RestoreRequest !== undefined) {\n                    contents = serializeAws_restXmlRestoreRequest(input.RestoreRequest, context);\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                    body += contents.toString();\n                }\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"POST\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlSelectObjectContentCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, bodyNode, node, node, node, node, node, node, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign(__assign(__assign(__assign({ \"content-type\": \"application/xml\" }, (isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n                    \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm,\n                })), (isSerializableHeaderValue(input.SSECustomerKey) && {\n                    \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey,\n                })), (isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n                    \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5,\n                })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = {\n                    select: \"\",\n                    \"select-type\": \"2\",\n                };\n                body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                bodyNode = new __XmlNode(\"SelectObjectContentRequest\");\n                bodyNode.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n                if (input.Expression !== undefined) {\n                    node = new __XmlNode(\"Expression\").addChildNode(new __XmlText(input.Expression)).withName(\"Expression\");\n                    bodyNode.addChildNode(node);\n                }\n                if (input.ExpressionType !== undefined) {\n                    node = new __XmlNode(\"ExpressionType\")\n                        .addChildNode(new __XmlText(input.ExpressionType))\n                        .withName(\"ExpressionType\");\n                    bodyNode.addChildNode(node);\n                }\n                if (input.InputSerialization !== undefined) {\n                    node = serializeAws_restXmlInputSerialization(input.InputSerialization, context).withName(\"InputSerialization\");\n                    bodyNode.addChildNode(node);\n                }\n                if (input.OutputSerialization !== undefined) {\n                    node = serializeAws_restXmlOutputSerialization(input.OutputSerialization, context).withName(\"OutputSerialization\");\n                    bodyNode.addChildNode(node);\n                }\n                if (input.RequestProgress !== undefined) {\n                    node = serializeAws_restXmlRequestProgress(input.RequestProgress, context).withName(\"RequestProgress\");\n                    bodyNode.addChildNode(node);\n                }\n                if (input.ScanRange !== undefined) {\n                    node = serializeAws_restXmlScanRange(input.ScanRange, context).withName(\"ScanRange\");\n                    bodyNode.addChildNode(node);\n                }\n                body += bodyNode.toString();\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"POST\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlUploadPartCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign({ \"content-type\": \"application/octet-stream\" }, (isSerializableHeaderValue(input.ContentLength) && { \"content-length\": input.ContentLength.toString() })), (isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5 })), (isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n                    \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm,\n                })), (isSerializableHeaderValue(input.SSECustomerKey) && {\n                    \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey,\n                })), (isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n                    \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5,\n                })), (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = __assign(__assign({ \"x-id\": \"UploadPart\" }, (input.PartNumber !== undefined && { partNumber: input.PartNumber.toString() })), (input.UploadId !== undefined && { uploadId: input.UploadId }));\n                if (input.Body !== undefined) {\n                    contents = input.Body;\n                    body = contents;\n                }\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restXmlUploadPartCopyCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, (isSerializableHeaderValue(input.CopySource) && { \"x-amz-copy-source\": input.CopySource })), (isSerializableHeaderValue(input.CopySourceIfMatch) && {\n                    \"x-amz-copy-source-if-match\": input.CopySourceIfMatch,\n                })), (isSerializableHeaderValue(input.CopySourceIfModifiedSince) && {\n                    \"x-amz-copy-source-if-modified-since\": __dateToUtcString(input.CopySourceIfModifiedSince).toString(),\n                })), (isSerializableHeaderValue(input.CopySourceIfNoneMatch) && {\n                    \"x-amz-copy-source-if-none-match\": input.CopySourceIfNoneMatch,\n                })), (isSerializableHeaderValue(input.CopySourceIfUnmodifiedSince) && {\n                    \"x-amz-copy-source-if-unmodified-since\": __dateToUtcString(input.CopySourceIfUnmodifiedSince).toString(),\n                })), (isSerializableHeaderValue(input.CopySourceRange) && { \"x-amz-copy-source-range\": input.CopySourceRange })), (isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n                    \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm,\n                })), (isSerializableHeaderValue(input.SSECustomerKey) && {\n                    \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey,\n                })), (isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n                    \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5,\n                })), (isSerializableHeaderValue(input.CopySourceSSECustomerAlgorithm) && {\n                    \"x-amz-copy-source-server-side-encryption-customer-algorithm\": input.CopySourceSSECustomerAlgorithm,\n                })), (isSerializableHeaderValue(input.CopySourceSSECustomerKey) && {\n                    \"x-amz-copy-source-server-side-encryption-customer-key\": input.CopySourceSSECustomerKey,\n                })), (isSerializableHeaderValue(input.CopySourceSSECustomerKeyMD5) && {\n                    \"x-amz-copy-source-server-side-encryption-customer-key-md5\": input.CopySourceSSECustomerKeyMD5,\n                })), (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n                    \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n                })), (isSerializableHeaderValue(input.ExpectedSourceBucketOwner) && {\n                    \"x-amz-source-expected-bucket-owner\": input.ExpectedSourceBucketOwner,\n                }));\n                resolvedPath = \"/{Bucket}/{Key+}\";\n                if (input.Bucket !== undefined) {\n                    labelValue = input.Bucket;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n                }\n                if (input.Key !== undefined) {\n                    labelValue = input.Key;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\n                        .split(\"/\")\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\n                        .join(\"/\"));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\n                }\n                query = __assign(__assign({ \"x-id\": \"UploadPartCopy\" }, (input.PartNumber !== undefined && { partNumber: input.PartNumber.toString() })), (input.UploadId !== undefined && { uploadId: input.UploadId }));\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlAbortMultipartUploadCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 204 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlAbortMultipartUploadCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    RequestCharged: undefined,\n                };\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                }\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlAbortMultipartUploadCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;\n    var _d;\n    return __generator(this, function (_e) {\n        switch (_e.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _d = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"NoSuchUpload\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.s3#NoSuchUpload\": return [3 /*break*/, 2];\n                }\n                return [3 /*break*/, 4];\n            case 2:\n                _c = [{}];\n                return [4 /*yield*/, deserializeAws_restXmlNoSuchUploadResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_e.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 5];\n            case 4:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _e.label = 5;\n            case 5:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlCompleteMultipartUploadCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlCompleteMultipartUploadCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    Bucket: undefined,\n                    BucketKeyEnabled: undefined,\n                    ETag: undefined,\n                    Expiration: undefined,\n                    Key: undefined,\n                    Location: undefined,\n                    RequestCharged: undefined,\n                    SSEKMSKeyId: undefined,\n                    ServerSideEncryption: undefined,\n                    VersionId: undefined,\n                };\n                if (output.headers[\"x-amz-expiration\"] !== undefined) {\n                    contents.Expiration = output.headers[\"x-amz-expiration\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n                    contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n                }\n                if (output.headers[\"x-amz-version-id\"] !== undefined) {\n                    contents.VersionId = output.headers[\"x-amz-version-id\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n                    contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n                    contents.BucketKeyEnabled = output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] === \"true\";\n                }\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                }\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                if (data[\"Bucket\"] !== undefined) {\n                    contents.Bucket = data[\"Bucket\"];\n                }\n                if (data[\"ETag\"] !== undefined) {\n                    contents.ETag = data[\"ETag\"];\n                }\n                if (data[\"Key\"] !== undefined) {\n                    contents.Key = data[\"Key\"];\n                }\n                if (data[\"Location\"] !== undefined) {\n                    contents.Location = data[\"Location\"];\n                }\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlCompleteMultipartUploadCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlCopyObjectCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlCopyObjectCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    BucketKeyEnabled: undefined,\n                    CopyObjectResult: undefined,\n                    CopySourceVersionId: undefined,\n                    Expiration: undefined,\n                    RequestCharged: undefined,\n                    SSECustomerAlgorithm: undefined,\n                    SSECustomerKeyMD5: undefined,\n                    SSEKMSEncryptionContext: undefined,\n                    SSEKMSKeyId: undefined,\n                    ServerSideEncryption: undefined,\n                    VersionId: undefined,\n                };\n                if (output.headers[\"x-amz-expiration\"] !== undefined) {\n                    contents.Expiration = output.headers[\"x-amz-expiration\"];\n                }\n                if (output.headers[\"x-amz-copy-source-version-id\"] !== undefined) {\n                    contents.CopySourceVersionId = output.headers[\"x-amz-copy-source-version-id\"];\n                }\n                if (output.headers[\"x-amz-version-id\"] !== undefined) {\n                    contents.VersionId = output.headers[\"x-amz-version-id\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n                    contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n                    contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n                    contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n                    contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-context\"] !== undefined) {\n                    contents.SSEKMSEncryptionContext = output.headers[\"x-amz-server-side-encryption-context\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n                    contents.BucketKeyEnabled = output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] === \"true\";\n                }\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                }\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                contents.CopyObjectResult = deserializeAws_restXmlCopyObjectResult(data, context);\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlCopyObjectCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;\n    var _d;\n    return __generator(this, function (_e) {\n        switch (_e.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _d = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"ObjectNotInActiveTierError\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.s3#ObjectNotInActiveTierError\": return [3 /*break*/, 2];\n                }\n                return [3 /*break*/, 4];\n            case 2:\n                _c = [{}];\n                return [4 /*yield*/, deserializeAws_restXmlObjectNotInActiveTierErrorResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_e.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 5];\n            case 4:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _e.label = 5;\n            case 5:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlCreateBucketCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlCreateBucketCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    Location: undefined,\n                };\n                if (output.headers[\"location\"] !== undefined) {\n                    contents.Location = output.headers[\"location\"];\n                }\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlCreateBucketCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;\n    var _e;\n    return __generator(this, function (_f) {\n        switch (_f.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _e = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BucketAlreadyExists\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.s3#BucketAlreadyExists\": return [3 /*break*/, 2];\n                    case \"BucketAlreadyOwnedByYou\": return [3 /*break*/, 4];\n                    case \"com.amazonaws.s3#BucketAlreadyOwnedByYou\": return [3 /*break*/, 4];\n                }\n                return [3 /*break*/, 6];\n            case 2:\n                _c = [{}];\n                return [4 /*yield*/, deserializeAws_restXmlBucketAlreadyExistsResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_f.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 7];\n            case 4:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_restXmlBucketAlreadyOwnedByYouResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_f.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 7];\n            case 6:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _f.label = 7;\n            case 7:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlCreateMultipartUploadCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlCreateMultipartUploadCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    AbortDate: undefined,\n                    AbortRuleId: undefined,\n                    Bucket: undefined,\n                    BucketKeyEnabled: undefined,\n                    Key: undefined,\n                    RequestCharged: undefined,\n                    SSECustomerAlgorithm: undefined,\n                    SSECustomerKeyMD5: undefined,\n                    SSEKMSEncryptionContext: undefined,\n                    SSEKMSKeyId: undefined,\n                    ServerSideEncryption: undefined,\n                    UploadId: undefined,\n                };\n                if (output.headers[\"x-amz-abort-date\"] !== undefined) {\n                    contents.AbortDate = new Date(output.headers[\"x-amz-abort-date\"]);\n                }\n                if (output.headers[\"x-amz-abort-rule-id\"] !== undefined) {\n                    contents.AbortRuleId = output.headers[\"x-amz-abort-rule-id\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n                    contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n                    contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n                    contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n                    contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-context\"] !== undefined) {\n                    contents.SSEKMSEncryptionContext = output.headers[\"x-amz-server-side-encryption-context\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n                    contents.BucketKeyEnabled = output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] === \"true\";\n                }\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                }\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                if (data[\"Bucket\"] !== undefined) {\n                    contents.Bucket = data[\"Bucket\"];\n                }\n                if (data[\"Key\"] !== undefined) {\n                    contents.Key = data[\"Key\"];\n                }\n                if (data[\"UploadId\"] !== undefined) {\n                    contents.UploadId = data[\"UploadId\"];\n                }\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlCreateMultipartUploadCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlDeleteBucketCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 204 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlDeleteBucketCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlDeleteBucketCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlDeleteBucketAnalyticsConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 204 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlDeleteBucketAnalyticsConfigurationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlDeleteBucketAnalyticsConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlDeleteBucketCorsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 204 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlDeleteBucketCorsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlDeleteBucketCorsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlDeleteBucketEncryptionCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 204 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlDeleteBucketEncryptionCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlDeleteBucketEncryptionCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlDeleteBucketIntelligentTieringConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 204 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlDeleteBucketIntelligentTieringConfigurationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlDeleteBucketIntelligentTieringConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlDeleteBucketInventoryConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 204 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlDeleteBucketInventoryConfigurationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlDeleteBucketInventoryConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlDeleteBucketLifecycleCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 204 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlDeleteBucketLifecycleCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlDeleteBucketLifecycleCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlDeleteBucketMetricsConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 204 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlDeleteBucketMetricsConfigurationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlDeleteBucketMetricsConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlDeleteBucketOwnershipControlsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 204 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlDeleteBucketOwnershipControlsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlDeleteBucketOwnershipControlsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlDeleteBucketPolicyCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 204 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlDeleteBucketPolicyCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlDeleteBucketPolicyCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlDeleteBucketReplicationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 204 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlDeleteBucketReplicationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlDeleteBucketReplicationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlDeleteBucketTaggingCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 204 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlDeleteBucketTaggingCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlDeleteBucketTaggingCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlDeleteBucketWebsiteCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 204 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlDeleteBucketWebsiteCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlDeleteBucketWebsiteCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlDeleteObjectCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 204 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlDeleteObjectCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    DeleteMarker: undefined,\n                    RequestCharged: undefined,\n                    VersionId: undefined,\n                };\n                if (output.headers[\"x-amz-delete-marker\"] !== undefined) {\n                    contents.DeleteMarker = output.headers[\"x-amz-delete-marker\"] === \"true\";\n                }\n                if (output.headers[\"x-amz-version-id\"] !== undefined) {\n                    contents.VersionId = output.headers[\"x-amz-version-id\"];\n                }\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                }\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlDeleteObjectCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlDeleteObjectsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlDeleteObjectsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    Deleted: undefined,\n                    Errors: undefined,\n                    RequestCharged: undefined,\n                };\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                }\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                if (data.Deleted === \"\") {\n                    contents.Deleted = [];\n                }\n                if (data[\"Deleted\"] !== undefined) {\n                    contents.Deleted = deserializeAws_restXmlDeletedObjects(__getArrayIfSingleItem(data[\"Deleted\"]), context);\n                }\n                if (data.Error === \"\") {\n                    contents.Errors = [];\n                }\n                if (data[\"Error\"] !== undefined) {\n                    contents.Errors = deserializeAws_restXmlErrors(__getArrayIfSingleItem(data[\"Error\"]), context);\n                }\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlDeleteObjectsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlDeleteObjectTaggingCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 204 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlDeleteObjectTaggingCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    VersionId: undefined,\n                };\n                if (output.headers[\"x-amz-version-id\"] !== undefined) {\n                    contents.VersionId = output.headers[\"x-amz-version-id\"];\n                }\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlDeleteObjectTaggingCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlDeletePublicAccessBlockCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 204 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlDeletePublicAccessBlockCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlDeletePublicAccessBlockCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetBucketAccelerateConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlGetBucketAccelerateConfigurationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    Status: undefined,\n                };\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                if (data[\"Status\"] !== undefined) {\n                    contents.Status = data[\"Status\"];\n                }\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetBucketAccelerateConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetBucketAclCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlGetBucketAclCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    Grants: undefined,\n                    Owner: undefined,\n                };\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                if (data.AccessControlList === \"\") {\n                    contents.Grants = [];\n                }\n                if (data[\"AccessControlList\"] !== undefined && data[\"AccessControlList\"][\"Grant\"] !== undefined) {\n                    contents.Grants = deserializeAws_restXmlGrants(__getArrayIfSingleItem(data[\"AccessControlList\"][\"Grant\"]), context);\n                }\n                if (data[\"Owner\"] !== undefined) {\n                    contents.Owner = deserializeAws_restXmlOwner(data[\"Owner\"], context);\n                }\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetBucketAclCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetBucketAnalyticsConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlGetBucketAnalyticsConfigurationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    AnalyticsConfiguration: undefined,\n                };\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                contents.AnalyticsConfiguration = deserializeAws_restXmlAnalyticsConfiguration(data, context);\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetBucketAnalyticsConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetBucketCorsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlGetBucketCorsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    CORSRules: undefined,\n                };\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                if (data.CORSRule === \"\") {\n                    contents.CORSRules = [];\n                }\n                if (data[\"CORSRule\"] !== undefined) {\n                    contents.CORSRules = deserializeAws_restXmlCORSRules(__getArrayIfSingleItem(data[\"CORSRule\"]), context);\n                }\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetBucketCorsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetBucketEncryptionCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlGetBucketEncryptionCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    ServerSideEncryptionConfiguration: undefined,\n                };\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                contents.ServerSideEncryptionConfiguration = deserializeAws_restXmlServerSideEncryptionConfiguration(data, context);\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetBucketEncryptionCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetBucketIntelligentTieringConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlGetBucketIntelligentTieringConfigurationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    IntelligentTieringConfiguration: undefined,\n                };\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                contents.IntelligentTieringConfiguration = deserializeAws_restXmlIntelligentTieringConfiguration(data, context);\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetBucketIntelligentTieringConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetBucketInventoryConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlGetBucketInventoryConfigurationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    InventoryConfiguration: undefined,\n                };\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                contents.InventoryConfiguration = deserializeAws_restXmlInventoryConfiguration(data, context);\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetBucketInventoryConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetBucketLifecycleConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlGetBucketLifecycleConfigurationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    Rules: undefined,\n                };\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                if (data.Rule === \"\") {\n                    contents.Rules = [];\n                }\n                if (data[\"Rule\"] !== undefined) {\n                    contents.Rules = deserializeAws_restXmlLifecycleRules(__getArrayIfSingleItem(data[\"Rule\"]), context);\n                }\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetBucketLifecycleConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetBucketLocationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlGetBucketLocationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    LocationConstraint: undefined,\n                };\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                if (data[\"LocationConstraint\"] !== undefined) {\n                    contents.LocationConstraint = data[\"LocationConstraint\"];\n                }\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetBucketLocationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetBucketLoggingCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlGetBucketLoggingCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    LoggingEnabled: undefined,\n                };\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                if (data[\"LoggingEnabled\"] !== undefined) {\n                    contents.LoggingEnabled = deserializeAws_restXmlLoggingEnabled(data[\"LoggingEnabled\"], context);\n                }\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetBucketLoggingCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetBucketMetricsConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlGetBucketMetricsConfigurationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    MetricsConfiguration: undefined,\n                };\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                contents.MetricsConfiguration = deserializeAws_restXmlMetricsConfiguration(data, context);\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetBucketMetricsConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetBucketNotificationConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlGetBucketNotificationConfigurationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    LambdaFunctionConfigurations: undefined,\n                    QueueConfigurations: undefined,\n                    TopicConfigurations: undefined,\n                };\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                if (data.CloudFunctionConfiguration === \"\") {\n                    contents.LambdaFunctionConfigurations = [];\n                }\n                if (data[\"CloudFunctionConfiguration\"] !== undefined) {\n                    contents.LambdaFunctionConfigurations = deserializeAws_restXmlLambdaFunctionConfigurationList(__getArrayIfSingleItem(data[\"CloudFunctionConfiguration\"]), context);\n                }\n                if (data.QueueConfiguration === \"\") {\n                    contents.QueueConfigurations = [];\n                }\n                if (data[\"QueueConfiguration\"] !== undefined) {\n                    contents.QueueConfigurations = deserializeAws_restXmlQueueConfigurationList(__getArrayIfSingleItem(data[\"QueueConfiguration\"]), context);\n                }\n                if (data.TopicConfiguration === \"\") {\n                    contents.TopicConfigurations = [];\n                }\n                if (data[\"TopicConfiguration\"] !== undefined) {\n                    contents.TopicConfigurations = deserializeAws_restXmlTopicConfigurationList(__getArrayIfSingleItem(data[\"TopicConfiguration\"]), context);\n                }\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetBucketNotificationConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetBucketOwnershipControlsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlGetBucketOwnershipControlsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    OwnershipControls: undefined,\n                };\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                contents.OwnershipControls = deserializeAws_restXmlOwnershipControls(data, context);\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetBucketOwnershipControlsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetBucketPolicyCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlGetBucketPolicyCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    Policy: undefined,\n                };\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                if (data[\"Policy\"] !== undefined) {\n                    contents.Policy = data[\"Policy\"];\n                }\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetBucketPolicyCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetBucketPolicyStatusCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlGetBucketPolicyStatusCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    PolicyStatus: undefined,\n                };\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                contents.PolicyStatus = deserializeAws_restXmlPolicyStatus(data, context);\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetBucketPolicyStatusCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetBucketReplicationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlGetBucketReplicationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    ReplicationConfiguration: undefined,\n                };\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                contents.ReplicationConfiguration = deserializeAws_restXmlReplicationConfiguration(data, context);\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetBucketReplicationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetBucketRequestPaymentCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlGetBucketRequestPaymentCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    Payer: undefined,\n                };\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                if (data[\"Payer\"] !== undefined) {\n                    contents.Payer = data[\"Payer\"];\n                }\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetBucketRequestPaymentCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetBucketTaggingCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlGetBucketTaggingCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    TagSet: undefined,\n                };\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                if (data.TagSet === \"\") {\n                    contents.TagSet = [];\n                }\n                if (data[\"TagSet\"] !== undefined && data[\"TagSet\"][\"Tag\"] !== undefined) {\n                    contents.TagSet = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(data[\"TagSet\"][\"Tag\"]), context);\n                }\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetBucketTaggingCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetBucketVersioningCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlGetBucketVersioningCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    MFADelete: undefined,\n                    Status: undefined,\n                };\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                if (data[\"MfaDelete\"] !== undefined) {\n                    contents.MFADelete = data[\"MfaDelete\"];\n                }\n                if (data[\"Status\"] !== undefined) {\n                    contents.Status = data[\"Status\"];\n                }\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetBucketVersioningCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetBucketWebsiteCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlGetBucketWebsiteCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    ErrorDocument: undefined,\n                    IndexDocument: undefined,\n                    RedirectAllRequestsTo: undefined,\n                    RoutingRules: undefined,\n                };\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                if (data[\"ErrorDocument\"] !== undefined) {\n                    contents.ErrorDocument = deserializeAws_restXmlErrorDocument(data[\"ErrorDocument\"], context);\n                }\n                if (data[\"IndexDocument\"] !== undefined) {\n                    contents.IndexDocument = deserializeAws_restXmlIndexDocument(data[\"IndexDocument\"], context);\n                }\n                if (data[\"RedirectAllRequestsTo\"] !== undefined) {\n                    contents.RedirectAllRequestsTo = deserializeAws_restXmlRedirectAllRequestsTo(data[\"RedirectAllRequestsTo\"], context);\n                }\n                if (data.RoutingRules === \"\") {\n                    contents.RoutingRules = [];\n                }\n                if (data[\"RoutingRules\"] !== undefined && data[\"RoutingRules\"][\"RoutingRule\"] !== undefined) {\n                    contents.RoutingRules = deserializeAws_restXmlRoutingRules(__getArrayIfSingleItem(data[\"RoutingRules\"][\"RoutingRule\"]), context);\n                }\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetBucketWebsiteCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetObjectCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlGetObjectCommandError(output, context)];\n        }\n        contents = {\n            $metadata: deserializeMetadata(output),\n            AcceptRanges: undefined,\n            Body: undefined,\n            BucketKeyEnabled: undefined,\n            CacheControl: undefined,\n            ContentDisposition: undefined,\n            ContentEncoding: undefined,\n            ContentLanguage: undefined,\n            ContentLength: undefined,\n            ContentRange: undefined,\n            ContentType: undefined,\n            DeleteMarker: undefined,\n            ETag: undefined,\n            Expiration: undefined,\n            Expires: undefined,\n            LastModified: undefined,\n            Metadata: undefined,\n            MissingMeta: undefined,\n            ObjectLockLegalHoldStatus: undefined,\n            ObjectLockMode: undefined,\n            ObjectLockRetainUntilDate: undefined,\n            PartsCount: undefined,\n            ReplicationStatus: undefined,\n            RequestCharged: undefined,\n            Restore: undefined,\n            SSECustomerAlgorithm: undefined,\n            SSECustomerKeyMD5: undefined,\n            SSEKMSKeyId: undefined,\n            ServerSideEncryption: undefined,\n            StorageClass: undefined,\n            TagCount: undefined,\n            VersionId: undefined,\n            WebsiteRedirectLocation: undefined,\n        };\n        if (output.headers[\"x-amz-delete-marker\"] !== undefined) {\n            contents.DeleteMarker = output.headers[\"x-amz-delete-marker\"] === \"true\";\n        }\n        if (output.headers[\"accept-ranges\"] !== undefined) {\n            contents.AcceptRanges = output.headers[\"accept-ranges\"];\n        }\n        if (output.headers[\"x-amz-expiration\"] !== undefined) {\n            contents.Expiration = output.headers[\"x-amz-expiration\"];\n        }\n        if (output.headers[\"x-amz-restore\"] !== undefined) {\n            contents.Restore = output.headers[\"x-amz-restore\"];\n        }\n        if (output.headers[\"last-modified\"] !== undefined) {\n            contents.LastModified = new Date(output.headers[\"last-modified\"]);\n        }\n        if (output.headers[\"content-length\"] !== undefined) {\n            contents.ContentLength = parseInt(output.headers[\"content-length\"], 10);\n        }\n        if (output.headers[\"etag\"] !== undefined) {\n            contents.ETag = output.headers[\"etag\"];\n        }\n        if (output.headers[\"x-amz-missing-meta\"] !== undefined) {\n            contents.MissingMeta = parseInt(output.headers[\"x-amz-missing-meta\"], 10);\n        }\n        if (output.headers[\"x-amz-version-id\"] !== undefined) {\n            contents.VersionId = output.headers[\"x-amz-version-id\"];\n        }\n        if (output.headers[\"cache-control\"] !== undefined) {\n            contents.CacheControl = output.headers[\"cache-control\"];\n        }\n        if (output.headers[\"content-disposition\"] !== undefined) {\n            contents.ContentDisposition = output.headers[\"content-disposition\"];\n        }\n        if (output.headers[\"content-encoding\"] !== undefined) {\n            contents.ContentEncoding = output.headers[\"content-encoding\"];\n        }\n        if (output.headers[\"content-language\"] !== undefined) {\n            contents.ContentLanguage = output.headers[\"content-language\"];\n        }\n        if (output.headers[\"content-range\"] !== undefined) {\n            contents.ContentRange = output.headers[\"content-range\"];\n        }\n        if (output.headers[\"content-type\"] !== undefined) {\n            contents.ContentType = output.headers[\"content-type\"];\n        }\n        if (output.headers[\"expires\"] !== undefined) {\n            contents.Expires = new Date(output.headers[\"expires\"]);\n        }\n        if (output.headers[\"x-amz-website-redirect-location\"] !== undefined) {\n            contents.WebsiteRedirectLocation = output.headers[\"x-amz-website-redirect-location\"];\n        }\n        if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n            contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n        }\n        if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n            contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n        }\n        if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n            contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n        }\n        if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n            contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n        }\n        if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n            contents.BucketKeyEnabled = output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] === \"true\";\n        }\n        if (output.headers[\"x-amz-storage-class\"] !== undefined) {\n            contents.StorageClass = output.headers[\"x-amz-storage-class\"];\n        }\n        if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n        }\n        if (output.headers[\"x-amz-replication-status\"] !== undefined) {\n            contents.ReplicationStatus = output.headers[\"x-amz-replication-status\"];\n        }\n        if (output.headers[\"x-amz-mp-parts-count\"] !== undefined) {\n            contents.PartsCount = parseInt(output.headers[\"x-amz-mp-parts-count\"], 10);\n        }\n        if (output.headers[\"x-amz-tagging-count\"] !== undefined) {\n            contents.TagCount = parseInt(output.headers[\"x-amz-tagging-count\"], 10);\n        }\n        if (output.headers[\"x-amz-object-lock-mode\"] !== undefined) {\n            contents.ObjectLockMode = output.headers[\"x-amz-object-lock-mode\"];\n        }\n        if (output.headers[\"x-amz-object-lock-retain-until-date\"] !== undefined) {\n            contents.ObjectLockRetainUntilDate = new Date(output.headers[\"x-amz-object-lock-retain-until-date\"]);\n        }\n        if (output.headers[\"x-amz-object-lock-legal-hold\"] !== undefined) {\n            contents.ObjectLockLegalHoldStatus = output.headers[\"x-amz-object-lock-legal-hold\"];\n        }\n        Object.keys(output.headers).forEach(function (header) {\n            if (contents.Metadata === undefined) {\n                contents.Metadata = {};\n            }\n            if (header.startsWith(\"x-amz-meta-\")) {\n                contents.Metadata[header.substring(11)] = output.headers[header];\n            }\n        });\n        data = output.body;\n        contents.Body = data;\n        return [2 /*return*/, Promise.resolve(contents)];\n    });\n}); };\nvar deserializeAws_restXmlGetObjectCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;\n    var _e;\n    return __generator(this, function (_f) {\n        switch (_f.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _e = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"InvalidObjectState\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.s3#InvalidObjectState\": return [3 /*break*/, 2];\n                    case \"NoSuchKey\": return [3 /*break*/, 4];\n                    case \"com.amazonaws.s3#NoSuchKey\": return [3 /*break*/, 4];\n                }\n                return [3 /*break*/, 6];\n            case 2:\n                _c = [{}];\n                return [4 /*yield*/, deserializeAws_restXmlInvalidObjectStateResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_f.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 7];\n            case 4:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_restXmlNoSuchKeyResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_f.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 7];\n            case 6:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _f.label = 7;\n            case 7:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetObjectAclCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlGetObjectAclCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    Grants: undefined,\n                    Owner: undefined,\n                    RequestCharged: undefined,\n                };\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                }\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                if (data.AccessControlList === \"\") {\n                    contents.Grants = [];\n                }\n                if (data[\"AccessControlList\"] !== undefined && data[\"AccessControlList\"][\"Grant\"] !== undefined) {\n                    contents.Grants = deserializeAws_restXmlGrants(__getArrayIfSingleItem(data[\"AccessControlList\"][\"Grant\"]), context);\n                }\n                if (data[\"Owner\"] !== undefined) {\n                    contents.Owner = deserializeAws_restXmlOwner(data[\"Owner\"], context);\n                }\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetObjectAclCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;\n    var _d;\n    return __generator(this, function (_e) {\n        switch (_e.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _d = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"NoSuchKey\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.s3#NoSuchKey\": return [3 /*break*/, 2];\n                }\n                return [3 /*break*/, 4];\n            case 2:\n                _c = [{}];\n                return [4 /*yield*/, deserializeAws_restXmlNoSuchKeyResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_e.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 5];\n            case 4:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _e.label = 5;\n            case 5:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetObjectLegalHoldCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlGetObjectLegalHoldCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    LegalHold: undefined,\n                };\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                contents.LegalHold = deserializeAws_restXmlObjectLockLegalHold(data, context);\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetObjectLegalHoldCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetObjectLockConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlGetObjectLockConfigurationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    ObjectLockConfiguration: undefined,\n                };\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                contents.ObjectLockConfiguration = deserializeAws_restXmlObjectLockConfiguration(data, context);\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetObjectLockConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetObjectRetentionCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlGetObjectRetentionCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    Retention: undefined,\n                };\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                contents.Retention = deserializeAws_restXmlObjectLockRetention(data, context);\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetObjectRetentionCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetObjectTaggingCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlGetObjectTaggingCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    TagSet: undefined,\n                    VersionId: undefined,\n                };\n                if (output.headers[\"x-amz-version-id\"] !== undefined) {\n                    contents.VersionId = output.headers[\"x-amz-version-id\"];\n                }\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                if (data.TagSet === \"\") {\n                    contents.TagSet = [];\n                }\n                if (data[\"TagSet\"] !== undefined && data[\"TagSet\"][\"Tag\"] !== undefined) {\n                    contents.TagSet = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(data[\"TagSet\"][\"Tag\"]), context);\n                }\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetObjectTaggingCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetObjectTorrentCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlGetObjectTorrentCommandError(output, context)];\n        }\n        contents = {\n            $metadata: deserializeMetadata(output),\n            Body: undefined,\n            RequestCharged: undefined,\n        };\n        if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n        }\n        data = output.body;\n        contents.Body = data;\n        return [2 /*return*/, Promise.resolve(contents)];\n    });\n}); };\nvar deserializeAws_restXmlGetObjectTorrentCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlGetPublicAccessBlockCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlGetPublicAccessBlockCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    PublicAccessBlockConfiguration: undefined,\n                };\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                contents.PublicAccessBlockConfiguration = deserializeAws_restXmlPublicAccessBlockConfiguration(data, context);\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlGetPublicAccessBlockCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlHeadBucketCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlHeadBucketCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlHeadBucketCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;\n    var _d;\n    return __generator(this, function (_e) {\n        switch (_e.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _d = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"NoSuchBucket\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.s3#NoSuchBucket\": return [3 /*break*/, 2];\n                }\n                return [3 /*break*/, 4];\n            case 2:\n                _c = [{}];\n                return [4 /*yield*/, deserializeAws_restXmlNoSuchBucketResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_e.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 5];\n            case 4:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _e.label = 5;\n            case 5:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlHeadObjectCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlHeadObjectCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    AcceptRanges: undefined,\n                    ArchiveStatus: undefined,\n                    BucketKeyEnabled: undefined,\n                    CacheControl: undefined,\n                    ContentDisposition: undefined,\n                    ContentEncoding: undefined,\n                    ContentLanguage: undefined,\n                    ContentLength: undefined,\n                    ContentType: undefined,\n                    DeleteMarker: undefined,\n                    ETag: undefined,\n                    Expiration: undefined,\n                    Expires: undefined,\n                    LastModified: undefined,\n                    Metadata: undefined,\n                    MissingMeta: undefined,\n                    ObjectLockLegalHoldStatus: undefined,\n                    ObjectLockMode: undefined,\n                    ObjectLockRetainUntilDate: undefined,\n                    PartsCount: undefined,\n                    ReplicationStatus: undefined,\n                    RequestCharged: undefined,\n                    Restore: undefined,\n                    SSECustomerAlgorithm: undefined,\n                    SSECustomerKeyMD5: undefined,\n                    SSEKMSKeyId: undefined,\n                    ServerSideEncryption: undefined,\n                    StorageClass: undefined,\n                    VersionId: undefined,\n                    WebsiteRedirectLocation: undefined,\n                };\n                if (output.headers[\"x-amz-delete-marker\"] !== undefined) {\n                    contents.DeleteMarker = output.headers[\"x-amz-delete-marker\"] === \"true\";\n                }\n                if (output.headers[\"accept-ranges\"] !== undefined) {\n                    contents.AcceptRanges = output.headers[\"accept-ranges\"];\n                }\n                if (output.headers[\"x-amz-expiration\"] !== undefined) {\n                    contents.Expiration = output.headers[\"x-amz-expiration\"];\n                }\n                if (output.headers[\"x-amz-restore\"] !== undefined) {\n                    contents.Restore = output.headers[\"x-amz-restore\"];\n                }\n                if (output.headers[\"x-amz-archive-status\"] !== undefined) {\n                    contents.ArchiveStatus = output.headers[\"x-amz-archive-status\"];\n                }\n                if (output.headers[\"last-modified\"] !== undefined) {\n                    contents.LastModified = new Date(output.headers[\"last-modified\"]);\n                }\n                if (output.headers[\"content-length\"] !== undefined) {\n                    contents.ContentLength = parseInt(output.headers[\"content-length\"], 10);\n                }\n                if (output.headers[\"etag\"] !== undefined) {\n                    contents.ETag = output.headers[\"etag\"];\n                }\n                if (output.headers[\"x-amz-missing-meta\"] !== undefined) {\n                    contents.MissingMeta = parseInt(output.headers[\"x-amz-missing-meta\"], 10);\n                }\n                if (output.headers[\"x-amz-version-id\"] !== undefined) {\n                    contents.VersionId = output.headers[\"x-amz-version-id\"];\n                }\n                if (output.headers[\"cache-control\"] !== undefined) {\n                    contents.CacheControl = output.headers[\"cache-control\"];\n                }\n                if (output.headers[\"content-disposition\"] !== undefined) {\n                    contents.ContentDisposition = output.headers[\"content-disposition\"];\n                }\n                if (output.headers[\"content-encoding\"] !== undefined) {\n                    contents.ContentEncoding = output.headers[\"content-encoding\"];\n                }\n                if (output.headers[\"content-language\"] !== undefined) {\n                    contents.ContentLanguage = output.headers[\"content-language\"];\n                }\n                if (output.headers[\"content-type\"] !== undefined) {\n                    contents.ContentType = output.headers[\"content-type\"];\n                }\n                if (output.headers[\"expires\"] !== undefined) {\n                    contents.Expires = new Date(output.headers[\"expires\"]);\n                }\n                if (output.headers[\"x-amz-website-redirect-location\"] !== undefined) {\n                    contents.WebsiteRedirectLocation = output.headers[\"x-amz-website-redirect-location\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n                    contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n                    contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n                    contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n                    contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n                    contents.BucketKeyEnabled = output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] === \"true\";\n                }\n                if (output.headers[\"x-amz-storage-class\"] !== undefined) {\n                    contents.StorageClass = output.headers[\"x-amz-storage-class\"];\n                }\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                }\n                if (output.headers[\"x-amz-replication-status\"] !== undefined) {\n                    contents.ReplicationStatus = output.headers[\"x-amz-replication-status\"];\n                }\n                if (output.headers[\"x-amz-mp-parts-count\"] !== undefined) {\n                    contents.PartsCount = parseInt(output.headers[\"x-amz-mp-parts-count\"], 10);\n                }\n                if (output.headers[\"x-amz-object-lock-mode\"] !== undefined) {\n                    contents.ObjectLockMode = output.headers[\"x-amz-object-lock-mode\"];\n                }\n                if (output.headers[\"x-amz-object-lock-retain-until-date\"] !== undefined) {\n                    contents.ObjectLockRetainUntilDate = new Date(output.headers[\"x-amz-object-lock-retain-until-date\"]);\n                }\n                if (output.headers[\"x-amz-object-lock-legal-hold\"] !== undefined) {\n                    contents.ObjectLockLegalHoldStatus = output.headers[\"x-amz-object-lock-legal-hold\"];\n                }\n                Object.keys(output.headers).forEach(function (header) {\n                    if (contents.Metadata === undefined) {\n                        contents.Metadata = {};\n                    }\n                    if (header.startsWith(\"x-amz-meta-\")) {\n                        contents.Metadata[header.substring(11)] = output.headers[header];\n                    }\n                });\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlHeadObjectCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;\n    var _d;\n    return __generator(this, function (_e) {\n        switch (_e.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _d = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"NoSuchKey\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.s3#NoSuchKey\": return [3 /*break*/, 2];\n                }\n                return [3 /*break*/, 4];\n            case 2:\n                _c = [{}];\n                return [4 /*yield*/, deserializeAws_restXmlNoSuchKeyResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_e.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 5];\n            case 4:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _e.label = 5;\n            case 5:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlListBucketAnalyticsConfigurationsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlListBucketAnalyticsConfigurationsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    AnalyticsConfigurationList: undefined,\n                    ContinuationToken: undefined,\n                    IsTruncated: undefined,\n                    NextContinuationToken: undefined,\n                };\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                if (data.AnalyticsConfiguration === \"\") {\n                    contents.AnalyticsConfigurationList = [];\n                }\n                if (data[\"AnalyticsConfiguration\"] !== undefined) {\n                    contents.AnalyticsConfigurationList = deserializeAws_restXmlAnalyticsConfigurationList(__getArrayIfSingleItem(data[\"AnalyticsConfiguration\"]), context);\n                }\n                if (data[\"ContinuationToken\"] !== undefined) {\n                    contents.ContinuationToken = data[\"ContinuationToken\"];\n                }\n                if (data[\"IsTruncated\"] !== undefined) {\n                    contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n                }\n                if (data[\"NextContinuationToken\"] !== undefined) {\n                    contents.NextContinuationToken = data[\"NextContinuationToken\"];\n                }\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlListBucketAnalyticsConfigurationsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlListBucketIntelligentTieringConfigurationsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlListBucketIntelligentTieringConfigurationsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    ContinuationToken: undefined,\n                    IntelligentTieringConfigurationList: undefined,\n                    IsTruncated: undefined,\n                    NextContinuationToken: undefined,\n                };\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                if (data[\"ContinuationToken\"] !== undefined) {\n                    contents.ContinuationToken = data[\"ContinuationToken\"];\n                }\n                if (data.IntelligentTieringConfiguration === \"\") {\n                    contents.IntelligentTieringConfigurationList = [];\n                }\n                if (data[\"IntelligentTieringConfiguration\"] !== undefined) {\n                    contents.IntelligentTieringConfigurationList = deserializeAws_restXmlIntelligentTieringConfigurationList(__getArrayIfSingleItem(data[\"IntelligentTieringConfiguration\"]), context);\n                }\n                if (data[\"IsTruncated\"] !== undefined) {\n                    contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n                }\n                if (data[\"NextContinuationToken\"] !== undefined) {\n                    contents.NextContinuationToken = data[\"NextContinuationToken\"];\n                }\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlListBucketIntelligentTieringConfigurationsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlListBucketInventoryConfigurationsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlListBucketInventoryConfigurationsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    ContinuationToken: undefined,\n                    InventoryConfigurationList: undefined,\n                    IsTruncated: undefined,\n                    NextContinuationToken: undefined,\n                };\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                if (data[\"ContinuationToken\"] !== undefined) {\n                    contents.ContinuationToken = data[\"ContinuationToken\"];\n                }\n                if (data.InventoryConfiguration === \"\") {\n                    contents.InventoryConfigurationList = [];\n                }\n                if (data[\"InventoryConfiguration\"] !== undefined) {\n                    contents.InventoryConfigurationList = deserializeAws_restXmlInventoryConfigurationList(__getArrayIfSingleItem(data[\"InventoryConfiguration\"]), context);\n                }\n                if (data[\"IsTruncated\"] !== undefined) {\n                    contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n                }\n                if (data[\"NextContinuationToken\"] !== undefined) {\n                    contents.NextContinuationToken = data[\"NextContinuationToken\"];\n                }\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlListBucketInventoryConfigurationsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlListBucketMetricsConfigurationsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlListBucketMetricsConfigurationsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    ContinuationToken: undefined,\n                    IsTruncated: undefined,\n                    MetricsConfigurationList: undefined,\n                    NextContinuationToken: undefined,\n                };\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                if (data[\"ContinuationToken\"] !== undefined) {\n                    contents.ContinuationToken = data[\"ContinuationToken\"];\n                }\n                if (data[\"IsTruncated\"] !== undefined) {\n                    contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n                }\n                if (data.MetricsConfiguration === \"\") {\n                    contents.MetricsConfigurationList = [];\n                }\n                if (data[\"MetricsConfiguration\"] !== undefined) {\n                    contents.MetricsConfigurationList = deserializeAws_restXmlMetricsConfigurationList(__getArrayIfSingleItem(data[\"MetricsConfiguration\"]), context);\n                }\n                if (data[\"NextContinuationToken\"] !== undefined) {\n                    contents.NextContinuationToken = data[\"NextContinuationToken\"];\n                }\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlListBucketMetricsConfigurationsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlListBucketsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlListBucketsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    Buckets: undefined,\n                    Owner: undefined,\n                };\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                if (data.Buckets === \"\") {\n                    contents.Buckets = [];\n                }\n                if (data[\"Buckets\"] !== undefined && data[\"Buckets\"][\"Bucket\"] !== undefined) {\n                    contents.Buckets = deserializeAws_restXmlBuckets(__getArrayIfSingleItem(data[\"Buckets\"][\"Bucket\"]), context);\n                }\n                if (data[\"Owner\"] !== undefined) {\n                    contents.Owner = deserializeAws_restXmlOwner(data[\"Owner\"], context);\n                }\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlListBucketsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlListMultipartUploadsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlListMultipartUploadsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    Bucket: undefined,\n                    CommonPrefixes: undefined,\n                    Delimiter: undefined,\n                    EncodingType: undefined,\n                    IsTruncated: undefined,\n                    KeyMarker: undefined,\n                    MaxUploads: undefined,\n                    NextKeyMarker: undefined,\n                    NextUploadIdMarker: undefined,\n                    Prefix: undefined,\n                    UploadIdMarker: undefined,\n                    Uploads: undefined,\n                };\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                if (data[\"Bucket\"] !== undefined) {\n                    contents.Bucket = data[\"Bucket\"];\n                }\n                if (data.CommonPrefixes === \"\") {\n                    contents.CommonPrefixes = [];\n                }\n                if (data[\"CommonPrefixes\"] !== undefined) {\n                    contents.CommonPrefixes = deserializeAws_restXmlCommonPrefixList(__getArrayIfSingleItem(data[\"CommonPrefixes\"]), context);\n                }\n                if (data[\"Delimiter\"] !== undefined) {\n                    contents.Delimiter = data[\"Delimiter\"];\n                }\n                if (data[\"EncodingType\"] !== undefined) {\n                    contents.EncodingType = data[\"EncodingType\"];\n                }\n                if (data[\"IsTruncated\"] !== undefined) {\n                    contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n                }\n                if (data[\"KeyMarker\"] !== undefined) {\n                    contents.KeyMarker = data[\"KeyMarker\"];\n                }\n                if (data[\"MaxUploads\"] !== undefined) {\n                    contents.MaxUploads = parseInt(data[\"MaxUploads\"]);\n                }\n                if (data[\"NextKeyMarker\"] !== undefined) {\n                    contents.NextKeyMarker = data[\"NextKeyMarker\"];\n                }\n                if (data[\"NextUploadIdMarker\"] !== undefined) {\n                    contents.NextUploadIdMarker = data[\"NextUploadIdMarker\"];\n                }\n                if (data[\"Prefix\"] !== undefined) {\n                    contents.Prefix = data[\"Prefix\"];\n                }\n                if (data[\"UploadIdMarker\"] !== undefined) {\n                    contents.UploadIdMarker = data[\"UploadIdMarker\"];\n                }\n                if (data.Upload === \"\") {\n                    contents.Uploads = [];\n                }\n                if (data[\"Upload\"] !== undefined) {\n                    contents.Uploads = deserializeAws_restXmlMultipartUploadList(__getArrayIfSingleItem(data[\"Upload\"]), context);\n                }\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlListMultipartUploadsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlListObjectsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlListObjectsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    CommonPrefixes: undefined,\n                    Contents: undefined,\n                    Delimiter: undefined,\n                    EncodingType: undefined,\n                    IsTruncated: undefined,\n                    Marker: undefined,\n                    MaxKeys: undefined,\n                    Name: undefined,\n                    NextMarker: undefined,\n                    Prefix: undefined,\n                };\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                if (data.CommonPrefixes === \"\") {\n                    contents.CommonPrefixes = [];\n                }\n                if (data[\"CommonPrefixes\"] !== undefined) {\n                    contents.CommonPrefixes = deserializeAws_restXmlCommonPrefixList(__getArrayIfSingleItem(data[\"CommonPrefixes\"]), context);\n                }\n                if (data.Contents === \"\") {\n                    contents.Contents = [];\n                }\n                if (data[\"Contents\"] !== undefined) {\n                    contents.Contents = deserializeAws_restXmlObjectList(__getArrayIfSingleItem(data[\"Contents\"]), context);\n                }\n                if (data[\"Delimiter\"] !== undefined) {\n                    contents.Delimiter = data[\"Delimiter\"];\n                }\n                if (data[\"EncodingType\"] !== undefined) {\n                    contents.EncodingType = data[\"EncodingType\"];\n                }\n                if (data[\"IsTruncated\"] !== undefined) {\n                    contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n                }\n                if (data[\"Marker\"] !== undefined) {\n                    contents.Marker = data[\"Marker\"];\n                }\n                if (data[\"MaxKeys\"] !== undefined) {\n                    contents.MaxKeys = parseInt(data[\"MaxKeys\"]);\n                }\n                if (data[\"Name\"] !== undefined) {\n                    contents.Name = data[\"Name\"];\n                }\n                if (data[\"NextMarker\"] !== undefined) {\n                    contents.NextMarker = data[\"NextMarker\"];\n                }\n                if (data[\"Prefix\"] !== undefined) {\n                    contents.Prefix = data[\"Prefix\"];\n                }\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlListObjectsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;\n    var _d;\n    return __generator(this, function (_e) {\n        switch (_e.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _d = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"NoSuchBucket\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.s3#NoSuchBucket\": return [3 /*break*/, 2];\n                }\n                return [3 /*break*/, 4];\n            case 2:\n                _c = [{}];\n                return [4 /*yield*/, deserializeAws_restXmlNoSuchBucketResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_e.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 5];\n            case 4:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _e.label = 5;\n            case 5:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlListObjectsV2Command = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlListObjectsV2CommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    CommonPrefixes: undefined,\n                    Contents: undefined,\n                    ContinuationToken: undefined,\n                    Delimiter: undefined,\n                    EncodingType: undefined,\n                    IsTruncated: undefined,\n                    KeyCount: undefined,\n                    MaxKeys: undefined,\n                    Name: undefined,\n                    NextContinuationToken: undefined,\n                    Prefix: undefined,\n                    StartAfter: undefined,\n                };\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                if (data.CommonPrefixes === \"\") {\n                    contents.CommonPrefixes = [];\n                }\n                if (data[\"CommonPrefixes\"] !== undefined) {\n                    contents.CommonPrefixes = deserializeAws_restXmlCommonPrefixList(__getArrayIfSingleItem(data[\"CommonPrefixes\"]), context);\n                }\n                if (data.Contents === \"\") {\n                    contents.Contents = [];\n                }\n                if (data[\"Contents\"] !== undefined) {\n                    contents.Contents = deserializeAws_restXmlObjectList(__getArrayIfSingleItem(data[\"Contents\"]), context);\n                }\n                if (data[\"ContinuationToken\"] !== undefined) {\n                    contents.ContinuationToken = data[\"ContinuationToken\"];\n                }\n                if (data[\"Delimiter\"] !== undefined) {\n                    contents.Delimiter = data[\"Delimiter\"];\n                }\n                if (data[\"EncodingType\"] !== undefined) {\n                    contents.EncodingType = data[\"EncodingType\"];\n                }\n                if (data[\"IsTruncated\"] !== undefined) {\n                    contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n                }\n                if (data[\"KeyCount\"] !== undefined) {\n                    contents.KeyCount = parseInt(data[\"KeyCount\"]);\n                }\n                if (data[\"MaxKeys\"] !== undefined) {\n                    contents.MaxKeys = parseInt(data[\"MaxKeys\"]);\n                }\n                if (data[\"Name\"] !== undefined) {\n                    contents.Name = data[\"Name\"];\n                }\n                if (data[\"NextContinuationToken\"] !== undefined) {\n                    contents.NextContinuationToken = data[\"NextContinuationToken\"];\n                }\n                if (data[\"Prefix\"] !== undefined) {\n                    contents.Prefix = data[\"Prefix\"];\n                }\n                if (data[\"StartAfter\"] !== undefined) {\n                    contents.StartAfter = data[\"StartAfter\"];\n                }\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlListObjectsV2CommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;\n    var _d;\n    return __generator(this, function (_e) {\n        switch (_e.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _d = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"NoSuchBucket\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.s3#NoSuchBucket\": return [3 /*break*/, 2];\n                }\n                return [3 /*break*/, 4];\n            case 2:\n                _c = [{}];\n                return [4 /*yield*/, deserializeAws_restXmlNoSuchBucketResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_e.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 5];\n            case 4:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _e.label = 5;\n            case 5:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlListObjectVersionsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlListObjectVersionsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    CommonPrefixes: undefined,\n                    DeleteMarkers: undefined,\n                    Delimiter: undefined,\n                    EncodingType: undefined,\n                    IsTruncated: undefined,\n                    KeyMarker: undefined,\n                    MaxKeys: undefined,\n                    Name: undefined,\n                    NextKeyMarker: undefined,\n                    NextVersionIdMarker: undefined,\n                    Prefix: undefined,\n                    VersionIdMarker: undefined,\n                    Versions: undefined,\n                };\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                if (data.CommonPrefixes === \"\") {\n                    contents.CommonPrefixes = [];\n                }\n                if (data[\"CommonPrefixes\"] !== undefined) {\n                    contents.CommonPrefixes = deserializeAws_restXmlCommonPrefixList(__getArrayIfSingleItem(data[\"CommonPrefixes\"]), context);\n                }\n                if (data.DeleteMarker === \"\") {\n                    contents.DeleteMarkers = [];\n                }\n                if (data[\"DeleteMarker\"] !== undefined) {\n                    contents.DeleteMarkers = deserializeAws_restXmlDeleteMarkers(__getArrayIfSingleItem(data[\"DeleteMarker\"]), context);\n                }\n                if (data[\"Delimiter\"] !== undefined) {\n                    contents.Delimiter = data[\"Delimiter\"];\n                }\n                if (data[\"EncodingType\"] !== undefined) {\n                    contents.EncodingType = data[\"EncodingType\"];\n                }\n                if (data[\"IsTruncated\"] !== undefined) {\n                    contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n                }\n                if (data[\"KeyMarker\"] !== undefined) {\n                    contents.KeyMarker = data[\"KeyMarker\"];\n                }\n                if (data[\"MaxKeys\"] !== undefined) {\n                    contents.MaxKeys = parseInt(data[\"MaxKeys\"]);\n                }\n                if (data[\"Name\"] !== undefined) {\n                    contents.Name = data[\"Name\"];\n                }\n                if (data[\"NextKeyMarker\"] !== undefined) {\n                    contents.NextKeyMarker = data[\"NextKeyMarker\"];\n                }\n                if (data[\"NextVersionIdMarker\"] !== undefined) {\n                    contents.NextVersionIdMarker = data[\"NextVersionIdMarker\"];\n                }\n                if (data[\"Prefix\"] !== undefined) {\n                    contents.Prefix = data[\"Prefix\"];\n                }\n                if (data[\"VersionIdMarker\"] !== undefined) {\n                    contents.VersionIdMarker = data[\"VersionIdMarker\"];\n                }\n                if (data.Version === \"\") {\n                    contents.Versions = [];\n                }\n                if (data[\"Version\"] !== undefined) {\n                    contents.Versions = deserializeAws_restXmlObjectVersionList(__getArrayIfSingleItem(data[\"Version\"]), context);\n                }\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlListObjectVersionsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlListPartsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlListPartsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    AbortDate: undefined,\n                    AbortRuleId: undefined,\n                    Bucket: undefined,\n                    Initiator: undefined,\n                    IsTruncated: undefined,\n                    Key: undefined,\n                    MaxParts: undefined,\n                    NextPartNumberMarker: undefined,\n                    Owner: undefined,\n                    PartNumberMarker: undefined,\n                    Parts: undefined,\n                    RequestCharged: undefined,\n                    StorageClass: undefined,\n                    UploadId: undefined,\n                };\n                if (output.headers[\"x-amz-abort-date\"] !== undefined) {\n                    contents.AbortDate = new Date(output.headers[\"x-amz-abort-date\"]);\n                }\n                if (output.headers[\"x-amz-abort-rule-id\"] !== undefined) {\n                    contents.AbortRuleId = output.headers[\"x-amz-abort-rule-id\"];\n                }\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                }\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                if (data[\"Bucket\"] !== undefined) {\n                    contents.Bucket = data[\"Bucket\"];\n                }\n                if (data[\"Initiator\"] !== undefined) {\n                    contents.Initiator = deserializeAws_restXmlInitiator(data[\"Initiator\"], context);\n                }\n                if (data[\"IsTruncated\"] !== undefined) {\n                    contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n                }\n                if (data[\"Key\"] !== undefined) {\n                    contents.Key = data[\"Key\"];\n                }\n                if (data[\"MaxParts\"] !== undefined) {\n                    contents.MaxParts = parseInt(data[\"MaxParts\"]);\n                }\n                if (data[\"NextPartNumberMarker\"] !== undefined) {\n                    contents.NextPartNumberMarker = data[\"NextPartNumberMarker\"];\n                }\n                if (data[\"Owner\"] !== undefined) {\n                    contents.Owner = deserializeAws_restXmlOwner(data[\"Owner\"], context);\n                }\n                if (data[\"PartNumberMarker\"] !== undefined) {\n                    contents.PartNumberMarker = data[\"PartNumberMarker\"];\n                }\n                if (data.Part === \"\") {\n                    contents.Parts = [];\n                }\n                if (data[\"Part\"] !== undefined) {\n                    contents.Parts = deserializeAws_restXmlParts(__getArrayIfSingleItem(data[\"Part\"]), context);\n                }\n                if (data[\"StorageClass\"] !== undefined) {\n                    contents.StorageClass = data[\"StorageClass\"];\n                }\n                if (data[\"UploadId\"] !== undefined) {\n                    contents.UploadId = data[\"UploadId\"];\n                }\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlListPartsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutBucketAccelerateConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlPutBucketAccelerateConfigurationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutBucketAccelerateConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutBucketAclCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlPutBucketAclCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutBucketAclCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutBucketAnalyticsConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlPutBucketAnalyticsConfigurationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutBucketAnalyticsConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutBucketCorsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlPutBucketCorsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutBucketCorsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutBucketEncryptionCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlPutBucketEncryptionCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutBucketEncryptionCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutBucketIntelligentTieringConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlPutBucketIntelligentTieringConfigurationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutBucketIntelligentTieringConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutBucketInventoryConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlPutBucketInventoryConfigurationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutBucketInventoryConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutBucketLifecycleConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlPutBucketLifecycleConfigurationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutBucketLifecycleConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutBucketLoggingCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlPutBucketLoggingCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutBucketLoggingCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutBucketMetricsConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlPutBucketMetricsConfigurationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutBucketMetricsConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutBucketNotificationConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlPutBucketNotificationConfigurationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutBucketNotificationConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutBucketOwnershipControlsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlPutBucketOwnershipControlsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutBucketOwnershipControlsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutBucketPolicyCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlPutBucketPolicyCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutBucketPolicyCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutBucketReplicationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlPutBucketReplicationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutBucketReplicationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutBucketRequestPaymentCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlPutBucketRequestPaymentCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutBucketRequestPaymentCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutBucketTaggingCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlPutBucketTaggingCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutBucketTaggingCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutBucketVersioningCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlPutBucketVersioningCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutBucketVersioningCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutBucketWebsiteCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlPutBucketWebsiteCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutBucketWebsiteCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutObjectCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlPutObjectCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    BucketKeyEnabled: undefined,\n                    ETag: undefined,\n                    Expiration: undefined,\n                    RequestCharged: undefined,\n                    SSECustomerAlgorithm: undefined,\n                    SSECustomerKeyMD5: undefined,\n                    SSEKMSEncryptionContext: undefined,\n                    SSEKMSKeyId: undefined,\n                    ServerSideEncryption: undefined,\n                    VersionId: undefined,\n                };\n                if (output.headers[\"x-amz-expiration\"] !== undefined) {\n                    contents.Expiration = output.headers[\"x-amz-expiration\"];\n                }\n                if (output.headers[\"etag\"] !== undefined) {\n                    contents.ETag = output.headers[\"etag\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n                    contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n                }\n                if (output.headers[\"x-amz-version-id\"] !== undefined) {\n                    contents.VersionId = output.headers[\"x-amz-version-id\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n                    contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n                    contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n                    contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-context\"] !== undefined) {\n                    contents.SSEKMSEncryptionContext = output.headers[\"x-amz-server-side-encryption-context\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n                    contents.BucketKeyEnabled = output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] === \"true\";\n                }\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                }\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutObjectCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutObjectAclCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlPutObjectAclCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    RequestCharged: undefined,\n                };\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                }\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutObjectAclCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;\n    var _d;\n    return __generator(this, function (_e) {\n        switch (_e.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _d = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"NoSuchKey\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.s3#NoSuchKey\": return [3 /*break*/, 2];\n                }\n                return [3 /*break*/, 4];\n            case 2:\n                _c = [{}];\n                return [4 /*yield*/, deserializeAws_restXmlNoSuchKeyResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_e.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 5];\n            case 4:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _e.label = 5;\n            case 5:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutObjectLegalHoldCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlPutObjectLegalHoldCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    RequestCharged: undefined,\n                };\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                }\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutObjectLegalHoldCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutObjectLockConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlPutObjectLockConfigurationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    RequestCharged: undefined,\n                };\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                }\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutObjectLockConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutObjectRetentionCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlPutObjectRetentionCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    RequestCharged: undefined,\n                };\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                }\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutObjectRetentionCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutObjectTaggingCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlPutObjectTaggingCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    VersionId: undefined,\n                };\n                if (output.headers[\"x-amz-version-id\"] !== undefined) {\n                    contents.VersionId = output.headers[\"x-amz-version-id\"];\n                }\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutObjectTaggingCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlPutPublicAccessBlockCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlPutPublicAccessBlockCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlPutPublicAccessBlockCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlRestoreObjectCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlRestoreObjectCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    RequestCharged: undefined,\n                    RestoreOutputPath: undefined,\n                };\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                }\n                if (output.headers[\"x-amz-restore-output-path\"] !== undefined) {\n                    contents.RestoreOutputPath = output.headers[\"x-amz-restore-output-path\"];\n                }\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlRestoreObjectCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;\n    var _d;\n    return __generator(this, function (_e) {\n        switch (_e.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _d = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"ObjectAlreadyInActiveTierError\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.s3#ObjectAlreadyInActiveTierError\": return [3 /*break*/, 2];\n                }\n                return [3 /*break*/, 4];\n            case 2:\n                _c = [{}];\n                return [4 /*yield*/, deserializeAws_restXmlObjectAlreadyInActiveTierErrorResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_e.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 5];\n            case 4:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _e.label = 5;\n            case 5:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlSelectObjectContentCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restXmlSelectObjectContentCommandError(output, context)];\n        }\n        contents = {\n            $metadata: deserializeMetadata(output),\n            Payload: undefined,\n        };\n        data = context.eventStreamMarshaller.deserialize(output.body, function (event) { return __awaiter(void 0, void 0, void 0, function () {\n            var eventName, eventHeaders, eventMessage, parsedEvent;\n            var _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        eventName = Object.keys(event)[0];\n                        eventHeaders = Object.entries(event[eventName].headers).reduce(function (accummulator, curr) {\n                            accummulator[curr[0]] = curr[1].value;\n                            return accummulator;\n                        }, {});\n                        eventMessage = {\n                            headers: eventHeaders,\n                            body: event[eventName].body,\n                        };\n                        parsedEvent = (_a = {},\n                            _a[eventName] = eventMessage,\n                            _a);\n                        return [4 /*yield*/, deserializeAws_restXmlSelectObjectContentEventStream_event(parsedEvent, context)];\n                    case 1: return [2 /*return*/, _b.sent()];\n                }\n            });\n        }); });\n        contents.Payload = data;\n        return [2 /*return*/, Promise.resolve(contents)];\n    });\n}); };\nvar deserializeAws_restXmlSelectObjectContentCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlUploadPartCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlUploadPartCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    BucketKeyEnabled: undefined,\n                    ETag: undefined,\n                    RequestCharged: undefined,\n                    SSECustomerAlgorithm: undefined,\n                    SSECustomerKeyMD5: undefined,\n                    SSEKMSKeyId: undefined,\n                    ServerSideEncryption: undefined,\n                };\n                if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n                    contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n                }\n                if (output.headers[\"etag\"] !== undefined) {\n                    contents.ETag = output.headers[\"etag\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n                    contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n                    contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n                    contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n                    contents.BucketKeyEnabled = output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] === \"true\";\n                }\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                }\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlUploadPartCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restXmlUploadPartCopyCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restXmlUploadPartCopyCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    BucketKeyEnabled: undefined,\n                    CopyPartResult: undefined,\n                    CopySourceVersionId: undefined,\n                    RequestCharged: undefined,\n                    SSECustomerAlgorithm: undefined,\n                    SSECustomerKeyMD5: undefined,\n                    SSEKMSKeyId: undefined,\n                    ServerSideEncryption: undefined,\n                };\n                if (output.headers[\"x-amz-copy-source-version-id\"] !== undefined) {\n                    contents.CopySourceVersionId = output.headers[\"x-amz-copy-source-version-id\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n                    contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n                    contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n                    contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n                    contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n                }\n                if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n                    contents.BucketKeyEnabled = output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] === \"true\";\n                }\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n                }\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                contents.CopyPartResult = deserializeAws_restXmlCopyPartResult(data, context);\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restXmlUploadPartCopyCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n                switch (errorCode) {\n                    default:\n                        parsedBody = parsedOutput.body;\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                }\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nvar deserializeAws_restXmlSelectObjectContentEventStream_event = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, _b, _c, _d, _e;\n    return __generator(this, function (_f) {\n        switch (_f.label) {\n            case 0:\n                if (!(output[\"Records\"] !== undefined)) return [3 /*break*/, 2];\n                _a = {};\n                return [4 /*yield*/, deserializeAws_restXmlRecordsEvent_event(output[\"Records\"], context)];\n            case 1: return [2 /*return*/, (_a.Records = _f.sent(),\n                    _a)];\n            case 2:\n                if (!(output[\"Stats\"] !== undefined)) return [3 /*break*/, 4];\n                _b = {};\n                return [4 /*yield*/, deserializeAws_restXmlStatsEvent_event(output[\"Stats\"], context)];\n            case 3: return [2 /*return*/, (_b.Stats = _f.sent(),\n                    _b)];\n            case 4:\n                if (!(output[\"Progress\"] !== undefined)) return [3 /*break*/, 6];\n                _c = {};\n                return [4 /*yield*/, deserializeAws_restXmlProgressEvent_event(output[\"Progress\"], context)];\n            case 5: return [2 /*return*/, (_c.Progress = _f.sent(),\n                    _c)];\n            case 6:\n                if (!(output[\"Cont\"] !== undefined)) return [3 /*break*/, 8];\n                _d = {};\n                return [4 /*yield*/, deserializeAws_restXmlContinuationEvent_event(output[\"Cont\"], context)];\n            case 7: return [2 /*return*/, (_d.Cont = _f.sent(),\n                    _d)];\n            case 8:\n                if (!(output[\"End\"] !== undefined)) return [3 /*break*/, 10];\n                _e = {};\n                return [4 /*yield*/, deserializeAws_restXmlEndEvent_event(output[\"End\"], context)];\n            case 9: return [2 /*return*/, (_e.End = _f.sent(),\n                    _e)];\n            case 10: return [2 /*return*/, { $unknown: output }];\n        }\n    });\n}); };\nvar deserializeAws_restXmlContinuationEvent_event = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        contents = {};\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_restXmlEndEvent_event = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        contents = {};\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_restXmlProgressEvent_event = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, _a;\n    return __generator(this, function (_b) {\n        switch (_b.label) {\n            case 0:\n                contents = {};\n                _a = contents;\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                _a.Details = _b.sent();\n                return [2 /*return*/, contents];\n        }\n    });\n}); };\nvar deserializeAws_restXmlRecordsEvent_event = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        contents = {};\n        contents.Payload = output.body;\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_restXmlStatsEvent_event = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, _a;\n    return __generator(this, function (_b) {\n        switch (_b.label) {\n            case 0:\n                contents = {};\n                _a = contents;\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                _a.Details = _b.sent();\n                return [2 /*return*/, contents];\n        }\n    });\n}); };\nvar deserializeAws_restXmlBucketAlreadyExistsResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"BucketAlreadyExists\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput),\n        };\n        data = parsedOutput.body;\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_restXmlBucketAlreadyOwnedByYouResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"BucketAlreadyOwnedByYou\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput),\n        };\n        data = parsedOutput.body;\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_restXmlInvalidObjectStateResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"InvalidObjectState\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput),\n            AccessTier: undefined,\n            StorageClass: undefined,\n        };\n        data = parsedOutput.body;\n        if (data[\"AccessTier\"] !== undefined) {\n            contents.AccessTier = data[\"AccessTier\"];\n        }\n        if (data[\"StorageClass\"] !== undefined) {\n            contents.StorageClass = data[\"StorageClass\"];\n        }\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_restXmlNoSuchBucketResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"NoSuchBucket\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput),\n        };\n        data = parsedOutput.body;\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_restXmlNoSuchKeyResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"NoSuchKey\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput),\n        };\n        data = parsedOutput.body;\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_restXmlNoSuchUploadResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"NoSuchUpload\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput),\n        };\n        data = parsedOutput.body;\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_restXmlObjectAlreadyInActiveTierErrorResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"ObjectAlreadyInActiveTierError\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput),\n        };\n        data = parsedOutput.body;\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_restXmlObjectNotInActiveTierErrorResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"ObjectNotInActiveTierError\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput),\n        };\n        data = parsedOutput.body;\n        return [2 /*return*/, contents];\n    });\n}); };\nvar serializeAws_restXmlAbortIncompleteMultipartUpload = function (input, context) {\n    var bodyNode = new __XmlNode(\"AbortIncompleteMultipartUpload\");\n    if (input.DaysAfterInitiation !== undefined && input.DaysAfterInitiation !== null) {\n        var node = new __XmlNode(\"DaysAfterInitiation\")\n            .addChildNode(new __XmlText(String(input.DaysAfterInitiation)))\n            .withName(\"DaysAfterInitiation\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlAccelerateConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"AccelerateConfiguration\");\n    if (input.Status !== undefined && input.Status !== null) {\n        var node = new __XmlNode(\"BucketAccelerateStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlAccessControlPolicy = function (input, context) {\n    var bodyNode = new __XmlNode(\"AccessControlPolicy\");\n    if (input.Grants !== undefined && input.Grants !== null) {\n        var nodes = serializeAws_restXmlGrants(input.Grants, context);\n        var containerNode_1 = new __XmlNode(\"AccessControlList\");\n        nodes.map(function (node) {\n            containerNode_1.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode_1);\n    }\n    if (input.Owner !== undefined && input.Owner !== null) {\n        var node = serializeAws_restXmlOwner(input.Owner, context).withName(\"Owner\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlAccessControlTranslation = function (input, context) {\n    var bodyNode = new __XmlNode(\"AccessControlTranslation\");\n    if (input.Owner !== undefined && input.Owner !== null) {\n        var node = new __XmlNode(\"OwnerOverride\").addChildNode(new __XmlText(input.Owner)).withName(\"Owner\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlAllowedHeaders = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = new __XmlNode(\"AllowedHeader\").addChildNode(new __XmlText(entry));\n        return node.withName(\"member\");\n    });\n};\nvar serializeAws_restXmlAllowedMethods = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = new __XmlNode(\"AllowedMethod\").addChildNode(new __XmlText(entry));\n        return node.withName(\"member\");\n    });\n};\nvar serializeAws_restXmlAllowedOrigins = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = new __XmlNode(\"AllowedOrigin\").addChildNode(new __XmlText(entry));\n        return node.withName(\"member\");\n    });\n};\nvar serializeAws_restXmlAnalyticsAndOperator = function (input, context) {\n    var bodyNode = new __XmlNode(\"AnalyticsAndOperator\");\n    if (input.Prefix !== undefined && input.Prefix !== null) {\n        var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Tags !== undefined && input.Tags !== null) {\n        var nodes = serializeAws_restXmlTagSet(input.Tags, context);\n        nodes.map(function (node) {\n            node = node.withName(\"Tag\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlAnalyticsConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"AnalyticsConfiguration\");\n    if (input.Id !== undefined && input.Id !== null) {\n        var node = new __XmlNode(\"AnalyticsId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Filter !== undefined && input.Filter !== null) {\n        var node = serializeAws_restXmlAnalyticsFilter(input.Filter, context).withName(\"Filter\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.StorageClassAnalysis !== undefined && input.StorageClassAnalysis !== null) {\n        var node = serializeAws_restXmlStorageClassAnalysis(input.StorageClassAnalysis, context).withName(\"StorageClassAnalysis\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlAnalyticsExportDestination = function (input, context) {\n    var bodyNode = new __XmlNode(\"AnalyticsExportDestination\");\n    if (input.S3BucketDestination !== undefined && input.S3BucketDestination !== null) {\n        var node = serializeAws_restXmlAnalyticsS3BucketDestination(input.S3BucketDestination, context).withName(\"S3BucketDestination\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlAnalyticsFilter = function (input, context) {\n    var bodyNode = new __XmlNode(\"AnalyticsFilter\");\n    AnalyticsFilter.visit(input, {\n        Prefix: function (value) {\n            var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(value)).withName(\"Prefix\");\n            bodyNode.addChildNode(node);\n        },\n        Tag: function (value) {\n            var node = serializeAws_restXmlTag(value, context).withName(\"Tag\");\n            bodyNode.addChildNode(node);\n        },\n        And: function (value) {\n            var node = serializeAws_restXmlAnalyticsAndOperator(value, context).withName(\"And\");\n            bodyNode.addChildNode(node);\n        },\n        _: function (name, value) {\n            if (!(value instanceof __XmlNode || value instanceof __XmlText)) {\n                throw new Error(\"Unable to serialize unknown union members in XML.\");\n            }\n            bodyNode.addChildNode(new __XmlNode(name).addChildNode(value));\n        },\n    });\n    return bodyNode;\n};\nvar serializeAws_restXmlAnalyticsS3BucketDestination = function (input, context) {\n    var bodyNode = new __XmlNode(\"AnalyticsS3BucketDestination\");\n    if (input.Format !== undefined && input.Format !== null) {\n        var node = new __XmlNode(\"AnalyticsS3ExportFileFormat\")\n            .addChildNode(new __XmlText(input.Format))\n            .withName(\"Format\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.BucketAccountId !== undefined && input.BucketAccountId !== null) {\n        var node = new __XmlNode(\"AccountId\")\n            .addChildNode(new __XmlText(input.BucketAccountId))\n            .withName(\"BucketAccountId\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Bucket !== undefined && input.Bucket !== null) {\n        var node = new __XmlNode(\"BucketName\").addChildNode(new __XmlText(input.Bucket)).withName(\"Bucket\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Prefix !== undefined && input.Prefix !== null) {\n        var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlBucketLifecycleConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"BucketLifecycleConfiguration\");\n    if (input.Rules !== undefined && input.Rules !== null) {\n        var nodes = serializeAws_restXmlLifecycleRules(input.Rules, context);\n        nodes.map(function (node) {\n            node = node.withName(\"Rule\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlBucketLoggingStatus = function (input, context) {\n    var bodyNode = new __XmlNode(\"BucketLoggingStatus\");\n    if (input.LoggingEnabled !== undefined && input.LoggingEnabled !== null) {\n        var node = serializeAws_restXmlLoggingEnabled(input.LoggingEnabled, context).withName(\"LoggingEnabled\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlCompletedMultipartUpload = function (input, context) {\n    var bodyNode = new __XmlNode(\"CompletedMultipartUpload\");\n    if (input.Parts !== undefined && input.Parts !== null) {\n        var nodes = serializeAws_restXmlCompletedPartList(input.Parts, context);\n        nodes.map(function (node) {\n            node = node.withName(\"Part\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlCompletedPart = function (input, context) {\n    var bodyNode = new __XmlNode(\"CompletedPart\");\n    if (input.ETag !== undefined && input.ETag !== null) {\n        var node = new __XmlNode(\"ETag\").addChildNode(new __XmlText(input.ETag)).withName(\"ETag\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.PartNumber !== undefined && input.PartNumber !== null) {\n        var node = new __XmlNode(\"PartNumber\")\n            .addChildNode(new __XmlText(String(input.PartNumber)))\n            .withName(\"PartNumber\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlCompletedPartList = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = serializeAws_restXmlCompletedPart(entry, context);\n        return node.withName(\"member\");\n    });\n};\nvar serializeAws_restXmlCondition = function (input, context) {\n    var bodyNode = new __XmlNode(\"Condition\");\n    if (input.HttpErrorCodeReturnedEquals !== undefined && input.HttpErrorCodeReturnedEquals !== null) {\n        var node = new __XmlNode(\"HttpErrorCodeReturnedEquals\")\n            .addChildNode(new __XmlText(input.HttpErrorCodeReturnedEquals))\n            .withName(\"HttpErrorCodeReturnedEquals\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.KeyPrefixEquals !== undefined && input.KeyPrefixEquals !== null) {\n        var node = new __XmlNode(\"KeyPrefixEquals\")\n            .addChildNode(new __XmlText(input.KeyPrefixEquals))\n            .withName(\"KeyPrefixEquals\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlCORSConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"CORSConfiguration\");\n    if (input.CORSRules !== undefined && input.CORSRules !== null) {\n        var nodes = serializeAws_restXmlCORSRules(input.CORSRules, context);\n        nodes.map(function (node) {\n            node = node.withName(\"CORSRule\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlCORSRule = function (input, context) {\n    var bodyNode = new __XmlNode(\"CORSRule\");\n    if (input.AllowedHeaders !== undefined && input.AllowedHeaders !== null) {\n        var nodes = serializeAws_restXmlAllowedHeaders(input.AllowedHeaders, context);\n        nodes.map(function (node) {\n            node = node.withName(\"AllowedHeader\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.AllowedMethods !== undefined && input.AllowedMethods !== null) {\n        var nodes = serializeAws_restXmlAllowedMethods(input.AllowedMethods, context);\n        nodes.map(function (node) {\n            node = node.withName(\"AllowedMethod\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.AllowedOrigins !== undefined && input.AllowedOrigins !== null) {\n        var nodes = serializeAws_restXmlAllowedOrigins(input.AllowedOrigins, context);\n        nodes.map(function (node) {\n            node = node.withName(\"AllowedOrigin\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.ExposeHeaders !== undefined && input.ExposeHeaders !== null) {\n        var nodes = serializeAws_restXmlExposeHeaders(input.ExposeHeaders, context);\n        nodes.map(function (node) {\n            node = node.withName(\"ExposeHeader\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.MaxAgeSeconds !== undefined && input.MaxAgeSeconds !== null) {\n        var node = new __XmlNode(\"MaxAgeSeconds\")\n            .addChildNode(new __XmlText(String(input.MaxAgeSeconds)))\n            .withName(\"MaxAgeSeconds\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlCORSRules = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = serializeAws_restXmlCORSRule(entry, context);\n        return node.withName(\"member\");\n    });\n};\nvar serializeAws_restXmlCreateBucketConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"CreateBucketConfiguration\");\n    if (input.LocationConstraint !== undefined && input.LocationConstraint !== null) {\n        var node = new __XmlNode(\"BucketLocationConstraint\")\n            .addChildNode(new __XmlText(input.LocationConstraint))\n            .withName(\"LocationConstraint\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlCSVInput = function (input, context) {\n    var bodyNode = new __XmlNode(\"CSVInput\");\n    if (input.FileHeaderInfo !== undefined && input.FileHeaderInfo !== null) {\n        var node = new __XmlNode(\"FileHeaderInfo\")\n            .addChildNode(new __XmlText(input.FileHeaderInfo))\n            .withName(\"FileHeaderInfo\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Comments !== undefined && input.Comments !== null) {\n        var node = new __XmlNode(\"Comments\").addChildNode(new __XmlText(input.Comments)).withName(\"Comments\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.QuoteEscapeCharacter !== undefined && input.QuoteEscapeCharacter !== null) {\n        var node = new __XmlNode(\"QuoteEscapeCharacter\")\n            .addChildNode(new __XmlText(input.QuoteEscapeCharacter))\n            .withName(\"QuoteEscapeCharacter\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.RecordDelimiter !== undefined && input.RecordDelimiter !== null) {\n        var node = new __XmlNode(\"RecordDelimiter\")\n            .addChildNode(new __XmlText(input.RecordDelimiter))\n            .withName(\"RecordDelimiter\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.FieldDelimiter !== undefined && input.FieldDelimiter !== null) {\n        var node = new __XmlNode(\"FieldDelimiter\")\n            .addChildNode(new __XmlText(input.FieldDelimiter))\n            .withName(\"FieldDelimiter\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.QuoteCharacter !== undefined && input.QuoteCharacter !== null) {\n        var node = new __XmlNode(\"QuoteCharacter\")\n            .addChildNode(new __XmlText(input.QuoteCharacter))\n            .withName(\"QuoteCharacter\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.AllowQuotedRecordDelimiter !== undefined && input.AllowQuotedRecordDelimiter !== null) {\n        var node = new __XmlNode(\"AllowQuotedRecordDelimiter\")\n            .addChildNode(new __XmlText(String(input.AllowQuotedRecordDelimiter)))\n            .withName(\"AllowQuotedRecordDelimiter\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlCSVOutput = function (input, context) {\n    var bodyNode = new __XmlNode(\"CSVOutput\");\n    if (input.QuoteFields !== undefined && input.QuoteFields !== null) {\n        var node = new __XmlNode(\"QuoteFields\").addChildNode(new __XmlText(input.QuoteFields)).withName(\"QuoteFields\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.QuoteEscapeCharacter !== undefined && input.QuoteEscapeCharacter !== null) {\n        var node = new __XmlNode(\"QuoteEscapeCharacter\")\n            .addChildNode(new __XmlText(input.QuoteEscapeCharacter))\n            .withName(\"QuoteEscapeCharacter\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.RecordDelimiter !== undefined && input.RecordDelimiter !== null) {\n        var node = new __XmlNode(\"RecordDelimiter\")\n            .addChildNode(new __XmlText(input.RecordDelimiter))\n            .withName(\"RecordDelimiter\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.FieldDelimiter !== undefined && input.FieldDelimiter !== null) {\n        var node = new __XmlNode(\"FieldDelimiter\")\n            .addChildNode(new __XmlText(input.FieldDelimiter))\n            .withName(\"FieldDelimiter\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.QuoteCharacter !== undefined && input.QuoteCharacter !== null) {\n        var node = new __XmlNode(\"QuoteCharacter\")\n            .addChildNode(new __XmlText(input.QuoteCharacter))\n            .withName(\"QuoteCharacter\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlDefaultRetention = function (input, context) {\n    var bodyNode = new __XmlNode(\"DefaultRetention\");\n    if (input.Mode !== undefined && input.Mode !== null) {\n        var node = new __XmlNode(\"ObjectLockRetentionMode\").addChildNode(new __XmlText(input.Mode)).withName(\"Mode\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Days !== undefined && input.Days !== null) {\n        var node = new __XmlNode(\"Days\").addChildNode(new __XmlText(String(input.Days))).withName(\"Days\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Years !== undefined && input.Years !== null) {\n        var node = new __XmlNode(\"Years\").addChildNode(new __XmlText(String(input.Years))).withName(\"Years\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlDelete = function (input, context) {\n    var bodyNode = new __XmlNode(\"Delete\");\n    if (input.Objects !== undefined && input.Objects !== null) {\n        var nodes = serializeAws_restXmlObjectIdentifierList(input.Objects, context);\n        nodes.map(function (node) {\n            node = node.withName(\"Object\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.Quiet !== undefined && input.Quiet !== null) {\n        var node = new __XmlNode(\"Quiet\").addChildNode(new __XmlText(String(input.Quiet))).withName(\"Quiet\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlDeleteMarkerReplication = function (input, context) {\n    var bodyNode = new __XmlNode(\"DeleteMarkerReplication\");\n    if (input.Status !== undefined && input.Status !== null) {\n        var node = new __XmlNode(\"DeleteMarkerReplicationStatus\")\n            .addChildNode(new __XmlText(input.Status))\n            .withName(\"Status\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlDestination = function (input, context) {\n    var bodyNode = new __XmlNode(\"Destination\");\n    if (input.Bucket !== undefined && input.Bucket !== null) {\n        var node = new __XmlNode(\"BucketName\").addChildNode(new __XmlText(input.Bucket)).withName(\"Bucket\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Account !== undefined && input.Account !== null) {\n        var node = new __XmlNode(\"AccountId\").addChildNode(new __XmlText(input.Account)).withName(\"Account\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.StorageClass !== undefined && input.StorageClass !== null) {\n        var node = new __XmlNode(\"StorageClass\").addChildNode(new __XmlText(input.StorageClass)).withName(\"StorageClass\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.AccessControlTranslation !== undefined && input.AccessControlTranslation !== null) {\n        var node = serializeAws_restXmlAccessControlTranslation(input.AccessControlTranslation, context).withName(\"AccessControlTranslation\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.EncryptionConfiguration !== undefined && input.EncryptionConfiguration !== null) {\n        var node = serializeAws_restXmlEncryptionConfiguration(input.EncryptionConfiguration, context).withName(\"EncryptionConfiguration\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ReplicationTime !== undefined && input.ReplicationTime !== null) {\n        var node = serializeAws_restXmlReplicationTime(input.ReplicationTime, context).withName(\"ReplicationTime\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Metrics !== undefined && input.Metrics !== null) {\n        var node = serializeAws_restXmlMetrics(input.Metrics, context).withName(\"Metrics\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlEncryption = function (input, context) {\n    var bodyNode = new __XmlNode(\"Encryption\");\n    if (input.EncryptionType !== undefined && input.EncryptionType !== null) {\n        var node = new __XmlNode(\"ServerSideEncryption\")\n            .addChildNode(new __XmlText(input.EncryptionType))\n            .withName(\"EncryptionType\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.KMSKeyId !== undefined && input.KMSKeyId !== null) {\n        var node = new __XmlNode(\"SSEKMSKeyId\").addChildNode(new __XmlText(input.KMSKeyId)).withName(\"KMSKeyId\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.KMSContext !== undefined && input.KMSContext !== null) {\n        var node = new __XmlNode(\"KMSContext\").addChildNode(new __XmlText(input.KMSContext)).withName(\"KMSContext\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlEncryptionConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"EncryptionConfiguration\");\n    if (input.ReplicaKmsKeyID !== undefined && input.ReplicaKmsKeyID !== null) {\n        var node = new __XmlNode(\"ReplicaKmsKeyID\")\n            .addChildNode(new __XmlText(input.ReplicaKmsKeyID))\n            .withName(\"ReplicaKmsKeyID\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlErrorDocument = function (input, context) {\n    var bodyNode = new __XmlNode(\"ErrorDocument\");\n    if (input.Key !== undefined && input.Key !== null) {\n        var node = new __XmlNode(\"ObjectKey\").addChildNode(new __XmlText(input.Key)).withName(\"Key\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlEventList = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = new __XmlNode(\"Event\").addChildNode(new __XmlText(entry));\n        return node.withName(\"member\");\n    });\n};\nvar serializeAws_restXmlExistingObjectReplication = function (input, context) {\n    var bodyNode = new __XmlNode(\"ExistingObjectReplication\");\n    if (input.Status !== undefined && input.Status !== null) {\n        var node = new __XmlNode(\"ExistingObjectReplicationStatus\")\n            .addChildNode(new __XmlText(input.Status))\n            .withName(\"Status\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlExposeHeaders = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = new __XmlNode(\"ExposeHeader\").addChildNode(new __XmlText(entry));\n        return node.withName(\"member\");\n    });\n};\nvar serializeAws_restXmlFilterRule = function (input, context) {\n    var bodyNode = new __XmlNode(\"FilterRule\");\n    if (input.Name !== undefined && input.Name !== null) {\n        var node = new __XmlNode(\"FilterRuleName\").addChildNode(new __XmlText(input.Name)).withName(\"Name\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Value !== undefined && input.Value !== null) {\n        var node = new __XmlNode(\"FilterRuleValue\").addChildNode(new __XmlText(input.Value)).withName(\"Value\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlFilterRuleList = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = serializeAws_restXmlFilterRule(entry, context);\n        return node.withName(\"member\");\n    });\n};\nvar serializeAws_restXmlGlacierJobParameters = function (input, context) {\n    var bodyNode = new __XmlNode(\"GlacierJobParameters\");\n    if (input.Tier !== undefined && input.Tier !== null) {\n        var node = new __XmlNode(\"Tier\").addChildNode(new __XmlText(input.Tier)).withName(\"Tier\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlGrant = function (input, context) {\n    var bodyNode = new __XmlNode(\"Grant\");\n    if (input.Grantee !== undefined && input.Grantee !== null) {\n        var node = serializeAws_restXmlGrantee(input.Grantee, context).withName(\"Grantee\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Permission !== undefined && input.Permission !== null) {\n        var node = new __XmlNode(\"Permission\").addChildNode(new __XmlText(input.Permission)).withName(\"Permission\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlGrantee = function (input, context) {\n    var bodyNode = new __XmlNode(\"Grantee\");\n    if (input.DisplayName !== undefined && input.DisplayName !== null) {\n        var node = new __XmlNode(\"DisplayName\").addChildNode(new __XmlText(input.DisplayName)).withName(\"DisplayName\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.EmailAddress !== undefined && input.EmailAddress !== null) {\n        var node = new __XmlNode(\"EmailAddress\").addChildNode(new __XmlText(input.EmailAddress)).withName(\"EmailAddress\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ID !== undefined && input.ID !== null) {\n        var node = new __XmlNode(\"ID\").addChildNode(new __XmlText(input.ID)).withName(\"ID\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.URI !== undefined && input.URI !== null) {\n        var node = new __XmlNode(\"URI\").addChildNode(new __XmlText(input.URI)).withName(\"URI\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Type !== undefined && input.Type !== null) {\n        bodyNode.addAttribute(\"xsi:type\", input.Type);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlGrants = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = serializeAws_restXmlGrant(entry, context);\n        return node.withName(\"Grant\");\n    });\n};\nvar serializeAws_restXmlIndexDocument = function (input, context) {\n    var bodyNode = new __XmlNode(\"IndexDocument\");\n    if (input.Suffix !== undefined && input.Suffix !== null) {\n        var node = new __XmlNode(\"Suffix\").addChildNode(new __XmlText(input.Suffix)).withName(\"Suffix\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlInputSerialization = function (input, context) {\n    var bodyNode = new __XmlNode(\"InputSerialization\");\n    if (input.CSV !== undefined && input.CSV !== null) {\n        var node = serializeAws_restXmlCSVInput(input.CSV, context).withName(\"CSV\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.CompressionType !== undefined && input.CompressionType !== null) {\n        var node = new __XmlNode(\"CompressionType\")\n            .addChildNode(new __XmlText(input.CompressionType))\n            .withName(\"CompressionType\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.JSON !== undefined && input.JSON !== null) {\n        var node = serializeAws_restXmlJSONInput(input.JSON, context).withName(\"JSON\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Parquet !== undefined && input.Parquet !== null) {\n        var node = serializeAws_restXmlParquetInput(input.Parquet, context).withName(\"Parquet\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlIntelligentTieringAndOperator = function (input, context) {\n    var bodyNode = new __XmlNode(\"IntelligentTieringAndOperator\");\n    if (input.Prefix !== undefined && input.Prefix !== null) {\n        var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Tags !== undefined && input.Tags !== null) {\n        var nodes = serializeAws_restXmlTagSet(input.Tags, context);\n        nodes.map(function (node) {\n            node = node.withName(\"Tag\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlIntelligentTieringConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"IntelligentTieringConfiguration\");\n    if (input.Id !== undefined && input.Id !== null) {\n        var node = new __XmlNode(\"IntelligentTieringId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Filter !== undefined && input.Filter !== null) {\n        var node = serializeAws_restXmlIntelligentTieringFilter(input.Filter, context).withName(\"Filter\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Status !== undefined && input.Status !== null) {\n        var node = new __XmlNode(\"IntelligentTieringStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Tierings !== undefined && input.Tierings !== null) {\n        var nodes = serializeAws_restXmlTieringList(input.Tierings, context);\n        nodes.map(function (node) {\n            node = node.withName(\"Tiering\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlIntelligentTieringFilter = function (input, context) {\n    var bodyNode = new __XmlNode(\"IntelligentTieringFilter\");\n    if (input.Prefix !== undefined && input.Prefix !== null) {\n        var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Tag !== undefined && input.Tag !== null) {\n        var node = serializeAws_restXmlTag(input.Tag, context).withName(\"Tag\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.And !== undefined && input.And !== null) {\n        var node = serializeAws_restXmlIntelligentTieringAndOperator(input.And, context).withName(\"And\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlInventoryConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"InventoryConfiguration\");\n    if (input.Destination !== undefined && input.Destination !== null) {\n        var node = serializeAws_restXmlInventoryDestination(input.Destination, context).withName(\"Destination\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.IsEnabled !== undefined && input.IsEnabled !== null) {\n        var node = new __XmlNode(\"IsEnabled\").addChildNode(new __XmlText(String(input.IsEnabled))).withName(\"IsEnabled\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Filter !== undefined && input.Filter !== null) {\n        var node = serializeAws_restXmlInventoryFilter(input.Filter, context).withName(\"Filter\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Id !== undefined && input.Id !== null) {\n        var node = new __XmlNode(\"InventoryId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.IncludedObjectVersions !== undefined && input.IncludedObjectVersions !== null) {\n        var node = new __XmlNode(\"InventoryIncludedObjectVersions\")\n            .addChildNode(new __XmlText(input.IncludedObjectVersions))\n            .withName(\"IncludedObjectVersions\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.OptionalFields !== undefined && input.OptionalFields !== null) {\n        var nodes = serializeAws_restXmlInventoryOptionalFields(input.OptionalFields, context);\n        var containerNode_2 = new __XmlNode(\"OptionalFields\");\n        nodes.map(function (node) {\n            containerNode_2.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode_2);\n    }\n    if (input.Schedule !== undefined && input.Schedule !== null) {\n        var node = serializeAws_restXmlInventorySchedule(input.Schedule, context).withName(\"Schedule\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlInventoryDestination = function (input, context) {\n    var bodyNode = new __XmlNode(\"InventoryDestination\");\n    if (input.S3BucketDestination !== undefined && input.S3BucketDestination !== null) {\n        var node = serializeAws_restXmlInventoryS3BucketDestination(input.S3BucketDestination, context).withName(\"S3BucketDestination\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlInventoryEncryption = function (input, context) {\n    var bodyNode = new __XmlNode(\"InventoryEncryption\");\n    if (input.SSES3 !== undefined && input.SSES3 !== null) {\n        var node = serializeAws_restXmlSSES3(input.SSES3, context).withName(\"SSE-S3\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.SSEKMS !== undefined && input.SSEKMS !== null) {\n        var node = serializeAws_restXmlSSEKMS(input.SSEKMS, context).withName(\"SSE-KMS\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlInventoryFilter = function (input, context) {\n    var bodyNode = new __XmlNode(\"InventoryFilter\");\n    if (input.Prefix !== undefined && input.Prefix !== null) {\n        var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlInventoryOptionalFields = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = new __XmlNode(\"InventoryOptionalField\").addChildNode(new __XmlText(entry));\n        return node.withName(\"Field\");\n    });\n};\nvar serializeAws_restXmlInventoryS3BucketDestination = function (input, context) {\n    var bodyNode = new __XmlNode(\"InventoryS3BucketDestination\");\n    if (input.AccountId !== undefined && input.AccountId !== null) {\n        var node = new __XmlNode(\"AccountId\").addChildNode(new __XmlText(input.AccountId)).withName(\"AccountId\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Bucket !== undefined && input.Bucket !== null) {\n        var node = new __XmlNode(\"BucketName\").addChildNode(new __XmlText(input.Bucket)).withName(\"Bucket\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Format !== undefined && input.Format !== null) {\n        var node = new __XmlNode(\"InventoryFormat\").addChildNode(new __XmlText(input.Format)).withName(\"Format\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Prefix !== undefined && input.Prefix !== null) {\n        var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Encryption !== undefined && input.Encryption !== null) {\n        var node = serializeAws_restXmlInventoryEncryption(input.Encryption, context).withName(\"Encryption\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlInventorySchedule = function (input, context) {\n    var bodyNode = new __XmlNode(\"InventorySchedule\");\n    if (input.Frequency !== undefined && input.Frequency !== null) {\n        var node = new __XmlNode(\"InventoryFrequency\").addChildNode(new __XmlText(input.Frequency)).withName(\"Frequency\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlJSONInput = function (input, context) {\n    var bodyNode = new __XmlNode(\"JSONInput\");\n    if (input.Type !== undefined && input.Type !== null) {\n        var node = new __XmlNode(\"JSONType\").addChildNode(new __XmlText(input.Type)).withName(\"Type\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlJSONOutput = function (input, context) {\n    var bodyNode = new __XmlNode(\"JSONOutput\");\n    if (input.RecordDelimiter !== undefined && input.RecordDelimiter !== null) {\n        var node = new __XmlNode(\"RecordDelimiter\")\n            .addChildNode(new __XmlText(input.RecordDelimiter))\n            .withName(\"RecordDelimiter\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlLambdaFunctionConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"LambdaFunctionConfiguration\");\n    if (input.Id !== undefined && input.Id !== null) {\n        var node = new __XmlNode(\"NotificationId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.LambdaFunctionArn !== undefined && input.LambdaFunctionArn !== null) {\n        var node = new __XmlNode(\"LambdaFunctionArn\")\n            .addChildNode(new __XmlText(input.LambdaFunctionArn))\n            .withName(\"CloudFunction\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Events !== undefined && input.Events !== null) {\n        var nodes = serializeAws_restXmlEventList(input.Events, context);\n        nodes.map(function (node) {\n            node = node.withName(\"Event\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.Filter !== undefined && input.Filter !== null) {\n        var node = serializeAws_restXmlNotificationConfigurationFilter(input.Filter, context).withName(\"Filter\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlLambdaFunctionConfigurationList = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = serializeAws_restXmlLambdaFunctionConfiguration(entry, context);\n        return node.withName(\"member\");\n    });\n};\nvar serializeAws_restXmlLifecycleExpiration = function (input, context) {\n    var bodyNode = new __XmlNode(\"LifecycleExpiration\");\n    if (input.Date !== undefined && input.Date !== null) {\n        var node = new __XmlNode(\"Date\")\n            .addChildNode(new __XmlText(input.Date.toISOString().split(\".\")[0] + \"Z\"))\n            .withName(\"Date\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Days !== undefined && input.Days !== null) {\n        var node = new __XmlNode(\"Days\").addChildNode(new __XmlText(String(input.Days))).withName(\"Days\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ExpiredObjectDeleteMarker !== undefined && input.ExpiredObjectDeleteMarker !== null) {\n        var node = new __XmlNode(\"ExpiredObjectDeleteMarker\")\n            .addChildNode(new __XmlText(String(input.ExpiredObjectDeleteMarker)))\n            .withName(\"ExpiredObjectDeleteMarker\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlLifecycleRule = function (input, context) {\n    var bodyNode = new __XmlNode(\"LifecycleRule\");\n    if (input.Expiration !== undefined && input.Expiration !== null) {\n        var node = serializeAws_restXmlLifecycleExpiration(input.Expiration, context).withName(\"Expiration\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ID !== undefined && input.ID !== null) {\n        var node = new __XmlNode(\"ID\").addChildNode(new __XmlText(input.ID)).withName(\"ID\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Prefix !== undefined && input.Prefix !== null) {\n        var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Filter !== undefined && input.Filter !== null) {\n        var node = serializeAws_restXmlLifecycleRuleFilter(input.Filter, context).withName(\"Filter\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Status !== undefined && input.Status !== null) {\n        var node = new __XmlNode(\"ExpirationStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Transitions !== undefined && input.Transitions !== null) {\n        var nodes = serializeAws_restXmlTransitionList(input.Transitions, context);\n        nodes.map(function (node) {\n            node = node.withName(\"Transition\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.NoncurrentVersionTransitions !== undefined && input.NoncurrentVersionTransitions !== null) {\n        var nodes = serializeAws_restXmlNoncurrentVersionTransitionList(input.NoncurrentVersionTransitions, context);\n        nodes.map(function (node) {\n            node = node.withName(\"NoncurrentVersionTransition\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.NoncurrentVersionExpiration !== undefined && input.NoncurrentVersionExpiration !== null) {\n        var node = serializeAws_restXmlNoncurrentVersionExpiration(input.NoncurrentVersionExpiration, context).withName(\"NoncurrentVersionExpiration\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.AbortIncompleteMultipartUpload !== undefined && input.AbortIncompleteMultipartUpload !== null) {\n        var node = serializeAws_restXmlAbortIncompleteMultipartUpload(input.AbortIncompleteMultipartUpload, context).withName(\"AbortIncompleteMultipartUpload\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlLifecycleRuleAndOperator = function (input, context) {\n    var bodyNode = new __XmlNode(\"LifecycleRuleAndOperator\");\n    if (input.Prefix !== undefined && input.Prefix !== null) {\n        var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Tags !== undefined && input.Tags !== null) {\n        var nodes = serializeAws_restXmlTagSet(input.Tags, context);\n        nodes.map(function (node) {\n            node = node.withName(\"Tag\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlLifecycleRuleFilter = function (input, context) {\n    var bodyNode = new __XmlNode(\"LifecycleRuleFilter\");\n    LifecycleRuleFilter.visit(input, {\n        Prefix: function (value) {\n            var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(value)).withName(\"Prefix\");\n            bodyNode.addChildNode(node);\n        },\n        Tag: function (value) {\n            var node = serializeAws_restXmlTag(value, context).withName(\"Tag\");\n            bodyNode.addChildNode(node);\n        },\n        And: function (value) {\n            var node = serializeAws_restXmlLifecycleRuleAndOperator(value, context).withName(\"And\");\n            bodyNode.addChildNode(node);\n        },\n        _: function (name, value) {\n            if (!(value instanceof __XmlNode || value instanceof __XmlText)) {\n                throw new Error(\"Unable to serialize unknown union members in XML.\");\n            }\n            bodyNode.addChildNode(new __XmlNode(name).addChildNode(value));\n        },\n    });\n    return bodyNode;\n};\nvar serializeAws_restXmlLifecycleRules = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = serializeAws_restXmlLifecycleRule(entry, context);\n        return node.withName(\"member\");\n    });\n};\nvar serializeAws_restXmlLoggingEnabled = function (input, context) {\n    var bodyNode = new __XmlNode(\"LoggingEnabled\");\n    if (input.TargetBucket !== undefined && input.TargetBucket !== null) {\n        var node = new __XmlNode(\"TargetBucket\").addChildNode(new __XmlText(input.TargetBucket)).withName(\"TargetBucket\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.TargetGrants !== undefined && input.TargetGrants !== null) {\n        var nodes = serializeAws_restXmlTargetGrants(input.TargetGrants, context);\n        var containerNode_3 = new __XmlNode(\"TargetGrants\");\n        nodes.map(function (node) {\n            containerNode_3.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode_3);\n    }\n    if (input.TargetPrefix !== undefined && input.TargetPrefix !== null) {\n        var node = new __XmlNode(\"TargetPrefix\").addChildNode(new __XmlText(input.TargetPrefix)).withName(\"TargetPrefix\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlMetadataEntry = function (input, context) {\n    var bodyNode = new __XmlNode(\"MetadataEntry\");\n    if (input.Name !== undefined && input.Name !== null) {\n        var node = new __XmlNode(\"MetadataKey\").addChildNode(new __XmlText(input.Name)).withName(\"Name\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Value !== undefined && input.Value !== null) {\n        var node = new __XmlNode(\"MetadataValue\").addChildNode(new __XmlText(input.Value)).withName(\"Value\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlMetrics = function (input, context) {\n    var bodyNode = new __XmlNode(\"Metrics\");\n    if (input.Status !== undefined && input.Status !== null) {\n        var node = new __XmlNode(\"MetricsStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.EventThreshold !== undefined && input.EventThreshold !== null) {\n        var node = serializeAws_restXmlReplicationTimeValue(input.EventThreshold, context).withName(\"EventThreshold\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlMetricsAndOperator = function (input, context) {\n    var bodyNode = new __XmlNode(\"MetricsAndOperator\");\n    if (input.Prefix !== undefined && input.Prefix !== null) {\n        var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Tags !== undefined && input.Tags !== null) {\n        var nodes = serializeAws_restXmlTagSet(input.Tags, context);\n        nodes.map(function (node) {\n            node = node.withName(\"Tag\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlMetricsConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"MetricsConfiguration\");\n    if (input.Id !== undefined && input.Id !== null) {\n        var node = new __XmlNode(\"MetricsId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Filter !== undefined && input.Filter !== null) {\n        var node = serializeAws_restXmlMetricsFilter(input.Filter, context).withName(\"Filter\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlMetricsFilter = function (input, context) {\n    var bodyNode = new __XmlNode(\"MetricsFilter\");\n    MetricsFilter.visit(input, {\n        Prefix: function (value) {\n            var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(value)).withName(\"Prefix\");\n            bodyNode.addChildNode(node);\n        },\n        Tag: function (value) {\n            var node = serializeAws_restXmlTag(value, context).withName(\"Tag\");\n            bodyNode.addChildNode(node);\n        },\n        And: function (value) {\n            var node = serializeAws_restXmlMetricsAndOperator(value, context).withName(\"And\");\n            bodyNode.addChildNode(node);\n        },\n        _: function (name, value) {\n            if (!(value instanceof __XmlNode || value instanceof __XmlText)) {\n                throw new Error(\"Unable to serialize unknown union members in XML.\");\n            }\n            bodyNode.addChildNode(new __XmlNode(name).addChildNode(value));\n        },\n    });\n    return bodyNode;\n};\nvar serializeAws_restXmlNoncurrentVersionExpiration = function (input, context) {\n    var bodyNode = new __XmlNode(\"NoncurrentVersionExpiration\");\n    if (input.NoncurrentDays !== undefined && input.NoncurrentDays !== null) {\n        var node = new __XmlNode(\"Days\")\n            .addChildNode(new __XmlText(String(input.NoncurrentDays)))\n            .withName(\"NoncurrentDays\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlNoncurrentVersionTransition = function (input, context) {\n    var bodyNode = new __XmlNode(\"NoncurrentVersionTransition\");\n    if (input.NoncurrentDays !== undefined && input.NoncurrentDays !== null) {\n        var node = new __XmlNode(\"Days\")\n            .addChildNode(new __XmlText(String(input.NoncurrentDays)))\n            .withName(\"NoncurrentDays\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.StorageClass !== undefined && input.StorageClass !== null) {\n        var node = new __XmlNode(\"TransitionStorageClass\")\n            .addChildNode(new __XmlText(input.StorageClass))\n            .withName(\"StorageClass\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlNoncurrentVersionTransitionList = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = serializeAws_restXmlNoncurrentVersionTransition(entry, context);\n        return node.withName(\"member\");\n    });\n};\nvar serializeAws_restXmlNotificationConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"NotificationConfiguration\");\n    if (input.TopicConfigurations !== undefined && input.TopicConfigurations !== null) {\n        var nodes = serializeAws_restXmlTopicConfigurationList(input.TopicConfigurations, context);\n        nodes.map(function (node) {\n            node = node.withName(\"TopicConfiguration\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.QueueConfigurations !== undefined && input.QueueConfigurations !== null) {\n        var nodes = serializeAws_restXmlQueueConfigurationList(input.QueueConfigurations, context);\n        nodes.map(function (node) {\n            node = node.withName(\"QueueConfiguration\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.LambdaFunctionConfigurations !== undefined && input.LambdaFunctionConfigurations !== null) {\n        var nodes = serializeAws_restXmlLambdaFunctionConfigurationList(input.LambdaFunctionConfigurations, context);\n        nodes.map(function (node) {\n            node = node.withName(\"CloudFunctionConfiguration\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlNotificationConfigurationFilter = function (input, context) {\n    var bodyNode = new __XmlNode(\"NotificationConfigurationFilter\");\n    if (input.Key !== undefined && input.Key !== null) {\n        var node = serializeAws_restXmlS3KeyFilter(input.Key, context).withName(\"S3Key\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlObjectIdentifier = function (input, context) {\n    var bodyNode = new __XmlNode(\"ObjectIdentifier\");\n    if (input.Key !== undefined && input.Key !== null) {\n        var node = new __XmlNode(\"ObjectKey\").addChildNode(new __XmlText(input.Key)).withName(\"Key\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.VersionId !== undefined && input.VersionId !== null) {\n        var node = new __XmlNode(\"ObjectVersionId\").addChildNode(new __XmlText(input.VersionId)).withName(\"VersionId\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlObjectIdentifierList = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = serializeAws_restXmlObjectIdentifier(entry, context);\n        return node.withName(\"member\");\n    });\n};\nvar serializeAws_restXmlObjectLockConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"ObjectLockConfiguration\");\n    if (input.ObjectLockEnabled !== undefined && input.ObjectLockEnabled !== null) {\n        var node = new __XmlNode(\"ObjectLockEnabled\")\n            .addChildNode(new __XmlText(input.ObjectLockEnabled))\n            .withName(\"ObjectLockEnabled\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Rule !== undefined && input.Rule !== null) {\n        var node = serializeAws_restXmlObjectLockRule(input.Rule, context).withName(\"Rule\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlObjectLockLegalHold = function (input, context) {\n    var bodyNode = new __XmlNode(\"ObjectLockLegalHold\");\n    if (input.Status !== undefined && input.Status !== null) {\n        var node = new __XmlNode(\"ObjectLockLegalHoldStatus\")\n            .addChildNode(new __XmlText(input.Status))\n            .withName(\"Status\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlObjectLockRetention = function (input, context) {\n    var bodyNode = new __XmlNode(\"ObjectLockRetention\");\n    if (input.Mode !== undefined && input.Mode !== null) {\n        var node = new __XmlNode(\"ObjectLockRetentionMode\").addChildNode(new __XmlText(input.Mode)).withName(\"Mode\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.RetainUntilDate !== undefined && input.RetainUntilDate !== null) {\n        var node = new __XmlNode(\"Date\")\n            .addChildNode(new __XmlText(input.RetainUntilDate.toISOString().split(\".\")[0] + \"Z\"))\n            .withName(\"RetainUntilDate\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlObjectLockRule = function (input, context) {\n    var bodyNode = new __XmlNode(\"ObjectLockRule\");\n    if (input.DefaultRetention !== undefined && input.DefaultRetention !== null) {\n        var node = serializeAws_restXmlDefaultRetention(input.DefaultRetention, context).withName(\"DefaultRetention\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlOutputLocation = function (input, context) {\n    var bodyNode = new __XmlNode(\"OutputLocation\");\n    if (input.S3 !== undefined && input.S3 !== null) {\n        var node = serializeAws_restXmlS3Location(input.S3, context).withName(\"S3\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlOutputSerialization = function (input, context) {\n    var bodyNode = new __XmlNode(\"OutputSerialization\");\n    if (input.CSV !== undefined && input.CSV !== null) {\n        var node = serializeAws_restXmlCSVOutput(input.CSV, context).withName(\"CSV\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.JSON !== undefined && input.JSON !== null) {\n        var node = serializeAws_restXmlJSONOutput(input.JSON, context).withName(\"JSON\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlOwner = function (input, context) {\n    var bodyNode = new __XmlNode(\"Owner\");\n    if (input.DisplayName !== undefined && input.DisplayName !== null) {\n        var node = new __XmlNode(\"DisplayName\").addChildNode(new __XmlText(input.DisplayName)).withName(\"DisplayName\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ID !== undefined && input.ID !== null) {\n        var node = new __XmlNode(\"ID\").addChildNode(new __XmlText(input.ID)).withName(\"ID\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlOwnershipControls = function (input, context) {\n    var bodyNode = new __XmlNode(\"OwnershipControls\");\n    if (input.Rules !== undefined && input.Rules !== null) {\n        var nodes = serializeAws_restXmlOwnershipControlsRules(input.Rules, context);\n        nodes.map(function (node) {\n            node = node.withName(\"Rule\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlOwnershipControlsRule = function (input, context) {\n    var bodyNode = new __XmlNode(\"OwnershipControlsRule\");\n    if (input.ObjectOwnership !== undefined && input.ObjectOwnership !== null) {\n        var node = new __XmlNode(\"ObjectOwnership\")\n            .addChildNode(new __XmlText(input.ObjectOwnership))\n            .withName(\"ObjectOwnership\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlOwnershipControlsRules = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = serializeAws_restXmlOwnershipControlsRule(entry, context);\n        return node.withName(\"member\");\n    });\n};\nvar serializeAws_restXmlParquetInput = function (input, context) {\n    var bodyNode = new __XmlNode(\"ParquetInput\");\n    return bodyNode;\n};\nvar serializeAws_restXmlPublicAccessBlockConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"PublicAccessBlockConfiguration\");\n    if (input.BlockPublicAcls !== undefined && input.BlockPublicAcls !== null) {\n        var node = new __XmlNode(\"Setting\")\n            .addChildNode(new __XmlText(String(input.BlockPublicAcls)))\n            .withName(\"BlockPublicAcls\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.IgnorePublicAcls !== undefined && input.IgnorePublicAcls !== null) {\n        var node = new __XmlNode(\"Setting\")\n            .addChildNode(new __XmlText(String(input.IgnorePublicAcls)))\n            .withName(\"IgnorePublicAcls\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.BlockPublicPolicy !== undefined && input.BlockPublicPolicy !== null) {\n        var node = new __XmlNode(\"Setting\")\n            .addChildNode(new __XmlText(String(input.BlockPublicPolicy)))\n            .withName(\"BlockPublicPolicy\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.RestrictPublicBuckets !== undefined && input.RestrictPublicBuckets !== null) {\n        var node = new __XmlNode(\"Setting\")\n            .addChildNode(new __XmlText(String(input.RestrictPublicBuckets)))\n            .withName(\"RestrictPublicBuckets\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlQueueConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"QueueConfiguration\");\n    if (input.Id !== undefined && input.Id !== null) {\n        var node = new __XmlNode(\"NotificationId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.QueueArn !== undefined && input.QueueArn !== null) {\n        var node = new __XmlNode(\"QueueArn\").addChildNode(new __XmlText(input.QueueArn)).withName(\"Queue\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Events !== undefined && input.Events !== null) {\n        var nodes = serializeAws_restXmlEventList(input.Events, context);\n        nodes.map(function (node) {\n            node = node.withName(\"Event\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.Filter !== undefined && input.Filter !== null) {\n        var node = serializeAws_restXmlNotificationConfigurationFilter(input.Filter, context).withName(\"Filter\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlQueueConfigurationList = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = serializeAws_restXmlQueueConfiguration(entry, context);\n        return node.withName(\"member\");\n    });\n};\nvar serializeAws_restXmlRedirect = function (input, context) {\n    var bodyNode = new __XmlNode(\"Redirect\");\n    if (input.HostName !== undefined && input.HostName !== null) {\n        var node = new __XmlNode(\"HostName\").addChildNode(new __XmlText(input.HostName)).withName(\"HostName\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.HttpRedirectCode !== undefined && input.HttpRedirectCode !== null) {\n        var node = new __XmlNode(\"HttpRedirectCode\")\n            .addChildNode(new __XmlText(input.HttpRedirectCode))\n            .withName(\"HttpRedirectCode\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Protocol !== undefined && input.Protocol !== null) {\n        var node = new __XmlNode(\"Protocol\").addChildNode(new __XmlText(input.Protocol)).withName(\"Protocol\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ReplaceKeyPrefixWith !== undefined && input.ReplaceKeyPrefixWith !== null) {\n        var node = new __XmlNode(\"ReplaceKeyPrefixWith\")\n            .addChildNode(new __XmlText(input.ReplaceKeyPrefixWith))\n            .withName(\"ReplaceKeyPrefixWith\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ReplaceKeyWith !== undefined && input.ReplaceKeyWith !== null) {\n        var node = new __XmlNode(\"ReplaceKeyWith\")\n            .addChildNode(new __XmlText(input.ReplaceKeyWith))\n            .withName(\"ReplaceKeyWith\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlRedirectAllRequestsTo = function (input, context) {\n    var bodyNode = new __XmlNode(\"RedirectAllRequestsTo\");\n    if (input.HostName !== undefined && input.HostName !== null) {\n        var node = new __XmlNode(\"HostName\").addChildNode(new __XmlText(input.HostName)).withName(\"HostName\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Protocol !== undefined && input.Protocol !== null) {\n        var node = new __XmlNode(\"Protocol\").addChildNode(new __XmlText(input.Protocol)).withName(\"Protocol\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlReplicaModifications = function (input, context) {\n    var bodyNode = new __XmlNode(\"ReplicaModifications\");\n    if (input.Status !== undefined && input.Status !== null) {\n        var node = new __XmlNode(\"ReplicaModificationsStatus\")\n            .addChildNode(new __XmlText(input.Status))\n            .withName(\"Status\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlReplicationConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"ReplicationConfiguration\");\n    if (input.Role !== undefined && input.Role !== null) {\n        var node = new __XmlNode(\"Role\").addChildNode(new __XmlText(input.Role)).withName(\"Role\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Rules !== undefined && input.Rules !== null) {\n        var nodes = serializeAws_restXmlReplicationRules(input.Rules, context);\n        nodes.map(function (node) {\n            node = node.withName(\"Rule\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlReplicationRule = function (input, context) {\n    var bodyNode = new __XmlNode(\"ReplicationRule\");\n    if (input.ID !== undefined && input.ID !== null) {\n        var node = new __XmlNode(\"ID\").addChildNode(new __XmlText(input.ID)).withName(\"ID\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Priority !== undefined && input.Priority !== null) {\n        var node = new __XmlNode(\"Priority\").addChildNode(new __XmlText(String(input.Priority))).withName(\"Priority\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Prefix !== undefined && input.Prefix !== null) {\n        var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Filter !== undefined && input.Filter !== null) {\n        var node = serializeAws_restXmlReplicationRuleFilter(input.Filter, context).withName(\"Filter\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Status !== undefined && input.Status !== null) {\n        var node = new __XmlNode(\"ReplicationRuleStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.SourceSelectionCriteria !== undefined && input.SourceSelectionCriteria !== null) {\n        var node = serializeAws_restXmlSourceSelectionCriteria(input.SourceSelectionCriteria, context).withName(\"SourceSelectionCriteria\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ExistingObjectReplication !== undefined && input.ExistingObjectReplication !== null) {\n        var node = serializeAws_restXmlExistingObjectReplication(input.ExistingObjectReplication, context).withName(\"ExistingObjectReplication\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Destination !== undefined && input.Destination !== null) {\n        var node = serializeAws_restXmlDestination(input.Destination, context).withName(\"Destination\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.DeleteMarkerReplication !== undefined && input.DeleteMarkerReplication !== null) {\n        var node = serializeAws_restXmlDeleteMarkerReplication(input.DeleteMarkerReplication, context).withName(\"DeleteMarkerReplication\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlReplicationRuleAndOperator = function (input, context) {\n    var bodyNode = new __XmlNode(\"ReplicationRuleAndOperator\");\n    if (input.Prefix !== undefined && input.Prefix !== null) {\n        var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Tags !== undefined && input.Tags !== null) {\n        var nodes = serializeAws_restXmlTagSet(input.Tags, context);\n        nodes.map(function (node) {\n            node = node.withName(\"Tag\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlReplicationRuleFilter = function (input, context) {\n    var bodyNode = new __XmlNode(\"ReplicationRuleFilter\");\n    ReplicationRuleFilter.visit(input, {\n        Prefix: function (value) {\n            var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(value)).withName(\"Prefix\");\n            bodyNode.addChildNode(node);\n        },\n        Tag: function (value) {\n            var node = serializeAws_restXmlTag(value, context).withName(\"Tag\");\n            bodyNode.addChildNode(node);\n        },\n        And: function (value) {\n            var node = serializeAws_restXmlReplicationRuleAndOperator(value, context).withName(\"And\");\n            bodyNode.addChildNode(node);\n        },\n        _: function (name, value) {\n            if (!(value instanceof __XmlNode || value instanceof __XmlText)) {\n                throw new Error(\"Unable to serialize unknown union members in XML.\");\n            }\n            bodyNode.addChildNode(new __XmlNode(name).addChildNode(value));\n        },\n    });\n    return bodyNode;\n};\nvar serializeAws_restXmlReplicationRules = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = serializeAws_restXmlReplicationRule(entry, context);\n        return node.withName(\"member\");\n    });\n};\nvar serializeAws_restXmlReplicationTime = function (input, context) {\n    var bodyNode = new __XmlNode(\"ReplicationTime\");\n    if (input.Status !== undefined && input.Status !== null) {\n        var node = new __XmlNode(\"ReplicationTimeStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Time !== undefined && input.Time !== null) {\n        var node = serializeAws_restXmlReplicationTimeValue(input.Time, context).withName(\"Time\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlReplicationTimeValue = function (input, context) {\n    var bodyNode = new __XmlNode(\"ReplicationTimeValue\");\n    if (input.Minutes !== undefined && input.Minutes !== null) {\n        var node = new __XmlNode(\"Minutes\").addChildNode(new __XmlText(String(input.Minutes))).withName(\"Minutes\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlRequestPaymentConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"RequestPaymentConfiguration\");\n    if (input.Payer !== undefined && input.Payer !== null) {\n        var node = new __XmlNode(\"Payer\").addChildNode(new __XmlText(input.Payer)).withName(\"Payer\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlRequestProgress = function (input, context) {\n    var bodyNode = new __XmlNode(\"RequestProgress\");\n    if (input.Enabled !== undefined && input.Enabled !== null) {\n        var node = new __XmlNode(\"EnableRequestProgress\")\n            .addChildNode(new __XmlText(String(input.Enabled)))\n            .withName(\"Enabled\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlRestoreRequest = function (input, context) {\n    var bodyNode = new __XmlNode(\"RestoreRequest\");\n    if (input.Days !== undefined && input.Days !== null) {\n        var node = new __XmlNode(\"Days\").addChildNode(new __XmlText(String(input.Days))).withName(\"Days\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.GlacierJobParameters !== undefined && input.GlacierJobParameters !== null) {\n        var node = serializeAws_restXmlGlacierJobParameters(input.GlacierJobParameters, context).withName(\"GlacierJobParameters\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Type !== undefined && input.Type !== null) {\n        var node = new __XmlNode(\"RestoreRequestType\").addChildNode(new __XmlText(input.Type)).withName(\"Type\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Tier !== undefined && input.Tier !== null) {\n        var node = new __XmlNode(\"Tier\").addChildNode(new __XmlText(input.Tier)).withName(\"Tier\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Description !== undefined && input.Description !== null) {\n        var node = new __XmlNode(\"Description\").addChildNode(new __XmlText(input.Description)).withName(\"Description\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.SelectParameters !== undefined && input.SelectParameters !== null) {\n        var node = serializeAws_restXmlSelectParameters(input.SelectParameters, context).withName(\"SelectParameters\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.OutputLocation !== undefined && input.OutputLocation !== null) {\n        var node = serializeAws_restXmlOutputLocation(input.OutputLocation, context).withName(\"OutputLocation\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlRoutingRule = function (input, context) {\n    var bodyNode = new __XmlNode(\"RoutingRule\");\n    if (input.Condition !== undefined && input.Condition !== null) {\n        var node = serializeAws_restXmlCondition(input.Condition, context).withName(\"Condition\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Redirect !== undefined && input.Redirect !== null) {\n        var node = serializeAws_restXmlRedirect(input.Redirect, context).withName(\"Redirect\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlRoutingRules = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = serializeAws_restXmlRoutingRule(entry, context);\n        return node.withName(\"RoutingRule\");\n    });\n};\nvar serializeAws_restXmlS3KeyFilter = function (input, context) {\n    var bodyNode = new __XmlNode(\"S3KeyFilter\");\n    if (input.FilterRules !== undefined && input.FilterRules !== null) {\n        var nodes = serializeAws_restXmlFilterRuleList(input.FilterRules, context);\n        nodes.map(function (node) {\n            node = node.withName(\"FilterRule\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlS3Location = function (input, context) {\n    var bodyNode = new __XmlNode(\"S3Location\");\n    if (input.BucketName !== undefined && input.BucketName !== null) {\n        var node = new __XmlNode(\"BucketName\").addChildNode(new __XmlText(input.BucketName)).withName(\"BucketName\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Prefix !== undefined && input.Prefix !== null) {\n        var node = new __XmlNode(\"LocationPrefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Encryption !== undefined && input.Encryption !== null) {\n        var node = serializeAws_restXmlEncryption(input.Encryption, context).withName(\"Encryption\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.CannedACL !== undefined && input.CannedACL !== null) {\n        var node = new __XmlNode(\"ObjectCannedACL\").addChildNode(new __XmlText(input.CannedACL)).withName(\"CannedACL\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.AccessControlList !== undefined && input.AccessControlList !== null) {\n        var nodes = serializeAws_restXmlGrants(input.AccessControlList, context);\n        var containerNode_4 = new __XmlNode(\"AccessControlList\");\n        nodes.map(function (node) {\n            containerNode_4.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode_4);\n    }\n    if (input.Tagging !== undefined && input.Tagging !== null) {\n        var node = serializeAws_restXmlTagging(input.Tagging, context).withName(\"Tagging\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.UserMetadata !== undefined && input.UserMetadata !== null) {\n        var nodes = serializeAws_restXmlUserMetadata(input.UserMetadata, context);\n        var containerNode_5 = new __XmlNode(\"UserMetadata\");\n        nodes.map(function (node) {\n            containerNode_5.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode_5);\n    }\n    if (input.StorageClass !== undefined && input.StorageClass !== null) {\n        var node = new __XmlNode(\"StorageClass\").addChildNode(new __XmlText(input.StorageClass)).withName(\"StorageClass\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlScanRange = function (input, context) {\n    var bodyNode = new __XmlNode(\"ScanRange\");\n    if (input.Start !== undefined && input.Start !== null) {\n        var node = new __XmlNode(\"Start\").addChildNode(new __XmlText(String(input.Start))).withName(\"Start\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.End !== undefined && input.End !== null) {\n        var node = new __XmlNode(\"End\").addChildNode(new __XmlText(String(input.End))).withName(\"End\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlSelectParameters = function (input, context) {\n    var bodyNode = new __XmlNode(\"SelectParameters\");\n    if (input.InputSerialization !== undefined && input.InputSerialization !== null) {\n        var node = serializeAws_restXmlInputSerialization(input.InputSerialization, context).withName(\"InputSerialization\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ExpressionType !== undefined && input.ExpressionType !== null) {\n        var node = new __XmlNode(\"ExpressionType\")\n            .addChildNode(new __XmlText(input.ExpressionType))\n            .withName(\"ExpressionType\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Expression !== undefined && input.Expression !== null) {\n        var node = new __XmlNode(\"Expression\").addChildNode(new __XmlText(input.Expression)).withName(\"Expression\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.OutputSerialization !== undefined && input.OutputSerialization !== null) {\n        var node = serializeAws_restXmlOutputSerialization(input.OutputSerialization, context).withName(\"OutputSerialization\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlServerSideEncryptionByDefault = function (input, context) {\n    var bodyNode = new __XmlNode(\"ServerSideEncryptionByDefault\");\n    if (input.SSEAlgorithm !== undefined && input.SSEAlgorithm !== null) {\n        var node = new __XmlNode(\"ServerSideEncryption\")\n            .addChildNode(new __XmlText(input.SSEAlgorithm))\n            .withName(\"SSEAlgorithm\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.KMSMasterKeyID !== undefined && input.KMSMasterKeyID !== null) {\n        var node = new __XmlNode(\"SSEKMSKeyId\")\n            .addChildNode(new __XmlText(input.KMSMasterKeyID))\n            .withName(\"KMSMasterKeyID\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlServerSideEncryptionConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"ServerSideEncryptionConfiguration\");\n    if (input.Rules !== undefined && input.Rules !== null) {\n        var nodes = serializeAws_restXmlServerSideEncryptionRules(input.Rules, context);\n        nodes.map(function (node) {\n            node = node.withName(\"Rule\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlServerSideEncryptionRule = function (input, context) {\n    var bodyNode = new __XmlNode(\"ServerSideEncryptionRule\");\n    if (input.ApplyServerSideEncryptionByDefault !== undefined && input.ApplyServerSideEncryptionByDefault !== null) {\n        var node = serializeAws_restXmlServerSideEncryptionByDefault(input.ApplyServerSideEncryptionByDefault, context).withName(\"ApplyServerSideEncryptionByDefault\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.BucketKeyEnabled !== undefined && input.BucketKeyEnabled !== null) {\n        var node = new __XmlNode(\"BucketKeyEnabled\")\n            .addChildNode(new __XmlText(String(input.BucketKeyEnabled)))\n            .withName(\"BucketKeyEnabled\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlServerSideEncryptionRules = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = serializeAws_restXmlServerSideEncryptionRule(entry, context);\n        return node.withName(\"member\");\n    });\n};\nvar serializeAws_restXmlSourceSelectionCriteria = function (input, context) {\n    var bodyNode = new __XmlNode(\"SourceSelectionCriteria\");\n    if (input.SseKmsEncryptedObjects !== undefined && input.SseKmsEncryptedObjects !== null) {\n        var node = serializeAws_restXmlSseKmsEncryptedObjects(input.SseKmsEncryptedObjects, context).withName(\"SseKmsEncryptedObjects\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ReplicaModifications !== undefined && input.ReplicaModifications !== null) {\n        var node = serializeAws_restXmlReplicaModifications(input.ReplicaModifications, context).withName(\"ReplicaModifications\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlSSEKMS = function (input, context) {\n    var bodyNode = new __XmlNode(\"SSE-KMS\");\n    if (input.KeyId !== undefined && input.KeyId !== null) {\n        var node = new __XmlNode(\"SSEKMSKeyId\").addChildNode(new __XmlText(input.KeyId)).withName(\"KeyId\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlSseKmsEncryptedObjects = function (input, context) {\n    var bodyNode = new __XmlNode(\"SseKmsEncryptedObjects\");\n    if (input.Status !== undefined && input.Status !== null) {\n        var node = new __XmlNode(\"SseKmsEncryptedObjectsStatus\")\n            .addChildNode(new __XmlText(input.Status))\n            .withName(\"Status\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlSSES3 = function (input, context) {\n    var bodyNode = new __XmlNode(\"SSE-S3\");\n    return bodyNode;\n};\nvar serializeAws_restXmlStorageClassAnalysis = function (input, context) {\n    var bodyNode = new __XmlNode(\"StorageClassAnalysis\");\n    if (input.DataExport !== undefined && input.DataExport !== null) {\n        var node = serializeAws_restXmlStorageClassAnalysisDataExport(input.DataExport, context).withName(\"DataExport\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlStorageClassAnalysisDataExport = function (input, context) {\n    var bodyNode = new __XmlNode(\"StorageClassAnalysisDataExport\");\n    if (input.OutputSchemaVersion !== undefined && input.OutputSchemaVersion !== null) {\n        var node = new __XmlNode(\"StorageClassAnalysisSchemaVersion\")\n            .addChildNode(new __XmlText(input.OutputSchemaVersion))\n            .withName(\"OutputSchemaVersion\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Destination !== undefined && input.Destination !== null) {\n        var node = serializeAws_restXmlAnalyticsExportDestination(input.Destination, context).withName(\"Destination\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlTag = function (input, context) {\n    var bodyNode = new __XmlNode(\"Tag\");\n    if (input.Key !== undefined && input.Key !== null) {\n        var node = new __XmlNode(\"ObjectKey\").addChildNode(new __XmlText(input.Key)).withName(\"Key\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Value !== undefined && input.Value !== null) {\n        var node = new __XmlNode(\"Value\").addChildNode(new __XmlText(input.Value)).withName(\"Value\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlTagging = function (input, context) {\n    var bodyNode = new __XmlNode(\"Tagging\");\n    if (input.TagSet !== undefined && input.TagSet !== null) {\n        var nodes = serializeAws_restXmlTagSet(input.TagSet, context);\n        var containerNode_6 = new __XmlNode(\"TagSet\");\n        nodes.map(function (node) {\n            containerNode_6.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode_6);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlTagSet = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = serializeAws_restXmlTag(entry, context);\n        return node.withName(\"Tag\");\n    });\n};\nvar serializeAws_restXmlTargetGrant = function (input, context) {\n    var bodyNode = new __XmlNode(\"TargetGrant\");\n    if (input.Grantee !== undefined && input.Grantee !== null) {\n        var node = serializeAws_restXmlGrantee(input.Grantee, context).withName(\"Grantee\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Permission !== undefined && input.Permission !== null) {\n        var node = new __XmlNode(\"BucketLogsPermission\")\n            .addChildNode(new __XmlText(input.Permission))\n            .withName(\"Permission\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlTargetGrants = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = serializeAws_restXmlTargetGrant(entry, context);\n        return node.withName(\"Grant\");\n    });\n};\nvar serializeAws_restXmlTiering = function (input, context) {\n    var bodyNode = new __XmlNode(\"Tiering\");\n    if (input.Days !== undefined && input.Days !== null) {\n        var node = new __XmlNode(\"IntelligentTieringDays\")\n            .addChildNode(new __XmlText(String(input.Days)))\n            .withName(\"Days\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.AccessTier !== undefined && input.AccessTier !== null) {\n        var node = new __XmlNode(\"IntelligentTieringAccessTier\")\n            .addChildNode(new __XmlText(input.AccessTier))\n            .withName(\"AccessTier\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlTieringList = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = serializeAws_restXmlTiering(entry, context);\n        return node.withName(\"member\");\n    });\n};\nvar serializeAws_restXmlTopicConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"TopicConfiguration\");\n    if (input.Id !== undefined && input.Id !== null) {\n        var node = new __XmlNode(\"NotificationId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.TopicArn !== undefined && input.TopicArn !== null) {\n        var node = new __XmlNode(\"TopicArn\").addChildNode(new __XmlText(input.TopicArn)).withName(\"Topic\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Events !== undefined && input.Events !== null) {\n        var nodes = serializeAws_restXmlEventList(input.Events, context);\n        nodes.map(function (node) {\n            node = node.withName(\"Event\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.Filter !== undefined && input.Filter !== null) {\n        var node = serializeAws_restXmlNotificationConfigurationFilter(input.Filter, context).withName(\"Filter\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlTopicConfigurationList = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = serializeAws_restXmlTopicConfiguration(entry, context);\n        return node.withName(\"member\");\n    });\n};\nvar serializeAws_restXmlTransition = function (input, context) {\n    var bodyNode = new __XmlNode(\"Transition\");\n    if (input.Date !== undefined && input.Date !== null) {\n        var node = new __XmlNode(\"Date\")\n            .addChildNode(new __XmlText(input.Date.toISOString().split(\".\")[0] + \"Z\"))\n            .withName(\"Date\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Days !== undefined && input.Days !== null) {\n        var node = new __XmlNode(\"Days\").addChildNode(new __XmlText(String(input.Days))).withName(\"Days\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.StorageClass !== undefined && input.StorageClass !== null) {\n        var node = new __XmlNode(\"TransitionStorageClass\")\n            .addChildNode(new __XmlText(input.StorageClass))\n            .withName(\"StorageClass\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlTransitionList = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = serializeAws_restXmlTransition(entry, context);\n        return node.withName(\"member\");\n    });\n};\nvar serializeAws_restXmlUserMetadata = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        var node = serializeAws_restXmlMetadataEntry(entry, context);\n        return node.withName(\"MetadataEntry\");\n    });\n};\nvar serializeAws_restXmlVersioningConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"VersioningConfiguration\");\n    if (input.MFADelete !== undefined && input.MFADelete !== null) {\n        var node = new __XmlNode(\"MFADelete\").addChildNode(new __XmlText(input.MFADelete)).withName(\"MfaDelete\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Status !== undefined && input.Status !== null) {\n        var node = new __XmlNode(\"BucketVersioningStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nvar serializeAws_restXmlWebsiteConfiguration = function (input, context) {\n    var bodyNode = new __XmlNode(\"WebsiteConfiguration\");\n    if (input.ErrorDocument !== undefined && input.ErrorDocument !== null) {\n        var node = serializeAws_restXmlErrorDocument(input.ErrorDocument, context).withName(\"ErrorDocument\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.IndexDocument !== undefined && input.IndexDocument !== null) {\n        var node = serializeAws_restXmlIndexDocument(input.IndexDocument, context).withName(\"IndexDocument\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.RedirectAllRequestsTo !== undefined && input.RedirectAllRequestsTo !== null) {\n        var node = serializeAws_restXmlRedirectAllRequestsTo(input.RedirectAllRequestsTo, context).withName(\"RedirectAllRequestsTo\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.RoutingRules !== undefined && input.RoutingRules !== null) {\n        var nodes = serializeAws_restXmlRoutingRules(input.RoutingRules, context);\n        var containerNode_7 = new __XmlNode(\"RoutingRules\");\n        nodes.map(function (node) {\n            containerNode_7.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode_7);\n    }\n    return bodyNode;\n};\nvar deserializeAws_restXmlAbortIncompleteMultipartUpload = function (output, context) {\n    var contents = {\n        DaysAfterInitiation: undefined,\n    };\n    if (output[\"DaysAfterInitiation\"] !== undefined) {\n        contents.DaysAfterInitiation = parseInt(output[\"DaysAfterInitiation\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlAccessControlTranslation = function (output, context) {\n    var contents = {\n        Owner: undefined,\n    };\n    if (output[\"Owner\"] !== undefined) {\n        contents.Owner = output[\"Owner\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlAllowedHeaders = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return entry;\n    });\n};\nvar deserializeAws_restXmlAllowedMethods = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return entry;\n    });\n};\nvar deserializeAws_restXmlAllowedOrigins = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return entry;\n    });\n};\nvar deserializeAws_restXmlAnalyticsAndOperator = function (output, context) {\n    var contents = {\n        Prefix: undefined,\n        Tags: undefined,\n    };\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = output[\"Prefix\"];\n    }\n    if (output.Tag === \"\") {\n        contents.Tags = [];\n    }\n    if (output[\"Tag\"] !== undefined) {\n        contents.Tags = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(output[\"Tag\"]), context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlAnalyticsConfiguration = function (output, context) {\n    var contents = {\n        Id: undefined,\n        Filter: undefined,\n        StorageClassAnalysis: undefined,\n    };\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = output[\"Id\"];\n    }\n    if (output[\"Filter\"] !== undefined) {\n        contents.Filter = deserializeAws_restXmlAnalyticsFilter(output[\"Filter\"], context);\n    }\n    if (output[\"StorageClassAnalysis\"] !== undefined) {\n        contents.StorageClassAnalysis = deserializeAws_restXmlStorageClassAnalysis(output[\"StorageClassAnalysis\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlAnalyticsConfigurationList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlAnalyticsConfiguration(entry, context);\n    });\n};\nvar deserializeAws_restXmlAnalyticsExportDestination = function (output, context) {\n    var contents = {\n        S3BucketDestination: undefined,\n    };\n    if (output[\"S3BucketDestination\"] !== undefined) {\n        contents.S3BucketDestination = deserializeAws_restXmlAnalyticsS3BucketDestination(output[\"S3BucketDestination\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlAnalyticsFilter = function (output, context) {\n    if (output[\"Prefix\"] !== undefined) {\n        return {\n            Prefix: output[\"Prefix\"],\n        };\n    }\n    if (output[\"Tag\"] !== undefined) {\n        return {\n            Tag: deserializeAws_restXmlTag(output[\"Tag\"], context),\n        };\n    }\n    if (output[\"And\"] !== undefined) {\n        return {\n            And: deserializeAws_restXmlAnalyticsAndOperator(output[\"And\"], context),\n        };\n    }\n    return { $unknown: Object.entries(output)[0] };\n};\nvar deserializeAws_restXmlAnalyticsS3BucketDestination = function (output, context) {\n    var contents = {\n        Format: undefined,\n        BucketAccountId: undefined,\n        Bucket: undefined,\n        Prefix: undefined,\n    };\n    if (output[\"Format\"] !== undefined) {\n        contents.Format = output[\"Format\"];\n    }\n    if (output[\"BucketAccountId\"] !== undefined) {\n        contents.BucketAccountId = output[\"BucketAccountId\"];\n    }\n    if (output[\"Bucket\"] !== undefined) {\n        contents.Bucket = output[\"Bucket\"];\n    }\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = output[\"Prefix\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlBucket = function (output, context) {\n    var contents = {\n        Name: undefined,\n        CreationDate: undefined,\n    };\n    if (output[\"Name\"] !== undefined) {\n        contents.Name = output[\"Name\"];\n    }\n    if (output[\"CreationDate\"] !== undefined) {\n        contents.CreationDate = new Date(output[\"CreationDate\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlBuckets = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlBucket(entry, context);\n    });\n};\nvar deserializeAws_restXmlCommonPrefix = function (output, context) {\n    var contents = {\n        Prefix: undefined,\n    };\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = output[\"Prefix\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlCommonPrefixList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlCommonPrefix(entry, context);\n    });\n};\nvar deserializeAws_restXmlCondition = function (output, context) {\n    var contents = {\n        HttpErrorCodeReturnedEquals: undefined,\n        KeyPrefixEquals: undefined,\n    };\n    if (output[\"HttpErrorCodeReturnedEquals\"] !== undefined) {\n        contents.HttpErrorCodeReturnedEquals = output[\"HttpErrorCodeReturnedEquals\"];\n    }\n    if (output[\"KeyPrefixEquals\"] !== undefined) {\n        contents.KeyPrefixEquals = output[\"KeyPrefixEquals\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlCopyObjectResult = function (output, context) {\n    var contents = {\n        ETag: undefined,\n        LastModified: undefined,\n    };\n    if (output[\"ETag\"] !== undefined) {\n        contents.ETag = output[\"ETag\"];\n    }\n    if (output[\"LastModified\"] !== undefined) {\n        contents.LastModified = new Date(output[\"LastModified\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlCopyPartResult = function (output, context) {\n    var contents = {\n        ETag: undefined,\n        LastModified: undefined,\n    };\n    if (output[\"ETag\"] !== undefined) {\n        contents.ETag = output[\"ETag\"];\n    }\n    if (output[\"LastModified\"] !== undefined) {\n        contents.LastModified = new Date(output[\"LastModified\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlCORSRule = function (output, context) {\n    var contents = {\n        AllowedHeaders: undefined,\n        AllowedMethods: undefined,\n        AllowedOrigins: undefined,\n        ExposeHeaders: undefined,\n        MaxAgeSeconds: undefined,\n    };\n    if (output.AllowedHeader === \"\") {\n        contents.AllowedHeaders = [];\n    }\n    if (output[\"AllowedHeader\"] !== undefined) {\n        contents.AllowedHeaders = deserializeAws_restXmlAllowedHeaders(__getArrayIfSingleItem(output[\"AllowedHeader\"]), context);\n    }\n    if (output.AllowedMethod === \"\") {\n        contents.AllowedMethods = [];\n    }\n    if (output[\"AllowedMethod\"] !== undefined) {\n        contents.AllowedMethods = deserializeAws_restXmlAllowedMethods(__getArrayIfSingleItem(output[\"AllowedMethod\"]), context);\n    }\n    if (output.AllowedOrigin === \"\") {\n        contents.AllowedOrigins = [];\n    }\n    if (output[\"AllowedOrigin\"] !== undefined) {\n        contents.AllowedOrigins = deserializeAws_restXmlAllowedOrigins(__getArrayIfSingleItem(output[\"AllowedOrigin\"]), context);\n    }\n    if (output.ExposeHeader === \"\") {\n        contents.ExposeHeaders = [];\n    }\n    if (output[\"ExposeHeader\"] !== undefined) {\n        contents.ExposeHeaders = deserializeAws_restXmlExposeHeaders(__getArrayIfSingleItem(output[\"ExposeHeader\"]), context);\n    }\n    if (output[\"MaxAgeSeconds\"] !== undefined) {\n        contents.MaxAgeSeconds = parseInt(output[\"MaxAgeSeconds\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlCORSRules = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlCORSRule(entry, context);\n    });\n};\nvar deserializeAws_restXmlDefaultRetention = function (output, context) {\n    var contents = {\n        Mode: undefined,\n        Days: undefined,\n        Years: undefined,\n    };\n    if (output[\"Mode\"] !== undefined) {\n        contents.Mode = output[\"Mode\"];\n    }\n    if (output[\"Days\"] !== undefined) {\n        contents.Days = parseInt(output[\"Days\"]);\n    }\n    if (output[\"Years\"] !== undefined) {\n        contents.Years = parseInt(output[\"Years\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlDeletedObject = function (output, context) {\n    var contents = {\n        Key: undefined,\n        VersionId: undefined,\n        DeleteMarker: undefined,\n        DeleteMarkerVersionId: undefined,\n    };\n    if (output[\"Key\"] !== undefined) {\n        contents.Key = output[\"Key\"];\n    }\n    if (output[\"VersionId\"] !== undefined) {\n        contents.VersionId = output[\"VersionId\"];\n    }\n    if (output[\"DeleteMarker\"] !== undefined) {\n        contents.DeleteMarker = output[\"DeleteMarker\"] == \"true\";\n    }\n    if (output[\"DeleteMarkerVersionId\"] !== undefined) {\n        contents.DeleteMarkerVersionId = output[\"DeleteMarkerVersionId\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlDeletedObjects = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlDeletedObject(entry, context);\n    });\n};\nvar deserializeAws_restXmlDeleteMarkerEntry = function (output, context) {\n    var contents = {\n        Owner: undefined,\n        Key: undefined,\n        VersionId: undefined,\n        IsLatest: undefined,\n        LastModified: undefined,\n    };\n    if (output[\"Owner\"] !== undefined) {\n        contents.Owner = deserializeAws_restXmlOwner(output[\"Owner\"], context);\n    }\n    if (output[\"Key\"] !== undefined) {\n        contents.Key = output[\"Key\"];\n    }\n    if (output[\"VersionId\"] !== undefined) {\n        contents.VersionId = output[\"VersionId\"];\n    }\n    if (output[\"IsLatest\"] !== undefined) {\n        contents.IsLatest = output[\"IsLatest\"] == \"true\";\n    }\n    if (output[\"LastModified\"] !== undefined) {\n        contents.LastModified = new Date(output[\"LastModified\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlDeleteMarkerReplication = function (output, context) {\n    var contents = {\n        Status: undefined,\n    };\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = output[\"Status\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlDeleteMarkers = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlDeleteMarkerEntry(entry, context);\n    });\n};\nvar deserializeAws_restXmlDestination = function (output, context) {\n    var contents = {\n        Bucket: undefined,\n        Account: undefined,\n        StorageClass: undefined,\n        AccessControlTranslation: undefined,\n        EncryptionConfiguration: undefined,\n        ReplicationTime: undefined,\n        Metrics: undefined,\n    };\n    if (output[\"Bucket\"] !== undefined) {\n        contents.Bucket = output[\"Bucket\"];\n    }\n    if (output[\"Account\"] !== undefined) {\n        contents.Account = output[\"Account\"];\n    }\n    if (output[\"StorageClass\"] !== undefined) {\n        contents.StorageClass = output[\"StorageClass\"];\n    }\n    if (output[\"AccessControlTranslation\"] !== undefined) {\n        contents.AccessControlTranslation = deserializeAws_restXmlAccessControlTranslation(output[\"AccessControlTranslation\"], context);\n    }\n    if (output[\"EncryptionConfiguration\"] !== undefined) {\n        contents.EncryptionConfiguration = deserializeAws_restXmlEncryptionConfiguration(output[\"EncryptionConfiguration\"], context);\n    }\n    if (output[\"ReplicationTime\"] !== undefined) {\n        contents.ReplicationTime = deserializeAws_restXmlReplicationTime(output[\"ReplicationTime\"], context);\n    }\n    if (output[\"Metrics\"] !== undefined) {\n        contents.Metrics = deserializeAws_restXmlMetrics(output[\"Metrics\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlEncryptionConfiguration = function (output, context) {\n    var contents = {\n        ReplicaKmsKeyID: undefined,\n    };\n    if (output[\"ReplicaKmsKeyID\"] !== undefined) {\n        contents.ReplicaKmsKeyID = output[\"ReplicaKmsKeyID\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXml_Error = function (output, context) {\n    var contents = {\n        Key: undefined,\n        VersionId: undefined,\n        Code: undefined,\n        Message: undefined,\n    };\n    if (output[\"Key\"] !== undefined) {\n        contents.Key = output[\"Key\"];\n    }\n    if (output[\"VersionId\"] !== undefined) {\n        contents.VersionId = output[\"VersionId\"];\n    }\n    if (output[\"Code\"] !== undefined) {\n        contents.Code = output[\"Code\"];\n    }\n    if (output[\"Message\"] !== undefined) {\n        contents.Message = output[\"Message\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlErrorDocument = function (output, context) {\n    var contents = {\n        Key: undefined,\n    };\n    if (output[\"Key\"] !== undefined) {\n        contents.Key = output[\"Key\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlErrors = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXml_Error(entry, context);\n    });\n};\nvar deserializeAws_restXmlEventList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return entry;\n    });\n};\nvar deserializeAws_restXmlExistingObjectReplication = function (output, context) {\n    var contents = {\n        Status: undefined,\n    };\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = output[\"Status\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlExposeHeaders = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return entry;\n    });\n};\nvar deserializeAws_restXmlFilterRule = function (output, context) {\n    var contents = {\n        Name: undefined,\n        Value: undefined,\n    };\n    if (output[\"Name\"] !== undefined) {\n        contents.Name = output[\"Name\"];\n    }\n    if (output[\"Value\"] !== undefined) {\n        contents.Value = output[\"Value\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlFilterRuleList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlFilterRule(entry, context);\n    });\n};\nvar deserializeAws_restXmlGrant = function (output, context) {\n    var contents = {\n        Grantee: undefined,\n        Permission: undefined,\n    };\n    if (output[\"Grantee\"] !== undefined) {\n        contents.Grantee = deserializeAws_restXmlGrantee(output[\"Grantee\"], context);\n    }\n    if (output[\"Permission\"] !== undefined) {\n        contents.Permission = output[\"Permission\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlGrantee = function (output, context) {\n    var contents = {\n        DisplayName: undefined,\n        EmailAddress: undefined,\n        ID: undefined,\n        URI: undefined,\n        Type: undefined,\n    };\n    if (output[\"DisplayName\"] !== undefined) {\n        contents.DisplayName = output[\"DisplayName\"];\n    }\n    if (output[\"EmailAddress\"] !== undefined) {\n        contents.EmailAddress = output[\"EmailAddress\"];\n    }\n    if (output[\"ID\"] !== undefined) {\n        contents.ID = output[\"ID\"];\n    }\n    if (output[\"URI\"] !== undefined) {\n        contents.URI = output[\"URI\"];\n    }\n    if (output[\"xsi:type\"] !== undefined) {\n        contents.Type = output[\"xsi:type\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlGrants = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlGrant(entry, context);\n    });\n};\nvar deserializeAws_restXmlIndexDocument = function (output, context) {\n    var contents = {\n        Suffix: undefined,\n    };\n    if (output[\"Suffix\"] !== undefined) {\n        contents.Suffix = output[\"Suffix\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlInitiator = function (output, context) {\n    var contents = {\n        ID: undefined,\n        DisplayName: undefined,\n    };\n    if (output[\"ID\"] !== undefined) {\n        contents.ID = output[\"ID\"];\n    }\n    if (output[\"DisplayName\"] !== undefined) {\n        contents.DisplayName = output[\"DisplayName\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlIntelligentTieringAndOperator = function (output, context) {\n    var contents = {\n        Prefix: undefined,\n        Tags: undefined,\n    };\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = output[\"Prefix\"];\n    }\n    if (output.Tag === \"\") {\n        contents.Tags = [];\n    }\n    if (output[\"Tag\"] !== undefined) {\n        contents.Tags = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(output[\"Tag\"]), context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlIntelligentTieringConfiguration = function (output, context) {\n    var contents = {\n        Id: undefined,\n        Filter: undefined,\n        Status: undefined,\n        Tierings: undefined,\n    };\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = output[\"Id\"];\n    }\n    if (output[\"Filter\"] !== undefined) {\n        contents.Filter = deserializeAws_restXmlIntelligentTieringFilter(output[\"Filter\"], context);\n    }\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = output[\"Status\"];\n    }\n    if (output.Tiering === \"\") {\n        contents.Tierings = [];\n    }\n    if (output[\"Tiering\"] !== undefined) {\n        contents.Tierings = deserializeAws_restXmlTieringList(__getArrayIfSingleItem(output[\"Tiering\"]), context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlIntelligentTieringConfigurationList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlIntelligentTieringConfiguration(entry, context);\n    });\n};\nvar deserializeAws_restXmlIntelligentTieringFilter = function (output, context) {\n    var contents = {\n        Prefix: undefined,\n        Tag: undefined,\n        And: undefined,\n    };\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = output[\"Prefix\"];\n    }\n    if (output[\"Tag\"] !== undefined) {\n        contents.Tag = deserializeAws_restXmlTag(output[\"Tag\"], context);\n    }\n    if (output[\"And\"] !== undefined) {\n        contents.And = deserializeAws_restXmlIntelligentTieringAndOperator(output[\"And\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlInventoryConfiguration = function (output, context) {\n    var contents = {\n        Destination: undefined,\n        IsEnabled: undefined,\n        Filter: undefined,\n        Id: undefined,\n        IncludedObjectVersions: undefined,\n        OptionalFields: undefined,\n        Schedule: undefined,\n    };\n    if (output[\"Destination\"] !== undefined) {\n        contents.Destination = deserializeAws_restXmlInventoryDestination(output[\"Destination\"], context);\n    }\n    if (output[\"IsEnabled\"] !== undefined) {\n        contents.IsEnabled = output[\"IsEnabled\"] == \"true\";\n    }\n    if (output[\"Filter\"] !== undefined) {\n        contents.Filter = deserializeAws_restXmlInventoryFilter(output[\"Filter\"], context);\n    }\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = output[\"Id\"];\n    }\n    if (output[\"IncludedObjectVersions\"] !== undefined) {\n        contents.IncludedObjectVersions = output[\"IncludedObjectVersions\"];\n    }\n    if (output.OptionalFields === \"\") {\n        contents.OptionalFields = [];\n    }\n    if (output[\"OptionalFields\"] !== undefined && output[\"OptionalFields\"][\"Field\"] !== undefined) {\n        contents.OptionalFields = deserializeAws_restXmlInventoryOptionalFields(__getArrayIfSingleItem(output[\"OptionalFields\"][\"Field\"]), context);\n    }\n    if (output[\"Schedule\"] !== undefined) {\n        contents.Schedule = deserializeAws_restXmlInventorySchedule(output[\"Schedule\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlInventoryConfigurationList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlInventoryConfiguration(entry, context);\n    });\n};\nvar deserializeAws_restXmlInventoryDestination = function (output, context) {\n    var contents = {\n        S3BucketDestination: undefined,\n    };\n    if (output[\"S3BucketDestination\"] !== undefined) {\n        contents.S3BucketDestination = deserializeAws_restXmlInventoryS3BucketDestination(output[\"S3BucketDestination\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlInventoryEncryption = function (output, context) {\n    var contents = {\n        SSES3: undefined,\n        SSEKMS: undefined,\n    };\n    if (output[\"SSE-S3\"] !== undefined) {\n        contents.SSES3 = deserializeAws_restXmlSSES3(output[\"SSE-S3\"], context);\n    }\n    if (output[\"SSE-KMS\"] !== undefined) {\n        contents.SSEKMS = deserializeAws_restXmlSSEKMS(output[\"SSE-KMS\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlInventoryFilter = function (output, context) {\n    var contents = {\n        Prefix: undefined,\n    };\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = output[\"Prefix\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlInventoryOptionalFields = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return entry;\n    });\n};\nvar deserializeAws_restXmlInventoryS3BucketDestination = function (output, context) {\n    var contents = {\n        AccountId: undefined,\n        Bucket: undefined,\n        Format: undefined,\n        Prefix: undefined,\n        Encryption: undefined,\n    };\n    if (output[\"AccountId\"] !== undefined) {\n        contents.AccountId = output[\"AccountId\"];\n    }\n    if (output[\"Bucket\"] !== undefined) {\n        contents.Bucket = output[\"Bucket\"];\n    }\n    if (output[\"Format\"] !== undefined) {\n        contents.Format = output[\"Format\"];\n    }\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = output[\"Prefix\"];\n    }\n    if (output[\"Encryption\"] !== undefined) {\n        contents.Encryption = deserializeAws_restXmlInventoryEncryption(output[\"Encryption\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlInventorySchedule = function (output, context) {\n    var contents = {\n        Frequency: undefined,\n    };\n    if (output[\"Frequency\"] !== undefined) {\n        contents.Frequency = output[\"Frequency\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlLambdaFunctionConfiguration = function (output, context) {\n    var contents = {\n        Id: undefined,\n        LambdaFunctionArn: undefined,\n        Events: undefined,\n        Filter: undefined,\n    };\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = output[\"Id\"];\n    }\n    if (output[\"CloudFunction\"] !== undefined) {\n        contents.LambdaFunctionArn = output[\"CloudFunction\"];\n    }\n    if (output.Event === \"\") {\n        contents.Events = [];\n    }\n    if (output[\"Event\"] !== undefined) {\n        contents.Events = deserializeAws_restXmlEventList(__getArrayIfSingleItem(output[\"Event\"]), context);\n    }\n    if (output[\"Filter\"] !== undefined) {\n        contents.Filter = deserializeAws_restXmlNotificationConfigurationFilter(output[\"Filter\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlLambdaFunctionConfigurationList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlLambdaFunctionConfiguration(entry, context);\n    });\n};\nvar deserializeAws_restXmlLifecycleExpiration = function (output, context) {\n    var contents = {\n        Date: undefined,\n        Days: undefined,\n        ExpiredObjectDeleteMarker: undefined,\n    };\n    if (output[\"Date\"] !== undefined) {\n        contents.Date = new Date(output[\"Date\"]);\n    }\n    if (output[\"Days\"] !== undefined) {\n        contents.Days = parseInt(output[\"Days\"]);\n    }\n    if (output[\"ExpiredObjectDeleteMarker\"] !== undefined) {\n        contents.ExpiredObjectDeleteMarker = output[\"ExpiredObjectDeleteMarker\"] == \"true\";\n    }\n    return contents;\n};\nvar deserializeAws_restXmlLifecycleRule = function (output, context) {\n    var contents = {\n        Expiration: undefined,\n        ID: undefined,\n        Prefix: undefined,\n        Filter: undefined,\n        Status: undefined,\n        Transitions: undefined,\n        NoncurrentVersionTransitions: undefined,\n        NoncurrentVersionExpiration: undefined,\n        AbortIncompleteMultipartUpload: undefined,\n    };\n    if (output[\"Expiration\"] !== undefined) {\n        contents.Expiration = deserializeAws_restXmlLifecycleExpiration(output[\"Expiration\"], context);\n    }\n    if (output[\"ID\"] !== undefined) {\n        contents.ID = output[\"ID\"];\n    }\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = output[\"Prefix\"];\n    }\n    if (output[\"Filter\"] !== undefined) {\n        contents.Filter = deserializeAws_restXmlLifecycleRuleFilter(output[\"Filter\"], context);\n    }\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = output[\"Status\"];\n    }\n    if (output.Transition === \"\") {\n        contents.Transitions = [];\n    }\n    if (output[\"Transition\"] !== undefined) {\n        contents.Transitions = deserializeAws_restXmlTransitionList(__getArrayIfSingleItem(output[\"Transition\"]), context);\n    }\n    if (output.NoncurrentVersionTransition === \"\") {\n        contents.NoncurrentVersionTransitions = [];\n    }\n    if (output[\"NoncurrentVersionTransition\"] !== undefined) {\n        contents.NoncurrentVersionTransitions = deserializeAws_restXmlNoncurrentVersionTransitionList(__getArrayIfSingleItem(output[\"NoncurrentVersionTransition\"]), context);\n    }\n    if (output[\"NoncurrentVersionExpiration\"] !== undefined) {\n        contents.NoncurrentVersionExpiration = deserializeAws_restXmlNoncurrentVersionExpiration(output[\"NoncurrentVersionExpiration\"], context);\n    }\n    if (output[\"AbortIncompleteMultipartUpload\"] !== undefined) {\n        contents.AbortIncompleteMultipartUpload = deserializeAws_restXmlAbortIncompleteMultipartUpload(output[\"AbortIncompleteMultipartUpload\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlLifecycleRuleAndOperator = function (output, context) {\n    var contents = {\n        Prefix: undefined,\n        Tags: undefined,\n    };\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = output[\"Prefix\"];\n    }\n    if (output.Tag === \"\") {\n        contents.Tags = [];\n    }\n    if (output[\"Tag\"] !== undefined) {\n        contents.Tags = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(output[\"Tag\"]), context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlLifecycleRuleFilter = function (output, context) {\n    if (output[\"Prefix\"] !== undefined) {\n        return {\n            Prefix: output[\"Prefix\"],\n        };\n    }\n    if (output[\"Tag\"] !== undefined) {\n        return {\n            Tag: deserializeAws_restXmlTag(output[\"Tag\"], context),\n        };\n    }\n    if (output[\"And\"] !== undefined) {\n        return {\n            And: deserializeAws_restXmlLifecycleRuleAndOperator(output[\"And\"], context),\n        };\n    }\n    return { $unknown: Object.entries(output)[0] };\n};\nvar deserializeAws_restXmlLifecycleRules = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlLifecycleRule(entry, context);\n    });\n};\nvar deserializeAws_restXmlLoggingEnabled = function (output, context) {\n    var contents = {\n        TargetBucket: undefined,\n        TargetGrants: undefined,\n        TargetPrefix: undefined,\n    };\n    if (output[\"TargetBucket\"] !== undefined) {\n        contents.TargetBucket = output[\"TargetBucket\"];\n    }\n    if (output.TargetGrants === \"\") {\n        contents.TargetGrants = [];\n    }\n    if (output[\"TargetGrants\"] !== undefined && output[\"TargetGrants\"][\"Grant\"] !== undefined) {\n        contents.TargetGrants = deserializeAws_restXmlTargetGrants(__getArrayIfSingleItem(output[\"TargetGrants\"][\"Grant\"]), context);\n    }\n    if (output[\"TargetPrefix\"] !== undefined) {\n        contents.TargetPrefix = output[\"TargetPrefix\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlMetrics = function (output, context) {\n    var contents = {\n        Status: undefined,\n        EventThreshold: undefined,\n    };\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = output[\"Status\"];\n    }\n    if (output[\"EventThreshold\"] !== undefined) {\n        contents.EventThreshold = deserializeAws_restXmlReplicationTimeValue(output[\"EventThreshold\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlMetricsAndOperator = function (output, context) {\n    var contents = {\n        Prefix: undefined,\n        Tags: undefined,\n    };\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = output[\"Prefix\"];\n    }\n    if (output.Tag === \"\") {\n        contents.Tags = [];\n    }\n    if (output[\"Tag\"] !== undefined) {\n        contents.Tags = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(output[\"Tag\"]), context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlMetricsConfiguration = function (output, context) {\n    var contents = {\n        Id: undefined,\n        Filter: undefined,\n    };\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = output[\"Id\"];\n    }\n    if (output[\"Filter\"] !== undefined) {\n        contents.Filter = deserializeAws_restXmlMetricsFilter(output[\"Filter\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlMetricsConfigurationList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlMetricsConfiguration(entry, context);\n    });\n};\nvar deserializeAws_restXmlMetricsFilter = function (output, context) {\n    if (output[\"Prefix\"] !== undefined) {\n        return {\n            Prefix: output[\"Prefix\"],\n        };\n    }\n    if (output[\"Tag\"] !== undefined) {\n        return {\n            Tag: deserializeAws_restXmlTag(output[\"Tag\"], context),\n        };\n    }\n    if (output[\"And\"] !== undefined) {\n        return {\n            And: deserializeAws_restXmlMetricsAndOperator(output[\"And\"], context),\n        };\n    }\n    return { $unknown: Object.entries(output)[0] };\n};\nvar deserializeAws_restXmlMultipartUpload = function (output, context) {\n    var contents = {\n        UploadId: undefined,\n        Key: undefined,\n        Initiated: undefined,\n        StorageClass: undefined,\n        Owner: undefined,\n        Initiator: undefined,\n    };\n    if (output[\"UploadId\"] !== undefined) {\n        contents.UploadId = output[\"UploadId\"];\n    }\n    if (output[\"Key\"] !== undefined) {\n        contents.Key = output[\"Key\"];\n    }\n    if (output[\"Initiated\"] !== undefined) {\n        contents.Initiated = new Date(output[\"Initiated\"]);\n    }\n    if (output[\"StorageClass\"] !== undefined) {\n        contents.StorageClass = output[\"StorageClass\"];\n    }\n    if (output[\"Owner\"] !== undefined) {\n        contents.Owner = deserializeAws_restXmlOwner(output[\"Owner\"], context);\n    }\n    if (output[\"Initiator\"] !== undefined) {\n        contents.Initiator = deserializeAws_restXmlInitiator(output[\"Initiator\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlMultipartUploadList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlMultipartUpload(entry, context);\n    });\n};\nvar deserializeAws_restXmlNoncurrentVersionExpiration = function (output, context) {\n    var contents = {\n        NoncurrentDays: undefined,\n    };\n    if (output[\"NoncurrentDays\"] !== undefined) {\n        contents.NoncurrentDays = parseInt(output[\"NoncurrentDays\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlNoncurrentVersionTransition = function (output, context) {\n    var contents = {\n        NoncurrentDays: undefined,\n        StorageClass: undefined,\n    };\n    if (output[\"NoncurrentDays\"] !== undefined) {\n        contents.NoncurrentDays = parseInt(output[\"NoncurrentDays\"]);\n    }\n    if (output[\"StorageClass\"] !== undefined) {\n        contents.StorageClass = output[\"StorageClass\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlNoncurrentVersionTransitionList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlNoncurrentVersionTransition(entry, context);\n    });\n};\nvar deserializeAws_restXmlNotificationConfigurationFilter = function (output, context) {\n    var contents = {\n        Key: undefined,\n    };\n    if (output[\"S3Key\"] !== undefined) {\n        contents.Key = deserializeAws_restXmlS3KeyFilter(output[\"S3Key\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXml_Object = function (output, context) {\n    var contents = {\n        Key: undefined,\n        LastModified: undefined,\n        ETag: undefined,\n        Size: undefined,\n        StorageClass: undefined,\n        Owner: undefined,\n    };\n    if (output[\"Key\"] !== undefined) {\n        contents.Key = output[\"Key\"];\n    }\n    if (output[\"LastModified\"] !== undefined) {\n        contents.LastModified = new Date(output[\"LastModified\"]);\n    }\n    if (output[\"ETag\"] !== undefined) {\n        contents.ETag = output[\"ETag\"];\n    }\n    if (output[\"Size\"] !== undefined) {\n        contents.Size = parseInt(output[\"Size\"]);\n    }\n    if (output[\"StorageClass\"] !== undefined) {\n        contents.StorageClass = output[\"StorageClass\"];\n    }\n    if (output[\"Owner\"] !== undefined) {\n        contents.Owner = deserializeAws_restXmlOwner(output[\"Owner\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlObjectList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXml_Object(entry, context);\n    });\n};\nvar deserializeAws_restXmlObjectLockConfiguration = function (output, context) {\n    var contents = {\n        ObjectLockEnabled: undefined,\n        Rule: undefined,\n    };\n    if (output[\"ObjectLockEnabled\"] !== undefined) {\n        contents.ObjectLockEnabled = output[\"ObjectLockEnabled\"];\n    }\n    if (output[\"Rule\"] !== undefined) {\n        contents.Rule = deserializeAws_restXmlObjectLockRule(output[\"Rule\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlObjectLockLegalHold = function (output, context) {\n    var contents = {\n        Status: undefined,\n    };\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = output[\"Status\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlObjectLockRetention = function (output, context) {\n    var contents = {\n        Mode: undefined,\n        RetainUntilDate: undefined,\n    };\n    if (output[\"Mode\"] !== undefined) {\n        contents.Mode = output[\"Mode\"];\n    }\n    if (output[\"RetainUntilDate\"] !== undefined) {\n        contents.RetainUntilDate = new Date(output[\"RetainUntilDate\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlObjectLockRule = function (output, context) {\n    var contents = {\n        DefaultRetention: undefined,\n    };\n    if (output[\"DefaultRetention\"] !== undefined) {\n        contents.DefaultRetention = deserializeAws_restXmlDefaultRetention(output[\"DefaultRetention\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlObjectVersion = function (output, context) {\n    var contents = {\n        ETag: undefined,\n        Size: undefined,\n        StorageClass: undefined,\n        Key: undefined,\n        VersionId: undefined,\n        IsLatest: undefined,\n        LastModified: undefined,\n        Owner: undefined,\n    };\n    if (output[\"ETag\"] !== undefined) {\n        contents.ETag = output[\"ETag\"];\n    }\n    if (output[\"Size\"] !== undefined) {\n        contents.Size = parseInt(output[\"Size\"]);\n    }\n    if (output[\"StorageClass\"] !== undefined) {\n        contents.StorageClass = output[\"StorageClass\"];\n    }\n    if (output[\"Key\"] !== undefined) {\n        contents.Key = output[\"Key\"];\n    }\n    if (output[\"VersionId\"] !== undefined) {\n        contents.VersionId = output[\"VersionId\"];\n    }\n    if (output[\"IsLatest\"] !== undefined) {\n        contents.IsLatest = output[\"IsLatest\"] == \"true\";\n    }\n    if (output[\"LastModified\"] !== undefined) {\n        contents.LastModified = new Date(output[\"LastModified\"]);\n    }\n    if (output[\"Owner\"] !== undefined) {\n        contents.Owner = deserializeAws_restXmlOwner(output[\"Owner\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlObjectVersionList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlObjectVersion(entry, context);\n    });\n};\nvar deserializeAws_restXmlOwner = function (output, context) {\n    var contents = {\n        DisplayName: undefined,\n        ID: undefined,\n    };\n    if (output[\"DisplayName\"] !== undefined) {\n        contents.DisplayName = output[\"DisplayName\"];\n    }\n    if (output[\"ID\"] !== undefined) {\n        contents.ID = output[\"ID\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlOwnershipControls = function (output, context) {\n    var contents = {\n        Rules: undefined,\n    };\n    if (output.Rule === \"\") {\n        contents.Rules = [];\n    }\n    if (output[\"Rule\"] !== undefined) {\n        contents.Rules = deserializeAws_restXmlOwnershipControlsRules(__getArrayIfSingleItem(output[\"Rule\"]), context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlOwnershipControlsRule = function (output, context) {\n    var contents = {\n        ObjectOwnership: undefined,\n    };\n    if (output[\"ObjectOwnership\"] !== undefined) {\n        contents.ObjectOwnership = output[\"ObjectOwnership\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlOwnershipControlsRules = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlOwnershipControlsRule(entry, context);\n    });\n};\nvar deserializeAws_restXmlPart = function (output, context) {\n    var contents = {\n        PartNumber: undefined,\n        LastModified: undefined,\n        ETag: undefined,\n        Size: undefined,\n    };\n    if (output[\"PartNumber\"] !== undefined) {\n        contents.PartNumber = parseInt(output[\"PartNumber\"]);\n    }\n    if (output[\"LastModified\"] !== undefined) {\n        contents.LastModified = new Date(output[\"LastModified\"]);\n    }\n    if (output[\"ETag\"] !== undefined) {\n        contents.ETag = output[\"ETag\"];\n    }\n    if (output[\"Size\"] !== undefined) {\n        contents.Size = parseInt(output[\"Size\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlParts = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlPart(entry, context);\n    });\n};\nvar deserializeAws_restXmlPolicyStatus = function (output, context) {\n    var contents = {\n        IsPublic: undefined,\n    };\n    if (output[\"IsPublic\"] !== undefined) {\n        contents.IsPublic = output[\"IsPublic\"] == \"true\";\n    }\n    return contents;\n};\nvar deserializeAws_restXmlPublicAccessBlockConfiguration = function (output, context) {\n    var contents = {\n        BlockPublicAcls: undefined,\n        IgnorePublicAcls: undefined,\n        BlockPublicPolicy: undefined,\n        RestrictPublicBuckets: undefined,\n    };\n    if (output[\"BlockPublicAcls\"] !== undefined) {\n        contents.BlockPublicAcls = output[\"BlockPublicAcls\"] == \"true\";\n    }\n    if (output[\"IgnorePublicAcls\"] !== undefined) {\n        contents.IgnorePublicAcls = output[\"IgnorePublicAcls\"] == \"true\";\n    }\n    if (output[\"BlockPublicPolicy\"] !== undefined) {\n        contents.BlockPublicPolicy = output[\"BlockPublicPolicy\"] == \"true\";\n    }\n    if (output[\"RestrictPublicBuckets\"] !== undefined) {\n        contents.RestrictPublicBuckets = output[\"RestrictPublicBuckets\"] == \"true\";\n    }\n    return contents;\n};\nvar deserializeAws_restXmlQueueConfiguration = function (output, context) {\n    var contents = {\n        Id: undefined,\n        QueueArn: undefined,\n        Events: undefined,\n        Filter: undefined,\n    };\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = output[\"Id\"];\n    }\n    if (output[\"Queue\"] !== undefined) {\n        contents.QueueArn = output[\"Queue\"];\n    }\n    if (output.Event === \"\") {\n        contents.Events = [];\n    }\n    if (output[\"Event\"] !== undefined) {\n        contents.Events = deserializeAws_restXmlEventList(__getArrayIfSingleItem(output[\"Event\"]), context);\n    }\n    if (output[\"Filter\"] !== undefined) {\n        contents.Filter = deserializeAws_restXmlNotificationConfigurationFilter(output[\"Filter\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlQueueConfigurationList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlQueueConfiguration(entry, context);\n    });\n};\nvar deserializeAws_restXmlRedirect = function (output, context) {\n    var contents = {\n        HostName: undefined,\n        HttpRedirectCode: undefined,\n        Protocol: undefined,\n        ReplaceKeyPrefixWith: undefined,\n        ReplaceKeyWith: undefined,\n    };\n    if (output[\"HostName\"] !== undefined) {\n        contents.HostName = output[\"HostName\"];\n    }\n    if (output[\"HttpRedirectCode\"] !== undefined) {\n        contents.HttpRedirectCode = output[\"HttpRedirectCode\"];\n    }\n    if (output[\"Protocol\"] !== undefined) {\n        contents.Protocol = output[\"Protocol\"];\n    }\n    if (output[\"ReplaceKeyPrefixWith\"] !== undefined) {\n        contents.ReplaceKeyPrefixWith = output[\"ReplaceKeyPrefixWith\"];\n    }\n    if (output[\"ReplaceKeyWith\"] !== undefined) {\n        contents.ReplaceKeyWith = output[\"ReplaceKeyWith\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlRedirectAllRequestsTo = function (output, context) {\n    var contents = {\n        HostName: undefined,\n        Protocol: undefined,\n    };\n    if (output[\"HostName\"] !== undefined) {\n        contents.HostName = output[\"HostName\"];\n    }\n    if (output[\"Protocol\"] !== undefined) {\n        contents.Protocol = output[\"Protocol\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlReplicaModifications = function (output, context) {\n    var contents = {\n        Status: undefined,\n    };\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = output[\"Status\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlReplicationConfiguration = function (output, context) {\n    var contents = {\n        Role: undefined,\n        Rules: undefined,\n    };\n    if (output[\"Role\"] !== undefined) {\n        contents.Role = output[\"Role\"];\n    }\n    if (output.Rule === \"\") {\n        contents.Rules = [];\n    }\n    if (output[\"Rule\"] !== undefined) {\n        contents.Rules = deserializeAws_restXmlReplicationRules(__getArrayIfSingleItem(output[\"Rule\"]), context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlReplicationRule = function (output, context) {\n    var contents = {\n        ID: undefined,\n        Priority: undefined,\n        Prefix: undefined,\n        Filter: undefined,\n        Status: undefined,\n        SourceSelectionCriteria: undefined,\n        ExistingObjectReplication: undefined,\n        Destination: undefined,\n        DeleteMarkerReplication: undefined,\n    };\n    if (output[\"ID\"] !== undefined) {\n        contents.ID = output[\"ID\"];\n    }\n    if (output[\"Priority\"] !== undefined) {\n        contents.Priority = parseInt(output[\"Priority\"]);\n    }\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = output[\"Prefix\"];\n    }\n    if (output[\"Filter\"] !== undefined) {\n        contents.Filter = deserializeAws_restXmlReplicationRuleFilter(output[\"Filter\"], context);\n    }\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = output[\"Status\"];\n    }\n    if (output[\"SourceSelectionCriteria\"] !== undefined) {\n        contents.SourceSelectionCriteria = deserializeAws_restXmlSourceSelectionCriteria(output[\"SourceSelectionCriteria\"], context);\n    }\n    if (output[\"ExistingObjectReplication\"] !== undefined) {\n        contents.ExistingObjectReplication = deserializeAws_restXmlExistingObjectReplication(output[\"ExistingObjectReplication\"], context);\n    }\n    if (output[\"Destination\"] !== undefined) {\n        contents.Destination = deserializeAws_restXmlDestination(output[\"Destination\"], context);\n    }\n    if (output[\"DeleteMarkerReplication\"] !== undefined) {\n        contents.DeleteMarkerReplication = deserializeAws_restXmlDeleteMarkerReplication(output[\"DeleteMarkerReplication\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlReplicationRuleAndOperator = function (output, context) {\n    var contents = {\n        Prefix: undefined,\n        Tags: undefined,\n    };\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = output[\"Prefix\"];\n    }\n    if (output.Tag === \"\") {\n        contents.Tags = [];\n    }\n    if (output[\"Tag\"] !== undefined) {\n        contents.Tags = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(output[\"Tag\"]), context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlReplicationRuleFilter = function (output, context) {\n    if (output[\"Prefix\"] !== undefined) {\n        return {\n            Prefix: output[\"Prefix\"],\n        };\n    }\n    if (output[\"Tag\"] !== undefined) {\n        return {\n            Tag: deserializeAws_restXmlTag(output[\"Tag\"], context),\n        };\n    }\n    if (output[\"And\"] !== undefined) {\n        return {\n            And: deserializeAws_restXmlReplicationRuleAndOperator(output[\"And\"], context),\n        };\n    }\n    return { $unknown: Object.entries(output)[0] };\n};\nvar deserializeAws_restXmlReplicationRules = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlReplicationRule(entry, context);\n    });\n};\nvar deserializeAws_restXmlReplicationTime = function (output, context) {\n    var contents = {\n        Status: undefined,\n        Time: undefined,\n    };\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = output[\"Status\"];\n    }\n    if (output[\"Time\"] !== undefined) {\n        contents.Time = deserializeAws_restXmlReplicationTimeValue(output[\"Time\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlReplicationTimeValue = function (output, context) {\n    var contents = {\n        Minutes: undefined,\n    };\n    if (output[\"Minutes\"] !== undefined) {\n        contents.Minutes = parseInt(output[\"Minutes\"]);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlRoutingRule = function (output, context) {\n    var contents = {\n        Condition: undefined,\n        Redirect: undefined,\n    };\n    if (output[\"Condition\"] !== undefined) {\n        contents.Condition = deserializeAws_restXmlCondition(output[\"Condition\"], context);\n    }\n    if (output[\"Redirect\"] !== undefined) {\n        contents.Redirect = deserializeAws_restXmlRedirect(output[\"Redirect\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlRoutingRules = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlRoutingRule(entry, context);\n    });\n};\nvar deserializeAws_restXmlS3KeyFilter = function (output, context) {\n    var contents = {\n        FilterRules: undefined,\n    };\n    if (output.FilterRule === \"\") {\n        contents.FilterRules = [];\n    }\n    if (output[\"FilterRule\"] !== undefined) {\n        contents.FilterRules = deserializeAws_restXmlFilterRuleList(__getArrayIfSingleItem(output[\"FilterRule\"]), context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlServerSideEncryptionByDefault = function (output, context) {\n    var contents = {\n        SSEAlgorithm: undefined,\n        KMSMasterKeyID: undefined,\n    };\n    if (output[\"SSEAlgorithm\"] !== undefined) {\n        contents.SSEAlgorithm = output[\"SSEAlgorithm\"];\n    }\n    if (output[\"KMSMasterKeyID\"] !== undefined) {\n        contents.KMSMasterKeyID = output[\"KMSMasterKeyID\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlServerSideEncryptionConfiguration = function (output, context) {\n    var contents = {\n        Rules: undefined,\n    };\n    if (output.Rule === \"\") {\n        contents.Rules = [];\n    }\n    if (output[\"Rule\"] !== undefined) {\n        contents.Rules = deserializeAws_restXmlServerSideEncryptionRules(__getArrayIfSingleItem(output[\"Rule\"]), context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlServerSideEncryptionRule = function (output, context) {\n    var contents = {\n        ApplyServerSideEncryptionByDefault: undefined,\n        BucketKeyEnabled: undefined,\n    };\n    if (output[\"ApplyServerSideEncryptionByDefault\"] !== undefined) {\n        contents.ApplyServerSideEncryptionByDefault = deserializeAws_restXmlServerSideEncryptionByDefault(output[\"ApplyServerSideEncryptionByDefault\"], context);\n    }\n    if (output[\"BucketKeyEnabled\"] !== undefined) {\n        contents.BucketKeyEnabled = output[\"BucketKeyEnabled\"] == \"true\";\n    }\n    return contents;\n};\nvar deserializeAws_restXmlServerSideEncryptionRules = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlServerSideEncryptionRule(entry, context);\n    });\n};\nvar deserializeAws_restXmlSourceSelectionCriteria = function (output, context) {\n    var contents = {\n        SseKmsEncryptedObjects: undefined,\n        ReplicaModifications: undefined,\n    };\n    if (output[\"SseKmsEncryptedObjects\"] !== undefined) {\n        contents.SseKmsEncryptedObjects = deserializeAws_restXmlSseKmsEncryptedObjects(output[\"SseKmsEncryptedObjects\"], context);\n    }\n    if (output[\"ReplicaModifications\"] !== undefined) {\n        contents.ReplicaModifications = deserializeAws_restXmlReplicaModifications(output[\"ReplicaModifications\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlSSEKMS = function (output, context) {\n    var contents = {\n        KeyId: undefined,\n    };\n    if (output[\"KeyId\"] !== undefined) {\n        contents.KeyId = output[\"KeyId\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlSseKmsEncryptedObjects = function (output, context) {\n    var contents = {\n        Status: undefined,\n    };\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = output[\"Status\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlSSES3 = function (output, context) {\n    var contents = {};\n    return contents;\n};\nvar deserializeAws_restXmlStorageClassAnalysis = function (output, context) {\n    var contents = {\n        DataExport: undefined,\n    };\n    if (output[\"DataExport\"] !== undefined) {\n        contents.DataExport = deserializeAws_restXmlStorageClassAnalysisDataExport(output[\"DataExport\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlStorageClassAnalysisDataExport = function (output, context) {\n    var contents = {\n        OutputSchemaVersion: undefined,\n        Destination: undefined,\n    };\n    if (output[\"OutputSchemaVersion\"] !== undefined) {\n        contents.OutputSchemaVersion = output[\"OutputSchemaVersion\"];\n    }\n    if (output[\"Destination\"] !== undefined) {\n        contents.Destination = deserializeAws_restXmlAnalyticsExportDestination(output[\"Destination\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlTag = function (output, context) {\n    var contents = {\n        Key: undefined,\n        Value: undefined,\n    };\n    if (output[\"Key\"] !== undefined) {\n        contents.Key = output[\"Key\"];\n    }\n    if (output[\"Value\"] !== undefined) {\n        contents.Value = output[\"Value\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlTagSet = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlTag(entry, context);\n    });\n};\nvar deserializeAws_restXmlTargetGrant = function (output, context) {\n    var contents = {\n        Grantee: undefined,\n        Permission: undefined,\n    };\n    if (output[\"Grantee\"] !== undefined) {\n        contents.Grantee = deserializeAws_restXmlGrantee(output[\"Grantee\"], context);\n    }\n    if (output[\"Permission\"] !== undefined) {\n        contents.Permission = output[\"Permission\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlTargetGrants = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlTargetGrant(entry, context);\n    });\n};\nvar deserializeAws_restXmlTiering = function (output, context) {\n    var contents = {\n        Days: undefined,\n        AccessTier: undefined,\n    };\n    if (output[\"Days\"] !== undefined) {\n        contents.Days = parseInt(output[\"Days\"]);\n    }\n    if (output[\"AccessTier\"] !== undefined) {\n        contents.AccessTier = output[\"AccessTier\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlTieringList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlTiering(entry, context);\n    });\n};\nvar deserializeAws_restXmlTopicConfiguration = function (output, context) {\n    var contents = {\n        Id: undefined,\n        TopicArn: undefined,\n        Events: undefined,\n        Filter: undefined,\n    };\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = output[\"Id\"];\n    }\n    if (output[\"Topic\"] !== undefined) {\n        contents.TopicArn = output[\"Topic\"];\n    }\n    if (output.Event === \"\") {\n        contents.Events = [];\n    }\n    if (output[\"Event\"] !== undefined) {\n        contents.Events = deserializeAws_restXmlEventList(__getArrayIfSingleItem(output[\"Event\"]), context);\n    }\n    if (output[\"Filter\"] !== undefined) {\n        contents.Filter = deserializeAws_restXmlNotificationConfigurationFilter(output[\"Filter\"], context);\n    }\n    return contents;\n};\nvar deserializeAws_restXmlTopicConfigurationList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlTopicConfiguration(entry, context);\n    });\n};\nvar deserializeAws_restXmlTransition = function (output, context) {\n    var contents = {\n        Date: undefined,\n        Days: undefined,\n        StorageClass: undefined,\n    };\n    if (output[\"Date\"] !== undefined) {\n        contents.Date = new Date(output[\"Date\"]);\n    }\n    if (output[\"Days\"] !== undefined) {\n        contents.Days = parseInt(output[\"Days\"]);\n    }\n    if (output[\"StorageClass\"] !== undefined) {\n        contents.StorageClass = output[\"StorageClass\"];\n    }\n    return contents;\n};\nvar deserializeAws_restXmlTransitionList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restXmlTransition(entry, context);\n    });\n};\nvar deserializeMetadata = function (output) {\n    var _a;\n    return ({\n        httpStatusCode: output.statusCode,\n        requestId: (_a = output.headers[\"x-amzn-requestid\"]) !== null && _a !== void 0 ? _a : output.headers[\"x-amzn-request-id\"],\n        extendedRequestId: output.headers[\"x-amz-id-2\"],\n        cfId: output.headers[\"x-amz-cf-id\"],\n    });\n};\n// Collect low-level response body stream to Uint8Array.\nvar collectBody = function (streamBody, context) {\n    if (streamBody === void 0) { streamBody = new Uint8Array(); }\n    if (streamBody instanceof Uint8Array) {\n        return Promise.resolve(streamBody);\n    }\n    return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\n// Encode Uint8Array data into string with utf-8.\nvar collectBodyString = function (streamBody, context) {\n    return collectBody(streamBody, context).then(function (body) { return context.utf8Encoder(body); });\n};\nvar isSerializableHeaderValue = function (value) {\n    return value !== undefined &&\n        value !== null &&\n        value !== \"\" &&\n        (!Object.getOwnPropertyNames(value).includes(\"length\") || value.length != 0) &&\n        (!Object.getOwnPropertyNames(value).includes(\"size\") || value.size != 0);\n};\nvar decodeEscapedXML = function (str) {\n    return str\n        .replace(/&amp;/g, \"&\")\n        .replace(/&apos;/g, \"'\")\n        .replace(/&quot;/g, '\"')\n        .replace(/&gt;/g, \">\")\n        .replace(/&lt;/g, \"<\");\n};\nvar parseBody = function (streamBody, context) {\n    return collectBodyString(streamBody, context).then(function (encoded) {\n        if (encoded.length) {\n            var parsedObj = xmlParse(encoded, {\n                attributeNamePrefix: \"\",\n                ignoreAttributes: false,\n                parseNodeValue: false,\n                tagValueProcessor: function (val, tagName) { return decodeEscapedXML(val); },\n            });\n            var textNodeName = \"#text\";\n            var key = Object.keys(parsedObj)[0];\n            var parsedObjToReturn = parsedObj[key];\n            if (parsedObjToReturn[textNodeName]) {\n                parsedObjToReturn[key] = parsedObjToReturn[textNodeName];\n                delete parsedObjToReturn[textNodeName];\n            }\n            return __getValueFromTextNode(parsedObjToReturn);\n        }\n        return {};\n    });\n};\nvar loadRestXmlErrorCode = function (output, data) {\n    if (data.Code !== undefined) {\n        return data.Code;\n    }\n    if (output.statusCode == 404) {\n        return \"NotFound\";\n    }\n    return \"\";\n};\n//# sourceMappingURL=Aws_restXml.js.map"]},"metadata":{},"sourceType":"module"}