{"ast":null,"code":"import { objectSpread2 as _objectSpread2 } from '../_virtual/_rollupPluginBabelHelpers.js';\nvar filterVisibleLinks = function filterVisibleLinks(links, filterFn) {\n  return links.filter(function (l) {\n    return filterFn ? l.isVisible && filterFn(l) : l.isVisible;\n  }).map(function (link) {\n    if (link.subLinks) {\n      return _objectSpread2(_objectSpread2({}, link), {}, {\n        subLinks: filterVisibleLinks(link.subLinks)\n      });\n    }\n    return link;\n  });\n};\nfunction filterVisibleTabs(links, filterFn) {\n  return links.filter(function (l) {\n    return filterFn ? l.isVisible && filterFn(l) : l.isVisible;\n  }).map(function (link) {\n    return link;\n  });\n}\nexport { filterVisibleLinks, filterVisibleTabs };","map":{"version":3,"sources":["../../../src/utils/filter-visible-links.util.ts"],"names":["filterVisibleLinks","links","filterFn","filter","l","isVisible","map","link","subLinks","filterVisibleTabs"],"mappings":";AAGO,IAAMA,kBAAkB,GAAG,SAArBA,kBAAkB,CAAIC,KAAc,EAAEC,QAAmC,EAAc;EAChG,OAAOD,KAAK,CACPE,MAAM,CAAC,UAACC,CAAC,EAAA;IAAA,OAAMF,QAAQ,GAAGE,CAAC,CAACC,SAAS,IAAIH,QAAQ,CAACE,CAAC,CAAC,GAAGA,CAAC,CAACC,SAAS;EAAA,CAAC,CAAC,CACpEC,GAAG,CAAC,UAACC,IAAW,EAAY;IACzB,IAAIA,IAAI,CAACC,QAAQ,EAAE;MACf,OAAA,cAAA,CAAA,cAAA,CAAA,CAAA,CAAA,EACOD,IAAI,CAAA,EAAA,CAAA,CAAA,EAAA;QACPC,QAAQ,EAAER,kBAAkB,CAACO,IAAI,CAACC,QAAQ;MAAC,CAAA,CAAA;IAEnD;IACA,OAAOD,IAAI;EACf,CAAC,CAAC;AACV,CAAC;AAEM,SAASE,iBAAiB,CAAIR,KAAoB,EAAEC,QAAyC,EAAiB;EACjH,OAAOD,KAAK,CACPE,MAAM,CAAC,UAACC,CAAC,EAAA;IAAA,OAAMF,QAAQ,GAAGE,CAAC,CAACC,SAAS,IAAIH,QAAQ,CAACE,CAAC,CAAC,GAAGA,CAAC,CAACC,SAAS;EAAA,CAAC,CAAC,CACpEC,GAAG,CAAC,UAACC,IAAiB,EAAkB;IACrC,OAAOA,IAAI;EACf,CAAC,CAAC;AACV","sourcesContent":["import { ITabItem } from '@common/general-ui/tabs/tabs.component';\nimport { ILink } from '@common/interfaces/link.interface';\n\nexport const filterVisibleLinks = (links: ILink[], filterFn?: (link: ILink) => boolean): ILink[] => {\n    return links\n        .filter((l) => (filterFn ? l.isVisible && filterFn(l) : l.isVisible))\n        .map((link: ILink): ILink => {\n            if (link.subLinks) {\n                return {\n                    ...link,\n                    subLinks: filterVisibleLinks(link.subLinks),\n                };\n            }\n            return link;\n        });\n};\n\nexport function filterVisibleTabs<T>(links: ITabItem<T>[], filterFn?: (link: ITabItem<T>) => boolean): ITabItem<T>[] {\n    return links\n        .filter((l) => (filterFn ? l.isVisible && filterFn(l) : l.isVisible))\n        .map((link: ITabItem<T>): ITabItem<T> => {\n            return link;\n        });\n}\n"]},"metadata":{},"sourceType":"module"}