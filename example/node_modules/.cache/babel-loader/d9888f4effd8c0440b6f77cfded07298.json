{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = resolveConfig;\nvar _some = _interopRequireDefault(require(\"lodash/some\"));\nvar _mergeWith = _interopRequireDefault(require(\"lodash/mergeWith\"));\nvar _isFunction = _interopRequireDefault(require(\"lodash/isFunction\"));\nvar _isUndefined = _interopRequireDefault(require(\"lodash/isUndefined\"));\nvar _defaults = _interopRequireDefault(require(\"lodash/defaults\"));\nvar _map = _interopRequireDefault(require(\"lodash/map\"));\nvar _get = _interopRequireDefault(require(\"lodash/get\"));\nvar _uniq = _interopRequireDefault(require(\"lodash/uniq\"));\nvar _toPath = _interopRequireDefault(require(\"lodash/toPath\"));\nvar _head = _interopRequireDefault(require(\"lodash/head\"));\nvar _isPlainObject = _interopRequireDefault(require(\"lodash/isPlainObject\"));\nvar _negateValue = _interopRequireDefault(require(\"./negateValue\"));\nvar _corePluginList = _interopRequireDefault(require(\"../corePluginList\"));\nvar _configurePlugins = _interopRequireDefault(require(\"./configurePlugins\"));\nvar _defaultConfig = _interopRequireDefault(require(\"../../stubs/defaultConfig.stub\"));\nvar _colors = _interopRequireDefault(require(\"../../colors\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nconst configUtils = {\n  colors: _colors.default,\n  negative(scale) {\n    return Object.keys(scale).filter(key => scale[key] !== '0').reduce((negativeScale, key) => ({\n      ...negativeScale,\n      [`-${key}`]: (0, _negateValue.default)(scale[key])\n    }), {});\n  },\n  breakpoints(screens) {\n    return Object.keys(screens).filter(key => typeof screens[key] === 'string').reduce((breakpoints, key) => ({\n      ...breakpoints,\n      [`screen-${key}`]: screens[key]\n    }), {});\n  }\n};\nfunction value(valueToResolve) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n  return (0, _isFunction.default)(valueToResolve) ? valueToResolve(...args) : valueToResolve;\n}\nfunction collectExtends(items) {\n  return items.reduce((merged, _ref) => {\n    let {\n      extend\n    } = _ref;\n    return (0, _mergeWith.default)(merged, extend, (mergedValue, extendValue) => {\n      if ((0, _isUndefined.default)(mergedValue)) {\n        return [extendValue];\n      }\n      if (Array.isArray(mergedValue)) {\n        return [extendValue, ...mergedValue];\n      }\n      return [extendValue, mergedValue];\n    });\n  }, {});\n}\nfunction mergeThemes(themes) {\n  return {\n    ...themes.reduce((merged, theme) => (0, _defaults.default)(merged, theme), {}),\n    // In order to resolve n config objects, we combine all of their `extend` properties\n    // into arrays instead of objects so they aren't overridden.\n    extend: collectExtends(themes)\n  };\n}\nfunction mergeExtensionCustomizer(merged, value) {\n  // When we have an array of objects, we do want to merge it\n  if (Array.isArray(merged) && (0, _isPlainObject.default)((0, _head.default)(merged))) {\n    return merged.concat(value);\n  } // When the incoming value is an array, and the existing config is an object, prepend the existing object\n\n  if (Array.isArray(value) && (0, _isPlainObject.default)((0, _head.default)(value)) && (0, _isPlainObject.default)(merged)) {\n    return [merged, ...value];\n  } // Override arrays (for example for font-families, box-shadows, ...)\n\n  if (Array.isArray(value)) {\n    return value;\n  } // Execute default behaviour\n\n  return undefined;\n}\nfunction mergeExtensions(_ref2) {\n  let {\n    extend,\n    ...theme\n  } = _ref2;\n  return (0, _mergeWith.default)(theme, extend, (themeValue, extensions) => {\n    // The `extend` property is an array, so we need to check if it contains any functions\n    if (!(0, _isFunction.default)(themeValue) && !(0, _some.default)(extensions, _isFunction.default)) {\n      return (0, _mergeWith.default)({}, themeValue, ...extensions, mergeExtensionCustomizer);\n    }\n    return (resolveThemePath, utils) => (0, _mergeWith.default)({}, ...[themeValue, ...extensions].map(e => value(e, resolveThemePath, utils)), mergeExtensionCustomizer);\n  });\n}\nfunction resolveFunctionKeys(object) {\n  const resolvePath = (key, defaultValue) => {\n    const path = (0, _toPath.default)(key);\n    let index = 0;\n    let val = object;\n    while (val !== undefined && val !== null && index < path.length) {\n      val = val[path[index++]];\n      val = (0, _isFunction.default)(val) ? val(resolvePath, configUtils) : val;\n    }\n    return val === undefined ? defaultValue : val;\n  };\n  return Object.keys(object).reduce((resolved, key) => {\n    return {\n      ...resolved,\n      [key]: (0, _isFunction.default)(object[key]) ? object[key](resolvePath, configUtils) : object[key]\n    };\n  }, {});\n}\nfunction extractPluginConfigs(configs) {\n  let allConfigs = [];\n  configs.forEach(config => {\n    allConfigs = [...allConfigs, config];\n    const plugins = (0, _get.default)(config, 'plugins', []);\n    if (plugins.length === 0) {\n      return;\n    }\n    plugins.forEach(plugin => {\n      if (plugin.__isOptionsFunction) {\n        plugin = plugin();\n      }\n      allConfigs = [...allConfigs, ...extractPluginConfigs([(0, _get.default)(plugin, 'config', {})])];\n    });\n  });\n  return allConfigs;\n}\nfunction mergeVariants(variants) {\n  const mergedVariants = variants.reduce((resolved, variants) => {\n    Object.entries(variants || {}).forEach(_ref3 => {\n      let [plugin, pluginVariants] = _ref3;\n      if ((0, _isFunction.default)(pluginVariants)) {\n        resolved[plugin] = pluginVariants({\n          variants(path) {\n            return (0, _get.default)(resolved, path, []);\n          },\n          before(toInsert, variant) {\n            let existingPluginVariants = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : (0, _get.default)(resolved, plugin, []);\n            if (variant === undefined) {\n              return [...toInsert, ...existingPluginVariants];\n            }\n            const index = existingPluginVariants.indexOf(variant);\n            if (index === -1) {\n              return [...existingPluginVariants, ...toInsert];\n            }\n            return [...existingPluginVariants.slice(0, index), ...toInsert, ...existingPluginVariants.slice(index)];\n          },\n          after(toInsert, variant) {\n            let existingPluginVariants = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : (0, _get.default)(resolved, plugin, []);\n            if (variant === undefined) {\n              return [...existingPluginVariants, ...toInsert];\n            }\n            const index = existingPluginVariants.indexOf(variant);\n            if (index === -1) {\n              return [...toInsert, ...existingPluginVariants];\n            }\n            return [...existingPluginVariants.slice(0, index + 1), ...toInsert, ...existingPluginVariants.slice(index + 1)];\n          },\n          without(toRemove) {\n            let existingPluginVariants = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (0, _get.default)(resolved, plugin, []);\n            return existingPluginVariants.filter(v => !toRemove.includes(v));\n          }\n        });\n      } else {\n        resolved[plugin] = pluginVariants;\n      }\n    });\n    return resolved;\n  }, {});\n  return {\n    ...mergedVariants,\n    extend: collectExtends(variants)\n  };\n}\nfunction mergeVariantExtensions(_ref4, variantOrder) {\n  let {\n    extend,\n    ...variants\n  } = _ref4;\n  return (0, _mergeWith.default)(variants, extend, (variantsValue, extensions) => {\n    const merged = (0, _uniq.default)([...(variantsValue || []), ...extensions].flat());\n    if (extensions.flat().length === 0) {\n      return merged;\n    }\n    return merged.sort((a, z) => variantOrder.indexOf(a) - variantOrder.indexOf(z));\n  });\n}\nfunction resolveVariants(_ref5, variantOrder) {\n  let [firstConfig, ...variantConfigs] = _ref5;\n  // Global variants configuration like `variants: ['hover', 'focus']`\n  if (Array.isArray(firstConfig)) {\n    return firstConfig;\n  }\n  return mergeVariantExtensions(mergeVariants([firstConfig, ...variantConfigs].reverse()), variantOrder);\n}\nfunction resolveCorePlugins(corePluginConfigs) {\n  const result = [...corePluginConfigs].reduceRight((resolved, corePluginConfig) => {\n    if ((0, _isFunction.default)(corePluginConfig)) {\n      return corePluginConfig({\n        corePlugins: resolved\n      });\n    }\n    return (0, _configurePlugins.default)(corePluginConfig, resolved);\n  }, _corePluginList.default);\n  return result;\n}\nfunction resolvePluginLists(pluginLists) {\n  const result = [...pluginLists].reduceRight((resolved, pluginList) => {\n    return [...resolved, ...pluginList];\n  }, []);\n  return result;\n}\nfunction resolveConfig(configs) {\n  const allConfigs = [...extractPluginConfigs(configs), {\n    darkMode: false,\n    prefix: '',\n    important: false,\n    separator: ':',\n    variantOrder: _defaultConfig.default.variantOrder\n  }];\n  const {\n    variantOrder\n  } = allConfigs.find(c => c.variantOrder);\n  return (0, _defaults.default)({\n    theme: resolveFunctionKeys(mergeExtensions(mergeThemes((0, _map.default)(allConfigs, t => (0, _get.default)(t, 'theme', {}))))),\n    variants: resolveVariants(allConfigs.map(c => (0, _get.default)(c, 'variants', {})), variantOrder),\n    corePlugins: resolveCorePlugins(allConfigs.map(c => c.corePlugins)),\n    plugins: resolvePluginLists(configs.map(c => (0, _get.default)(c, 'plugins', [])))\n  }, ...allConfigs);\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","default","resolveConfig","_some","_interopRequireDefault","require","_mergeWith","_isFunction","_isUndefined","_defaults","_map","_get","_uniq","_toPath","_head","_isPlainObject","_negateValue","_corePluginList","_configurePlugins","_defaultConfig","_colors","obj","__esModule","configUtils","colors","negative","scale","keys","filter","key","reduce","negativeScale","breakpoints","screens","valueToResolve","args","collectExtends","items","merged","extend","mergedValue","extendValue","Array","isArray","mergeThemes","themes","theme","mergeExtensionCustomizer","concat","undefined","mergeExtensions","themeValue","extensions","resolveThemePath","utils","map","e","resolveFunctionKeys","object","resolvePath","defaultValue","path","index","val","length","resolved","extractPluginConfigs","configs","allConfigs","forEach","config","plugins","plugin","__isOptionsFunction","mergeVariants","variants","mergedVariants","entries","pluginVariants","before","toInsert","variant","existingPluginVariants","indexOf","slice","after","without","toRemove","v","includes","mergeVariantExtensions","variantOrder","variantsValue","flat","sort","a","z","resolveVariants","firstConfig","variantConfigs","reverse","resolveCorePlugins","corePluginConfigs","result","reduceRight","corePluginConfig","corePlugins","resolvePluginLists","pluginLists","pluginList","darkMode","prefix","important","separator","find","c","t"],"sources":["/home/mgerasika/Documents/git/oddbox/oddbox-frontend-npm-usage-example/node_modules/tailwindcss/lib/util/resolveConfig.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = resolveConfig;\n\nvar _some = _interopRequireDefault(require(\"lodash/some\"));\n\nvar _mergeWith = _interopRequireDefault(require(\"lodash/mergeWith\"));\n\nvar _isFunction = _interopRequireDefault(require(\"lodash/isFunction\"));\n\nvar _isUndefined = _interopRequireDefault(require(\"lodash/isUndefined\"));\n\nvar _defaults = _interopRequireDefault(require(\"lodash/defaults\"));\n\nvar _map = _interopRequireDefault(require(\"lodash/map\"));\n\nvar _get = _interopRequireDefault(require(\"lodash/get\"));\n\nvar _uniq = _interopRequireDefault(require(\"lodash/uniq\"));\n\nvar _toPath = _interopRequireDefault(require(\"lodash/toPath\"));\n\nvar _head = _interopRequireDefault(require(\"lodash/head\"));\n\nvar _isPlainObject = _interopRequireDefault(require(\"lodash/isPlainObject\"));\n\nvar _negateValue = _interopRequireDefault(require(\"./negateValue\"));\n\nvar _corePluginList = _interopRequireDefault(require(\"../corePluginList\"));\n\nvar _configurePlugins = _interopRequireDefault(require(\"./configurePlugins\"));\n\nvar _defaultConfig = _interopRequireDefault(require(\"../../stubs/defaultConfig.stub\"));\n\nvar _colors = _interopRequireDefault(require(\"../../colors\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst configUtils = {\n  colors: _colors.default,\n\n  negative(scale) {\n    return Object.keys(scale).filter(key => scale[key] !== '0').reduce((negativeScale, key) => ({ ...negativeScale,\n      [`-${key}`]: (0, _negateValue.default)(scale[key])\n    }), {});\n  },\n\n  breakpoints(screens) {\n    return Object.keys(screens).filter(key => typeof screens[key] === 'string').reduce((breakpoints, key) => ({ ...breakpoints,\n      [`screen-${key}`]: screens[key]\n    }), {});\n  }\n\n};\n\nfunction value(valueToResolve, ...args) {\n  return (0, _isFunction.default)(valueToResolve) ? valueToResolve(...args) : valueToResolve;\n}\n\nfunction collectExtends(items) {\n  return items.reduce((merged, {\n    extend\n  }) => {\n    return (0, _mergeWith.default)(merged, extend, (mergedValue, extendValue) => {\n      if ((0, _isUndefined.default)(mergedValue)) {\n        return [extendValue];\n      }\n\n      if (Array.isArray(mergedValue)) {\n        return [extendValue, ...mergedValue];\n      }\n\n      return [extendValue, mergedValue];\n    });\n  }, {});\n}\n\nfunction mergeThemes(themes) {\n  return { ...themes.reduce((merged, theme) => (0, _defaults.default)(merged, theme), {}),\n    // In order to resolve n config objects, we combine all of their `extend` properties\n    // into arrays instead of objects so they aren't overridden.\n    extend: collectExtends(themes)\n  };\n}\n\nfunction mergeExtensionCustomizer(merged, value) {\n  // When we have an array of objects, we do want to merge it\n  if (Array.isArray(merged) && (0, _isPlainObject.default)((0, _head.default)(merged))) {\n    return merged.concat(value);\n  } // When the incoming value is an array, and the existing config is an object, prepend the existing object\n\n\n  if (Array.isArray(value) && (0, _isPlainObject.default)((0, _head.default)(value)) && (0, _isPlainObject.default)(merged)) {\n    return [merged, ...value];\n  } // Override arrays (for example for font-families, box-shadows, ...)\n\n\n  if (Array.isArray(value)) {\n    return value;\n  } // Execute default behaviour\n\n\n  return undefined;\n}\n\nfunction mergeExtensions({\n  extend,\n  ...theme\n}) {\n  return (0, _mergeWith.default)(theme, extend, (themeValue, extensions) => {\n    // The `extend` property is an array, so we need to check if it contains any functions\n    if (!(0, _isFunction.default)(themeValue) && !(0, _some.default)(extensions, _isFunction.default)) {\n      return (0, _mergeWith.default)({}, themeValue, ...extensions, mergeExtensionCustomizer);\n    }\n\n    return (resolveThemePath, utils) => (0, _mergeWith.default)({}, ...[themeValue, ...extensions].map(e => value(e, resolveThemePath, utils)), mergeExtensionCustomizer);\n  });\n}\n\nfunction resolveFunctionKeys(object) {\n  const resolvePath = (key, defaultValue) => {\n    const path = (0, _toPath.default)(key);\n    let index = 0;\n    let val = object;\n\n    while (val !== undefined && val !== null && index < path.length) {\n      val = val[path[index++]];\n      val = (0, _isFunction.default)(val) ? val(resolvePath, configUtils) : val;\n    }\n\n    return val === undefined ? defaultValue : val;\n  };\n\n  return Object.keys(object).reduce((resolved, key) => {\n    return { ...resolved,\n      [key]: (0, _isFunction.default)(object[key]) ? object[key](resolvePath, configUtils) : object[key]\n    };\n  }, {});\n}\n\nfunction extractPluginConfigs(configs) {\n  let allConfigs = [];\n  configs.forEach(config => {\n    allConfigs = [...allConfigs, config];\n    const plugins = (0, _get.default)(config, 'plugins', []);\n\n    if (plugins.length === 0) {\n      return;\n    }\n\n    plugins.forEach(plugin => {\n      if (plugin.__isOptionsFunction) {\n        plugin = plugin();\n      }\n\n      allConfigs = [...allConfigs, ...extractPluginConfigs([(0, _get.default)(plugin, 'config', {})])];\n    });\n  });\n  return allConfigs;\n}\n\nfunction mergeVariants(variants) {\n  const mergedVariants = variants.reduce((resolved, variants) => {\n    Object.entries(variants || {}).forEach(([plugin, pluginVariants]) => {\n      if ((0, _isFunction.default)(pluginVariants)) {\n        resolved[plugin] = pluginVariants({\n          variants(path) {\n            return (0, _get.default)(resolved, path, []);\n          },\n\n          before(toInsert, variant, existingPluginVariants = (0, _get.default)(resolved, plugin, [])) {\n            if (variant === undefined) {\n              return [...toInsert, ...existingPluginVariants];\n            }\n\n            const index = existingPluginVariants.indexOf(variant);\n\n            if (index === -1) {\n              return [...existingPluginVariants, ...toInsert];\n            }\n\n            return [...existingPluginVariants.slice(0, index), ...toInsert, ...existingPluginVariants.slice(index)];\n          },\n\n          after(toInsert, variant, existingPluginVariants = (0, _get.default)(resolved, plugin, [])) {\n            if (variant === undefined) {\n              return [...existingPluginVariants, ...toInsert];\n            }\n\n            const index = existingPluginVariants.indexOf(variant);\n\n            if (index === -1) {\n              return [...toInsert, ...existingPluginVariants];\n            }\n\n            return [...existingPluginVariants.slice(0, index + 1), ...toInsert, ...existingPluginVariants.slice(index + 1)];\n          },\n\n          without(toRemove, existingPluginVariants = (0, _get.default)(resolved, plugin, [])) {\n            return existingPluginVariants.filter(v => !toRemove.includes(v));\n          }\n\n        });\n      } else {\n        resolved[plugin] = pluginVariants;\n      }\n    });\n    return resolved;\n  }, {});\n  return { ...mergedVariants,\n    extend: collectExtends(variants)\n  };\n}\n\nfunction mergeVariantExtensions({\n  extend,\n  ...variants\n}, variantOrder) {\n  return (0, _mergeWith.default)(variants, extend, (variantsValue, extensions) => {\n    const merged = (0, _uniq.default)([...(variantsValue || []), ...extensions].flat());\n\n    if (extensions.flat().length === 0) {\n      return merged;\n    }\n\n    return merged.sort((a, z) => variantOrder.indexOf(a) - variantOrder.indexOf(z));\n  });\n}\n\nfunction resolveVariants([firstConfig, ...variantConfigs], variantOrder) {\n  // Global variants configuration like `variants: ['hover', 'focus']`\n  if (Array.isArray(firstConfig)) {\n    return firstConfig;\n  }\n\n  return mergeVariantExtensions(mergeVariants([firstConfig, ...variantConfigs].reverse()), variantOrder);\n}\n\nfunction resolveCorePlugins(corePluginConfigs) {\n  const result = [...corePluginConfigs].reduceRight((resolved, corePluginConfig) => {\n    if ((0, _isFunction.default)(corePluginConfig)) {\n      return corePluginConfig({\n        corePlugins: resolved\n      });\n    }\n\n    return (0, _configurePlugins.default)(corePluginConfig, resolved);\n  }, _corePluginList.default);\n  return result;\n}\n\nfunction resolvePluginLists(pluginLists) {\n  const result = [...pluginLists].reduceRight((resolved, pluginList) => {\n    return [...resolved, ...pluginList];\n  }, []);\n  return result;\n}\n\nfunction resolveConfig(configs) {\n  const allConfigs = [...extractPluginConfigs(configs), {\n    darkMode: false,\n    prefix: '',\n    important: false,\n    separator: ':',\n    variantOrder: _defaultConfig.default.variantOrder\n  }];\n  const {\n    variantOrder\n  } = allConfigs.find(c => c.variantOrder);\n  return (0, _defaults.default)({\n    theme: resolveFunctionKeys(mergeExtensions(mergeThemes((0, _map.default)(allConfigs, t => (0, _get.default)(t, 'theme', {}))))),\n    variants: resolveVariants(allConfigs.map(c => (0, _get.default)(c, 'variants', {})), variantOrder),\n    corePlugins: resolveCorePlugins(allConfigs.map(c => c.corePlugins)),\n    plugins: resolvePluginLists(configs.map(c => (0, _get.default)(c, 'plugins', [])))\n  }, ...allConfigs);\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}