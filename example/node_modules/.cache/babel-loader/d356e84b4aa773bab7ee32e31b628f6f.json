{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function sent() {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n          case 7:\n            op = _.ops.pop();\n            _.trys.pop();\n            continue;\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n              _.ops.push(op);\n              break;\n            }\n            if (t[2]) _.ops.pop();\n            _.trys.pop();\n            continue;\n        }\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n    m = s && o[s],\n    i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function next() {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nimport API from '@aws-amplify/api';\nimport Observable from 'zen-observable-ts';\nimport { ProcessName } from '../../types';\nimport { buildGraphQLOperation, getModelAuthModes, getClientSideAuthError, getForbiddenError, predicateToGraphQLFilter, getTokenForCustomAuth } from '../utils';\nimport { USER_AGENT_SUFFIX_DATASTORE } from '../../util';\nimport { jitteredExponentialRetry, ConsoleLogger as Logger, Hub, NonRetryableError, BackgroundProcessManager } from '@aws-amplify/core';\nimport { ModelPredicateCreator } from '../../predicates';\nimport { getSyncErrorType } from './errorMaps';\nvar opResultDefaults = {\n  items: [],\n  nextToken: null,\n  startedAt: null\n};\nvar logger = new Logger('DataStore');\nvar SyncProcessor = /** @class */function () {\n  function SyncProcessor(schema, syncPredicates, amplifyConfig, authModeStrategy, errorHandler, amplifyContext) {\n    if (amplifyConfig === void 0) {\n      amplifyConfig = {};\n    }\n    this.schema = schema;\n    this.syncPredicates = syncPredicates;\n    this.amplifyConfig = amplifyConfig;\n    this.authModeStrategy = authModeStrategy;\n    this.errorHandler = errorHandler;\n    this.amplifyContext = amplifyContext;\n    this.typeQuery = new WeakMap();\n    this.runningProcesses = new BackgroundProcessManager();\n    amplifyContext.API = amplifyContext.API || API;\n    this.generateQueries();\n  }\n  SyncProcessor.prototype.generateQueries = function () {\n    var _this = this;\n    Object.values(this.schema.namespaces).forEach(function (namespace) {\n      Object.values(namespace.models).filter(function (_a) {\n        var syncable = _a.syncable;\n        return syncable;\n      }).forEach(function (model) {\n        var _a = __read(buildGraphQLOperation(namespace, model, 'LIST'), 1),\n          _b = __read(_a[0]),\n          opNameQuery = _b.slice(1);\n        _this.typeQuery.set(model, opNameQuery);\n      });\n    });\n  };\n  SyncProcessor.prototype.graphqlFilterFromPredicate = function (model) {\n    if (!this.syncPredicates) {\n      return null;\n    }\n    var predicatesGroup = ModelPredicateCreator.getPredicates(this.syncPredicates.get(model), false);\n    if (!predicatesGroup) {\n      return null;\n    }\n    return predicateToGraphQLFilter(predicatesGroup);\n  };\n  SyncProcessor.prototype.retrievePage = function (modelDefinition, lastSync, nextToken, limit, filter, onTerminate) {\n    if (limit === void 0) {\n      limit = null;\n    }\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, opName, query, variables, modelAuthModes, readAuthModes, authModeAttempts, _authModeRetry, data, _b, _c, opResult, items, newNextToken, startedAt;\n      var _this = this;\n      return __generator(this, function (_d) {\n        switch (_d.label) {\n          case 0:\n            _a = __read(this.typeQuery.get(modelDefinition), 2), opName = _a[0], query = _a[1];\n            variables = {\n              limit: limit,\n              nextToken: nextToken,\n              lastSync: lastSync,\n              filter: filter\n            };\n            return [4 /*yield*/, getModelAuthModes({\n              authModeStrategy: this.authModeStrategy,\n              defaultAuthMode: this.amplifyConfig.aws_appsync_authenticationType,\n              modelName: modelDefinition.name,\n              schema: this.schema\n            })];\n          case 1:\n            modelAuthModes = _d.sent();\n            readAuthModes = modelAuthModes.READ;\n            authModeAttempts = 0;\n            _authModeRetry = function authModeRetry() {\n              return __awaiter(_this, void 0, void 0, function () {\n                var response, error_1, authMode;\n                var _a;\n                return __generator(this, function (_b) {\n                  switch (_b.label) {\n                    case 0:\n                      if (!this.runningProcesses.isOpen) {\n                        throw new Error('sync.retreievePage termination was requested. Exiting.');\n                      }\n                      _b.label = 1;\n                    case 1:\n                      _b.trys.push([1, 3,, 5]);\n                      logger.debug(\"Attempting sync with authMode: \" + readAuthModes[authModeAttempts]);\n                      return [4 /*yield*/, this.jitteredRetry({\n                        query: query,\n                        variables: variables,\n                        opName: opName,\n                        modelDefinition: modelDefinition,\n                        authMode: readAuthModes[authModeAttempts],\n                        onTerminate: onTerminate\n                      })];\n                    case 2:\n                      response = _b.sent();\n                      logger.debug(\"Sync successful with authMode: \" + readAuthModes[authModeAttempts]);\n                      return [2 /*return*/, response];\n                    case 3:\n                      error_1 = _b.sent();\n                      authModeAttempts++;\n                      if (authModeAttempts >= readAuthModes.length) {\n                        authMode = readAuthModes[authModeAttempts - 1];\n                        logger.debug(\"Sync failed with authMode: \" + authMode, error_1);\n                        if (getClientSideAuthError(error_1) || getForbiddenError(error_1)) {\n                          // return empty list of data so DataStore will continue to sync other models\n                          logger.warn(\"User is unauthorized to query \" + opName + \" with auth mode \" + authMode + \". No data could be returned.\");\n                          return [2 /*return*/, {\n                            data: (_a = {}, _a[opName] = opResultDefaults, _a)\n                          }];\n                        }\n                        throw error_1;\n                      }\n                      logger.debug(\"Sync failed with authMode: \" + readAuthModes[authModeAttempts - 1] + \". Retrying with authMode: \" + readAuthModes[authModeAttempts]);\n                      return [4 /*yield*/, _authModeRetry()];\n                    case 4:\n                      return [2 /*return*/, _b.sent()];\n                    case 5:\n                      return [2 /*return*/];\n                  }\n                });\n              });\n            };\n\n            return [4 /*yield*/, _authModeRetry()];\n          case 2:\n            data = _d.sent().data;\n            _b = data, _c = opName, opResult = _b[_c];\n            items = opResult.items, newNextToken = opResult.nextToken, startedAt = opResult.startedAt;\n            return [2 /*return*/, {\n              nextToken: newNextToken,\n              startedAt: startedAt,\n              items: items\n            }];\n        }\n      });\n    });\n  };\n  SyncProcessor.prototype.jitteredRetry = function (_a) {\n    var query = _a.query,\n      variables = _a.variables,\n      opName = _a.opName,\n      modelDefinition = _a.modelDefinition,\n      authMode = _a.authMode,\n      onTerminate = _a.onTerminate;\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4 /*yield*/, jitteredExponentialRetry(function (query, variables) {\n              return __awaiter(_this, void 0, void 0, function () {\n                var authToken, error_2, clientOrForbiddenErrorMessage, hasItems, unauthorized, otherErrors, result;\n                var _this = this;\n                var _a, _b, _c, _d;\n                return __generator(this, function (_e) {\n                  switch (_e.label) {\n                    case 0:\n                      _e.trys.push([0, 3,, 6]);\n                      return [4 /*yield*/, getTokenForCustomAuth(authMode, this.amplifyConfig)];\n                    case 1:\n                      authToken = _e.sent();\n                      return [4 /*yield*/, this.amplifyContext.API.graphql({\n                        query: query,\n                        variables: variables,\n                        authMode: authMode,\n                        authToken: authToken,\n                        userAgentSuffix: USER_AGENT_SUFFIX_DATASTORE\n                      })];\n                    case 2:\n                      return [2 /*return*/, _e.sent()];\n                    case 3:\n                      error_2 = _e.sent();\n                      clientOrForbiddenErrorMessage = getClientSideAuthError(error_2) || getForbiddenError(error_2);\n                      if (clientOrForbiddenErrorMessage) {\n                        throw new NonRetryableError(clientOrForbiddenErrorMessage);\n                      }\n                      hasItems = Boolean((_b = (_a = error_2 === null || error_2 === void 0 ? void 0 : error_2.data) === null || _a === void 0 ? void 0 : _a[opName]) === null || _b === void 0 ? void 0 : _b.items);\n                      unauthorized = (error_2 === null || error_2 === void 0 ? void 0 : error_2.errors) && error_2.errors.some(function (err) {\n                        return err.errorType === 'Unauthorized';\n                      });\n                      otherErrors = (error_2 === null || error_2 === void 0 ? void 0 : error_2.errors) && error_2.errors.filter(function (err) {\n                        return err.errorType !== 'Unauthorized';\n                      });\n                      result = error_2;\n                      if (hasItems) {\n                        result.data[opName].items = result.data[opName].items.filter(function (item) {\n                          return item !== null;\n                        });\n                      }\n                      if (!(hasItems && (otherErrors === null || otherErrors === void 0 ? void 0 : otherErrors.length))) return [3 /*break*/, 5];\n                      return [4 /*yield*/, Promise.all(otherErrors.map(function (err) {\n                        return __awaiter(_this, void 0, void 0, function () {\n                          var e_1;\n                          return __generator(this, function (_a) {\n                            switch (_a.label) {\n                              case 0:\n                                _a.trys.push([0, 2,, 3]);\n                                return [4 /*yield*/, this.errorHandler({\n                                  recoverySuggestion: 'Ensure app code is up to date, auth directives exist and are correct on each model, and that server-side data has not been invalidated by a schema change. If the problem persists, search for or create an issue: https://github.com/aws-amplify/amplify-js/issues',\n                                  localModel: null,\n                                  message: err.message,\n                                  model: modelDefinition.name,\n                                  operation: opName,\n                                  errorType: getSyncErrorType(err),\n                                  process: ProcessName.sync,\n                                  remoteModel: null,\n                                  cause: err\n                                })];\n                              case 1:\n                                _a.sent();\n                                return [3 /*break*/, 3];\n                              case 2:\n                                e_1 = _a.sent();\n                                logger.error('Sync error handler failed with:', e_1);\n                                return [3 /*break*/, 3];\n                              case 3:\n                                return [2 /*return*/];\n                            }\n                          });\n                        });\n                      }))];\n\n                    case 4:\n                      _e.sent();\n                      Hub.dispatch('datastore', {\n                        event: 'nonApplicableDataReceived',\n                        data: {\n                          errors: otherErrors,\n                          modelName: modelDefinition.name\n                        }\n                      });\n                      _e.label = 5;\n                    case 5:\n                      if (unauthorized) {\n                        logger.warn('queryError', \"User is unauthorized to query \" + opName + \", some items could not be returned.\");\n                        result.data = result.data || {};\n                        result.data[opName] = __assign(__assign({}, opResultDefaults), result.data[opName]);\n                        return [2 /*return*/, result];\n                      }\n                      if ((_d = (_c = result.data) === null || _c === void 0 ? void 0 : _c[opName].items) === null || _d === void 0 ? void 0 : _d.length) {\n                        return [2 /*return*/, result];\n                      }\n                      throw error_2;\n                    case 6:\n                      return [2 /*return*/];\n                  }\n                });\n              });\n            }, [query, variables], undefined, onTerminate)];\n          case 1:\n            return [2 /*return*/, _b.sent()];\n        }\n      });\n    });\n  };\n  SyncProcessor.prototype.start = function (typesLastSync) {\n    var _this = this;\n    var _a = this.amplifyConfig,\n      maxRecordsToSync = _a.maxRecordsToSync,\n      syncPageSize = _a.syncPageSize;\n    var parentPromises = new Map();\n    var observable = new Observable(function (observer) {\n      var sortedTypesLastSyncs = Object.values(_this.schema.namespaces).reduce(function (map, namespace) {\n        var e_2, _a;\n        try {\n          for (var _b = __values(Array.from(namespace.modelTopologicalOrdering.keys())), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var modelName = _c.value;\n            var typeLastSync = typesLastSync.get(namespace.models[modelName]);\n            map.set(namespace.models[modelName], typeLastSync);\n          }\n        } catch (e_2_1) {\n          e_2 = {\n            error: e_2_1\n          };\n        } finally {\n          try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n          } finally {\n            if (e_2) throw e_2.error;\n          }\n        }\n        return map;\n      }, new Map());\n      var allModelsReady = Array.from(sortedTypesLastSyncs.entries()).filter(function (_a) {\n        var _b = __read(_a, 1),\n          syncable = _b[0].syncable;\n        return syncable;\n      }).map(function (_a) {\n        var _b = __read(_a, 2),\n          modelDefinition = _b[0],\n          _c = __read(_b[1], 2),\n          namespace = _c[0],\n          lastSync = _c[1];\n        return _this.runningProcesses.isOpen && _this.runningProcesses.add(function (onTerminate) {\n          return __awaiter(_this, void 0, void 0, function () {\n            var done, nextToken, startedAt, items, recordsReceived, filter, parents, promises, promise;\n            var _this = this;\n            return __generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  done = false;\n                  nextToken = null;\n                  startedAt = null;\n                  items = null;\n                  recordsReceived = 0;\n                  filter = this.graphqlFilterFromPredicate(modelDefinition);\n                  parents = this.schema.namespaces[namespace].modelTopologicalOrdering.get(modelDefinition.name);\n                  promises = parents.map(function (parent) {\n                    return parentPromises.get(namespace + \"_\" + parent);\n                  });\n                  promise = new Promise(function (res) {\n                    return __awaiter(_this, void 0, void 0, function () {\n                      var limit;\n                      var _a;\n                      return __generator(this, function (_b) {\n                        switch (_b.label) {\n                          case 0:\n                            return [4 /*yield*/, Promise.all(promises)];\n                          case 1:\n                            _b.sent();\n                            _b.label = 2;\n                          case 2:\n                            if (!this.runningProcesses.isOpen) {\n                              return [2 /*return*/];\n                            }\n\n                            limit = Math.min(maxRecordsToSync - recordsReceived, syncPageSize);\n                            return [4 /*yield*/, this.retrievePage(modelDefinition, lastSync, nextToken, limit, filter, onTerminate)];\n                          case 3:\n                            _a = _b.sent(), items = _a.items, nextToken = _a.nextToken, startedAt = _a.startedAt;\n                            recordsReceived += items.length;\n                            done = nextToken === null || recordsReceived >= maxRecordsToSync;\n                            observer.next({\n                              namespace: namespace,\n                              modelDefinition: modelDefinition,\n                              items: items,\n                              done: done,\n                              startedAt: startedAt,\n                              isFullSync: !lastSync\n                            });\n                            _b.label = 4;\n                          case 4:\n                            if (!done) return [3 /*break*/, 2];\n                            _b.label = 5;\n                          case 5:\n                            res();\n                            return [2 /*return*/];\n                        }\n                      });\n                    });\n                  });\n\n                  parentPromises.set(namespace + \"_\" + modelDefinition.name, promise);\n                  return [4 /*yield*/, promise];\n                case 1:\n                  _a.sent();\n                  return [2 /*return*/];\n              }\n            });\n          });\n        }, \"adding model \" + modelDefinition.name);\n      });\n      Promise.all(allModelsReady).then(function () {\n        observer.complete();\n      });\n    });\n    return observable;\n  };\n  SyncProcessor.prototype.stop = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            logger.debug('stopping sync processor');\n            return [4 /*yield*/, this.runningProcesses.close()];\n          case 1:\n            _a.sent();\n            return [4 /*yield*/, this.runningProcesses.open()];\n          case 2:\n            _a.sent();\n            logger.debug('sync processor stopped');\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  return SyncProcessor;\n}();\nexport { SyncProcessor };","map":{"version":3,"sources":["../../../src/sync/processors/sync.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nimport API from '@aws-amplify/api';\nimport Observable from 'zen-observable-ts';\nimport { ProcessName, } from '../../types';\nimport { buildGraphQLOperation, getModelAuthModes, getClientSideAuthError, getForbiddenError, predicateToGraphQLFilter, getTokenForCustomAuth, } from '../utils';\nimport { USER_AGENT_SUFFIX_DATASTORE } from '../../util';\nimport { jitteredExponentialRetry, ConsoleLogger as Logger, Hub, NonRetryableError, BackgroundProcessManager, } from '@aws-amplify/core';\nimport { ModelPredicateCreator } from '../../predicates';\nimport { getSyncErrorType } from './errorMaps';\nvar opResultDefaults = {\n    items: [],\n    nextToken: null,\n    startedAt: null,\n};\nvar logger = new Logger('DataStore');\nvar SyncProcessor = /** @class */ (function () {\n    function SyncProcessor(schema, syncPredicates, amplifyConfig, authModeStrategy, errorHandler, amplifyContext) {\n        if (amplifyConfig === void 0) { amplifyConfig = {}; }\n        this.schema = schema;\n        this.syncPredicates = syncPredicates;\n        this.amplifyConfig = amplifyConfig;\n        this.authModeStrategy = authModeStrategy;\n        this.errorHandler = errorHandler;\n        this.amplifyContext = amplifyContext;\n        this.typeQuery = new WeakMap();\n        this.runningProcesses = new BackgroundProcessManager();\n        amplifyContext.API = amplifyContext.API || API;\n        this.generateQueries();\n    }\n    SyncProcessor.prototype.generateQueries = function () {\n        var _this = this;\n        Object.values(this.schema.namespaces).forEach(function (namespace) {\n            Object.values(namespace.models)\n                .filter(function (_a) {\n                var syncable = _a.syncable;\n                return syncable;\n            })\n                .forEach(function (model) {\n                var _a = __read(buildGraphQLOperation(namespace, model, 'LIST'), 1), _b = __read(_a[0]), opNameQuery = _b.slice(1);\n                _this.typeQuery.set(model, opNameQuery);\n            });\n        });\n    };\n    SyncProcessor.prototype.graphqlFilterFromPredicate = function (model) {\n        if (!this.syncPredicates) {\n            return null;\n        }\n        var predicatesGroup = ModelPredicateCreator.getPredicates(this.syncPredicates.get(model), false);\n        if (!predicatesGroup) {\n            return null;\n        }\n        return predicateToGraphQLFilter(predicatesGroup);\n    };\n    SyncProcessor.prototype.retrievePage = function (modelDefinition, lastSync, nextToken, limit, filter, onTerminate) {\n        if (limit === void 0) { limit = null; }\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, opName, query, variables, modelAuthModes, readAuthModes, authModeAttempts, authModeRetry, data, _b, _c, opResult, items, newNextToken, startedAt;\n            var _this = this;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        _a = __read(this.typeQuery.get(modelDefinition), 2), opName = _a[0], query = _a[1];\n                        variables = {\n                            limit: limit,\n                            nextToken: nextToken,\n                            lastSync: lastSync,\n                            filter: filter,\n                        };\n                        return [4 /*yield*/, getModelAuthModes({\n                                authModeStrategy: this.authModeStrategy,\n                                defaultAuthMode: this.amplifyConfig.aws_appsync_authenticationType,\n                                modelName: modelDefinition.name,\n                                schema: this.schema,\n                            })];\n                    case 1:\n                        modelAuthModes = _d.sent();\n                        readAuthModes = modelAuthModes.READ;\n                        authModeAttempts = 0;\n                        authModeRetry = function () { return __awaiter(_this, void 0, void 0, function () {\n                            var response, error_1, authMode;\n                            var _a;\n                            return __generator(this, function (_b) {\n                                switch (_b.label) {\n                                    case 0:\n                                        if (!this.runningProcesses.isOpen) {\n                                            throw new Error('sync.retreievePage termination was requested. Exiting.');\n                                        }\n                                        _b.label = 1;\n                                    case 1:\n                                        _b.trys.push([1, 3, , 5]);\n                                        logger.debug(\"Attempting sync with authMode: \" + readAuthModes[authModeAttempts]);\n                                        return [4 /*yield*/, this.jitteredRetry({\n                                                query: query,\n                                                variables: variables,\n                                                opName: opName,\n                                                modelDefinition: modelDefinition,\n                                                authMode: readAuthModes[authModeAttempts],\n                                                onTerminate: onTerminate,\n                                            })];\n                                    case 2:\n                                        response = _b.sent();\n                                        logger.debug(\"Sync successful with authMode: \" + readAuthModes[authModeAttempts]);\n                                        return [2 /*return*/, response];\n                                    case 3:\n                                        error_1 = _b.sent();\n                                        authModeAttempts++;\n                                        if (authModeAttempts >= readAuthModes.length) {\n                                            authMode = readAuthModes[authModeAttempts - 1];\n                                            logger.debug(\"Sync failed with authMode: \" + authMode, error_1);\n                                            if (getClientSideAuthError(error_1) || getForbiddenError(error_1)) {\n                                                // return empty list of data so DataStore will continue to sync other models\n                                                logger.warn(\"User is unauthorized to query \" + opName + \" with auth mode \" + authMode + \". No data could be returned.\");\n                                                return [2 /*return*/, {\n                                                        data: (_a = {},\n                                                            _a[opName] = opResultDefaults,\n                                                            _a),\n                                                    }];\n                                            }\n                                            throw error_1;\n                                        }\n                                        logger.debug(\"Sync failed with authMode: \" + readAuthModes[authModeAttempts - 1] + \". Retrying with authMode: \" + readAuthModes[authModeAttempts]);\n                                        return [4 /*yield*/, authModeRetry()];\n                                    case 4: return [2 /*return*/, _b.sent()];\n                                    case 5: return [2 /*return*/];\n                                }\n                            });\n                        }); };\n                        return [4 /*yield*/, authModeRetry()];\n                    case 2:\n                        data = (_d.sent()).data;\n                        _b = data, _c = opName, opResult = _b[_c];\n                        items = opResult.items, newNextToken = opResult.nextToken, startedAt = opResult.startedAt;\n                        return [2 /*return*/, {\n                                nextToken: newNextToken,\n                                startedAt: startedAt,\n                                items: items,\n                            }];\n                }\n            });\n        });\n    };\n    SyncProcessor.prototype.jitteredRetry = function (_a) {\n        var query = _a.query, variables = _a.variables, opName = _a.opName, modelDefinition = _a.modelDefinition, authMode = _a.authMode, onTerminate = _a.onTerminate;\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, jitteredExponentialRetry(function (query, variables) { return __awaiter(_this, void 0, void 0, function () {\n                            var authToken, error_2, clientOrForbiddenErrorMessage, hasItems, unauthorized, otherErrors, result;\n                            var _this = this;\n                            var _a, _b, _c, _d;\n                            return __generator(this, function (_e) {\n                                switch (_e.label) {\n                                    case 0:\n                                        _e.trys.push([0, 3, , 6]);\n                                        return [4 /*yield*/, getTokenForCustomAuth(authMode, this.amplifyConfig)];\n                                    case 1:\n                                        authToken = _e.sent();\n                                        return [4 /*yield*/, this.amplifyContext.API.graphql({\n                                                query: query,\n                                                variables: variables,\n                                                authMode: authMode,\n                                                authToken: authToken,\n                                                userAgentSuffix: USER_AGENT_SUFFIX_DATASTORE,\n                                            })];\n                                    case 2: return [2 /*return*/, _e.sent()];\n                                    case 3:\n                                        error_2 = _e.sent();\n                                        clientOrForbiddenErrorMessage = getClientSideAuthError(error_2) || getForbiddenError(error_2);\n                                        if (clientOrForbiddenErrorMessage) {\n                                            throw new NonRetryableError(clientOrForbiddenErrorMessage);\n                                        }\n                                        hasItems = Boolean((_b = (_a = error_2 === null || error_2 === void 0 ? void 0 : error_2.data) === null || _a === void 0 ? void 0 : _a[opName]) === null || _b === void 0 ? void 0 : _b.items);\n                                        unauthorized = (error_2 === null || error_2 === void 0 ? void 0 : error_2.errors) &&\n                                            error_2.errors.some(function (err) { return err.errorType === 'Unauthorized'; });\n                                        otherErrors = (error_2 === null || error_2 === void 0 ? void 0 : error_2.errors) &&\n                                            error_2.errors.filter(function (err) { return err.errorType !== 'Unauthorized'; });\n                                        result = error_2;\n                                        if (hasItems) {\n                                            result.data[opName].items = result.data[opName].items.filter(function (item) { return item !== null; });\n                                        }\n                                        if (!(hasItems && (otherErrors === null || otherErrors === void 0 ? void 0 : otherErrors.length))) return [3 /*break*/, 5];\n                                        return [4 /*yield*/, Promise.all(otherErrors.map(function (err) { return __awaiter(_this, void 0, void 0, function () {\n                                                var e_1;\n                                                return __generator(this, function (_a) {\n                                                    switch (_a.label) {\n                                                        case 0:\n                                                            _a.trys.push([0, 2, , 3]);\n                                                            return [4 /*yield*/, this.errorHandler({\n                                                                    recoverySuggestion: 'Ensure app code is up to date, auth directives exist and are correct on each model, and that server-side data has not been invalidated by a schema change. If the problem persists, search for or create an issue: https://github.com/aws-amplify/amplify-js/issues',\n                                                                    localModel: null,\n                                                                    message: err.message,\n                                                                    model: modelDefinition.name,\n                                                                    operation: opName,\n                                                                    errorType: getSyncErrorType(err),\n                                                                    process: ProcessName.sync,\n                                                                    remoteModel: null,\n                                                                    cause: err,\n                                                                })];\n                                                        case 1:\n                                                            _a.sent();\n                                                            return [3 /*break*/, 3];\n                                                        case 2:\n                                                            e_1 = _a.sent();\n                                                            logger.error('Sync error handler failed with:', e_1);\n                                                            return [3 /*break*/, 3];\n                                                        case 3: return [2 /*return*/];\n                                                    }\n                                                });\n                                            }); }))];\n                                    case 4:\n                                        _e.sent();\n                                        Hub.dispatch('datastore', {\n                                            event: 'nonApplicableDataReceived',\n                                            data: {\n                                                errors: otherErrors,\n                                                modelName: modelDefinition.name,\n                                            },\n                                        });\n                                        _e.label = 5;\n                                    case 5:\n                                        if (unauthorized) {\n                                            logger.warn('queryError', \"User is unauthorized to query \" + opName + \", some items could not be returned.\");\n                                            result.data = result.data || {};\n                                            result.data[opName] = __assign(__assign({}, opResultDefaults), result.data[opName]);\n                                            return [2 /*return*/, result];\n                                        }\n                                        if ((_d = (_c = result.data) === null || _c === void 0 ? void 0 : _c[opName].items) === null || _d === void 0 ? void 0 : _d.length) {\n                                            return [2 /*return*/, result];\n                                        }\n                                        throw error_2;\n                                    case 6: return [2 /*return*/];\n                                }\n                            });\n                        }); }, [query, variables], undefined, onTerminate)];\n                    case 1: return [2 /*return*/, _b.sent()];\n                }\n            });\n        });\n    };\n    SyncProcessor.prototype.start = function (typesLastSync) {\n        var _this = this;\n        var _a = this.amplifyConfig, maxRecordsToSync = _a.maxRecordsToSync, syncPageSize = _a.syncPageSize;\n        var parentPromises = new Map();\n        var observable = new Observable(function (observer) {\n            var sortedTypesLastSyncs = Object.values(_this.schema.namespaces).reduce(function (map, namespace) {\n                var e_2, _a;\n                try {\n                    for (var _b = __values(Array.from(namespace.modelTopologicalOrdering.keys())), _c = _b.next(); !_c.done; _c = _b.next()) {\n                        var modelName = _c.value;\n                        var typeLastSync = typesLastSync.get(namespace.models[modelName]);\n                        map.set(namespace.models[modelName], typeLastSync);\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n                return map;\n            }, new Map());\n            var allModelsReady = Array.from(sortedTypesLastSyncs.entries())\n                .filter(function (_a) {\n                var _b = __read(_a, 1), syncable = _b[0].syncable;\n                return syncable;\n            })\n                .map(function (_a) {\n                var _b = __read(_a, 2), modelDefinition = _b[0], _c = __read(_b[1], 2), namespace = _c[0], lastSync = _c[1];\n                return _this.runningProcesses.isOpen &&\n                    _this.runningProcesses.add(function (onTerminate) { return __awaiter(_this, void 0, void 0, function () {\n                        var done, nextToken, startedAt, items, recordsReceived, filter, parents, promises, promise;\n                        var _this = this;\n                        return __generator(this, function (_a) {\n                            switch (_a.label) {\n                                case 0:\n                                    done = false;\n                                    nextToken = null;\n                                    startedAt = null;\n                                    items = null;\n                                    recordsReceived = 0;\n                                    filter = this.graphqlFilterFromPredicate(modelDefinition);\n                                    parents = this.schema.namespaces[namespace].modelTopologicalOrdering.get(modelDefinition.name);\n                                    promises = parents.map(function (parent) {\n                                        return parentPromises.get(namespace + \"_\" + parent);\n                                    });\n                                    promise = new Promise(function (res) { return __awaiter(_this, void 0, void 0, function () {\n                                        var limit;\n                                        var _a;\n                                        return __generator(this, function (_b) {\n                                            switch (_b.label) {\n                                                case 0: return [4 /*yield*/, Promise.all(promises)];\n                                                case 1:\n                                                    _b.sent();\n                                                    _b.label = 2;\n                                                case 2:\n                                                    if (!this.runningProcesses.isOpen) {\n                                                        return [2 /*return*/];\n                                                    }\n                                                    limit = Math.min(maxRecordsToSync - recordsReceived, syncPageSize);\n                                                    return [4 /*yield*/, this.retrievePage(modelDefinition, lastSync, nextToken, limit, filter, onTerminate)];\n                                                case 3:\n                                                    (_a = _b.sent(), items = _a.items, nextToken = _a.nextToken, startedAt = _a.startedAt);\n                                                    recordsReceived += items.length;\n                                                    done =\n                                                        nextToken === null || recordsReceived >= maxRecordsToSync;\n                                                    observer.next({\n                                                        namespace: namespace,\n                                                        modelDefinition: modelDefinition,\n                                                        items: items,\n                                                        done: done,\n                                                        startedAt: startedAt,\n                                                        isFullSync: !lastSync,\n                                                    });\n                                                    _b.label = 4;\n                                                case 4:\n                                                    if (!done) return [3 /*break*/, 2];\n                                                    _b.label = 5;\n                                                case 5:\n                                                    res();\n                                                    return [2 /*return*/];\n                                            }\n                                        });\n                                    }); });\n                                    parentPromises.set(namespace + \"_\" + modelDefinition.name, promise);\n                                    return [4 /*yield*/, promise];\n                                case 1:\n                                    _a.sent();\n                                    return [2 /*return*/];\n                            }\n                        });\n                    }); }, \"adding model \" + modelDefinition.name);\n            });\n            Promise.all(allModelsReady).then(function () {\n                observer.complete();\n            });\n        });\n        return observable;\n    };\n    SyncProcessor.prototype.stop = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        logger.debug('stopping sync processor');\n                        return [4 /*yield*/, this.runningProcesses.close()];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, this.runningProcesses.open()];\n                    case 2:\n                        _a.sent();\n                        logger.debug('sync processor stopped');\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return SyncProcessor;\n}());\nexport { SyncProcessor };\n//# sourceMappingURL=sync.js.map"]},"metadata":{},"sourceType":"module"}