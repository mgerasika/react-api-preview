{"ast":null,"code":"const filterVisibleLinks = (links, filterFn) => {\n  return links.filter(l => filterFn ? l.isVisible && filterFn(l) : l.isVisible).map(link => {\n    if (link.subLinks) {\n      return {\n        ...link,\n        subLinks: filterVisibleLinks(link.subLinks)\n      };\n    }\n    return link;\n  });\n};\nfunction filterVisibleTabs(links, filterFn) {\n  return links.filter(l => filterFn ? l.isVisible && filterFn(l) : l.isVisible).map(link => {\n    return link;\n  });\n}\nexport { filterVisibleLinks, filterVisibleTabs };","map":{"version":3,"sources":["../../../src/utils/filter-visible-links.util.ts"],"names":["filterVisibleLinks","links","filterFn","filter","l","isVisible","map","link","subLinks","filterVisibleTabs"],"mappings":"MAGaA,kBAAkB,GAAG,CAACC,KAAc,EAAEC,QAAmC,KAAc;EAChG,OAAOD,KAAK,CACPE,MAAM,CAAEC,CAAC,IAAMF,QAAQ,GAAGE,CAAC,CAACC,SAAS,IAAIH,QAAQ,CAACE,CAAC,CAAC,GAAGA,CAAC,CAACC,SAAU,CAAC,CACpEC,GAAG,CAAEC,IAAW,IAAY;IACzB,IAAIA,IAAI,CAACC,QAAQ,EAAE;MACf,OAAO;QACH,GAAGD,IAAI;QACPC,QAAQ,EAAER,kBAAkB,CAACO,IAAI,CAACC,QAAQ;OAC7C;IACL;IACA,OAAOD,IAAI;EACf,CAAC,CAAC;AACV,CAAA;AAEO,SAASE,iBAAiB,CAAIR,KAAoB,EAAEC,QAAyC,EAAiB;EACjH,OAAOD,KAAK,CACPE,MAAM,CAAEC,CAAC,IAAMF,QAAQ,GAAGE,CAAC,CAACC,SAAS,IAAIH,QAAQ,CAACE,CAAC,CAAC,GAAGA,CAAC,CAACC,SAAU,CAAC,CACpEC,GAAG,CAAEC,IAAiB,IAAkB;IACrC,OAAOA,IAAI;EACf,CAAC,CAAC;AACV","sourcesContent":["import { ITabItem } from '@common/general-ui/tabs/tabs.component';\nimport { ILink } from '@common/interfaces/link.interface';\n\nexport const filterVisibleLinks = (links: ILink[], filterFn?: (link: ILink) => boolean): ILink[] => {\n    return links\n        .filter((l) => (filterFn ? l.isVisible && filterFn(l) : l.isVisible))\n        .map((link: ILink): ILink => {\n            if (link.subLinks) {\n                return {\n                    ...link,\n                    subLinks: filterVisibleLinks(link.subLinks),\n                };\n            }\n            return link;\n        });\n};\n\nexport function filterVisibleTabs<T>(links: ITabItem<T>[], filterFn?: (link: ITabItem<T>) => boolean): ITabItem<T>[] {\n    return links\n        .filter((l) => (filterFn ? l.isVisible && filterFn(l) : l.isVisible))\n        .map((link: ITabItem<T>): ITabItem<T> => {\n            return link;\n        });\n}\n"]},"metadata":{},"sourceType":"module"}