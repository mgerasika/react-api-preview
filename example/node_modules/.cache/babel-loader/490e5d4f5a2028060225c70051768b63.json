{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { RestClient } from './RestClient';\nimport { Amplify, ConsoleLogger as Logger, Credentials } from '@aws-amplify/core';\nvar logger = new Logger('RestAPI');\n/**\n * Export Cloud Logic APIs\n */\nvar RestAPIClass = /** @class */function () {\n  /**\n   * Initialize Rest API with AWS configuration\n   * @param {Object} options - Configuration object for API\n   */\n  function RestAPIClass(options) {\n    this._api = null;\n    this.Credentials = Credentials;\n    this._options = options;\n    logger.debug('API Options', this._options);\n  }\n  RestAPIClass.prototype.getModuleName = function () {\n    return 'RestAPI';\n  };\n  /**\n   * Configure API part with aws configurations\n   * @param {Object} config - Configuration of the API\n   * @return {Object} - The current configuration\n   */\n  RestAPIClass.prototype.configure = function (options) {\n    var _a = options || {},\n      _b = _a.API,\n      API = _b === void 0 ? {} : _b,\n      otherOptions = __rest(_a, [\"API\"]);\n    var opt = __assign(__assign({}, otherOptions), API);\n    logger.debug('configure Rest API', {\n      opt: opt\n    });\n    if (opt['aws_project_region']) {\n      if (opt['aws_cloud_logic_custom']) {\n        var custom = opt['aws_cloud_logic_custom'];\n        opt.endpoints = typeof custom === 'string' ? JSON.parse(custom) : custom;\n      }\n      opt = Object.assign({}, opt, {\n        region: opt['aws_project_region'],\n        header: {}\n      });\n    }\n    if (Array.isArray(opt.endpoints)) {\n      // Check if endpoints has custom_headers and validate if is a function\n      opt.endpoints.forEach(function (endpoint) {\n        if (typeof endpoint.custom_header !== 'undefined' && typeof endpoint.custom_header !== 'function') {\n          logger.warn('Rest API ' + endpoint.name + ', custom_header should be a function');\n          endpoint.custom_header = undefined;\n        }\n      });\n    } else if (this._options && Array.isArray(this._options.endpoints)) {\n      opt.endpoints = this._options.endpoints;\n    } else {\n      opt.endpoints = [];\n    }\n    this._options = Object.assign({}, this._options, opt);\n    this.createInstance();\n    return this._options;\n  };\n  /**\n   * Create an instance of API for the library\n   * @return - A promise of true if Success\n   */\n  RestAPIClass.prototype.createInstance = function () {\n    logger.debug('create Rest API instance');\n    this._api = new RestClient(this._options);\n    // Share Amplify instance with client for SSR\n    this._api.Credentials = this.Credentials;\n    return true;\n  };\n  /**\n   * Make a GET request\n   * @param {string} apiName - The api name of the request\n   * @param {string} path - The path of the request\n   * @param {json} [init] - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n  RestAPIClass.prototype.get = function (apiName, path, init) {\n    try {\n      var apiInfo = this.getEndpointInfo(apiName, path);\n      var cancellableToken = this._api.getCancellableToken();\n      var initParams = Object.assign({}, init);\n      initParams.cancellableToken = cancellableToken;\n      var responsePromise = this._api.get(apiInfo, initParams);\n      this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n      return responsePromise;\n    } catch (err) {\n      return Promise.reject(err.message);\n    }\n  };\n  /**\n   * Make a POST request\n   * @param {string} apiName - The api name of the request\n   * @param {string} path - The path of the request\n   * @param {json} [init] - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n  RestAPIClass.prototype.post = function (apiName, path, init) {\n    try {\n      var apiInfo = this.getEndpointInfo(apiName, path);\n      var cancellableToken = this._api.getCancellableToken();\n      var initParams = Object.assign({}, init);\n      initParams.cancellableToken = cancellableToken;\n      var responsePromise = this._api.post(apiInfo, initParams);\n      this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n      return responsePromise;\n    } catch (err) {\n      return Promise.reject(err.message);\n    }\n  };\n  /**\n   * Make a PUT request\n   * @param {string} apiName - The api name of the request\n   * @param {string} path - The path of the request\n   * @param {json} [init] - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n  RestAPIClass.prototype.put = function (apiName, path, init) {\n    try {\n      var apiInfo = this.getEndpointInfo(apiName, path);\n      var cancellableToken = this._api.getCancellableToken();\n      var initParams = Object.assign({}, init);\n      initParams.cancellableToken = cancellableToken;\n      var responsePromise = this._api.put(apiInfo, initParams);\n      this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n      return responsePromise;\n    } catch (err) {\n      return Promise.reject(err.message);\n    }\n  };\n  /**\n   * Make a PATCH request\n   * @param {string} apiName - The api name of the request\n   * @param {string} path - The path of the request\n   * @param {json} [init] - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n  RestAPIClass.prototype.patch = function (apiName, path, init) {\n    try {\n      var apiInfo = this.getEndpointInfo(apiName, path);\n      var cancellableToken = this._api.getCancellableToken();\n      var initParams = Object.assign({}, init);\n      initParams.cancellableToken = cancellableToken;\n      var responsePromise = this._api.patch(apiInfo, initParams);\n      this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n      return responsePromise;\n    } catch (err) {\n      return Promise.reject(err.message);\n    }\n  };\n  /**\n   * Make a DEL request\n   * @param {string} apiName - The api name of the request\n   * @param {string} path - The path of the request\n   * @param {json} [init] - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n  RestAPIClass.prototype.del = function (apiName, path, init) {\n    try {\n      var apiInfo = this.getEndpointInfo(apiName, path);\n      var cancellableToken = this._api.getCancellableToken();\n      var initParams = Object.assign({}, init);\n      initParams.cancellableToken = cancellableToken;\n      var responsePromise = this._api.del(apiInfo, initParams);\n      this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n      return responsePromise;\n    } catch (err) {\n      return Promise.reject(err.message);\n    }\n  };\n  /**\n   * Make a HEAD request\n   * @param {string} apiName - The api name of the request\n   * @param {string} path - The path of the request\n   * @param {json} [init] - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n  RestAPIClass.prototype.head = function (apiName, path, init) {\n    try {\n      var apiInfo = this.getEndpointInfo(apiName, path);\n      var cancellableToken = this._api.getCancellableToken();\n      var initParams = Object.assign({}, init);\n      initParams.cancellableToken = cancellableToken;\n      var responsePromise = this._api.head(apiInfo, initParams);\n      this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n      return responsePromise;\n    } catch (err) {\n      return Promise.reject(err.message);\n    }\n  };\n  /**\n   * Checks to see if an error thrown is from an api request cancellation\n   * @param {any} error - Any error\n   * @return {boolean} - A boolean indicating if the error was from an api request cancellation\n   */\n  RestAPIClass.prototype.isCancel = function (error) {\n    return this._api.isCancel(error);\n  };\n  /**\n   * Cancels an inflight request\n   * @param {any} request - request to cancel\n   * @return {boolean} - A boolean indicating if the request was cancelled\n   */\n  RestAPIClass.prototype.cancel = function (request, message) {\n    return this._api.cancel(request, message);\n  };\n  /**\n   * Check if the request has a corresponding cancel token in the WeakMap.\n   * @params request - The request promise\n   * @return if the request has a corresponding cancel token.\n   */\n  RestAPIClass.prototype.hasCancelToken = function (request) {\n    return this._api.hasCancelToken(request);\n  };\n  /**\n   * Getting endpoint for API\n   * @param {string} apiName - The name of the api\n   * @return {string} - The endpoint of the api\n   */\n  RestAPIClass.prototype.endpoint = function (apiName) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2 /*return*/, this._api.endpoint(apiName)];\n      });\n    });\n  };\n  /**\n   * Getting endpoint info for API\n   * @param {string} apiName - The name of the api\n   * @param {string} path - The path of the api that is going to accessed\n   * @return {ApiInfo} - The endpoint information for that api-name\n   */\n  RestAPIClass.prototype.getEndpointInfo = function (apiName, path) {\n    var cloud_logic_array = this._options.endpoints;\n    if (!Array.isArray(cloud_logic_array)) {\n      throw new Error(\"API category not configured\");\n    }\n    var apiConfig = cloud_logic_array.find(function (api) {\n      return api.name === apiName;\n    });\n    if (!apiConfig) {\n      throw new Error(\"API \" + apiName + \" does not exist\");\n    }\n    var response = {\n      endpoint: apiConfig.endpoint + path\n    };\n    if (typeof apiConfig.region === 'string') {\n      response.region = apiConfig.region;\n    } else if (typeof this._options.region === 'string') {\n      response.region = this._options.region;\n    }\n    if (typeof apiConfig.service === 'string') {\n      response.service = apiConfig.service || 'execute-api';\n    } else {\n      response.service = 'execute-api';\n    }\n    if (typeof apiConfig.custom_header === 'function') {\n      response.custom_header = apiConfig.custom_header;\n    } else {\n      response.custom_header = undefined;\n    }\n    return response;\n  };\n  return RestAPIClass;\n}();\nexport { RestAPIClass };\nexport var RestAPI = new RestAPIClass(null);\nAmplify.register(RestAPI);","map":{"version":3,"sources":["../src/RestAPI.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\n/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { RestClient } from './RestClient';\nimport { Amplify, ConsoleLogger as Logger, Credentials, } from '@aws-amplify/core';\nvar logger = new Logger('RestAPI');\n/**\n * Export Cloud Logic APIs\n */\nvar RestAPIClass = /** @class */ (function () {\n    /**\n     * Initialize Rest API with AWS configuration\n     * @param {Object} options - Configuration object for API\n     */\n    function RestAPIClass(options) {\n        this._api = null;\n        this.Credentials = Credentials;\n        this._options = options;\n        logger.debug('API Options', this._options);\n    }\n    RestAPIClass.prototype.getModuleName = function () {\n        return 'RestAPI';\n    };\n    /**\n     * Configure API part with aws configurations\n     * @param {Object} config - Configuration of the API\n     * @return {Object} - The current configuration\n     */\n    RestAPIClass.prototype.configure = function (options) {\n        var _a = options || {}, _b = _a.API, API = _b === void 0 ? {} : _b, otherOptions = __rest(_a, [\"API\"]);\n        var opt = __assign(__assign({}, otherOptions), API);\n        logger.debug('configure Rest API', { opt: opt });\n        if (opt['aws_project_region']) {\n            if (opt['aws_cloud_logic_custom']) {\n                var custom = opt['aws_cloud_logic_custom'];\n                opt.endpoints =\n                    typeof custom === 'string' ? JSON.parse(custom) : custom;\n            }\n            opt = Object.assign({}, opt, {\n                region: opt['aws_project_region'],\n                header: {},\n            });\n        }\n        if (Array.isArray(opt.endpoints)) {\n            // Check if endpoints has custom_headers and validate if is a function\n            opt.endpoints.forEach(function (endpoint) {\n                if (typeof endpoint.custom_header !== 'undefined' &&\n                    typeof endpoint.custom_header !== 'function') {\n                    logger.warn('Rest API ' + endpoint.name + ', custom_header should be a function');\n                    endpoint.custom_header = undefined;\n                }\n            });\n        }\n        else if (this._options && Array.isArray(this._options.endpoints)) {\n            opt.endpoints = this._options.endpoints;\n        }\n        else {\n            opt.endpoints = [];\n        }\n        this._options = Object.assign({}, this._options, opt);\n        this.createInstance();\n        return this._options;\n    };\n    /**\n     * Create an instance of API for the library\n     * @return - A promise of true if Success\n     */\n    RestAPIClass.prototype.createInstance = function () {\n        logger.debug('create Rest API instance');\n        this._api = new RestClient(this._options);\n        // Share Amplify instance with client for SSR\n        this._api.Credentials = this.Credentials;\n        return true;\n    };\n    /**\n     * Make a GET request\n     * @param {string} apiName - The api name of the request\n     * @param {string} path - The path of the request\n     * @param {json} [init] - Request extra params\n     * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n     */\n    RestAPIClass.prototype.get = function (apiName, path, init) {\n        try {\n            var apiInfo = this.getEndpointInfo(apiName, path);\n            var cancellableToken = this._api.getCancellableToken();\n            var initParams = Object.assign({}, init);\n            initParams.cancellableToken = cancellableToken;\n            var responsePromise = this._api.get(apiInfo, initParams);\n            this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n            return responsePromise;\n        }\n        catch (err) {\n            return Promise.reject(err.message);\n        }\n    };\n    /**\n     * Make a POST request\n     * @param {string} apiName - The api name of the request\n     * @param {string} path - The path of the request\n     * @param {json} [init] - Request extra params\n     * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n     */\n    RestAPIClass.prototype.post = function (apiName, path, init) {\n        try {\n            var apiInfo = this.getEndpointInfo(apiName, path);\n            var cancellableToken = this._api.getCancellableToken();\n            var initParams = Object.assign({}, init);\n            initParams.cancellableToken = cancellableToken;\n            var responsePromise = this._api.post(apiInfo, initParams);\n            this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n            return responsePromise;\n        }\n        catch (err) {\n            return Promise.reject(err.message);\n        }\n    };\n    /**\n     * Make a PUT request\n     * @param {string} apiName - The api name of the request\n     * @param {string} path - The path of the request\n     * @param {json} [init] - Request extra params\n     * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n     */\n    RestAPIClass.prototype.put = function (apiName, path, init) {\n        try {\n            var apiInfo = this.getEndpointInfo(apiName, path);\n            var cancellableToken = this._api.getCancellableToken();\n            var initParams = Object.assign({}, init);\n            initParams.cancellableToken = cancellableToken;\n            var responsePromise = this._api.put(apiInfo, initParams);\n            this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n            return responsePromise;\n        }\n        catch (err) {\n            return Promise.reject(err.message);\n        }\n    };\n    /**\n     * Make a PATCH request\n     * @param {string} apiName - The api name of the request\n     * @param {string} path - The path of the request\n     * @param {json} [init] - Request extra params\n     * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n     */\n    RestAPIClass.prototype.patch = function (apiName, path, init) {\n        try {\n            var apiInfo = this.getEndpointInfo(apiName, path);\n            var cancellableToken = this._api.getCancellableToken();\n            var initParams = Object.assign({}, init);\n            initParams.cancellableToken = cancellableToken;\n            var responsePromise = this._api.patch(apiInfo, initParams);\n            this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n            return responsePromise;\n        }\n        catch (err) {\n            return Promise.reject(err.message);\n        }\n    };\n    /**\n     * Make a DEL request\n     * @param {string} apiName - The api name of the request\n     * @param {string} path - The path of the request\n     * @param {json} [init] - Request extra params\n     * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n     */\n    RestAPIClass.prototype.del = function (apiName, path, init) {\n        try {\n            var apiInfo = this.getEndpointInfo(apiName, path);\n            var cancellableToken = this._api.getCancellableToken();\n            var initParams = Object.assign({}, init);\n            initParams.cancellableToken = cancellableToken;\n            var responsePromise = this._api.del(apiInfo, initParams);\n            this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n            return responsePromise;\n        }\n        catch (err) {\n            return Promise.reject(err.message);\n        }\n    };\n    /**\n     * Make a HEAD request\n     * @param {string} apiName - The api name of the request\n     * @param {string} path - The path of the request\n     * @param {json} [init] - Request extra params\n     * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n     */\n    RestAPIClass.prototype.head = function (apiName, path, init) {\n        try {\n            var apiInfo = this.getEndpointInfo(apiName, path);\n            var cancellableToken = this._api.getCancellableToken();\n            var initParams = Object.assign({}, init);\n            initParams.cancellableToken = cancellableToken;\n            var responsePromise = this._api.head(apiInfo, initParams);\n            this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n            return responsePromise;\n        }\n        catch (err) {\n            return Promise.reject(err.message);\n        }\n    };\n    /**\n     * Checks to see if an error thrown is from an api request cancellation\n     * @param {any} error - Any error\n     * @return {boolean} - A boolean indicating if the error was from an api request cancellation\n     */\n    RestAPIClass.prototype.isCancel = function (error) {\n        return this._api.isCancel(error);\n    };\n    /**\n     * Cancels an inflight request\n     * @param {any} request - request to cancel\n     * @return {boolean} - A boolean indicating if the request was cancelled\n     */\n    RestAPIClass.prototype.cancel = function (request, message) {\n        return this._api.cancel(request, message);\n    };\n    /**\n     * Check if the request has a corresponding cancel token in the WeakMap.\n     * @params request - The request promise\n     * @return if the request has a corresponding cancel token.\n     */\n    RestAPIClass.prototype.hasCancelToken = function (request) {\n        return this._api.hasCancelToken(request);\n    };\n    /**\n     * Getting endpoint for API\n     * @param {string} apiName - The name of the api\n     * @return {string} - The endpoint of the api\n     */\n    RestAPIClass.prototype.endpoint = function (apiName) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this._api.endpoint(apiName)];\n            });\n        });\n    };\n    /**\n     * Getting endpoint info for API\n     * @param {string} apiName - The name of the api\n     * @param {string} path - The path of the api that is going to accessed\n     * @return {ApiInfo} - The endpoint information for that api-name\n     */\n    RestAPIClass.prototype.getEndpointInfo = function (apiName, path) {\n        var cloud_logic_array = this._options.endpoints;\n        if (!Array.isArray(cloud_logic_array)) {\n            throw new Error(\"API category not configured\");\n        }\n        var apiConfig = cloud_logic_array.find(function (api) { return api.name === apiName; });\n        if (!apiConfig) {\n            throw new Error(\"API \" + apiName + \" does not exist\");\n        }\n        var response = {\n            endpoint: apiConfig.endpoint + path,\n        };\n        if (typeof apiConfig.region === 'string') {\n            response.region = apiConfig.region;\n        }\n        else if (typeof this._options.region === 'string') {\n            response.region = this._options.region;\n        }\n        if (typeof apiConfig.service === 'string') {\n            response.service = apiConfig.service || 'execute-api';\n        }\n        else {\n            response.service = 'execute-api';\n        }\n        if (typeof apiConfig.custom_header === 'function') {\n            response.custom_header = apiConfig.custom_header;\n        }\n        else {\n            response.custom_header = undefined;\n        }\n        return response;\n    };\n    return RestAPIClass;\n}());\nexport { RestAPIClass };\nexport var RestAPI = new RestAPIClass(null);\nAmplify.register(RestAPI);\n//# sourceMappingURL=RestAPI.js.map"]},"metadata":{},"sourceType":"module"}