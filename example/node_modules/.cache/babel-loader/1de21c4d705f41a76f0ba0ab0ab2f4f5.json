{"ast":null,"code":"import { slicedToArray as _slicedToArray } from '../_virtual/_rollupPluginBabelHelpers.js';\nimport { useRef, useCallback } from 'react';\nimport { ModalProvider, useModal } from 'react-modal-hook';\nvar ModalProviderEx = ModalProvider;\nfunction useModalEx(callback,\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n_deps) {\n  var propsRef = useRef();\n  var _useModal = useModal(function () {\n      return callback(propsRef.current, hideModalInternal);\n    }, [callback]),\n    _useModal2 = _slicedToArray(_useModal, 2),\n    showModalInternal = _useModal2[0],\n    hideModalInternal = _useModal2[1];\n  return [useCallback(function (props) {\n    propsRef.current = props;\n    showModalInternal();\n  }, [showModalInternal]), useCallback(function () {\n    hideModalInternal();\n  }, [hideModalInternal])];\n}\nexport { ModalProviderEx, useModalEx };","map":{"version":3,"sources":["../../../src/hooks/use-modal-ex.hook.ts"],"names":["ModalProviderEx","ModalProvider","useModalEx","callback","_deps","propsRef","useRef","showModalInternal","hideModalInternal","useModal","current","_useModal2","useCallback","props"],"mappings":";;;AAKO,IAAMA,eAAe,GAAGC,aAAa;AAErC,SAASC,UAAU,CACtBC,QAA+D;AAC/D;AACAC,KAAa,EACE;EACf,IAAMC,QAAQ,GAAGC,MAAM,EAAU;EAEjC,IAA+CG,SAAAA,GAAAA,QAAQ,CAAC,YAAM;MAC1D,OAAON,QAAQ,CAACE,QAAQ,CAACK,OAAO,EAAYF,iBAAiB,CAAC;IAClE,CAAC,EAAE,CAACL,QAAQ,CAAC,CAACQ;IAAAA,UAAAA,GAAAA,cAAAA,CAAAA,SAAAA,EAAAA,CAAAA,CAAAA;IAFPJ,iBAAiB,GAAA,UAAA,CAAA,CAAA,CAAA;IAAEC,iBAAiB,GAAA,UAAA,CAAA,CAAA,CAAA;EAG3C,OAAO,CACHI,WAAW,CACP,UAACC,KAAa,EAAK;IACfR,QAAQ,CAACK,OAAO,GAAGG,KAAK;IACxBN,iBAAiB,EAAE;EACtB,CAAA,EACD,CAACA,iBAAiB,CAAC,CACtB,EACDK,WAAW,CAAC,YAAM;IACdJ,iBAAiB,EAAE;EACvB,CAAC,EAAE,CAACA,iBAAiB,CAAC,CAAC,CAC1B;AACL","sourcesContent":["import { useCallback, useRef } from 'react';\nimport { ModalProvider, useModal } from 'react-modal-hook';\n\ntype IReturn<TProps> = [(props: TProps) => void, () => void];\n\nexport const ModalProviderEx = ModalProvider;\n\nexport function useModalEx<TProps>(\n    callback: (props: TProps, hideModal: () => void) => JSX.Element,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    _deps?: any[],\n): IReturn<TProps> {\n    const propsRef = useRef<TProps>();\n\n    const [showModalInternal, hideModalInternal] = useModal(() => {\n        return callback(propsRef.current as TProps, hideModalInternal);\n    }, [callback]);\n    return [\n        useCallback(\n            (props: TProps) => {\n                propsRef.current = props;\n                showModalInternal();\n            },\n            [showModalInternal],\n        ),\n        useCallback(() => {\n            hideModalInternal();\n        }, [hideModalInternal]),\n    ];\n}\n"]},"metadata":{},"sourceType":"module"}