{"ast":null,"code":"import { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport { jsx } from '@emotion/react';\nimport 'react';\nimport { FieldFooter } from './field-footer.component.js';\nimport { FieldLabel } from './field-label.component.js';\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() {\n  return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";\n}\n// antd have similar component but this component use with antd-form (rc-field-form) https://github.com/react-component/field-form (this library has limitations)\nfunction Field(_ref) {\n  let {\n    children,\n    onLabelClick,\n    htmlFor,\n    className,\n    labelCss,\n    ...rest\n  } = _ref;\n  const {\n    label\n  } = rest;\n  return jsx(\"div\", {\n    className: className,\n    \"data-testid\": `field-${rest.name}`,\n    css: styles.field\n  }, label && jsx(FieldLabel, _extends({\n    htmlFor: htmlFor\n  }, rest, {\n    onLabelClick: onLabelClick,\n    css: labelCss\n  })), children, jsx(FieldFooter, rest));\n}\nconst styles = {\n  field: process.env.NODE_ENV === \"production\" ? {\n    name: \"1d3w5wq\",\n    styles: \"width:100%\"\n  } : {\n    name: \"okn8jx-field\",\n    styles: \"width:100%;label:field;\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpZWxkLmNvbXBvbmVudC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBMkNjIiwiZmlsZSI6ImZpZWxkLmNvbXBvbmVudC50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTZXJpYWxpemVkU3R5bGVzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IFJlYWN0LCB7IFJlYWN0Tm9kZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IFJlZ2lzdGVyT3B0aW9ucyB9IGZyb20gJ3JlYWN0LWhvb2stZm9ybSc7XG5pbXBvcnQgeyBjc3MgfSBmcm9tICd0d2luLm1hY3JvJztcbmltcG9ydCB7IEZpZWxkRm9vdGVyLCBJRmllbGRGb290ZXJQcm9wcyB9IGZyb20gJy4vZmllbGQtZm9vdGVyLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBGaWVsZExhYmVsLCBJRmllbGRMYWJlbFByb3BzIH0gZnJvbSAnLi9maWVsZC1sYWJlbC5jb21wb25lbnQnO1xuXG5leHBvcnQgaW50ZXJmYWNlIElGaWVsZFByb3BzPFQgPSB1bmtub3duLCBUTmFtZSA9IHN0cmluZz4gZXh0ZW5kcyBQaWNrPFJlZ2lzdGVyT3B0aW9ucywgJ3ZhbGlkYXRlJz4ge1xuICAgIHRvb2x0aXA/OiBzdHJpbmc7XG4gICAgbmFtZTogVE5hbWU7XG4gICAgbGFiZWw/OiBSZWFjdE5vZGU7XG4gICAgcmVxdWlyZWQ/OiBib29sZWFuO1xuICAgIHZhbHVlPzogVDtcbiAgICBkZWZhdWx0VmFsdWU/OiBUO1xuICAgIHBsYWNlaG9sZGVyPzogc3RyaW5nO1xuICAgIGhlbHBlclRleHQ/OiBSZWFjdE5vZGU7XG4gICAgZXJyb3JNZXNzYWdlPzogUmVhY3ROb2RlO1xuICAgIHJlYWRPbmx5PzogYm9vbGVhbjtcbiAgICBzaXplPzogJ2RlZmF1bHQnIHwgJ3NtYWxsJztcbiAgICBvbkxhYmVsQ2xpY2s/OiAoKSA9PiB2b2lkO1xuICAgIGdldEN1c3RvbUVycm9yTWVzc2FnZT86IChvcHRzOiBSZWdpc3Rlck9wdGlvbnMpID0+IFJlZ2lzdGVyT3B0aW9ucztcbn1cblxuaW50ZXJmYWNlIElQcm9wczxUTmFtZT4gZXh0ZW5kcyBJRmllbGRGb290ZXJQcm9wcywgSUZpZWxkTGFiZWxQcm9wcyB7XG4gICAgY2xhc3NOYW1lPzogc3RyaW5nO1xuICAgIG5hbWU6IElGaWVsZFByb3BzPFROYW1lPlsnbmFtZSddO1xuICAgIGNoaWxkcmVuPzogUmVhY3ROb2RlO1xuICAgIGxhYmVsQ3NzPzogU2VyaWFsaXplZFN0eWxlcztcbn1cblxuLy8gYW50ZCBoYXZlIHNpbWlsYXIgY29tcG9uZW50IGJ1dCB0aGlzIGNvbXBvbmVudCB1c2Ugd2l0aCBhbnRkLWZvcm0gKHJjLWZpZWxkLWZvcm0pIGh0dHBzOi8vZ2l0aHViLmNvbS9yZWFjdC1jb21wb25lbnQvZmllbGQtZm9ybSAodGhpcyBsaWJyYXJ5IGhhcyBsaW1pdGF0aW9ucylcbmV4cG9ydCBmdW5jdGlvbiBGaWVsZDxUTmFtZT4oeyBjaGlsZHJlbiwgb25MYWJlbENsaWNrLCBodG1sRm9yLCBjbGFzc05hbWUsIGxhYmVsQ3NzLCAuLi5yZXN0IH06IElQcm9wczxUTmFtZT4pOiBKU1guRWxlbWVudCB7XG4gICAgY29uc3QgeyBsYWJlbCB9ID0gcmVzdDtcbiAgICByZXR1cm4gKFxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT17Y2xhc3NOYW1lfSBkYXRhLXRlc3RpZD17YGZpZWxkLSR7cmVzdC5uYW1lfWB9IGNzcz17c3R5bGVzLmZpZWxkfT5cbiAgICAgICAgICAgIHtsYWJlbCAmJiA8RmllbGRMYWJlbCBodG1sRm9yPXtodG1sRm9yfSB7Li4ucmVzdH0gb25MYWJlbENsaWNrPXtvbkxhYmVsQ2xpY2t9IGNzcz17bGFiZWxDc3N9IC8+fVxuICAgICAgICAgICAge2NoaWxkcmVufVxuICAgICAgICAgICAgezxGaWVsZEZvb3RlciB7Li4ucmVzdH0gLz59XG4gICAgICAgIDwvZGl2PlxuICAgICk7XG59XG5cbmNvbnN0IHN0eWxlcyA9IHtcbiAgICBmaWVsZDogY3NzYFxuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICBgLFxufTtcbiJdfQ== */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  }\n};\nexport { Field };","map":{"version":3,"sources":["../../../../src/general-ui/field/field.component.tsx"],"names":["Field","children","onLabelClick","htmlFor","className","labelCss","rest","label","___EmotionJSX","name","styles","field"],"mappings":";;;;;;;;AA8BA;AACO,SAASA,KAAK,OAAuG;EAAA,IAA/F;IAAEC,QAAQ;IAAEC,YAAY;IAAEC,OAAO;IAAEC,SAAS;IAAEC,QAAQ;IAAE,GAAGC;EAAoB,CAAC;EACzG,MAAM;IAAEC;EAAM,CAAC,GAAGD,IAAI;EACtB,OACIE,GAAAA,CAAAA,KAAAA,EAAAA;IAAK,SAAS,EAAEJ,SAAU;IAAC,aAAA,EAAsBE,SAAAA,IAAI,CAACG,IAAO,EAAA;IAAC,GAAG,EAAEC,MAAM,CAACC;GACrEJ,EAAAA,KAAK,IAAIC,GAAAA,CAAC,UAAU,EAAA,QAAA,CAAA;IAAC,OAAO,EAAEL;EAAQ,CAAA,EAAKG,IAAI,EAAA;IAAE,YAAY,EAAEJ,YAAa;IAAC,GAAG,EAAEG;GAAY,CAAA,CAAA,EAC9FJ,QAAQ,EACRO,GAAAA,CAAC,WAAW,EAAKF,IAAI,CAAI,CACxB;AAEd;AAEA,MAAMI,MAAM,GAAG;EACXC,KAAK,EAAA,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,YAAA,GAAA;IAAA,IAAA,EAAA,SAAA;IAAA,MAAA,EAAA;EAAA,CAAA,GAAA;IAAA,IAAA,EAAA,cAAA;IAAA,MAAA,EAAA,yBAAA;IAAA,GAAA,EAAA,q+EAAA;IAAA,QAAA,EAAA;EAAA;AAGT,CAAC","sourcesContent":["import { SerializedStyles } from '@emotion/react';\nimport React, { ReactNode } from 'react';\nimport { RegisterOptions } from 'react-hook-form';\nimport { css } from 'twin.macro';\nimport { FieldFooter, IFieldFooterProps } from './field-footer.component';\nimport { FieldLabel, IFieldLabelProps } from './field-label.component';\n\nexport interface IFieldProps<T = unknown, TName = string> extends Pick<RegisterOptions, 'validate'> {\n    tooltip?: string;\n    name: TName;\n    label?: ReactNode;\n    required?: boolean;\n    value?: T;\n    defaultValue?: T;\n    placeholder?: string;\n    helperText?: ReactNode;\n    errorMessage?: ReactNode;\n    readOnly?: boolean;\n    size?: 'default' | 'small';\n    onLabelClick?: () => void;\n    getCustomErrorMessage?: (opts: RegisterOptions) => RegisterOptions;\n}\n\ninterface IProps<TName> extends IFieldFooterProps, IFieldLabelProps {\n    className?: string;\n    name: IFieldProps<TName>['name'];\n    children?: ReactNode;\n    labelCss?: SerializedStyles;\n}\n\n// antd have similar component but this component use with antd-form (rc-field-form) https://github.com/react-component/field-form (this library has limitations)\nexport function Field<TName>({ children, onLabelClick, htmlFor, className, labelCss, ...rest }: IProps<TName>): JSX.Element {\n    const { label } = rest;\n    return (\n        <div className={className} data-testid={`field-${rest.name}`} css={styles.field}>\n            {label && <FieldLabel htmlFor={htmlFor} {...rest} onLabelClick={onLabelClick} css={labelCss} />}\n            {children}\n            {<FieldFooter {...rest} />}\n        </div>\n    );\n}\n\nconst styles = {\n    field: css`\n        width: 100%;\n    `,\n};\n"]},"metadata":{},"sourceType":"module"}