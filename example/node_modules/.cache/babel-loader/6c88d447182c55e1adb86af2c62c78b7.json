{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function sent() {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n          case 7:\n            op = _.ops.pop();\n            _.trys.pop();\n            continue;\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n              _.ops.push(op);\n              break;\n            }\n            if (t[2]) _.ops.pop();\n            _.trys.pop();\n            continue;\n        }\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nimport { Credentials, getAmplifyUserAgent } from '@aws-amplify/core';\nimport { AbstractInterpretPredictionsProvider } from '../types/Providers';\nimport { InterpretTextCategories } from '../types';\nimport { ComprehendClient, DetectSyntaxCommand, DetectEntitiesCommand, DetectDominantLanguageCommand, DetectKeyPhrasesCommand, DetectSentimentCommand } from '@aws-sdk/client-comprehend';\nvar AmazonAIInterpretPredictionsProvider = /** @class */function (_super) {\n  __extends(AmazonAIInterpretPredictionsProvider, _super);\n  function AmazonAIInterpretPredictionsProvider() {\n    return _super.call(this) || this;\n  }\n  AmazonAIInterpretPredictionsProvider.prototype.getProviderName = function () {\n    return 'AmazonAIInterpretPredictionsProvider';\n  };\n  AmazonAIInterpretPredictionsProvider.prototype.interpretText = function (input) {\n    var _this = this;\n    return new Promise(function (res, rej) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var credentials, _a, _b, _c, region, _d, _e, interpretTypeConfig, _f, _g, _h, _j, text, _k, interpretType, _l, _m, _o, language, comprehendClient, doAll, languagePromise, languageDetectionParams, entitiesPromise, LanguageCode, _p, entitiesDetectionParams, sentimentPromise, LanguageCode, _q, sentimentParams, syntaxPromise, LanguageCode, _r, syntaxParams, keyPhrasesPromise, LanguageCode, _s, keyPhrasesParams, results, err_1;\n        return __generator(this, function (_t) {\n          switch (_t.label) {\n            case 0:\n              return [4 /*yield*/, Credentials.get()];\n            case 1:\n              credentials = _t.sent();\n              if (!credentials) return [2 /*return*/, rej('No credentials')];\n              _a = this._config.interpretText, _b = _a === void 0 ? {} : _a, _c = _b.region, region = _c === void 0 ? '' : _c, _d = _b.defaults, _e = (_d === void 0 ? {} : _d).type, interpretTypeConfig = _e === void 0 ? '' : _e;\n              _f = input.text, _g = _f === void 0 ? {} : _f, _h = _g.source, _j = (_h === void 0 ? {} : _h).text, text = _j === void 0 ? '' : _j, _k = _g.type, interpretType = _k === void 0 ? interpretTypeConfig : _k;\n              _l = input.text, _m = (_l === void 0 ? {} : _l).source, _o = (_m === void 0 ? {} : _m).language, language = _o === void 0 ? undefined : _o;\n              comprehendClient = new ComprehendClient({\n                credentials: credentials,\n                region: region,\n                customUserAgent: getAmplifyUserAgent()\n              });\n              doAll = interpretType === InterpretTextCategories.ALL;\n              if (doAll || interpretType === InterpretTextCategories.LANGUAGE) {\n                languageDetectionParams = {\n                  Text: text\n                };\n                languagePromise = this.detectLanguage(languageDetectionParams, comprehendClient);\n              }\n              if (!(doAll || interpretType === InterpretTextCategories.ENTITIES)) return [3 /*break*/, 4];\n              _p = language;\n              if (_p) return [3 /*break*/, 3];\n              return [4 /*yield*/, languagePromise];\n            case 2:\n              _p = _t.sent();\n              _t.label = 3;\n            case 3:\n              LanguageCode = _p;\n              if (!LanguageCode) {\n                return [2 /*return*/, rej('language code is required on source for this selection')];\n              }\n              entitiesDetectionParams = {\n                Text: text,\n                LanguageCode: LanguageCode\n              };\n              entitiesPromise = this.detectEntities(entitiesDetectionParams, comprehendClient);\n              _t.label = 4;\n            case 4:\n              if (!(doAll || interpretType === InterpretTextCategories.SENTIMENT)) return [3 /*break*/, 7];\n              _q = language;\n              if (_q) return [3 /*break*/, 6];\n              return [4 /*yield*/, languagePromise];\n            case 5:\n              _q = _t.sent();\n              _t.label = 6;\n            case 6:\n              LanguageCode = _q;\n              if (!LanguageCode) {\n                return [2 /*return*/, rej('language code is required on source for this selection')];\n              }\n              sentimentParams = {\n                Text: text,\n                LanguageCode: LanguageCode\n              };\n              sentimentPromise = this.detectSentiment(sentimentParams, comprehendClient);\n              _t.label = 7;\n            case 7:\n              if (!(doAll || interpretType === InterpretTextCategories.SYNTAX)) return [3 /*break*/, 10];\n              _r = language;\n              if (_r) return [3 /*break*/, 9];\n              return [4 /*yield*/, languagePromise];\n            case 8:\n              _r = _t.sent();\n              _t.label = 9;\n            case 9:\n              LanguageCode = _r;\n              if (!LanguageCode) {\n                return [2 /*return*/, rej('language code is required on source for this selection')];\n              }\n              syntaxParams = {\n                Text: text,\n                LanguageCode: LanguageCode\n              };\n              syntaxPromise = this.detectSyntax(syntaxParams, comprehendClient);\n              _t.label = 10;\n            case 10:\n              if (!(doAll || interpretType === InterpretTextCategories.KEY_PHRASES)) return [3 /*break*/, 13];\n              _s = language;\n              if (_s) return [3 /*break*/, 12];\n              return [4 /*yield*/, languagePromise];\n            case 11:\n              _s = _t.sent();\n              _t.label = 12;\n            case 12:\n              LanguageCode = _s;\n              if (!LanguageCode) {\n                return [2 /*return*/, rej('language code is required on source for this selection')];\n              }\n              keyPhrasesParams = {\n                Text: text,\n                LanguageCode: LanguageCode\n              };\n              keyPhrasesPromise = this.detectKeyPhrases(keyPhrasesParams, comprehendClient);\n              _t.label = 13;\n            case 13:\n              _t.trys.push([13, 15,, 16]);\n              return [4 /*yield*/, Promise.all([languagePromise, entitiesPromise, sentimentPromise, syntaxPromise, keyPhrasesPromise])];\n            case 14:\n              results = _t.sent();\n              res({\n                textInterpretation: {\n                  keyPhrases: results[4] || [],\n                  language: results[0] || '',\n                  sentiment: results[2],\n                  syntax: results[3] || [],\n                  textEntities: results[1] || []\n                }\n              });\n              return [3 /*break*/, 16];\n            case 15:\n              err_1 = _t.sent();\n              rej(err_1);\n              return [3 /*break*/, 16];\n            case 16:\n              return [2 /*return*/];\n          }\n        });\n      });\n    });\n  };\n\n  AmazonAIInterpretPredictionsProvider.prototype.detectKeyPhrases = function (params, comprehend) {\n    return __awaiter(this, void 0, void 0, function () {\n      var detectKeyPhrasesCommand, data, _a, KeyPhrases, err_2;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _b.trys.push([0, 2,, 3]);\n            detectKeyPhrasesCommand = new DetectKeyPhrasesCommand(params);\n            return [4 /*yield*/, comprehend.send(detectKeyPhrasesCommand)];\n          case 1:\n            data = _b.sent();\n            _a = (data || {}).KeyPhrases, KeyPhrases = _a === void 0 ? [] : _a;\n            return [2 /*return*/, KeyPhrases.map(function (_a) {\n              var text = _a.Text;\n              return {\n                text: text\n              };\n            })];\n          case 2:\n            err_2 = _b.sent();\n            if (err_2.code === 'AccessDeniedException') {\n              Promise.reject('Not authorized, did you enable Interpret Text on predictions category Amplify CLI? try: ' + 'amplify predictions add');\n            } else {\n              Promise.reject(err_2.message);\n            }\n            return [3 /*break*/, 3];\n          case 3:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  AmazonAIInterpretPredictionsProvider.prototype.detectSyntax = function (params, comprehend) {\n    return __awaiter(this, void 0, void 0, function () {\n      var detectSyntaxCommand, data, _a, SyntaxTokens, err_3;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _b.trys.push([0, 2,, 3]);\n            detectSyntaxCommand = new DetectSyntaxCommand(params);\n            return [4 /*yield*/, comprehend.send(detectSyntaxCommand)];\n          case 1:\n            data = _b.sent();\n            _a = (data || {}).SyntaxTokens, SyntaxTokens = _a === void 0 ? [] : _a;\n            return [2 /*return*/, this.serializeSyntaxFromComprehend(SyntaxTokens)];\n          case 2:\n            err_3 = _b.sent();\n            if (err_3.code === 'AccessDeniedException') {\n              Promise.reject('Not authorized, did you enable Interpret Text on predictions category Amplify CLI? try: ' + 'amplify predictions add');\n            } else {\n              Promise.reject(err_3.message);\n            }\n            return [3 /*break*/, 3];\n          case 3:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  AmazonAIInterpretPredictionsProvider.prototype.serializeSyntaxFromComprehend = function (tokens) {\n    var response = [];\n    if (tokens && Array.isArray(tokens)) {\n      response = tokens.map(function (_a) {\n        var _b = _a.Text,\n          text = _b === void 0 ? '' : _b,\n          _c = _a.PartOfSpeech,\n          _d = (_c === void 0 ? {} : _c).Tag,\n          syntax = _d === void 0 ? '' : _d;\n        return {\n          text: text,\n          syntax: syntax\n        };\n      });\n    }\n    return response;\n  };\n  AmazonAIInterpretPredictionsProvider.prototype.detectSentiment = function (params, comprehend) {\n    return __awaiter(this, void 0, void 0, function () {\n      var detectSentimentCommand, data, _a, _b, predominant, _c, _d, _e, positive, _f, negative, _g, neutral, _h, mixed, err_4;\n      return __generator(this, function (_j) {\n        switch (_j.label) {\n          case 0:\n            _j.trys.push([0, 2,, 3]);\n            detectSentimentCommand = new DetectSentimentCommand(params);\n            return [4 /*yield*/, comprehend.send(detectSentimentCommand)];\n          case 1:\n            data = _j.sent();\n            _a = data, _b = _a.Sentiment, predominant = _b === void 0 ? '' : _b, _c = _a.SentimentScore, _d = _c === void 0 ? {} : _c, _e = _d.Positive, positive = _e === void 0 ? 0 : _e, _f = _d.Negative, negative = _f === void 0 ? 0 : _f, _g = _d.Neutral, neutral = _g === void 0 ? 0 : _g, _h = _d.Mixed, mixed = _h === void 0 ? 0 : _h;\n            return [2 /*return*/, {\n              predominant: predominant,\n              positive: positive,\n              negative: negative,\n              neutral: neutral,\n              mixed: mixed\n            }];\n          case 2:\n            err_4 = _j.sent();\n            if (err_4.code === 'AccessDeniedException') {\n              Promise.reject('Not authorized, did you enable Interpret Text on predictions category Amplify CLI? try: ' + 'amplify predictions add');\n            } else {\n              Promise.reject(err_4.message);\n            }\n            return [3 /*break*/, 3];\n          case 3:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  AmazonAIInterpretPredictionsProvider.prototype.detectEntities = function (params, comprehend) {\n    return __awaiter(this, void 0, void 0, function () {\n      var detectEntitiesCommand, data, _a, Entities, err_5;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _b.trys.push([0, 2,, 3]);\n            detectEntitiesCommand = new DetectEntitiesCommand(params);\n            return [4 /*yield*/, comprehend.send(detectEntitiesCommand)];\n          case 1:\n            data = _b.sent();\n            _a = (data || {}).Entities, Entities = _a === void 0 ? [] : _a;\n            return [2 /*return*/, this.serializeEntitiesFromComprehend(Entities)];\n          case 2:\n            err_5 = _b.sent();\n            if (err_5.code === 'AccessDeniedException') {\n              Promise.reject('Not authorized, did you enable Interpret Text on predictions category Amplify CLI? try: ' + 'amplify predictions add');\n            } else {\n              Promise.reject(err_5.message);\n            }\n            return [3 /*break*/, 3];\n          case 3:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  AmazonAIInterpretPredictionsProvider.prototype.serializeEntitiesFromComprehend = function (data) {\n    var response = [];\n    if (data && Array.isArray(data)) {\n      response = data.map(function (_a) {\n        var type = _a.Type,\n          text = _a.Text;\n        return {\n          type: type,\n          text: text\n        };\n      });\n    }\n    return response;\n  };\n  AmazonAIInterpretPredictionsProvider.prototype.detectLanguage = function (params, comprehend) {\n    return __awaiter(this, void 0, void 0, function () {\n      var detectDominantLanguageCommand, data, _a, _b, LanguageCode, err_6;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            _c.trys.push([0, 2,, 3]);\n            detectDominantLanguageCommand = new DetectDominantLanguageCommand(params);\n            return [4 /*yield*/, comprehend.send(detectDominantLanguageCommand)];\n          case 1:\n            data = _c.sent();\n            _a = (data || {}).Languages, _b = __read(_a === void 0 ? [''] : _a, 1), LanguageCode = _b[0].LanguageCode;\n            if (!LanguageCode) {\n              Promise.reject('Language not detected');\n            }\n            return [2 /*return*/, data.Languages[0].LanguageCode];\n          case 2:\n            err_6 = _c.sent();\n            if (err_6.code === 'AccessDeniedException') {\n              Promise.reject('Not authorized, did you enable Interpret Text on predictions category Amplify CLI? try: ' + 'amplify predictions add');\n            } else {\n              Promise.reject(err_6.message);\n            }\n            return [3 /*break*/, 3];\n          case 3:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  return AmazonAIInterpretPredictionsProvider;\n}(AbstractInterpretPredictionsProvider);\nexport { AmazonAIInterpretPredictionsProvider };\n/**\n * @deprecated use named import\n */\nexport default AmazonAIInterpretPredictionsProvider;","map":{"version":3,"sources":["../../src/Providers/AmazonAIInterpretPredictionsProvider.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nimport { Credentials, getAmplifyUserAgent } from '@aws-amplify/core';\nimport { AbstractInterpretPredictionsProvider } from '../types/Providers';\nimport { InterpretTextCategories, } from '../types';\nimport { ComprehendClient, DetectSyntaxCommand, DetectEntitiesCommand, DetectDominantLanguageCommand, DetectKeyPhrasesCommand, DetectSentimentCommand, } from '@aws-sdk/client-comprehend';\nvar AmazonAIInterpretPredictionsProvider = /** @class */ (function (_super) {\n    __extends(AmazonAIInterpretPredictionsProvider, _super);\n    function AmazonAIInterpretPredictionsProvider() {\n        return _super.call(this) || this;\n    }\n    AmazonAIInterpretPredictionsProvider.prototype.getProviderName = function () {\n        return 'AmazonAIInterpretPredictionsProvider';\n    };\n    AmazonAIInterpretPredictionsProvider.prototype.interpretText = function (input) {\n        var _this = this;\n        return new Promise(function (res, rej) { return __awaiter(_this, void 0, void 0, function () {\n            var credentials, _a, _b, _c, region, _d, _e, interpretTypeConfig, _f, _g, _h, _j, text, _k, interpretType, _l, _m, _o, language, comprehendClient, doAll, languagePromise, languageDetectionParams, entitiesPromise, LanguageCode, _p, entitiesDetectionParams, sentimentPromise, LanguageCode, _q, sentimentParams, syntaxPromise, LanguageCode, _r, syntaxParams, keyPhrasesPromise, LanguageCode, _s, keyPhrasesParams, results, err_1;\n            return __generator(this, function (_t) {\n                switch (_t.label) {\n                    case 0: return [4 /*yield*/, Credentials.get()];\n                    case 1:\n                        credentials = _t.sent();\n                        if (!credentials)\n                            return [2 /*return*/, rej('No credentials')];\n                        _a = this._config.interpretText, _b = _a === void 0 ? {} : _a, _c = _b.region, region = _c === void 0 ? '' : _c, _d = _b.defaults, _e = (_d === void 0 ? {} : _d).type, interpretTypeConfig = _e === void 0 ? '' : _e;\n                        _f = (input).text, _g = _f === void 0 ? {} : _f, _h = _g.source, _j = (_h === void 0 ? {} : _h).text, text = _j === void 0 ? '' : _j, _k = _g.type, interpretType = _k === void 0 ? interpretTypeConfig : _k;\n                        _l = (input).text, _m = (_l === void 0 ? {} : _l).source, _o = (_m === void 0 ? {} : _m).language, language = _o === void 0 ? undefined : _o;\n                        comprehendClient = new ComprehendClient({\n                            credentials: credentials,\n                            region: region,\n                            customUserAgent: getAmplifyUserAgent(),\n                        });\n                        doAll = interpretType === InterpretTextCategories.ALL;\n                        if (doAll || interpretType === InterpretTextCategories.LANGUAGE) {\n                            languageDetectionParams = {\n                                Text: text,\n                            };\n                            languagePromise = this.detectLanguage(languageDetectionParams, comprehendClient);\n                        }\n                        if (!(doAll || interpretType === InterpretTextCategories.ENTITIES)) return [3 /*break*/, 4];\n                        _p = language;\n                        if (_p) return [3 /*break*/, 3];\n                        return [4 /*yield*/, languagePromise];\n                    case 2:\n                        _p = (_t.sent());\n                        _t.label = 3;\n                    case 3:\n                        LanguageCode = _p;\n                        if (!LanguageCode) {\n                            return [2 /*return*/, rej('language code is required on source for this selection')];\n                        }\n                        entitiesDetectionParams = {\n                            Text: text,\n                            LanguageCode: LanguageCode,\n                        };\n                        entitiesPromise = this.detectEntities(entitiesDetectionParams, comprehendClient);\n                        _t.label = 4;\n                    case 4:\n                        if (!(doAll || interpretType === InterpretTextCategories.SENTIMENT)) return [3 /*break*/, 7];\n                        _q = language;\n                        if (_q) return [3 /*break*/, 6];\n                        return [4 /*yield*/, languagePromise];\n                    case 5:\n                        _q = (_t.sent());\n                        _t.label = 6;\n                    case 6:\n                        LanguageCode = _q;\n                        if (!LanguageCode) {\n                            return [2 /*return*/, rej('language code is required on source for this selection')];\n                        }\n                        sentimentParams = {\n                            Text: text,\n                            LanguageCode: LanguageCode,\n                        };\n                        sentimentPromise = this.detectSentiment(sentimentParams, comprehendClient);\n                        _t.label = 7;\n                    case 7:\n                        if (!(doAll || interpretType === InterpretTextCategories.SYNTAX)) return [3 /*break*/, 10];\n                        _r = language;\n                        if (_r) return [3 /*break*/, 9];\n                        return [4 /*yield*/, languagePromise];\n                    case 8:\n                        _r = (_t.sent());\n                        _t.label = 9;\n                    case 9:\n                        LanguageCode = _r;\n                        if (!LanguageCode) {\n                            return [2 /*return*/, rej('language code is required on source for this selection')];\n                        }\n                        syntaxParams = {\n                            Text: text,\n                            LanguageCode: LanguageCode,\n                        };\n                        syntaxPromise = this.detectSyntax(syntaxParams, comprehendClient);\n                        _t.label = 10;\n                    case 10:\n                        if (!(doAll || interpretType === InterpretTextCategories.KEY_PHRASES)) return [3 /*break*/, 13];\n                        _s = language;\n                        if (_s) return [3 /*break*/, 12];\n                        return [4 /*yield*/, languagePromise];\n                    case 11:\n                        _s = (_t.sent());\n                        _t.label = 12;\n                    case 12:\n                        LanguageCode = _s;\n                        if (!LanguageCode) {\n                            return [2 /*return*/, rej('language code is required on source for this selection')];\n                        }\n                        keyPhrasesParams = {\n                            Text: text,\n                            LanguageCode: LanguageCode,\n                        };\n                        keyPhrasesPromise = this.detectKeyPhrases(keyPhrasesParams, comprehendClient);\n                        _t.label = 13;\n                    case 13:\n                        _t.trys.push([13, 15, , 16]);\n                        return [4 /*yield*/, Promise.all([\n                                languagePromise,\n                                entitiesPromise,\n                                sentimentPromise,\n                                syntaxPromise,\n                                keyPhrasesPromise,\n                            ])];\n                    case 14:\n                        results = _t.sent();\n                        res({\n                            textInterpretation: {\n                                keyPhrases: results[4] || [],\n                                language: results[0] || '',\n                                sentiment: results[2],\n                                syntax: results[3] || [],\n                                textEntities: results[1] || [],\n                            },\n                        });\n                        return [3 /*break*/, 16];\n                    case 15:\n                        err_1 = _t.sent();\n                        rej(err_1);\n                        return [3 /*break*/, 16];\n                    case 16: return [2 /*return*/];\n                }\n            });\n        }); });\n    };\n    AmazonAIInterpretPredictionsProvider.prototype.detectKeyPhrases = function (params, comprehend) {\n        return __awaiter(this, void 0, void 0, function () {\n            var detectKeyPhrasesCommand, data, _a, KeyPhrases, err_2;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _b.trys.push([0, 2, , 3]);\n                        detectKeyPhrasesCommand = new DetectKeyPhrasesCommand(params);\n                        return [4 /*yield*/, comprehend.send(detectKeyPhrasesCommand)];\n                    case 1:\n                        data = _b.sent();\n                        _a = (data || {}).KeyPhrases, KeyPhrases = _a === void 0 ? [] : _a;\n                        return [2 /*return*/, KeyPhrases.map(function (_a) {\n                                var text = _a.Text;\n                                return { text: text };\n                            })];\n                    case 2:\n                        err_2 = _b.sent();\n                        if (err_2.code === 'AccessDeniedException') {\n                            Promise.reject('Not authorized, did you enable Interpret Text on predictions category Amplify CLI? try: ' +\n                                'amplify predictions add');\n                        }\n                        else {\n                            Promise.reject(err_2.message);\n                        }\n                        return [3 /*break*/, 3];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AmazonAIInterpretPredictionsProvider.prototype.detectSyntax = function (params, comprehend) {\n        return __awaiter(this, void 0, void 0, function () {\n            var detectSyntaxCommand, data, _a, SyntaxTokens, err_3;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _b.trys.push([0, 2, , 3]);\n                        detectSyntaxCommand = new DetectSyntaxCommand(params);\n                        return [4 /*yield*/, comprehend.send(detectSyntaxCommand)];\n                    case 1:\n                        data = _b.sent();\n                        _a = (data || {}).SyntaxTokens, SyntaxTokens = _a === void 0 ? [] : _a;\n                        return [2 /*return*/, this.serializeSyntaxFromComprehend(SyntaxTokens)];\n                    case 2:\n                        err_3 = _b.sent();\n                        if (err_3.code === 'AccessDeniedException') {\n                            Promise.reject('Not authorized, did you enable Interpret Text on predictions category Amplify CLI? try: ' +\n                                'amplify predictions add');\n                        }\n                        else {\n                            Promise.reject(err_3.message);\n                        }\n                        return [3 /*break*/, 3];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AmazonAIInterpretPredictionsProvider.prototype.serializeSyntaxFromComprehend = function (tokens) {\n        var response = [];\n        if (tokens && Array.isArray(tokens)) {\n            response = tokens.map(function (_a) {\n                var _b = _a.Text, text = _b === void 0 ? '' : _b, _c = _a.PartOfSpeech, _d = (_c === void 0 ? {} : _c).Tag, syntax = _d === void 0 ? '' : _d;\n                return { text: text, syntax: syntax };\n            });\n        }\n        return response;\n    };\n    AmazonAIInterpretPredictionsProvider.prototype.detectSentiment = function (params, comprehend) {\n        return __awaiter(this, void 0, void 0, function () {\n            var detectSentimentCommand, data, _a, _b, predominant, _c, _d, _e, positive, _f, negative, _g, neutral, _h, mixed, err_4;\n            return __generator(this, function (_j) {\n                switch (_j.label) {\n                    case 0:\n                        _j.trys.push([0, 2, , 3]);\n                        detectSentimentCommand = new DetectSentimentCommand(params);\n                        return [4 /*yield*/, comprehend.send(detectSentimentCommand)];\n                    case 1:\n                        data = _j.sent();\n                        _a = (data), _b = _a.Sentiment, predominant = _b === void 0 ? '' : _b, _c = _a.SentimentScore, _d = _c === void 0 ? {} : _c, _e = _d.Positive, positive = _e === void 0 ? 0 : _e, _f = _d.Negative, negative = _f === void 0 ? 0 : _f, _g = _d.Neutral, neutral = _g === void 0 ? 0 : _g, _h = _d.Mixed, mixed = _h === void 0 ? 0 : _h;\n                        return [2 /*return*/, { predominant: predominant, positive: positive, negative: negative, neutral: neutral, mixed: mixed }];\n                    case 2:\n                        err_4 = _j.sent();\n                        if (err_4.code === 'AccessDeniedException') {\n                            Promise.reject('Not authorized, did you enable Interpret Text on predictions category Amplify CLI? try: ' +\n                                'amplify predictions add');\n                        }\n                        else {\n                            Promise.reject(err_4.message);\n                        }\n                        return [3 /*break*/, 3];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AmazonAIInterpretPredictionsProvider.prototype.detectEntities = function (params, comprehend) {\n        return __awaiter(this, void 0, void 0, function () {\n            var detectEntitiesCommand, data, _a, Entities, err_5;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _b.trys.push([0, 2, , 3]);\n                        detectEntitiesCommand = new DetectEntitiesCommand(params);\n                        return [4 /*yield*/, comprehend.send(detectEntitiesCommand)];\n                    case 1:\n                        data = _b.sent();\n                        _a = (data || {}).Entities, Entities = _a === void 0 ? [] : _a;\n                        return [2 /*return*/, this.serializeEntitiesFromComprehend(Entities)];\n                    case 2:\n                        err_5 = _b.sent();\n                        if (err_5.code === 'AccessDeniedException') {\n                            Promise.reject('Not authorized, did you enable Interpret Text on predictions category Amplify CLI? try: ' +\n                                'amplify predictions add');\n                        }\n                        else {\n                            Promise.reject(err_5.message);\n                        }\n                        return [3 /*break*/, 3];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AmazonAIInterpretPredictionsProvider.prototype.serializeEntitiesFromComprehend = function (data) {\n        var response = [];\n        if (data && Array.isArray(data)) {\n            response = data.map(function (_a) {\n                var type = _a.Type, text = _a.Text;\n                return { type: type, text: text };\n            });\n        }\n        return response;\n    };\n    AmazonAIInterpretPredictionsProvider.prototype.detectLanguage = function (params, comprehend) {\n        return __awaiter(this, void 0, void 0, function () {\n            var detectDominantLanguageCommand, data, _a, _b, LanguageCode, err_6;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        _c.trys.push([0, 2, , 3]);\n                        detectDominantLanguageCommand = new DetectDominantLanguageCommand(params);\n                        return [4 /*yield*/, comprehend.send(detectDominantLanguageCommand)];\n                    case 1:\n                        data = _c.sent();\n                        _a = (data || {}).Languages, _b = __read(_a === void 0 ? [''] : _a, 1), LanguageCode = _b[0].LanguageCode;\n                        if (!LanguageCode) {\n                            Promise.reject('Language not detected');\n                        }\n                        return [2 /*return*/, data.Languages[0].LanguageCode];\n                    case 2:\n                        err_6 = _c.sent();\n                        if (err_6.code === 'AccessDeniedException') {\n                            Promise.reject('Not authorized, did you enable Interpret Text on predictions category Amplify CLI? try: ' +\n                                'amplify predictions add');\n                        }\n                        else {\n                            Promise.reject(err_6.message);\n                        }\n                        return [3 /*break*/, 3];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return AmazonAIInterpretPredictionsProvider;\n}(AbstractInterpretPredictionsProvider));\nexport { AmazonAIInterpretPredictionsProvider };\n/**\n * @deprecated use named import\n */\nexport default AmazonAIInterpretPredictionsProvider;\n//# sourceMappingURL=AmazonAIInterpretPredictionsProvider.js.map"]},"metadata":{},"sourceType":"module"}