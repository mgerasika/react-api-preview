{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _s, _e;\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n  return _arr;\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport { jsx } from '@emotion/react';\nimport { arrayUtils } from '../../utils/array-utils.util.js';\nimport { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() {\n  return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";\n}\nvar ColumnChooserList = function ColumnChooserList(_ref) {\n  var appItems = _ref.items,\n    renderItem = _ref.renderItem,\n    onChange = _ref.onChange;\n  var _useState = useState(appItems),\n    _useState2 = _slicedToArray(_useState, 2),\n    items = _useState2[0],\n    setItems = _useState2[1];\n  useEffect(function () {\n    setItems(appItems);\n  }, [appItems]);\n  var handleDragEnd = function handleDragEnd(result) {\n    if (!result.destination) {\n      return;\n    }\n    var newItems = arrayUtils.reorder(items, result.source.index, result.destination.index);\n    onChange(newItems);\n    setItems(newItems);\n  };\n  return jsx(DragDropContext, {\n    onDragEnd: handleDragEnd\n  }, jsx(Droppable, {\n    droppableId: \"droppable\"\n  }, function (provided) {\n    return jsx(\"div\", _extends({\n      css: styles.root\n    }, provided.droppableProps, {\n      ref: provided.innerRef\n      // style={getListStyle(snapshot.isDraggingOver)}\n    }), items.map(function (item, index) {\n      return jsx(Draggable, {\n        key: item.id,\n        draggableId: item.id.toString(),\n        index: index\n      }, function (provided, snapshot) {\n        return jsx(\"div\", _extends({\n          ref: provided.innerRef\n        }, provided.draggableProps, provided.dragHandleProps, {\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          style: getItemStyle(snapshot.isDragging, provided.draggableProps.style)\n        }), renderItem(item));\n      });\n    }), provided.placeholder);\n  }));\n};\nvar getItemStyle = function getItemStyle(isDragging, draggableStyle) {\n  return _objectSpread({\n    userSelect: 'none',\n    background: isDragging ? '#efefef' : 'transparent'\n  }, draggableStyle);\n};\n\n// TODO remove when customization will ready - (example)\n// const getListStyle = (isDraggingOver: boolean) => ({\n//     background: isDraggingOver ? 'lightblue' : 'lightgrey',\n//     padding: grid,\n//     width: 250,\n// });\n\nvar styles = {\n  root: process.env.NODE_ENV === \"production\" ? {\n    name: \"14ecawb\",\n    styles: \"display:flex;flex-direction:column;height:196x;max-height:196x;overflow-y:auto\"\n  } : {\n    name: \"xhwbs1-root\",\n    styles: \"display:flex;flex-direction:column;height:196x;max-height:196x;overflow-y:auto;label:root;\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbHVtbi1jaG9vc2VyLWxpc3QuY29tcG9uZW50LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUErRWEiLCJmaWxlIjoiY29sdW1uLWNob29zZXItbGlzdC5jb21wb25lbnQudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYXJyYXlVdGlscyB9IGZyb20gJ0Bjb21tb24vdXRpbHMvYXJyYXktdXRpbHMudXRpbCc7XG5pbXBvcnQgUmVhY3QsIHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IERyYWdEcm9wQ29udGV4dCwgRHJhZ2dhYmxlLCBEcmFnZ2luZ1N0eWxlLCBEcm9wcGFibGUsIERyb3BSZXN1bHQsIE5vdERyYWdnaW5nU3R5bGUgfSBmcm9tICdyZWFjdC1iZWF1dGlmdWwtZG5kJztcbmltcG9ydCB7IGNzcyB9IGZyb20gJ3R3aW4ubWFjcm8nO1xuaW1wb3J0IHsgSUNvbHVtbkNob29zZXIgfSBmcm9tICcuL2NvbHVtbi1jaG9vc2VyLmNvbXBvbmVudCc7XG5cbmludGVyZmFjZSBJUHJvcHMge1xuICAgIGl0ZW1zOiBJQ29sdW1uQ2hvb3NlcltdO1xuICAgIHJlbmRlckl0ZW06IChpdGVtOiBJQ29sdW1uQ2hvb3NlcikgPT4gSlNYLkVsZW1lbnQ7XG4gICAgb25DaGFuZ2U6IChuZXdDb2x1bW5zOiBJQ29sdW1uQ2hvb3NlcltdKSA9PiB2b2lkO1xufVxuXG5leHBvcnQgY29uc3QgQ29sdW1uQ2hvb3Nlckxpc3QgPSAoeyBpdGVtczogYXBwSXRlbXMsIHJlbmRlckl0ZW0sIG9uQ2hhbmdlIH06IElQcm9wcyk6IEpTWC5FbGVtZW50ID0+IHtcbiAgICBjb25zdCBbaXRlbXMsIHNldEl0ZW1zXSA9IHVzZVN0YXRlKGFwcEl0ZW1zKTtcblxuICAgIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIHNldEl0ZW1zKGFwcEl0ZW1zKTtcbiAgICB9LCBbYXBwSXRlbXNdKTtcblxuICAgIGNvbnN0IGhhbmRsZURyYWdFbmQgPSAocmVzdWx0OiBEcm9wUmVzdWx0KTogdm9pZCA9PiB7XG4gICAgICAgIGlmICghcmVzdWx0LmRlc3RpbmF0aW9uKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgbmV3SXRlbXMgPSBhcnJheVV0aWxzLnJlb3JkZXIoaXRlbXMsIHJlc3VsdC5zb3VyY2UuaW5kZXgsIHJlc3VsdC5kZXN0aW5hdGlvbi5pbmRleCk7XG4gICAgICAgIG9uQ2hhbmdlKG5ld0l0ZW1zKTtcbiAgICAgICAgc2V0SXRlbXMobmV3SXRlbXMpO1xuICAgIH07XG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8RHJhZ0Ryb3BDb250ZXh0IG9uRHJhZ0VuZD17aGFuZGxlRHJhZ0VuZH0+XG4gICAgICAgICAgICA8RHJvcHBhYmxlIGRyb3BwYWJsZUlkPVwiZHJvcHBhYmxlXCI+XG4gICAgICAgICAgICAgICAgeyhwcm92aWRlZCk6IEpTWC5FbGVtZW50ID0+IChcbiAgICAgICAgICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICAgICAgICAgICAgY3NzPXtzdHlsZXMucm9vdH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHsuLi5wcm92aWRlZC5kcm9wcGFibGVQcm9wc31cbiAgICAgICAgICAgICAgICAgICAgICAgIHJlZj17cHJvdmlkZWQuaW5uZXJSZWZ9XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBzdHlsZT17Z2V0TGlzdFN0eWxlKHNuYXBzaG90LmlzRHJhZ2dpbmdPdmVyKX1cbiAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAge2l0ZW1zLm1hcCgoaXRlbSwgaW5kZXgpID0+IChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8RHJhZ2dhYmxlIGtleT17aXRlbS5pZH0gZHJhZ2dhYmxlSWQ9e2l0ZW0uaWQudG9TdHJpbmcoKX0gaW5kZXg9e2luZGV4fT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyhwcm92aWRlZCwgc25hcHNob3QpOiBKU1guRWxlbWVudCA9PiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVmPXtwcm92aWRlZC5pbm5lclJlZn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7Li4ucHJvdmlkZWQuZHJhZ2dhYmxlUHJvcHN9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgey4uLnByb3ZpZGVkLmRyYWdIYW5kbGVQcm9wc31cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPXtnZXRJdGVtU3R5bGUoc25hcHNob3QuaXNEcmFnZ2luZywgcHJvdmlkZWQuZHJhZ2dhYmxlUHJvcHMuc3R5bGUpIGFzIGFueX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7cmVuZGVySXRlbShpdGVtKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvRHJhZ2dhYmxlPlxuICAgICAgICAgICAgICAgICAgICAgICAgKSl9XG4gICAgICAgICAgICAgICAgICAgICAgICB7cHJvdmlkZWQucGxhY2Vob2xkZXJ9XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICA8L0Ryb3BwYWJsZT5cbiAgICAgICAgPC9EcmFnRHJvcENvbnRleHQ+XG4gICAgKTtcbn07XG5jb25zdCBnZXRJdGVtU3R5bGUgPSAoXG4gICAgaXNEcmFnZ2luZzogYm9vbGVhbixcbiAgICBkcmFnZ2FibGVTdHlsZTogRHJhZ2dpbmdTdHlsZSB8IE5vdERyYWdnaW5nU3R5bGUgfCB1bmRlZmluZWQsXG4pOiBSZWFjdC5DU1NQcm9wZXJ0aWVzID0+ICh7XG4gICAgdXNlclNlbGVjdDogJ25vbmUnLFxuXG4gICAgYmFja2dyb3VuZDogaXNEcmFnZ2luZyA/ICcjZWZlZmVmJyA6ICd0cmFuc3BhcmVudCcsXG5cbiAgICAuLi5kcmFnZ2FibGVTdHlsZSxcbn0pO1xuXG4vLyBUT0RPIHJlbW92ZSB3aGVuIGN1c3RvbWl6YXRpb24gd2lsbCByZWFkeSAtIChleGFtcGxlKVxuLy8gY29uc3QgZ2V0TGlzdFN0eWxlID0gKGlzRHJhZ2dpbmdPdmVyOiBib29sZWFuKSA9PiAoe1xuLy8gICAgIGJhY2tncm91bmQ6IGlzRHJhZ2dpbmdPdmVyID8gJ2xpZ2h0Ymx1ZScgOiAnbGlnaHRncmV5Jyxcbi8vICAgICBwYWRkaW5nOiBncmlkLFxuLy8gICAgIHdpZHRoOiAyNTAsXG4vLyB9KTtcblxuY29uc3Qgc3R5bGVzID0ge1xuICAgIHJvb3Q6IGNzc2BcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgaGVpZ2h0OiAxOTZ4O1xuICAgICAgICBtYXgtaGVpZ2h0OiAxOTZ4O1xuICAgICAgICBvdmVyZmxvdy15OiBhdXRvO1xuICAgIGAsXG59O1xuIl19 */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  }\n};\nexport { ColumnChooserList };","map":{"version":3,"sources":["../../../../src/general-ui/column-chooser/column-chooser-list.component.tsx"],"names":["ColumnChooserList","items","appItems","renderItem","onChange","setItems","useState","useEffect","handleDragEnd","result","destination","newItems","arrayUtils","reorder","source","index","___EmotionJSX","DragDropContext","onDragEnd","Droppable","droppableId","provided","css","styles","root","droppableProps","ref","innerRef","map","item","Draggable","key","id","draggableId","toString","snapshot","draggableProps","dragHandleProps","style","getItemStyle","isDragging","placeholder","draggableStyle","userSelect","background"],"mappings":"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","sourcesContent":["import { arrayUtils } from '@common/utils/array-utils.util';\nimport React, { useEffect, useState } from 'react';\nimport { DragDropContext, Draggable, DraggingStyle, Droppable, DropResult, NotDraggingStyle } from 'react-beautiful-dnd';\nimport { css } from 'twin.macro';\nimport { IColumnChooser } from './column-chooser.component';\n\ninterface IProps {\n    items: IColumnChooser[];\n    renderItem: (item: IColumnChooser) => JSX.Element;\n    onChange: (newColumns: IColumnChooser[]) => void;\n}\n\nexport const ColumnChooserList = ({ items: appItems, renderItem, onChange }: IProps): JSX.Element => {\n    const [items, setItems] = useState(appItems);\n\n    useEffect(() => {\n        setItems(appItems);\n    }, [appItems]);\n\n    const handleDragEnd = (result: DropResult): void => {\n        if (!result.destination) {\n            return;\n        }\n        const newItems = arrayUtils.reorder(items, result.source.index, result.destination.index);\n        onChange(newItems);\n        setItems(newItems);\n    };\n\n    return (\n        <DragDropContext onDragEnd={handleDragEnd}>\n            <Droppable droppableId=\"droppable\">\n                {(provided): JSX.Element => (\n                    <div\n                        css={styles.root}\n                        {...provided.droppableProps}\n                        ref={provided.innerRef}\n                        // style={getListStyle(snapshot.isDraggingOver)}\n                    >\n                        {items.map((item, index) => (\n                            <Draggable key={item.id} draggableId={item.id.toString()} index={index}>\n                                {(provided, snapshot): JSX.Element => (\n                                    <div\n                                        ref={provided.innerRef}\n                                        {...provided.draggableProps}\n                                        {...provided.dragHandleProps}\n                                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                                        style={getItemStyle(snapshot.isDragging, provided.draggableProps.style) as any}\n                                    >\n                                        {renderItem(item)}\n                                    </div>\n                                )}\n                            </Draggable>\n                        ))}\n                        {provided.placeholder}\n                    </div>\n                )}\n            </Droppable>\n        </DragDropContext>\n    );\n};\nconst getItemStyle = (\n    isDragging: boolean,\n    draggableStyle: DraggingStyle | NotDraggingStyle | undefined,\n): React.CSSProperties => ({\n    userSelect: 'none',\n\n    background: isDragging ? '#efefef' : 'transparent',\n\n    ...draggableStyle,\n});\n\n// TODO remove when customization will ready - (example)\n// const getListStyle = (isDraggingOver: boolean) => ({\n//     background: isDraggingOver ? 'lightblue' : 'lightgrey',\n//     padding: grid,\n//     width: 250,\n// });\n\nconst styles = {\n    root: css`\n        display: flex;\n        flex-direction: column;\n        height: 196x;\n        max-height: 196x;\n        overflow-y: auto;\n    `,\n};\n"]},"metadata":{},"sourceType":"module"}