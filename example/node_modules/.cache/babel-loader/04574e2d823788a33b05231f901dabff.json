{"ast":null,"code":"const combineRoutes = configs => {\n  return configs.reduce((acc, it) => {\n    return {\n      redirects: [...acc.redirects, ...it.redirects],\n      routes: [...acc.routes, ...it.routes]\n    };\n  }, {\n    redirects: [],\n    routes: []\n  });\n};\nexport { combineRoutes };","map":{"version":3,"sources":["../../../src/utils/combine-routes.util.ts"],"names":["combineRoutes","configs","reduce","acc","it","redirects","routes"],"mappings":"AAEaA,MAAAA,aAAa,GAAIC,OAAuB,IAAmB;EACpE,OAAOA,OAAO,CAACC,MAAM,CACjB,CAACC,GAAG,EAAEC,EAAE,KAAK;IACT,OAAO;MACHC,SAAS,EAAE,CAAC,GAAGF,GAAG,CAACE,SAAS,EAAE,GAAGD,EAAE,CAACC,SAAS,CAAC;MAC9CC,MAAM,EAAE,CAAC,GAAGH,GAAG,CAACG,MAAM,EAAE,GAAGF,EAAE,CAACE,MAAM;KACvC;EACL,CAAC,EACD;IAAED,SAAS,EAAE,EAAE;IAAEC,MAAM,EAAE;EAAG,CAAC,CAChC;AACL,CAAA","sourcesContent":["import { IRouteConfig } from '@common/interfaces/route.interface';\n\nexport const combineRoutes = (configs: IRouteConfig[]): IRouteConfig => {\n    return configs.reduce<IRouteConfig>(\n        (acc, it) => {\n            return {\n                redirects: [...acc.redirects, ...it.redirects],\n                routes: [...acc.routes, ...it.routes],\n            };\n        },\n        { redirects: [], routes: [] },\n    );\n};\n"]},"metadata":{},"sourceType":"module"}