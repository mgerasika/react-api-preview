{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar console_service = require('../services/console.service.js');\nvar React = require('react');\nconst deepCompareEquals = (a, b) => {\n  return JSON.stringify(a) === JSON.stringify(b);\n};\nfunction useDeepCompareMemorized(_ref) {\n  let {\n    title,\n    enabled,\n    value\n  } = _ref;\n  const ref = React.useRef(value);\n  if (enabled && !deepCompareEquals(value, ref.current)) {\n    console_service.consoleService.log(`deepCompareEquals for '${title}' are different`, value, ref.current);\n    ref.current = value;\n  }\n  return ref.current;\n}\nexports.useDeepCompareMemorized = useDeepCompareMemorized;","map":{"version":3,"sources":["../../../src/hooks/use-deep-compare-memorized.hook.ts"],"names":["deepCompareEquals","a","b","JSON","stringify","useDeepCompareMemorized","title","enabled","value","ref","useRef","current","consoleService","log"],"mappings":";;;;;;;AAGA,MAAMA,iBAAiB,GAAG,CAACC,CAAU,EAAEC,CAAU,KAAc;EAC3D,OAAOC,IAAI,CAACC,SAAS,CAACH,CAAC,CAAC,KAAKE,IAAI,CAACC,SAAS,CAACF,CAAC,CAAC;AAClD,CAAC;AAEM,SAASG,uBAAuB,OAAiF;EAAA,IAA7E;IAAEC,KAAK;IAAEC,OAAO;IAAEC;EAAqD,CAAC;EAC/G,MAAMC,GAAG,GAAGC,KAAAA,CAAAA,MAAM,CAAIF,KAAK,CAAC;EAE5B,IAAID,OAAO,IAAI,CAACP,iBAAiB,CAACQ,KAAK,EAAEC,GAAG,CAACE,OAAO,CAAC,EAAE;IACnDC,eAAAA,CAAAA,cAAc,CAACC,GAAG,CAAE,0BAAyBP,KAAM,iBAAgB,EAAEE,KAAK,EAAEC,GAAG,CAACE,OAAO,CAAC;IAExFF,GAAG,CAACE,OAAO,GAAGH,KAAK;EACvB;EAEA,OAAOC,GAAG,CAACE,OAAO;AACtB","sourcesContent":["import { consoleService } from '@common/services/console.service';\nimport { useRef } from 'react';\n\nconst deepCompareEquals = (a: unknown, b: unknown): boolean => {\n    return JSON.stringify(a) === JSON.stringify(b);\n};\n\nexport function useDeepCompareMemorized<T>({ title, enabled, value }: { title: string; value: T; enabled: boolean }): T {\n    const ref = useRef<T>(value);\n\n    if (enabled && !deepCompareEquals(value, ref.current)) {\n        consoleService.log(`deepCompareEquals for '${title}' are different`, value, ref.current);\n\n        ref.current = value;\n    }\n\n    return ref.current;\n}\n"]},"metadata":{},"sourceType":"script"}