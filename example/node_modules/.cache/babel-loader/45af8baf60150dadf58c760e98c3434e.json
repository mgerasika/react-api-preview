{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isImmutable;\nvar _isType = require(\"./isType\");\nvar _generated = require(\"./generated\");\nfunction isImmutable(node) {\n  if ((0, _isType.default)(node.type, \"Immutable\")) return true;\n  if ((0, _generated.isIdentifier)(node)) {\n    if (node.name === \"undefined\") {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  return false;\n}","map":{"version":3,"sources":["../../src/validators/isImmutable.ts"],"names":["isImmutable","node","type","name"],"mappings":";;;;;;AAAA,IAAA,OAAA,GAAA,OAAA,CAAA,UAAA,CAAA;AACA,IAAA,UAAA,GAAA,OAAA,CAAA,aAAA,CAAA;AAMe,SAASA,WAAT,CAAqBC,IAArB,EAA4C;EACzD,IAAI,CAAA,CAAA,EAAA,OAAA,CAAA,OAAA,EAAOA,IAAI,CAACC,IAAZ,EAAkB,WAAlB,CAAJ,EAAoC,OAAO,IAAP;EAEpC,IAAI,CAAA,CAAA,EAAA,UAAA,CAAA,YAAA,EAAaD,IAAb,CAAJ,EAAwB;IACtB,IAAIA,IAAI,CAACE,IAALF,KAAc,WAAlB,EAA+B;MAE7B,OAAO,IAAP;IACD,CAHD,MAGO;MAEL,OAAO,KAAP;IACD;EACF;EAED,OAAO,KAAP;AACD","sourcesContent":["import isType from \"./isType\";\nimport { isIdentifier } from \"./generated\";\nimport type * as t from \"..\";\n\n/**\n * Check if the input `node` is definitely immutable.\n */\nexport default function isImmutable(node: t.Node): boolean {\n  if (isType(node.type, \"Immutable\")) return true;\n\n  if (isIdentifier(node)) {\n    if (node.name === \"undefined\") {\n      // immutable!\n      return true;\n    } else {\n      // no idea...\n      return false;\n    }\n  }\n\n  return false;\n}\n"]},"metadata":{},"sourceType":"script"}