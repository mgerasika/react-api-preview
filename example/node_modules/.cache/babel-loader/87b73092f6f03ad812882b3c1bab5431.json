{"ast":null,"code":"function _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _s, _e;\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n  return _arr;\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nimport { useState, useEffect } from 'react';\nvar SCREENS = {\n  sm: 640,\n  md: 768,\n  lg: 1024,\n  xl: 1280,\n  xxl: 1690,\n  xxxl: 1920\n};\nfunction useScreenMediaQuery() {\n  var _useState = useState(window.innerWidth),\n    _useState2 = _slicedToArray(_useState, 2),\n    width = _useState2[0],\n    setWidth = _useState2[1];\n  useEffect(function () {\n    var handleWindowResize = function handleWindowResize() {\n      return setWidth(window.innerWidth);\n    };\n    window.addEventListener('resize', handleWindowResize);\n    return function () {\n      return window.removeEventListener('resize', handleWindowResize);\n    };\n  }, [setWidth]);\n  return {\n    isDownSM: width < SCREENS.sm,\n    isDownMD: width < SCREENS.md,\n    isDownLG: width < SCREENS.lg,\n    isDownXL: width < SCREENS.xl,\n    isDownXXL: width < SCREENS.xxl,\n    isDownXXXL: width < SCREENS.xxxl,\n    isUpSM: width >= SCREENS.sm,\n    isUpMD: width >= SCREENS.md,\n    isUpLG: width >= SCREENS.lg,\n    isUpXL: width >= SCREENS.xl,\n    isUpXXL: width >= SCREENS.xxl,\n    isUpXXXL: width >= SCREENS.xxxl\n  };\n}\nexport { SCREENS, useScreenMediaQuery };","map":{"version":3,"sources":["../../../src/hooks/use-screen-media-query.hook.ts"],"names":["SCREENS","sm","md","lg","xl","xxl","xxxl","useScreenMediaQuery","width","setWidth","useState","window","innerWidth","useEffect","handleWindowResize","addEventListener","removeEventListener","isDownSM","isDownMD","isDownLG","isDownXL","isDownXXL","isDownXXXL","isUpSM","isUpMD","isUpLG","isUpXL","isUpXXL","isUpXXXL"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEO,IAAMA,OAAO,GAAG;EACnBC,EAAE,EAAE,GAAG;EACPC,EAAE,EAAE,GAAG;EACPC,EAAE,EAAE,IAAI;EACRC,EAAE,EAAE,IAAI;EACRC,GAAG,EAAE,IAAI;EACTC,IAAI,EAAE;AACV,CAAC;AAEM,SAASC,mBAAmB,GAajC;EACE,IAAA,SAAA,GAA0BG,QAAQ,CAACC,MAAM,CAACC,UAAU,CAAC;IAAA,UAAA,GAAA,cAAA,CAAA,SAAA,EAAA,CAAA,CAAA;IAA9CJ,KAAK,GAAA,UAAA,CAAA,CAAA,CAAA;IAAEC,QAAQ,GAAA,UAAA,CAAA,CAAA,CAAA;EACtBI,SAAS,CAAC,YAAM;IACZ,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkB,GAAA;MAAA,OAAeL,QAAQ,CAACE,MAAM,CAACC,UAAU,CAAC;IAAA,CAAA;IAClED,MAAM,CAACI,gBAAgB,CAAC,QAAQ,EAAED,kBAAkB,CAAC;IACrD,OAAO,YAAA;MAAA,OAAYH,MAAM,CAACK,mBAAmB,CAAC,QAAQ,EAAEF,kBAAkB,CAAC;IAAA,CAAA;EAC/E,CAAC,EAAE,CAACL,QAAQ,CAAC,CAAC;EAEd,OAAO;IACHQ,QAAQ,EAAET,KAAK,GAAGR,OAAO,CAACC,EAAE;IAC5BiB,QAAQ,EAAEV,KAAK,GAAGR,OAAO,CAACE,EAAE;IAC5BiB,QAAQ,EAAEX,KAAK,GAAGR,OAAO,CAACG,EAAE;IAC5BiB,QAAQ,EAAEZ,KAAK,GAAGR,OAAO,CAACI,EAAE;IAC5BiB,SAAS,EAAEb,KAAK,GAAGR,OAAO,CAACK,GAAG;IAC9BiB,UAAU,EAAEd,KAAK,GAAGR,OAAO,CAACM,IAAI;IAEhCiB,MAAM,EAAEf,KAAK,IAAIR,OAAO,CAACC,EAAE;IAC3BuB,MAAM,EAAEhB,KAAK,IAAIR,OAAO,CAACE,EAAE;IAC3BuB,MAAM,EAAEjB,KAAK,IAAIR,OAAO,CAACG,EAAE;IAC3BuB,MAAM,EAAElB,KAAK,IAAIR,OAAO,CAACI,EAAE;IAC3BuB,OAAO,EAAEnB,KAAK,IAAIR,OAAO,CAACK,GAAG;IAC7BuB,QAAQ,EAAEpB,KAAK,IAAIR,OAAO,CAACM;GAC9B;AACL","sourcesContent":["import { useEffect, useState } from 'react';\n\nexport const SCREENS = {\n    sm: 640,\n    md: 768,\n    lg: 1024,\n    xl: 1280,\n    xxl: 1690,\n    xxxl: 1920,\n};\n\nexport function useScreenMediaQuery(): {\n    isDownSM: boolean;\n    isDownMD: boolean;\n    isDownLG: boolean;\n    isDownXL: boolean;\n    isDownXXL: boolean;\n    isDownXXXL: boolean;\n    isUpSM: boolean;\n    isUpMD: boolean;\n    isUpLG: boolean;\n    isUpXL: boolean;\n    isUpXXL: boolean;\n    isUpXXXL: boolean;\n} {\n    const [width, setWidth] = useState(window.innerWidth);\n    useEffect(() => {\n        const handleWindowResize = (): void => setWidth(window.innerWidth);\n        window.addEventListener('resize', handleWindowResize);\n        return (): void => window.removeEventListener('resize', handleWindowResize);\n    }, [setWidth]);\n\n    return {\n        isDownSM: width < SCREENS.sm,\n        isDownMD: width < SCREENS.md,\n        isDownLG: width < SCREENS.lg,\n        isDownXL: width < SCREENS.xl,\n        isDownXXL: width < SCREENS.xxl,\n        isDownXXXL: width < SCREENS.xxxl,\n\n        isUpSM: width >= SCREENS.sm,\n        isUpMD: width >= SCREENS.md,\n        isUpLG: width >= SCREENS.lg,\n        isUpXL: width >= SCREENS.xl,\n        isUpXXL: width >= SCREENS.xxl,\n        isUpXXXL: width >= SCREENS.xxxl,\n    };\n}\n"]},"metadata":{},"sourceType":"module"}