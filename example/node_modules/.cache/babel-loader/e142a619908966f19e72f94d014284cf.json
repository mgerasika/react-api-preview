{"ast":null,"code":"import { useRef, useEffect, useCallback } from 'react';\nvar useIsMounted = function useIsMounted() {\n  var ref = useRef(false);\n  useEffect(function () {\n    ref.current = true;\n    return function () {\n      ref.current = false;\n    };\n  }, []);\n  return {\n    isMounted: useCallback(function () {\n      return ref.current;\n    }, [])\n  };\n};\nexport { useIsMounted };","map":{"version":3,"sources":["../../../src/hooks/use-is-mounted.hook.ts"],"names":["useIsMounted","ref","useRef","useEffect","current","isMounted","useCallback"],"mappings":";AAEO,IAAMA,YAAY,GAAG,SAAfA,YAAY,GAAuC;EAC5D,IAAMC,GAAG,GAAGC,MAAM,CAAC,KAAK,CAAC;EAEzBC,SAAS,CAAC,YAAM;IACZF,GAAG,CAACG,OAAO,GAAG,IAAI;IAClB,OAAO,YAAY;MACfH,GAAG,CAACG,OAAO,GAAG,KAAK;KACtB;EACJ,CAAA,EAAE,EAAE,CAAC;EACN,OAAO;IAAEC,SAAS,EAAEC,WAAW,CAAC,YAAA;MAAA,OAAeL,GAAG,CAACG,OAAO;IAAA,CAAA,EAAE,EAAE;GAAG;AACrE,CAAA","sourcesContent":["import { useCallback, useEffect, useRef } from 'react';\n\nexport const useIsMounted = (): { isMounted: () => boolean } => {\n    const ref = useRef(false);\n\n    useEffect(() => {\n        ref.current = true;\n        return (): void => {\n            ref.current = false;\n        };\n    }, []);\n    return { isMounted: useCallback((): boolean => ref.current, []) };\n};\n"]},"metadata":{},"sourceType":"module"}