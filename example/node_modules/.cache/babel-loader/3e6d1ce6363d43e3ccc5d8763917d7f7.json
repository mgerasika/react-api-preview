{"ast":null,"code":"import { slicedToArray as _slicedToArray, toConsumableArray as _toConsumableArray } from '../_virtual/_rollupPluginBabelHelpers.js';\nimport { useState, useCallback } from 'react';\nvar usePromise = function usePromise() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    loading = _useState2[0],\n    setLoading = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    success = _useState4[0],\n    setSuccess = _useState4[1];\n  var _useState5 = useState(),\n    _useState6 = _slicedToArray(_useState5, 2),\n    errors = _useState6[0],\n    setErrors = _useState6[1];\n  return {\n    start: useCallback(function (promise) {\n      setErrors(undefined);\n      setSuccess(false);\n      setLoading(true);\n      Promise.all(promise).then(function () {\n        setSuccess(true);\n      }).catch(function (error) {\n        setErrors(function (prev) {\n          if (prev) {\n            return [].concat(_toConsumableArray(prev), [error]);\n          }\n          return [error];\n        });\n      }).finally(function () {\n        setLoading(false);\n      });\n    }, []),\n    errors: errors,\n    success: success,\n    loading: loading\n  };\n};\nexport { usePromise };","map":{"version":3,"sources":["../../../src/hooks/use-promise.hook.ts"],"names":["usePromise","loading","setLoading","useState","_useState2","success","setSuccess","_useState4","errors","setErrors","_useState6","start","useCallback","promise","undefined","Promise","all","then","catch","error","prev","finally"],"mappings":";;AASaA,IAAAA,UAAU,GAAG,SAAbA,UAAU,GAAkB;EACrC,IAA8BG,SAAAA,GAAAA,QAAQ,CAAC,KAAK,CAACC;IAAAA,UAAAA,GAAAA,cAAAA,CAAAA,SAAAA,EAAAA,CAAAA,CAAAA;IAAtCH,OAAO,GAAA,UAAA,CAAA,CAAA,CAAA;IAAEC,UAAU,GAAA,UAAA,CAAA,CAAA,CAAA;EAC1B,IAA8BC,UAAAA,GAAAA,QAAQ,CAAC,KAAK,CAACI;IAAAA,UAAAA,GAAAA,cAAAA,CAAAA,UAAAA,EAAAA,CAAAA,CAAAA;IAAtCF,OAAO,GAAA,UAAA,CAAA,CAAA,CAAA;IAAEC,UAAU,GAAA,UAAA,CAAA,CAAA,CAAA;EAC1B,IAAA,UAAA,GAA4BH,QAAQ,EAA0BO;IAAAA,UAAAA,GAAAA,cAAAA,CAAAA,UAAAA,EAAAA,CAAAA,CAAAA;IAAvDF,MAAM,GAAA,UAAA,CAAA,CAAA,CAAA;IAAEC,SAAS,GAAA,UAAA,CAAA,CAAA,CAAA;EACxB,OAAO;IACHE,KAAK,EAAEC,WAAW,CAAC,UAACC,OAA2B,EAAW;MACtDJ,SAAS,CAACK,SAAS,CAAC;MACpBR,UAAU,CAAC,KAAK,CAAC;MACjBJ,UAAU,CAAC,IAAI,CAAC;MAChBa,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC,CACfI,IAAI,CAAC,YAAM;QACRX,UAAU,CAAC,IAAI,CAAC;MACpB,CAAC,CAAC,CACDY,KAAK,CAAC,UAACC,KAAK,EAAK;QACdV,SAAS,CAAC,UAACW,IAAI,EAA6B;UACxC,IAAIA,IAAI,EAAE;YACN,OAAWA,EAAAA,CAAAA,MAAAA,CAAAA,kBAAAA,CAAAA,IAAI,CAAA,EAAA,CAAED,KAAK,CAAA,CAAA;UAC1B;UACA,OAAO,CAACA,KAAK,CAAC;QAClB,CAAC,CAAC;MACN,CAAC,CAAC,CACDE,OAAO,CAAC,YAAM;QACXnB,UAAU,CAAC,KAAK,CAAC;MACrB,CAAC,CAAC;IACT,CAAA,EAAE,EAAE,CAAC;IACNM,MAAM,EAANA,MAAM;IACNH,OAAO,EAAPA,OAAO;IACPJ,OAAO,EAAPA;GACH;AACL,CAAA","sourcesContent":["import { IBEError } from '@common/interfaces/be-error.interface';\nimport { useCallback, useState } from 'react';\n\ninterface IReturn {\n    start: (promises: Promise<unknown>[]) => void;\n    loading: boolean;\n    errors: IBEError[] | undefined;\n    success: boolean;\n}\nexport const usePromise = (): IReturn => {\n    const [loading, setLoading] = useState(false);\n    const [success, setSuccess] = useState(false);\n    const [errors, setErrors] = useState<IBEError[] | undefined>();\n    return {\n        start: useCallback((promise: Promise<unknown>[]): void => {\n            setErrors(undefined);\n            setSuccess(false);\n            setLoading(true);\n            Promise.all(promise)\n                .then(() => {\n                    setSuccess(true);\n                })\n                .catch((error) => {\n                    setErrors((prev): IBEError[] | undefined => {\n                        if (prev) {\n                            return [...prev, error];\n                        }\n                        return [error];\n                    });\n                })\n                .finally(() => {\n                    setLoading(false);\n                });\n        }, []),\n        errors,\n        success,\n        loading,\n    };\n};\n"]},"metadata":{},"sourceType":"module"}