{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { PutObjectTaggingOutput, PutObjectTaggingRequest } from \"../models/models_0\";\nimport { deserializeAws_restXmlPutObjectTaggingCommand, serializeAws_restXmlPutObjectTaggingCommand } from \"../protocols/Aws_restXml\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Sets the supplied tag-set to an object that already exists in a bucket.</p>\n *          <p>A tag is a key-value pair. You can associate tags with an object by sending a PUT\n *          request against the tagging subresource that is associated with the object. You can\n *          retrieve tags by sending a GET request. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectTagging.html\">GetObjectTagging</a>.</p>\n *\n *          <p>For tagging-related restrictions related to characters and encodings, see <a href=\"https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/allocation-tag-restrictions.html\">Tag\n *             Restrictions</a>. Note that Amazon S3 limits the maximum number of tags to 10 tags per\n *          object.</p>\n *\n *          <p>To use this operation, you must have permission to perform the\n *             <code>s3:PutObjectTagging</code> action. By default, the bucket owner has this\n *          permission and can grant this permission to others.</p>\n *\n *          <p>To put tags of any other version, use the <code>versionId</code> query parameter. You\n *          also need permission for the <code>s3:PutObjectVersionTagging</code> action.</p>\n *\n *          <p>For information about the Amazon S3 object tagging feature, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/object-tagging.html\">Object Tagging</a>.</p>\n *\n *\n *          <p class=\"title\">\n *             <b>Special Errors</b>\n *          </p>\n *          <ul>\n *             <li>\n *                <ul>\n *                   <li>\n *                      <p>\n *                         <i>Code: InvalidTagError </i>\n *                      </p>\n *                   </li>\n *                   <li>\n *                      <p>\n *                         <i>Cause: The tag provided was not a valid tag. This error can occur\n *                         if the tag did not pass input validation. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/object-tagging.html\">Object Tagging</a>.</i>\n *                      </p>\n *                   </li>\n *                </ul>\n *             </li>\n *             <li>\n *                <ul>\n *                   <li>\n *                      <p>\n *                         <i>Code: MalformedXMLError </i>\n *                      </p>\n *                   </li>\n *                   <li>\n *                      <p>\n *                         <i>Cause: The XML provided does not match the schema.</i>\n *                      </p>\n *                   </li>\n *                </ul>\n *             </li>\n *             <li>\n *                <ul>\n *                   <li>\n *                      <p>\n *                         <i>Code: OperationAbortedError </i>\n *                      </p>\n *                   </li>\n *                   <li>\n *                      <p>\n *                         <i>Cause: A conflicting conditional operation is currently in\n *                         progress against this resource. Please try again.</i>\n *                      </p>\n *                   </li>\n *                </ul>\n *             </li>\n *             <li>\n *                <ul>\n *                   <li>\n *                      <p>\n *                         <i>Code: InternalError</i>\n *                      </p>\n *                   </li>\n *                   <li>\n *                      <p>\n *                         <i>Cause: The service was unable to apply the provided tag to the\n *                         object.</i>\n *                      </p>\n *                   </li>\n *                </ul>\n *             </li>\n *          </ul>\n *\n *\n *\n *\n *\n *\n *          <p class=\"title\">\n *             <b>Related Resources</b>\n *          </p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectTagging.html\">GetObjectTagging</a>\n *                </p>\n *             </li>\n *          </ul>\n */\nvar PutObjectTaggingCommand = /** @class */function (_super) {\n  __extends(PutObjectTaggingCommand, _super);\n  // Start section: command_properties\n  // End section: command_properties\n  function PutObjectTaggingCommand(input) {\n    var _this =\n    // Start section: command_constructor\n    _super.call(this) || this;\n    _this.input = input;\n    return _this;\n    // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n  PutObjectTaggingCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"S3Client\";\n    var commandName = \"PutObjectTaggingCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: PutObjectTaggingRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: PutObjectTaggingOutput.filterSensitiveLog\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n  PutObjectTaggingCommand.prototype.serialize = function (input, context) {\n    return serializeAws_restXmlPutObjectTaggingCommand(input, context);\n  };\n  PutObjectTaggingCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_restXmlPutObjectTaggingCommand(output, context);\n  };\n  return PutObjectTaggingCommand;\n}($Command);\nexport { PutObjectTaggingCommand };","map":{"version":3,"sources":["../../../commands/PutObjectTaggingCommand.ts"],"names":[],"mappings":";AACA,SAAS,sBAAsB,EAAE,uBAAuB,QAAQ,oBAAoB;AACpF,SACE,6CAA6C,EAC7C,2CAA2C,QACtC,0BAA0B;AACjC,SAAS,uBAAuB,QAAQ,qCAAqC;AAC7E,SAAS,cAAc,QAAQ,2BAA2B;AAE1D,SAAS,OAAO,IAAI,QAAQ,QAAQ,wBAAwB;AAc5D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoGG;AACH,IAAA,uBAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAA6C,SAAA,CAAA,uBAAA,EAAA,MAAA,CAAA;EAK3C;EACA;EAEA,SAAA,uBAAA,CAAqB,KAAmC,EAAA;IAAxD,IAAA,KAAA;IACE;IACA,MAAA,CAAA,IAAA,CAAA,IAAA,CAAO,IAAA,IAAA;IAFY,KAAA,CAAA,KAAK,GAAL,KAAK;;IAGxB;EACF;EAEA;;AAEG;EACH,uBAAA,CAAA,SAAA,CAAA,iBAAiB,GAAjB,UACE,WAAmE,EACnE,aAAqC,EACrC,OAA8B,EAAA;IAE9B,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,cAAc,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IACzF,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,uBAAuB,CAAC,aAAa,CAAC,CAAC;IAEhE,IAAM,KAAK,GAAG,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC;IAE9C,IAAA,MAAM,GAAK,aAAa,CAAA,MAAlB;IACd,IAAM,UAAU,GAAG,UAAU;IAC7B,IAAM,WAAW,GAAG,yBAAyB;IAC7C,IAAM,uBAAuB,GAA4B;MACvD,MAAM,EAAA,MAAA;MACN,UAAU,EAAA,UAAA;MACV,WAAW,EAAA,WAAA;MACX,uBAAuB,EAAE,uBAAuB,CAAC,kBAAkB;MACnE,wBAAwB,EAAE,sBAAsB,CAAC;KAClD;IACO,IAAA,cAAc,GAAK,aAAa,CAAA,cAAlB;IACtB,OAAO,KAAK,CAAC,OAAO,CAClB,UAAC,OAAsC,EAAA;MACrC,OAAA,cAAc,CAAC,MAAM,CAAC,OAAO,CAAC,OAAwB,EAAE,OAAO,IAAI,CAAA,CAAE,CAAC;IAAtE,CAAsE,EACxE,uBAAuB,CACxB;EACH,CAAC;EAEO,uBAAA,CAAA,SAAA,CAAA,SAAS,GAAjB,UAAkB,KAAmC,EAAE,OAAuB,EAAA;IAC5E,OAAO,2CAA2C,CAAC,KAAK,EAAE,OAAO,CAAC;EACpE,CAAC;EAEO,uBAAA,CAAA,SAAA,CAAA,WAAW,GAAnB,UAAoB,MAAsB,EAAE,OAAuB,EAAA;IACjE,OAAO,6CAA6C,CAAC,MAAM,EAAE,OAAO,CAAC;EACvE,CAAC;EAIH,OAAA,uBAAC;AAAD,CAAC,CAvD4C,QAAQ,CAAA","sourceRoot":"","sourcesContent":["import { __extends } from \"tslib\";\nimport { PutObjectTaggingOutput, PutObjectTaggingRequest } from \"../models/models_0\";\nimport { deserializeAws_restXmlPutObjectTaggingCommand, serializeAws_restXmlPutObjectTaggingCommand, } from \"../protocols/Aws_restXml\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Sets the supplied tag-set to an object that already exists in a bucket.</p>\n *          <p>A tag is a key-value pair. You can associate tags with an object by sending a PUT\n *          request against the tagging subresource that is associated with the object. You can\n *          retrieve tags by sending a GET request. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectTagging.html\">GetObjectTagging</a>.</p>\n *\n *          <p>For tagging-related restrictions related to characters and encodings, see <a href=\"https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/allocation-tag-restrictions.html\">Tag\n *             Restrictions</a>. Note that Amazon S3 limits the maximum number of tags to 10 tags per\n *          object.</p>\n *\n *          <p>To use this operation, you must have permission to perform the\n *             <code>s3:PutObjectTagging</code> action. By default, the bucket owner has this\n *          permission and can grant this permission to others.</p>\n *\n *          <p>To put tags of any other version, use the <code>versionId</code> query parameter. You\n *          also need permission for the <code>s3:PutObjectVersionTagging</code> action.</p>\n *\n *          <p>For information about the Amazon S3 object tagging feature, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/object-tagging.html\">Object Tagging</a>.</p>\n *\n *\n *          <p class=\"title\">\n *             <b>Special Errors</b>\n *          </p>\n *          <ul>\n *             <li>\n *                <ul>\n *                   <li>\n *                      <p>\n *                         <i>Code: InvalidTagError </i>\n *                      </p>\n *                   </li>\n *                   <li>\n *                      <p>\n *                         <i>Cause: The tag provided was not a valid tag. This error can occur\n *                         if the tag did not pass input validation. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/object-tagging.html\">Object Tagging</a>.</i>\n *                      </p>\n *                   </li>\n *                </ul>\n *             </li>\n *             <li>\n *                <ul>\n *                   <li>\n *                      <p>\n *                         <i>Code: MalformedXMLError </i>\n *                      </p>\n *                   </li>\n *                   <li>\n *                      <p>\n *                         <i>Cause: The XML provided does not match the schema.</i>\n *                      </p>\n *                   </li>\n *                </ul>\n *             </li>\n *             <li>\n *                <ul>\n *                   <li>\n *                      <p>\n *                         <i>Code: OperationAbortedError </i>\n *                      </p>\n *                   </li>\n *                   <li>\n *                      <p>\n *                         <i>Cause: A conflicting conditional operation is currently in\n *                         progress against this resource. Please try again.</i>\n *                      </p>\n *                   </li>\n *                </ul>\n *             </li>\n *             <li>\n *                <ul>\n *                   <li>\n *                      <p>\n *                         <i>Code: InternalError</i>\n *                      </p>\n *                   </li>\n *                   <li>\n *                      <p>\n *                         <i>Cause: The service was unable to apply the provided tag to the\n *                         object.</i>\n *                      </p>\n *                   </li>\n *                </ul>\n *             </li>\n *          </ul>\n *\n *\n *\n *\n *\n *\n *          <p class=\"title\">\n *             <b>Related Resources</b>\n *          </p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectTagging.html\">GetObjectTagging</a>\n *                </p>\n *             </li>\n *          </ul>\n */\nvar PutObjectTaggingCommand = /** @class */ (function (_super) {\n    __extends(PutObjectTaggingCommand, _super);\n    // Start section: command_properties\n    // End section: command_properties\n    function PutObjectTaggingCommand(input) {\n        var _this = \n        // Start section: command_constructor\n        _super.call(this) || this;\n        _this.input = input;\n        return _this;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    PutObjectTaggingCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n        var stack = clientStack.concat(this.middlewareStack);\n        var logger = configuration.logger;\n        var clientName = \"S3Client\";\n        var commandName = \"PutObjectTaggingCommand\";\n        var handlerExecutionContext = {\n            logger: logger,\n            clientName: clientName,\n            commandName: commandName,\n            inputFilterSensitiveLog: PutObjectTaggingRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: PutObjectTaggingOutput.filterSensitiveLog,\n        };\n        var requestHandler = configuration.requestHandler;\n        return stack.resolve(function (request) {\n            return requestHandler.handle(request.request, options || {});\n        }, handlerExecutionContext);\n    };\n    PutObjectTaggingCommand.prototype.serialize = function (input, context) {\n        return serializeAws_restXmlPutObjectTaggingCommand(input, context);\n    };\n    PutObjectTaggingCommand.prototype.deserialize = function (output, context) {\n        return deserializeAws_restXmlPutObjectTaggingCommand(output, context);\n    };\n    return PutObjectTaggingCommand;\n}($Command));\nexport { PutObjectTaggingCommand };\n//# sourceMappingURL=PutObjectTaggingCommand.js.map"]},"metadata":{},"sourceType":"module"}