{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { TextractClient } from \"./TextractClient\";\nimport { AnalyzeDocumentCommand } from \"./commands/AnalyzeDocumentCommand\";\nimport { DetectDocumentTextCommand } from \"./commands/DetectDocumentTextCommand\";\nimport { GetDocumentAnalysisCommand } from \"./commands/GetDocumentAnalysisCommand\";\nimport { GetDocumentTextDetectionCommand } from \"./commands/GetDocumentTextDetectionCommand\";\nimport { StartDocumentAnalysisCommand } from \"./commands/StartDocumentAnalysisCommand\";\nimport { StartDocumentTextDetectionCommand } from \"./commands/StartDocumentTextDetectionCommand\";\n/**\n * <p>Amazon Textract detects and analyzes text in documents and converts it\n *          into machine-readable text. This is the API reference documentation for\n *          Amazon Textract.</p>\n */\nvar Textract = /** @class */function (_super) {\n  __extends(Textract, _super);\n  function Textract() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Textract.prototype.analyzeDocument = function (args, optionsOrCb, cb) {\n    var command = new AnalyzeDocumentCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n  Textract.prototype.detectDocumentText = function (args, optionsOrCb, cb) {\n    var command = new DetectDocumentTextCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n  Textract.prototype.getDocumentAnalysis = function (args, optionsOrCb, cb) {\n    var command = new GetDocumentAnalysisCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n  Textract.prototype.getDocumentTextDetection = function (args, optionsOrCb, cb) {\n    var command = new GetDocumentTextDetectionCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n  Textract.prototype.startDocumentAnalysis = function (args, optionsOrCb, cb) {\n    var command = new StartDocumentAnalysisCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n  Textract.prototype.startDocumentTextDetection = function (args, optionsOrCb, cb) {\n    var command = new StartDocumentTextDetectionCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n  return Textract;\n}(TextractClient);\nexport { Textract };","map":{"version":3,"sources":["../../Textract.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __extends } from \"tslib\";\nimport { TextractClient } from \"./TextractClient\";\nimport { AnalyzeDocumentCommand, } from \"./commands/AnalyzeDocumentCommand\";\nimport { DetectDocumentTextCommand, } from \"./commands/DetectDocumentTextCommand\";\nimport { GetDocumentAnalysisCommand, } from \"./commands/GetDocumentAnalysisCommand\";\nimport { GetDocumentTextDetectionCommand, } from \"./commands/GetDocumentTextDetectionCommand\";\nimport { StartDocumentAnalysisCommand, } from \"./commands/StartDocumentAnalysisCommand\";\nimport { StartDocumentTextDetectionCommand, } from \"./commands/StartDocumentTextDetectionCommand\";\n/**\n * <p>Amazon Textract detects and analyzes text in documents and converts it\n *          into machine-readable text. This is the API reference documentation for\n *          Amazon Textract.</p>\n */\nvar Textract = /** @class */ (function (_super) {\n    __extends(Textract, _super);\n    function Textract() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Textract.prototype.analyzeDocument = function (args, optionsOrCb, cb) {\n        var command = new AnalyzeDocumentCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    };\n    Textract.prototype.detectDocumentText = function (args, optionsOrCb, cb) {\n        var command = new DetectDocumentTextCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    };\n    Textract.prototype.getDocumentAnalysis = function (args, optionsOrCb, cb) {\n        var command = new GetDocumentAnalysisCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    };\n    Textract.prototype.getDocumentTextDetection = function (args, optionsOrCb, cb) {\n        var command = new GetDocumentTextDetectionCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    };\n    Textract.prototype.startDocumentAnalysis = function (args, optionsOrCb, cb) {\n        var command = new StartDocumentAnalysisCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    };\n    Textract.prototype.startDocumentTextDetection = function (args, optionsOrCb, cb) {\n        var command = new StartDocumentTextDetectionCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    };\n    return Textract;\n}(TextractClient));\nexport { Textract };\n//# sourceMappingURL=Textract.js.map"]},"metadata":{},"sourceType":"module"}