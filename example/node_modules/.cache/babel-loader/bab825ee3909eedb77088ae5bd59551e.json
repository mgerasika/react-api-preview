{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _s, _e;\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n  return _arr;\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nimport { consoleService } from '../services/console.service.js';\nimport { useMemo, useState } from 'react';\nfunction useSessionState(key, defaultValue) {\n  var value = useMemo(function () {\n    var val = sessionStorage.getItem(key);\n    if (val) {\n      try {\n        var json = JSON.parse(val);\n        return json.value;\n      } catch (ex) {\n        consoleService.error(ex);\n      }\n    }\n    return undefined;\n  }, [key]);\n  var _useState = useState(value !== undefined ? value : defaultValue),\n    _useState2 = _slicedToArray(_useState, 2),\n    state = _useState2[0],\n    setState = _useState2[1];\n  return [state, function (newState) {\n    sessionStorage.setItem(key, JSON.stringify({\n      type: _typeof(newState),\n      value: newState\n    }));\n    setState(newState);\n  }];\n}\nexport { useSessionState };","map":{"version":3,"sources":["../../../src/hooks/use-session-state.hook.ts"],"names":["useSessionState","key","defaultValue","value","useMemo","val","sessionStorage","getItem","json","JSON","parse","ex","consoleService","error","undefined","state","setState","useState","newState","setItem","stringify","type"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQO,SAASA,eAAe,CAAIC,GAAW,EAAEC,YAAe,EAAyB;EACpF,IAAMC,KAAK,GAAGC,OAAO,CAAC,YAAM;IACxB,IAAMC,GAAG,GAAGC,cAAc,CAACC,OAAO,CAACN,GAAG,CAAC;IACvC,IAAII,GAAG,EAAE;MACL,IAAI;QACA,IAAMG,IAAY,GAAGC,IAAI,CAACC,KAAK,CAACL,GAAG,CAAqB;QACxD,OAAOG,IAAI,CAACL,KAAK;MACpB,CAAA,CAAC,OAAOQ,EAAE,EAAE;QACTC,cAAc,CAACC,KAAK,CAACF,EAAE,CAAC;MAC5B;IACJ;IACA,OAAOG,SAAS;EACpB,CAAC,EAAE,CAACb,GAAG,CAAC,CAAC;EAET,IAAA,SAAA,GAA0BgB,QAAQ,CAAId,KAAK,KAAKW,SAAS,GAAIX,KAAK,GAAoBD,YAAY,CAAC;IAAA,UAAA,GAAA,cAAA,CAAA,SAAA,EAAA,CAAA,CAAA;IAA5Fa,KAAK,GAAA,UAAA,CAAA,CAAA,CAAA;IAAEC,QAAQ,GAAA,UAAA,CAAA,CAAA,CAAA;EACtB,OAAO,CACHD,KAAK,EACJG,UAAAA,QAAQ,EAAW;IAChBZ,cAAc,CAACa,OAAO,CAClBlB,GAAG,EACHQ,IAAI,CAACW,SAAS,CAAC;MACXC,IAAI,EAAA,OAAA,CAASH,QAAQ,CAAA;MACrBf,KAAK,EAAEe;IACV,CAAA,CAAsB,CAC1B;IACDF,QAAQ,CAACE,QAAQ,CAAC;EACtB,CAAC,CACJ;AACL","sourcesContent":["import { consoleService } from '@common/services/console.service';\nimport { useMemo, useState } from 'react';\n\ninterface IState {\n    type: 'boolean' | 'string';\n    value: string;\n}\n\nexport function useSessionState<T>(key: string, defaultValue: T): [T, (arg: T) => void] {\n    const value = useMemo(() => {\n        const val = sessionStorage.getItem(key);\n        if (val) {\n            try {\n                const json: IState = JSON.parse(val as string) as IState;\n                return json.value;\n            } catch (ex) {\n                consoleService.error(ex);\n            }\n        }\n        return undefined;\n    }, [key]);\n\n    const [state, setState] = useState<T>(value !== undefined ? (value as unknown as T) : defaultValue);\n    return [\n        state,\n        (newState): void => {\n            sessionStorage.setItem(\n                key,\n                JSON.stringify({\n                    type: typeof newState,\n                    value: newState,\n                } as unknown as IState),\n            );\n            setState(newState);\n        },\n    ];\n}\n"]},"metadata":{},"sourceType":"module"}