{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n    m = s && o[s],\n    i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n/*\n * Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { ConsoleLogger as Logger, Signer, Credentials, Constants } from '@aws-amplify/core';\nimport { AbstractXRProvider } from './XRProvider';\nimport { XRNoSceneConfiguredError, XRSceneNotFoundError, XRSceneNotLoadedError, XRNoDomElement, XRSceneLoadFailure } from '../Errors';\nvar SUMERIAN_SERVICE_NAME = 'sumerian';\nvar logger = new Logger('SumerianProvider');\nvar SumerianProvider = /** @class */function (_super) {\n  __extends(SumerianProvider, _super);\n  function SumerianProvider(options) {\n    if (options === void 0) {\n      options = {};\n    }\n    return _super.call(this, options) || this;\n  }\n  SumerianProvider.prototype.getProviderName = function () {\n    return 'SumerianProvider';\n  };\n  SumerianProvider.prototype.loadScript = function (url) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2 /*return*/, new Promise(function (resolve, reject) {\n          var scriptElement = document.createElement('script');\n          scriptElement.src = url;\n          scriptElement.addEventListener('load', function (event) {\n            resolve();\n          });\n          scriptElement.addEventListener('error', function (event) {\n            reject(new Error(\"Failed to load script: \" + url));\n          });\n          document.head.appendChild(scriptElement);\n        })];\n      });\n    });\n  };\n  SumerianProvider.prototype.loadScene = function (sceneName, domElementId, sceneOptions) {\n    return __awaiter(this, void 0, void 0, function () {\n      var errorMsg, errorMsg, element, errorMsg, scene, errorMsg, sceneUrl, sceneId, sceneRegion, errorMsg, awsSDKConfigOverride, fetchOptions, url, credentials, accessInfo, serviceInfo, request, e_1, apiResponse, apiResponseJson, sceneBundleData, sceneBundle, sceneBundleJson, error_1, progressCallback, publishParamOverrides, sceneLoadParams, sceneController, _a, _b, warning;\n      var e_2, _c;\n      return __generator(this, function (_d) {\n        switch (_d.label) {\n          case 0:\n            if (!sceneName) {\n              errorMsg = 'No scene name passed into loadScene';\n              logger.error(errorMsg);\n              throw new XRSceneLoadFailure(errorMsg);\n            }\n            if (!domElementId) {\n              errorMsg = 'No dom element id passed into loadScene';\n              logger.error(errorMsg);\n              throw new XRNoDomElement(errorMsg);\n            }\n            element = document.getElementById(domElementId);\n            if (!element) {\n              errorMsg = \"DOM element id, \" + domElementId + \" not found\";\n              logger.error(errorMsg);\n              throw new XRNoDomElement(errorMsg);\n            }\n            scene = this.getScene(sceneName);\n            if (!scene.sceneConfig) {\n              errorMsg = \"No scene config configured for scene: \" + sceneName;\n              logger.error(errorMsg);\n              throw new XRSceneLoadFailure(errorMsg);\n            }\n            sceneUrl = scene.sceneConfig.url;\n            sceneId = scene.sceneConfig.sceneId;\n            if (scene.sceneConfig.hasOwnProperty('region')) {\n              // Use the scene region on the Sumerian scene configuration\n              sceneRegion = scene.sceneConfig.region;\n            } else if (this.options.hasOwnProperty('region')) {\n              // Use the scene region on the XR category configuration\n              sceneRegion = this.options.region;\n            } else {\n              errorMsg = \"No region configured for scene: \" + sceneName;\n              logger.error(errorMsg);\n              throw new XRSceneLoadFailure(errorMsg);\n            }\n            awsSDKConfigOverride = {\n              region: sceneRegion,\n              // This is passed to the AWS clients created in\n              // Sumerian's AwsSystem\n              // This helps other services(like Lex and Polly) to track\n              // traffic coming from Sumerian scenes embedded with Amplify\n              customUserAgent: Constants.userAgent + \"-SumerianScene\"\n            };\n            fetchOptions = {\n              headers: {\n                // This sets the AWS user agent string\n                // So the Sumerian service knows this request is\n                // from Amplify\n                'X-Amz-User-Agent': Constants.userAgent\n              }\n            };\n            url = sceneUrl;\n            _d.label = 1;\n          case 1:\n            _d.trys.push([1, 3,, 4]);\n            return [4 /*yield*/, Credentials.get()];\n          case 2:\n            credentials = _d.sent();\n            awsSDKConfigOverride['credentials'] = credentials;\n            accessInfo = {\n              secret_key: credentials.secretAccessKey,\n              access_key: credentials.accessKeyId,\n              session_token: credentials.sessionToken\n            };\n            serviceInfo = {\n              region: sceneRegion,\n              service: SUMERIAN_SERVICE_NAME\n            };\n            request = Signer.sign({\n              method: 'GET',\n              url: sceneUrl\n            }, accessInfo, serviceInfo);\n            fetchOptions.headers = __assign(__assign({}, fetchOptions.headers), request.headers);\n            url = request.url;\n            return [3 /*break*/, 4];\n          case 3:\n            e_1 = _d.sent();\n            logger.debug('No credentials available, the request will be unsigned');\n            return [3 /*break*/, 4];\n          case 4:\n            return [4 /*yield*/, fetch(url, fetchOptions)];\n          case 5:\n            apiResponse = _d.sent();\n            return [4 /*yield*/, apiResponse.json()];\n          case 6:\n            apiResponseJson = _d.sent();\n            if (apiResponse.status === 403) {\n              if (apiResponseJson.message) {\n                logger.error(\"Failure to authenticate user: \" + apiResponseJson.message);\n                throw new XRSceneLoadFailure(\"Failure to authenticate user: \" + apiResponseJson.message);\n              } else {\n                logger.error(\"Failure to authenticate user\");\n                throw new XRSceneLoadFailure(\"Failure to authenticate user\");\n              }\n            }\n            sceneBundleData = apiResponseJson.bundleData[sceneId];\n            return [4 /*yield*/, fetch(sceneBundleData.url, {\n              headers: sceneBundleData.headers\n            })];\n          case 7:\n            sceneBundle = _d.sent();\n            return [4 /*yield*/, sceneBundle.json()];\n          case 8:\n            sceneBundleJson = _d.sent();\n            _d.label = 9;\n          case 9:\n            _d.trys.push([9, 11,, 12]);\n            // Load the Sumerian bootstrapper script into the DOM\n            return [4 /*yield*/, this.loadScript(sceneBundleJson[sceneId].bootstrapperUrl)];\n          case 10:\n            // Load the Sumerian bootstrapper script into the DOM\n            _d.sent();\n            return [3 /*break*/, 12];\n          case 11:\n            error_1 = _d.sent();\n            logger.error(error_1);\n            throw new XRSceneLoadFailure(error_1);\n          case 12:\n            progressCallback = sceneOptions.progressCallback ? sceneOptions.progressCallback : undefined;\n            publishParamOverrides = scene.publishParamOverrides ? scene.publishParamOverrides : undefined;\n            sceneLoadParams = {\n              element: element,\n              sceneId: sceneId,\n              sceneBundle: sceneBundleJson,\n              apiResponse: apiResponseJson,\n              progressCallback: progressCallback,\n              publishParamOverrides: publishParamOverrides,\n              awsSDKConfigOverride: awsSDKConfigOverride\n            };\n            return [4 /*yield*/, window.SumerianBootstrapper.loadScene(sceneLoadParams)];\n          case 13:\n            sceneController = _d.sent();\n            scene.sceneController = sceneController;\n            scene.isLoaded = true;\n            try {\n              // Log scene warnings\n              for (_a = __values(sceneController.sceneLoadWarnings), _b = _a.next(); !_b.done; _b = _a.next()) {\n                warning = _b.value;\n                logger.warn(\"loadScene warning: \" + warning);\n              }\n            } catch (e_2_1) {\n              e_2 = {\n                error: e_2_1\n              };\n            } finally {\n              try {\n                if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n              } finally {\n                if (e_2) throw e_2.error;\n              }\n            }\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  SumerianProvider.prototype.isSceneLoaded = function (sceneName) {\n    var scene = this.getScene(sceneName);\n    return scene.isLoaded || false;\n  };\n  SumerianProvider.prototype.getScene = function (sceneName) {\n    if (!this.options.scenes) {\n      var errorMsg = 'No scenes were defined in the configuration';\n      logger.error(errorMsg);\n      throw new XRNoSceneConfiguredError(errorMsg);\n    }\n    if (!sceneName) {\n      var errorMsg = 'No scene name was passed';\n      logger.error(errorMsg);\n      throw new XRSceneNotFoundError(errorMsg);\n    }\n    if (!this.options.scenes[sceneName]) {\n      var errorMsg = \"Scene '\" + sceneName + \"' is not configured\";\n      logger.error(errorMsg);\n      throw new XRSceneNotFoundError(errorMsg);\n    }\n    return this.options.scenes[sceneName];\n  };\n  SumerianProvider.prototype.getSceneController = function (sceneName) {\n    if (!this.options.scenes) {\n      var errorMsg = 'No scenes were defined in the configuration';\n      logger.error(errorMsg);\n      throw new XRNoSceneConfiguredError(errorMsg);\n    }\n    var scene = this.options.scenes[sceneName];\n    if (!scene) {\n      var errorMsg = \"Scene '\" + sceneName + \"' is not configured\";\n      logger.error(errorMsg);\n      throw new XRSceneNotFoundError(errorMsg);\n    }\n    var sceneController = scene.sceneController;\n    if (!sceneController) {\n      var errorMsg = \"Scene controller for '\" + sceneName + \"' has not been loaded\";\n      logger.error(errorMsg);\n      throw new XRSceneNotLoadedError(errorMsg);\n    }\n    return sceneController;\n  };\n  SumerianProvider.prototype.isVRCapable = function (sceneName) {\n    var sceneController = this.getSceneController(sceneName);\n    return sceneController.vrCapable;\n  };\n  SumerianProvider.prototype.isVRPresentationActive = function (sceneName) {\n    var sceneController = this.getSceneController(sceneName);\n    return sceneController.vrPresentationActive;\n  };\n  SumerianProvider.prototype.start = function (sceneName) {\n    var sceneController = this.getSceneController(sceneName);\n    sceneController.start();\n  };\n  SumerianProvider.prototype.enterVR = function (sceneName) {\n    var sceneController = this.getSceneController(sceneName);\n    sceneController.enterVR();\n  };\n  SumerianProvider.prototype.exitVR = function (sceneName) {\n    var sceneController = this.getSceneController(sceneName);\n    sceneController.exitVR();\n  };\n  SumerianProvider.prototype.isMuted = function (sceneName) {\n    var sceneController = this.getSceneController(sceneName);\n    return sceneController.muted;\n  };\n  SumerianProvider.prototype.setMuted = function (sceneName, muted) {\n    var sceneController = this.getSceneController(sceneName);\n    sceneController.muted = muted;\n  };\n  SumerianProvider.prototype.onSceneEvent = function (sceneName, eventName, eventHandler) {\n    var sceneController = this.getSceneController(sceneName);\n    sceneController.on(eventName, eventHandler);\n  };\n  SumerianProvider.prototype.enableAudio = function (sceneName) {\n    var sceneController = this.getSceneController(sceneName);\n    sceneController.enableAudio();\n  };\n  return SumerianProvider;\n}(AbstractXRProvider);\nexport { SumerianProvider };","map":{"version":3,"sources":["../../src/Providers/SumerianProvider.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n/*\n * Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { ConsoleLogger as Logger, Signer, Credentials, Constants, } from '@aws-amplify/core';\nimport { AbstractXRProvider } from './XRProvider';\nimport { XRNoSceneConfiguredError, XRSceneNotFoundError, XRSceneNotLoadedError, XRNoDomElement, XRSceneLoadFailure, } from '../Errors';\nvar SUMERIAN_SERVICE_NAME = 'sumerian';\nvar logger = new Logger('SumerianProvider');\nvar SumerianProvider = /** @class */ (function (_super) {\n    __extends(SumerianProvider, _super);\n    function SumerianProvider(options) {\n        if (options === void 0) { options = {}; }\n        return _super.call(this, options) || this;\n    }\n    SumerianProvider.prototype.getProviderName = function () {\n        return 'SumerianProvider';\n    };\n    SumerianProvider.prototype.loadScript = function (url) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, new Promise(function (resolve, reject) {\n                        var scriptElement = document.createElement('script');\n                        scriptElement.src = url;\n                        scriptElement.addEventListener('load', function (event) {\n                            resolve();\n                        });\n                        scriptElement.addEventListener('error', function (event) {\n                            reject(new Error(\"Failed to load script: \" + url));\n                        });\n                        document.head.appendChild(scriptElement);\n                    })];\n            });\n        });\n    };\n    SumerianProvider.prototype.loadScene = function (sceneName, domElementId, sceneOptions) {\n        return __awaiter(this, void 0, void 0, function () {\n            var errorMsg, errorMsg, element, errorMsg, scene, errorMsg, sceneUrl, sceneId, sceneRegion, errorMsg, awsSDKConfigOverride, fetchOptions, url, credentials, accessInfo, serviceInfo, request, e_1, apiResponse, apiResponseJson, sceneBundleData, sceneBundle, sceneBundleJson, error_1, progressCallback, publishParamOverrides, sceneLoadParams, sceneController, _a, _b, warning;\n            var e_2, _c;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        if (!sceneName) {\n                            errorMsg = 'No scene name passed into loadScene';\n                            logger.error(errorMsg);\n                            throw new XRSceneLoadFailure(errorMsg);\n                        }\n                        if (!domElementId) {\n                            errorMsg = 'No dom element id passed into loadScene';\n                            logger.error(errorMsg);\n                            throw new XRNoDomElement(errorMsg);\n                        }\n                        element = document.getElementById(domElementId);\n                        if (!element) {\n                            errorMsg = \"DOM element id, \" + domElementId + \" not found\";\n                            logger.error(errorMsg);\n                            throw new XRNoDomElement(errorMsg);\n                        }\n                        scene = this.getScene(sceneName);\n                        if (!scene.sceneConfig) {\n                            errorMsg = \"No scene config configured for scene: \" + sceneName;\n                            logger.error(errorMsg);\n                            throw new XRSceneLoadFailure(errorMsg);\n                        }\n                        sceneUrl = scene.sceneConfig.url;\n                        sceneId = scene.sceneConfig.sceneId;\n                        if (scene.sceneConfig.hasOwnProperty('region')) {\n                            // Use the scene region on the Sumerian scene configuration\n                            sceneRegion = scene.sceneConfig.region;\n                        }\n                        else if (this.options.hasOwnProperty('region')) {\n                            // Use the scene region on the XR category configuration\n                            sceneRegion = this.options.region;\n                        }\n                        else {\n                            errorMsg = \"No region configured for scene: \" + sceneName;\n                            logger.error(errorMsg);\n                            throw new XRSceneLoadFailure(errorMsg);\n                        }\n                        awsSDKConfigOverride = {\n                            region: sceneRegion,\n                            // This is passed to the AWS clients created in\n                            // Sumerian's AwsSystem\n                            // This helps other services(like Lex and Polly) to track\n                            // traffic coming from Sumerian scenes embedded with Amplify\n                            customUserAgent: Constants.userAgent + \"-SumerianScene\",\n                        };\n                        fetchOptions = {\n                            headers: {\n                                // This sets the AWS user agent string\n                                // So the Sumerian service knows this request is\n                                // from Amplify\n                                'X-Amz-User-Agent': Constants.userAgent,\n                            },\n                        };\n                        url = sceneUrl;\n                        _d.label = 1;\n                    case 1:\n                        _d.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, Credentials.get()];\n                    case 2:\n                        credentials = _d.sent();\n                        awsSDKConfigOverride['credentials'] = credentials;\n                        accessInfo = {\n                            secret_key: credentials.secretAccessKey,\n                            access_key: credentials.accessKeyId,\n                            session_token: credentials.sessionToken,\n                        };\n                        serviceInfo = {\n                            region: sceneRegion,\n                            service: SUMERIAN_SERVICE_NAME,\n                        };\n                        request = Signer.sign({ method: 'GET', url: sceneUrl }, accessInfo, serviceInfo);\n                        fetchOptions.headers = __assign(__assign({}, fetchOptions.headers), request.headers);\n                        url = request.url;\n                        return [3 /*break*/, 4];\n                    case 3:\n                        e_1 = _d.sent();\n                        logger.debug('No credentials available, the request will be unsigned');\n                        return [3 /*break*/, 4];\n                    case 4: return [4 /*yield*/, fetch(url, fetchOptions)];\n                    case 5:\n                        apiResponse = _d.sent();\n                        return [4 /*yield*/, apiResponse.json()];\n                    case 6:\n                        apiResponseJson = _d.sent();\n                        if (apiResponse.status === 403) {\n                            if (apiResponseJson.message) {\n                                logger.error(\"Failure to authenticate user: \" + apiResponseJson.message);\n                                throw new XRSceneLoadFailure(\"Failure to authenticate user: \" + apiResponseJson.message);\n                            }\n                            else {\n                                logger.error(\"Failure to authenticate user\");\n                                throw new XRSceneLoadFailure(\"Failure to authenticate user\");\n                            }\n                        }\n                        sceneBundleData = apiResponseJson.bundleData[sceneId];\n                        return [4 /*yield*/, fetch(sceneBundleData.url, {\n                                headers: sceneBundleData.headers,\n                            })];\n                    case 7:\n                        sceneBundle = _d.sent();\n                        return [4 /*yield*/, sceneBundle.json()];\n                    case 8:\n                        sceneBundleJson = _d.sent();\n                        _d.label = 9;\n                    case 9:\n                        _d.trys.push([9, 11, , 12]);\n                        // Load the Sumerian bootstrapper script into the DOM\n                        return [4 /*yield*/, this.loadScript(sceneBundleJson[sceneId].bootstrapperUrl)];\n                    case 10:\n                        // Load the Sumerian bootstrapper script into the DOM\n                        _d.sent();\n                        return [3 /*break*/, 12];\n                    case 11:\n                        error_1 = _d.sent();\n                        logger.error(error_1);\n                        throw new XRSceneLoadFailure(error_1);\n                    case 12:\n                        progressCallback = sceneOptions.progressCallback\n                            ? sceneOptions.progressCallback\n                            : undefined;\n                        publishParamOverrides = scene.publishParamOverrides\n                            ? scene.publishParamOverrides\n                            : undefined;\n                        sceneLoadParams = {\n                            element: element,\n                            sceneId: sceneId,\n                            sceneBundle: sceneBundleJson,\n                            apiResponse: apiResponseJson,\n                            progressCallback: progressCallback,\n                            publishParamOverrides: publishParamOverrides,\n                            awsSDKConfigOverride: awsSDKConfigOverride,\n                        };\n                        return [4 /*yield*/, window.SumerianBootstrapper.loadScene(sceneLoadParams)];\n                    case 13:\n                        sceneController = _d.sent();\n                        scene.sceneController = sceneController;\n                        scene.isLoaded = true;\n                        try {\n                            // Log scene warnings\n                            for (_a = __values(sceneController.sceneLoadWarnings), _b = _a.next(); !_b.done; _b = _a.next()) {\n                                warning = _b.value;\n                                logger.warn(\"loadScene warning: \" + warning);\n                            }\n                        }\n                        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                        finally {\n                            try {\n                                if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n                            }\n                            finally { if (e_2) throw e_2.error; }\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    SumerianProvider.prototype.isSceneLoaded = function (sceneName) {\n        var scene = this.getScene(sceneName);\n        return scene.isLoaded || false;\n    };\n    SumerianProvider.prototype.getScene = function (sceneName) {\n        if (!this.options.scenes) {\n            var errorMsg = 'No scenes were defined in the configuration';\n            logger.error(errorMsg);\n            throw new XRNoSceneConfiguredError(errorMsg);\n        }\n        if (!sceneName) {\n            var errorMsg = 'No scene name was passed';\n            logger.error(errorMsg);\n            throw new XRSceneNotFoundError(errorMsg);\n        }\n        if (!this.options.scenes[sceneName]) {\n            var errorMsg = \"Scene '\" + sceneName + \"' is not configured\";\n            logger.error(errorMsg);\n            throw new XRSceneNotFoundError(errorMsg);\n        }\n        return this.options.scenes[sceneName];\n    };\n    SumerianProvider.prototype.getSceneController = function (sceneName) {\n        if (!this.options.scenes) {\n            var errorMsg = 'No scenes were defined in the configuration';\n            logger.error(errorMsg);\n            throw new XRNoSceneConfiguredError(errorMsg);\n        }\n        var scene = this.options.scenes[sceneName];\n        if (!scene) {\n            var errorMsg = \"Scene '\" + sceneName + \"' is not configured\";\n            logger.error(errorMsg);\n            throw new XRSceneNotFoundError(errorMsg);\n        }\n        var sceneController = scene.sceneController;\n        if (!sceneController) {\n            var errorMsg = \"Scene controller for '\" + sceneName + \"' has not been loaded\";\n            logger.error(errorMsg);\n            throw new XRSceneNotLoadedError(errorMsg);\n        }\n        return sceneController;\n    };\n    SumerianProvider.prototype.isVRCapable = function (sceneName) {\n        var sceneController = this.getSceneController(sceneName);\n        return sceneController.vrCapable;\n    };\n    SumerianProvider.prototype.isVRPresentationActive = function (sceneName) {\n        var sceneController = this.getSceneController(sceneName);\n        return sceneController.vrPresentationActive;\n    };\n    SumerianProvider.prototype.start = function (sceneName) {\n        var sceneController = this.getSceneController(sceneName);\n        sceneController.start();\n    };\n    SumerianProvider.prototype.enterVR = function (sceneName) {\n        var sceneController = this.getSceneController(sceneName);\n        sceneController.enterVR();\n    };\n    SumerianProvider.prototype.exitVR = function (sceneName) {\n        var sceneController = this.getSceneController(sceneName);\n        sceneController.exitVR();\n    };\n    SumerianProvider.prototype.isMuted = function (sceneName) {\n        var sceneController = this.getSceneController(sceneName);\n        return sceneController.muted;\n    };\n    SumerianProvider.prototype.setMuted = function (sceneName, muted) {\n        var sceneController = this.getSceneController(sceneName);\n        sceneController.muted = muted;\n    };\n    SumerianProvider.prototype.onSceneEvent = function (sceneName, eventName, eventHandler) {\n        var sceneController = this.getSceneController(sceneName);\n        sceneController.on(eventName, eventHandler);\n    };\n    SumerianProvider.prototype.enableAudio = function (sceneName) {\n        var sceneController = this.getSceneController(sceneName);\n        sceneController.enableAudio();\n    };\n    return SumerianProvider;\n}(AbstractXRProvider));\nexport { SumerianProvider };\n//# sourceMappingURL=SumerianProvider.js.map"]},"metadata":{},"sourceType":"module"}