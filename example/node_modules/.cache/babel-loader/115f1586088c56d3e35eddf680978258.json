{"ast":null,"code":"var _excluded = [\"name\", \"type\", \"icon\", \"size\", \"children\", \"external\", \"disabled\", \"className\", \"variant\", \"href\"];\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport { css, jsx } from '@emotion/react';\nimport { THEME } from '../../constants/theme.constant.js';\nimport { Link } from '../link/link.component.js';\nimport { Button as Button$1 } from 'antd';\nimport React from 'react';\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() {\n  return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";\n}\nvar _ref6 = process.env.NODE_ENV === \"production\" ? {\n  name: \"zjik7\",\n  styles: \"display:flex\"\n} : {\n  name: \"e4qtex-Button\",\n  styles: \"display:flex;label:Button;\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\n// eslint-disable-next-line react/display-name\nvar Button = /*#__PURE__*/React.forwardRef(function (_ref7, _ref) {\n  var name = _ref7.name,\n    _ref7$type = _ref7.type,\n    type = _ref7$type === void 0 ? 'submit' : _ref7$type,\n    icon = _ref7.icon,\n    _ref7$size = _ref7.size,\n    size = _ref7$size === void 0 ? 'medium' : _ref7$size,\n    children = _ref7.children,\n    external = _ref7.external,\n    disabled = _ref7.disabled,\n    className = _ref7.className,\n    variant = _ref7.variant,\n    href = _ref7.href,\n    rest = _objectWithoutProperties(_ref7, _excluded);\n  return jsx(Button$1, _extends({\n    name: name\n  }, rest, {\n    disabled: disabled,\n    css: styles.button({\n      disabled: disabled,\n      variant: variant,\n      size: size\n    }),\n    className: className,\n    \"data-testid\": \"button-\".concat(name),\n    htmlType: type,\n    ref: _ref\n  }), href ? jsx(Link, {\n    name: \"link-\".concat(name),\n    href: href,\n    noStyle: true,\n    css: _ref6\n  }, icon, children && jsx(\"span\", {\n    css: styles.children\n  }, \" \", children)) : jsx(React.Fragment, null, icon, children && jsx(\"span\", {\n    css: styles.children\n  }, \" \", children)));\n});\n\n// TODO: remove unused styles (variants, size, etc)\nvar _ref2 = process.env.NODE_ENV === \"production\" ? {\n  name: \"16tm30j\",\n  styles: \"padding:9px 12px;font-size:20px\"\n} : {\n  name: \"275lyk-styles\",\n  styles: \"padding:9px 12px;font-size:20px;label:styles;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\nvar _ref3 = process.env.NODE_ENV === \"production\" ? {\n  name: \"mh03kn\",\n  styles: \"border:0;background-color:transparent;box-shadow:none;:hover,:active,:focus{border:0;background-color:transparent;}\"\n} : {\n  name: \"9gi20o-styles\",\n  styles: \"border:0;background-color:transparent;box-shadow:none;:hover,:active,:focus{border:0;background-color:transparent;};label:styles;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\nvar _ref4 = process.env.NODE_ENV === \"production\" ? {\n  name: \"1w7fe5\",\n  styles: \"cursor:not-allowed;filter:alpha(opacity=65);background-color:#cfcfcf;box-shadow:none;opacity:0.65\"\n} : {\n  name: \"wqy3h2-styles\",\n  styles: \"cursor:not-allowed;filter:alpha(opacity=65);background-color:#cfcfcf;box-shadow:none;opacity:0.65;label:styles;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\nvar _ref5 = process.env.NODE_ENV === \"production\" ? {\n  name: \"1alvnyl\",\n  styles: \"height:min-content;line-height:initial;display:flex;justify-content:center;align-items:center;width:100%;font-weight:600;border-width:0;outline:none!important;transition:all 0.3s ease-in-out;cursor:pointer;border-radius:4px;text-transform:uppercase;letter-spacing:1.5px;span:first-of-type{display:flex;justify-content:center;align-items:center;}.anticon{display:flex;justify-content:center;align-items:center;}\"\n} : {\n  name: \"dmnu2r-styles\",\n  styles: \"height:min-content;line-height:initial;display:flex;justify-content:center;align-items:center;width:100%;font-weight:600;border-width:0;outline:none!important;transition:all 0.3s ease-in-out;cursor:pointer;border-radius:4px;text-transform:uppercase;letter-spacing:1.5px;span:first-of-type{display:flex;justify-content:center;align-items:center;}.anticon{display:flex;justify-content:center;align-items:center;};label:styles;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\nvar styles = {\n  button: function button(_ref8) {\n    var disabled = _ref8.disabled,\n      variant = _ref8.variant,\n      size = _ref8.size;\n    return [_ref5, disabled && _ref4, variant === 'empty' && _ref3, variant === 'default' && /*#__PURE__*/\n    /*#__PURE__*/\n    /*#__PURE__*/\n    /*#__PURE__*/\n    css(\"background-color:#cfcfcf;color:black;:hover,:focus{background-color:\", THEME.GRAY, \";outline-color:transparent;outline-style:none;\", THEME.BOX_SHADOW_GRAY, \";}\" + (process.env.NODE_ENV === \"production\" ? \"\" : \";label:styles;\"), process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\", process.env.NODE_ENV === \"production\" ? \"\" : \";label:styles;\", process.env.NODE_ENV === \"production\" ? \"\" : \";label:styles;\", process.env.NODE_ENV === \"production\" ? \"\" : \";label:styles;\"), variant === 'default-outlined' && /*#__PURE__*/\n    /*#__PURE__*/\n    /*#__PURE__*/\n    /*#__PURE__*/\n    css(\"border:1px solid \", THEME.GRAY, \";color:black;:hover,:focus{background-color:\", THEME.GRAY, \";outline-color:transparent;outline-style:none;\", THEME.BOX_SHADOW_GREEN, \";}\" + (process.env.NODE_ENV === \"production\" ? \"\" : \";label:styles;\"), process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\", process.env.NODE_ENV === \"production\" ? \"\" : \";label:styles;\", process.env.NODE_ENV === \"production\" ? \"\" : \";label:styles;\", process.env.NODE_ENV === \"production\" ? \"\" : \";label:styles;\"), variant === 'orange' && /*#__PURE__*/\n    /*#__PURE__*/\n    /*#__PURE__*/\n    /*#__PURE__*/\n    css(\"border:1px solid \", THEME.ORANGE, \";background-color:\", THEME.ORANGE, \";color:\", THEME.BLACK, \";:focus,:hover{border:1px solid \", THEME.ORANGE, \";background-color:transparent;outline-color:transparent;outline-style:none;color:\", THEME.BLACK, \";}\" + (process.env.NODE_ENV === \"production\" ? \"\" : \";label:styles;\"), process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\", process.env.NODE_ENV === \"production\" ? \"\" : \";label:styles;\", process.env.NODE_ENV === \"production\" ? \"\" : \";label:styles;\", process.env.NODE_ENV === \"production\" ? \"\" : \";label:styles;\"), variant === 'orange-transparent' && /*#__PURE__*/\n    /*#__PURE__*/\n    /*#__PURE__*/\n    /*#__PURE__*/\n    css(\"border:1px solid \", THEME.ORANGE, \";background-color:\", THEME.ORANGE, \";color:\", THEME.BLACK, \";:focus{border:1px solid \", THEME.ORANGE, \";background-color:\", THEME.ORANGE, \";color:\", THEME.BLACK, \";}:hover{border:1px solid \", THEME.ORANGE, \";background-color:transparent;outline-color:transparent;outline-style:none;color:\", THEME.BLACK, \";}\" + (process.env.NODE_ENV === \"production\" ? \"\" : \";label:styles;\"), process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\", process.env.NODE_ENV === \"production\" ? \"\" : \";label:styles;\", process.env.NODE_ENV === \"production\" ? \"\" : \";label:styles;\", process.env.NODE_ENV === \"production\" ? \"\" : \";label:styles;\"), variant === 'orange-outline' && /*#__PURE__*/\n    /*#__PURE__*/\n    /*#__PURE__*/\n    /*#__PURE__*/\n    css(\"border:1px solid \", THEME.ORANGE, \";background-color:white;color:black;:hover,:focus{border:1px solid \", THEME.ORANGE, \";background-color:\", THEME.ORANGE, \";outline-color:transparent;outline-style:none;color:\", THEME.WHITE, \";}\" + (process.env.NODE_ENV === \"production\" ? \"\" : \";label:styles;\"), process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\", process.env.NODE_ENV === \"production\" ? \"\" : \";label:styles;\", process.env.NODE_ENV === \"production\" ? \"\" : \";label:styles;\", process.env.NODE_ENV === \"production\" ? \"\" : \";label:styles;\"), variant === 'green' && /*#__PURE__*/\n    /*#__PURE__*/\n    /*#__PURE__*/\n    /*#__PURE__*/\n    css(\"background-color:\", THEME.GREEN, \";color:white;:hover,:focus{background-color:\", THEME.GREEN, \";color:white;outline-color:transparent;outline-style:none;\", THEME.BOX_SHADOW_GREEN, \";}\" + (process.env.NODE_ENV === \"production\" ? \"\" : \";label:styles;\"), process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\", process.env.NODE_ENV === \"production\" ? \"\" : \";label:styles;\", process.env.NODE_ENV === \"production\" ? \"\" : \";label:styles;\", process.env.NODE_ENV === \"production\" ? \"\" : \";label:styles;\"), variant === 'green-outline' && /*#__PURE__*/\n    /*#__PURE__*/\n    /*#__PURE__*/\n    /*#__PURE__*/\n    css(\"border:1px solid \", THEME.GREEN, \";background-color:\", THEME.WHITE, \";color:#000;:hover,:focus{border:1px solid \", THEME.GREEN, \";outline-color:transparent;outline-style:none;color:\", THEME.BLACK, \";\", THEME.BOX_SHADOW_GREEN, \";}\" + (process.env.NODE_ENV === \"production\" ? \"\" : \";label:styles;\"), process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\", process.env.NODE_ENV === \"production\" ? \"\" : \";label:styles;\", process.env.NODE_ENV === \"production\" ? \"\" : \";label:styles;\", process.env.NODE_ENV === \"production\" ? \"\" : \";label:styles;\"), variant === 'black-outline' && /*#__PURE__*/\n    /*#__PURE__*/\n    /*#__PURE__*/\n    /*#__PURE__*/\n    css(\"border:1px solid \", THEME.BLACK, \";background-color:transparent;color:\", THEME.BLACK, \";:focus{border:1px solid \", THEME.BLACK, \";background-color:transparent;outline-color:transparent;outline-style:none;color:\", THEME.BLACK, \";}:hover{border:1px solid \", THEME.BLACK, \";background-color:\", THEME.BLACK, \";outline-color:transparent;outline-style:none;color:\", THEME.WHITE, \";}\" + (process.env.NODE_ENV === \"production\" ? \"\" : \";label:styles;\"), process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\", process.env.NODE_ENV === \"production\" ? \"\" : \";label:styles;\", process.env.NODE_ENV === \"production\" ? \"\" : \";label:styles;\", process.env.NODE_ENV === \"production\" ? \"\" : \";label:styles;\"), size === 'small' && /*#__PURE__*/\n    /*#__PURE__*/\n    /*#__PURE__*/\n    /*#__PURE__*/\n    css(\"font-size:\", THEME.SMALL_FONT_SIZE, \";padding:6px 12px;*{font-size:\", THEME.SMALL_FONT_SIZE, \";}\" + (process.env.NODE_ENV === \"production\" ? \"\" : \";label:styles;\"), process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\", process.env.NODE_ENV === \"production\" ? \"\" : \";label:styles;\", process.env.NODE_ENV === \"production\" ? \"\" : \";label:styles;\", process.env.NODE_ENV === \"production\" ? \"\" : \";label:styles;\"), size === 'medium' && /*#__PURE__*/\n    /*#__PURE__*/\n    /*#__PURE__*/\n    /*#__PURE__*/\n    css(\"height:34px;padding:7px 12px;font-size:\", THEME.BASE_FONT_SIZE, \";\" + (process.env.NODE_ENV === \"production\" ? \"\" : \";label:styles;\"), process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\", process.env.NODE_ENV === \"production\" ? \"\" : \";label:styles;\", process.env.NODE_ENV === \"production\" ? \"\" : \";label:styles;\", process.env.NODE_ENV === \"production\" ? \"\" : \";label:styles;\"), size === 'large' && _ref2];\n  },\n  children: process.env.NODE_ENV === \"production\" ? {\n    name: \"8l2p33\",\n    styles: \"display:flex;justify-content:center;align-items:center;padding-top:2px;padding-left:4px\"\n  } : {\n    name: \"1h4vuio-children\",\n    styles: \"display:flex;justify-content:center;align-items:center;padding-top:2px;padding-left:4px;label:children;\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  }\n};\nexport { Button };","map":{"version":3,"sources":["../../../../src/general-ui/button/button.component.tsx"],"names":["Button","React","forwardRef","name","type","icon","size","children","external","disabled","className","variant","href","rest","_ref","___EmotionJSX","AntButton","css","styles","button","htmlType","ref","Link","noStyle","_ref3","THEME","GRAY","BOX_SHADOW_GRAY","BOX_SHADOW_GREEN","ORANGE","BLACK","WHITE","GREEN","SMALL_FONT_SIZE","BASE_FONT_SIZE"],"mappings":"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","sourcesContent":["import { THEME } from '@common/constants/theme.constant';\nimport { Link } from '@common/general-ui/link/link.component';\nimport { ISerializedStylesList } from '@common/interfaces/serialized-styles-list.interface';\nimport { ILinkItem } from '@common/utils/make-links.util';\nimport { Button as AntButton } from 'antd';\nimport React, { ReactNode } from 'react';\nimport { css } from 'twin.macro';\n\ninterface IProps {\n    name: string;\n    variant:\n        | 'empty'\n        | 'default'\n        | 'default-outlined'\n        | 'orange'\n        | 'orange-outline'\n        | 'orange-transparent'\n        | 'green'\n        | 'green-outline'\n        | 'black-outline';\n    size?: 'small' | 'medium' | 'large';\n    disabled?: boolean;\n    onClick?: () => void;\n    external?: boolean;\n    children?: ReactNode;\n    type?: 'submit' | 'button';\n    className?: string;\n    href?: ILinkItem;\n    icon?: React.ReactNode;\n}\n\n// eslint-disable-next-line react/display-name\nexport const Button = React.forwardRef<HTMLDivElement, IProps>(\n    (\n        { name, type = 'submit', icon, size = 'medium', children, external, disabled, className, variant, href, ...rest },\n        _ref,\n    ) => {\n        return (\n            <AntButton\n                name={name}\n                {...rest}\n                disabled={disabled}\n                css={styles.button({ disabled, variant, size })}\n                className={className}\n                data-testid={`button-${name}`}\n                htmlType={type}\n                ref={_ref}\n            >\n                {href ? (\n                    <Link name={`link-${name}`} href={href} noStyle={true} tw=\"flex\">\n                        {icon}\n                        {children && <span css={styles.children}> {children}</span>}\n                    </Link>\n                ) : (\n                    <>\n                        {icon}\n                        {children && <span css={styles.children}> {children}</span>}\n                    </>\n                )}\n            </AntButton>\n        );\n    },\n);\n\n// TODO: remove unused styles (variants, size, etc)\nconst styles = {\n    button: ({ disabled, variant, size }: Pick<IProps, 'disabled' | 'variant' | 'size'>): ISerializedStylesList => [\n        css`\n            height: min-content;\n            line-height: initial;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            width: 100%;\n            font-weight: 600;\n            border-width: 0;\n            outline: none !important;\n            transition: all 0.3s ease-in-out;\n            cursor: pointer;\n            border-radius: 4px;\n            text-transform: uppercase;\n            letter-spacing: 1.5px;\n\n            span:first-of-type {\n                display: flex;\n                justify-content: center;\n                align-items: center;\n            }\n            .anticon {\n                display: flex;\n                justify-content: center;\n                align-items: center;\n            }\n        `,\n        disabled &&\n            css`\n                cursor: not-allowed;\n                filter: alpha(opacity=65);\n                background-color: #cfcfcf;\n                box-shadow: none;\n                opacity: 0.65;\n            `,\n        variant === 'empty' &&\n            css`\n                border: 0;\n                background-color: transparent;\n                box-shadow: none;\n                :hover,\n                :active,\n                :focus {\n                    border: 0;\n                    background-color: transparent;\n                }\n            `,\n        variant === 'default' &&\n            css`\n                background-color: #cfcfcf;\n                color: black;\n\n                :hover,\n                :focus {\n                    background-color: ${THEME.GRAY};\n                    outline-color: transparent;\n                    outline-style: none;\n                    ${THEME.BOX_SHADOW_GRAY}\n                }\n            `,\n        variant === 'default-outlined' &&\n            css`\n                border: 1px solid ${THEME.GRAY};\n                color: black;\n\n                :hover,\n                :focus {\n                    background-color: ${THEME.GRAY};\n                    outline-color: transparent;\n                    outline-style: none;\n                    ${THEME.BOX_SHADOW_GREEN}\n                }\n            `,\n        variant === 'orange' &&\n            css`\n                border: 1px solid ${THEME.ORANGE};\n                background-color: ${THEME.ORANGE};\n                color: ${THEME.BLACK};\n\n                :focus,\n                :hover {\n                    border: 1px solid ${THEME.ORANGE};\n                    background-color: transparent;\n                    outline-color: transparent;\n                    outline-style: none;\n                    color: ${THEME.BLACK};\n                }\n            `,\n        variant === 'orange-transparent' &&\n            css`\n                border: 1px solid ${THEME.ORANGE};\n                background-color: ${THEME.ORANGE};\n                color: ${THEME.BLACK};\n\n                :focus {\n                    border: 1px solid ${THEME.ORANGE};\n                    background-color: ${THEME.ORANGE};\n                    color: ${THEME.BLACK};\n                }\n\n                :hover {\n                    border: 1px solid ${THEME.ORANGE};\n                    background-color: transparent;\n                    outline-color: transparent;\n                    outline-style: none;\n                    color: ${THEME.BLACK};\n                }\n            `,\n        variant === 'orange-outline' &&\n            css`\n                border: 1px solid ${THEME.ORANGE};\n                background-color: white;\n                color: black;\n\n                :hover,\n                :focus {\n                    border: 1px solid ${THEME.ORANGE};\n                    background-color: ${THEME.ORANGE};\n                    outline-color: transparent;\n                    outline-style: none;\n                    color: ${THEME.WHITE};\n                }\n            `,\n\n        variant === 'green' &&\n            css`\n                background-color: ${THEME.GREEN};\n                color: white;\n\n                :hover,\n                :focus {\n                    background-color: ${THEME.GREEN};\n                    color: white;\n                    outline-color: transparent;\n                    outline-style: none;\n                    ${THEME.BOX_SHADOW_GREEN}\n                }\n            `,\n        variant === 'green-outline' &&\n            css`\n                border: 1px solid ${THEME.GREEN};\n                background-color: ${THEME.WHITE};\n                color: #000;\n\n                :hover,\n                :focus {\n                    border: 1px solid ${THEME.GREEN};\n                    outline-color: transparent;\n                    outline-style: none;\n                    color: ${THEME.BLACK};\n                    ${THEME.BOX_SHADOW_GREEN}\n                }\n            `,\n        variant === 'black-outline' &&\n            css`\n                border: 1px solid ${THEME.BLACK};\n                background-color: transparent;\n                color: ${THEME.BLACK};\n\n                :focus {\n                    border: 1px solid ${THEME.BLACK};\n                    background-color: transparent;\n                    outline-color: transparent;\n                    outline-style: none;\n                    color: ${THEME.BLACK};\n                }\n\n                :hover {\n                    border: 1px solid ${THEME.BLACK};\n                    background-color: ${THEME.BLACK};\n                    outline-color: transparent;\n                    outline-style: none;\n                    color: ${THEME.WHITE};\n                }\n            `,\n        size === 'small' &&\n            css`\n                font-size: ${THEME.SMALL_FONT_SIZE};\n                padding: 6px 12px;\n                // height: 30px;\n\n                * {\n                    font-size: ${THEME.SMALL_FONT_SIZE};\n                }\n            `,\n        size === 'medium' &&\n            css`\n                height: 34px;\n                padding: 7px 12px;\n                font-size: ${THEME.BASE_FONT_SIZE};\n            `,\n        size === 'large' &&\n            css`\n                // height: 40px;\n                padding: 9px 12px;\n                font-size: 20px;\n            `,\n    ],\n    children: css`\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        padding-top: 2px;\n        padding-left: 4px;\n    `,\n};\n"]},"metadata":{},"sourceType":"module"}