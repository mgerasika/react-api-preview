{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar React = require('react');\nconst useIsMounted = () => {\n  const ref = React.useRef(false);\n  React.useEffect(() => {\n    ref.current = true;\n    return () => {\n      ref.current = false;\n    };\n  }, []);\n  return {\n    isMounted: React.useCallback(() => ref.current, [])\n  };\n};\nexports.useIsMounted = useIsMounted;","map":{"version":3,"sources":["../../../src/hooks/use-is-mounted.hook.ts"],"names":["useIsMounted","ref","useRef","useEffect","current","isMounted","useCallback"],"mappings":";;;;;;AAEO,MAAMA,YAAY,GAAG,MAAoC;EAC5D,MAAMC,GAAG,GAAGC,KAAAA,CAAAA,MAAM,CAAC,KAAK,CAAC;EAEzBC,KAAAA,CAAAA,SAAS,CAAC,MAAM;IACZF,GAAG,CAACG,OAAO,GAAG,IAAI;IAClB,OAAO,MAAY;MACfH,GAAG,CAACG,OAAO,GAAG,KAAK;KACtB;GACJ,EAAE,EAAE,CAAC;EACN,OAAO;IAAEC,SAAS,EAAEC,KAAAA,CAAAA,WAAW,CAAC,MAAeL,GAAG,CAACG,OAAO,EAAE,EAAE;GAAG;AACrE,CAAA","sourcesContent":["import { useCallback, useEffect, useRef } from 'react';\n\nexport const useIsMounted = (): { isMounted: () => boolean } => {\n    const ref = useRef(false);\n\n    useEffect(() => {\n        ref.current = true;\n        return (): void => {\n            ref.current = false;\n        };\n    }, []);\n    return { isMounted: useCallback((): boolean => ref.current, []) };\n};\n"]},"metadata":{},"sourceType":"script"}