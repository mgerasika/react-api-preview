{"ast":null,"code":"import { objectSpread2 as _objectSpread2, extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport { useField } from '../../hooks/use-field.hook.js';\nimport { useCallback } from 'react';\nimport { RangePicker } from './range-picker.component.js';\nimport { jsx } from '@emotion/react';\nfunction FormRangePicker(props) {\n  var onChange = props.onChange,\n    onBlur = props.onBlur,\n    getCustomErrorMessage = props.getCustomErrorMessage;\n  var _useField = useField(_objectSpread2(_objectSpread2({}, props), {}, {\n      getCustomErrorMessage: getCustomErrorMessage\n    })),\n    setFieldValue = _useField.setFieldValue,\n    setFieldTouched = _useField.setFieldTouched,\n    value = _useField.value,\n    errorMessage = _useField.errorMessage,\n    triggerValidate = _useField.triggerValidate;\n  var handleChange = useCallback(function (e) {\n    onChange && onChange(e);\n    setFieldValue({\n      valueFrom: e.valueFrom,\n      valueTo: e.valueTo\n    });\n    triggerValidate();\n  }, [setFieldValue, onChange, triggerValidate]);\n  var handleBlur = useCallback(function (e) {\n    onBlur && onBlur(e);\n    setFieldTouched();\n  }, [onBlur, setFieldTouched]);\n  return jsx(RangePicker, _extends({\n    errorMessage: errorMessage\n  }, props, {\n    onChange: handleChange,\n    onBlur: handleBlur,\n    name: props.name,\n    value: value\n  }));\n}\nexport { FormRangePicker };","map":{"version":3,"sources":["../../../../src/general-ui/range-picker/form-range-picker.component.tsx"],"names":["FormRangePicker","props","onChange","onBlur","getCustomErrorMessage","setFieldValue","setFieldTouched","value","errorMessage","triggerValidate","useField","handleChange","useCallback","e","valueFrom","valueTo","handleBlur","___EmotionJSX","RangePicker","name"],"mappings":";;;;;AAKO,SAASA,eAAe,CAC3BC,KAA2E,EAChE;EACX,IAAQC,QAAQ,GAAoCD,KAAK,CAAjDC,QAAQ;IAAEC,MAAM,GAA4BF,KAAK,CAAvCE,MAAM;IAAEC,qBAAqB,GAAKH,KAAK,CAA/BG,qBAAqB;EAC/C,IAAiFM,SAAAA,GAAAA,QAAQ,CAAA,cAAA,CAAA,cAAA,CAAA,CAAA,CAAA,EAClFT,KAAK,CAAA,EAAA,CAAA,CAAA,EAAA;MACRG,qBAAqB,EAArBA;KACF,CAAA,CAAA;IAHMC,aAAa,GAAA,SAAA,CAAbA,aAAa;IAAEC,eAAe,GAAA,SAAA,CAAfA,eAAe;IAAEC,KAAK,GAAA,SAAA,CAALA,KAAK;IAAEC,YAAY,GAAA,SAAA,CAAZA,YAAY;IAAEC,eAAe,GAAA,SAAA,CAAfA,eAAe;EAK5E,IAAME,YAAY,GAAGC,WAAW,CAC5B,UAACC,CAAC,EAAK;IACHX,QAAQ,IAAIA,QAAQ,CAACW,CAAC,CAAC;IACvBR,aAAa,CAAC;MAAES,SAAS,EAAED,CAAC,CAACC,SAAS;MAAEC,OAAO,EAAEF,CAAC,CAACE;IAAQ,CAAC,CAAC;IAE7DN,eAAe,EAAE;EACpB,CAAA,EACD,CAACJ,aAAa,EAAEH,QAAQ,EAAEO,eAAe,CAAC,CAC7C;EAED,IAAMO,UAAU,GAAGJ,WAAW,CAC1B,UAACC,CAAqC,EAAK;IACvCV,MAAM,IAAIA,MAAM,CAACU,CAAC,CAAC;IACnBP,eAAe,EAAE;EACrB,CAAC,EACD,CAACH,MAAM,EAAEG,eAAe,CAAC,CAC5B;EAED,OACIW,GAAAA,CAACC,WAAW,EAAA,QAAA,CAAA;IACRV,YAAY,EAAEA;EAAa,CAAA,EACvBP,KAAK,EAAA;IACTC,QAAQ,EAAES,YAAa;IACvBR,MAAM,EAAEa,UAAW;IACnBG,IAAI,EAAElB,KAAK,CAACkB,IAAe;IAC3BZ,KAAK,EAAEA;EACT,CAAA,CAAA,CAAA;AAEV","sourcesContent":["import { useField } from '@common/hooks/use-field.hook';\nimport { IDateRange } from '@common/interfaces/date-range.interface';\nimport React, { useCallback } from 'react';\nimport { IRangePickerChangeHandler, IRangePickerProps, RangePicker } from './range-picker.component';\n\nexport function FormRangePicker<TFormValues>(\n    props: Omit<IRangePickerProps<keyof TFormValues>, 'value' | 'defaultValue'>,\n): JSX.Element {\n    const { onChange, onBlur, getCustomErrorMessage } = props;\n    const { setFieldValue, setFieldTouched, value, errorMessage, triggerValidate } = useField<IDateRange>({\n        ...props,\n        getCustomErrorMessage,\n    });\n\n    const handleChange = useCallback<IRangePickerChangeHandler>(\n        (e) => {\n            onChange && onChange(e);\n            setFieldValue({ valueFrom: e.valueFrom, valueTo: e.valueTo });\n\n            triggerValidate();\n        },\n        [setFieldValue, onChange, triggerValidate],\n    );\n\n    const handleBlur = useCallback(\n        (e: React.FocusEvent<HTMLInputElement>) => {\n            onBlur && onBlur(e);\n            setFieldTouched();\n        },\n        [onBlur, setFieldTouched],\n    );\n\n    return (\n        <RangePicker\n            errorMessage={errorMessage}\n            {...props}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            name={props.name as string}\n            value={value}\n        />\n    );\n}\n"]},"metadata":{},"sourceType":"module"}