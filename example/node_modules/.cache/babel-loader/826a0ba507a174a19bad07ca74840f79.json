{"ast":null,"code":"import { Button } from '../button/button.component.js';\nimport { DropDownPopup } from '../drop-down/drop-down-popup.component.js';\nimport { DropDown } from '../drop-down/drop-down.component.js';\nimport { t } from '../../hooks/use-t.hook.js';\nimport { useMemo, useCallback } from 'react';\nimport { jsx } from '@emotion/react';\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() {\n  return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";\n}\nvar _ref = process.env.NODE_ENV === \"production\" ? {\n  name: \"zjik7\",\n  styles: \"display:flex\"\n} : {\n  name: \"p12vgt-ActionList\",\n  styles: \"display:flex;label:ActionList;\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\nvar _ref2 = process.env.NODE_ENV === \"production\" ? {\n  name: \"dw047z\",\n  styles: \"padding-left:0.25rem\"\n} : {\n  name: \"dw047z\",\n  styles: \"padding-left:0.25rem\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\nvar _ref3 = process.env.NODE_ENV === \"production\" ? {\n  name: \"1sky5v4\",\n  styles: \"padding-top:0.25rem;padding-bottom:0.25rem\"\n} : {\n  name: \"1sky5v4\",\n  styles: \"padding-top:0.25rem;padding-bottom:0.25rem\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\nvar _ref4 = process.env.NODE_ENV === \"production\" ? {\n  name: \"1y2mh23\",\n  styles: \"margin-left:0.25rem\"\n} : {\n  name: \"gqxe86-ActionList\",\n  styles: \"margin-left:0.25rem;label:ActionList;\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\nvar _ref5 = process.env.NODE_ENV === \"production\" ? {\n  name: \"1j8bsnh\",\n  styles: \"--tw-rotate:90deg;transform:var(--tw-transform)\"\n} : {\n  name: \"z8osl3-ActionList\",\n  styles: \"--tw-rotate:90deg;transform:var(--tw-transform);label:ActionList;\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\nfunction ActionList(_ref6) {\n  let {\n    actionsCountInInlineView = 2,\n    actions,\n    onActionClick\n  } = _ref6;\n  const mainActions = useMemo(() => {\n    return actionsCountInInlineView + 1 < actions.length ? actions.slice(0, actionsCountInInlineView) : actions.slice(0, actionsCountInInlineView + 1);\n  }, [actions, actionsCountInInlineView]);\n  const subActions = useMemo(() => {\n    return actions.length === actionsCountInInlineView + 1 ? [] : actions.slice(actionsCountInInlineView) || [];\n  }, [actions, actionsCountInInlineView]);\n  const createActionClickHandler = useCallback(action => () => {\n    onActionClick && onActionClick(action);\n  }, [onActionClick]);\n  return jsx(\"div\", null, jsx(\"div\", {\n    css: _ref\n  }, mainActions.map(action => {\n    return jsx(\"div\", {\n      key: action.name,\n      css: _ref2\n    }, jsx(Button, {\n      size: \"small\",\n      variant: \"orange\",\n      name: `aciton-${action.name}`,\n      onClick: createActionClickHandler(action)\n    }, action.title));\n  }), subActions.length ? jsx(\"div\", null, jsx(DropDown, {\n    placement: \"bottomRight\",\n    showArrowIcon: false,\n    popup: jsx(DropDownPopup, null, subActions.map(subAction => {\n      return jsx(\"div\", {\n        key: subAction.name,\n        css: _ref3\n      }, jsx(Button, {\n        size: \"small\",\n        variant: \"orange\",\n        onClick: createActionClickHandler(subAction),\n        name: `aciton-${subAction.name}`\n      }, subAction.title));\n    }))\n  }, jsx(Button, {\n    name: \"add\",\n    variant: \"orange\",\n    css: _ref4,\n    size: \"small\"\n  }, t('More options'), \" \\xA0\", jsx(\"span\", {\n    css: _ref5\n  }, \">\")))) : undefined));\n}\nexport { ActionList };","map":{"version":3,"sources":["../../../../src/general-ui/actions-list/actions-list.component.tsx"],"names":["ActionList","actionsCountInInlineView","actions","onActionClick","mainActions","useMemo","length","slice","subActions","createActionClickHandler","useCallback","action","___EmotionJSX","map","name","title","subAction","t","undefined"],"mappings":"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","sourcesContent":["import { Button } from '@common/general-ui/button/button.component';\nimport { DropDownPopup } from '@common/general-ui/drop-down/drop-down-popup.component';\nimport { DropDown } from '@common/general-ui/drop-down/drop-down.component';\nimport { t } from '@common/hooks/use-t.hook';\nimport React, { useCallback, useMemo } from 'react';\nimport 'twin.macro';\n\nexport interface IActionItem<T = string> {\n    name: T;\n    title: string;\n    isVisible: boolean;\n}\n\ninterface IProps<T> {\n    actions: IActionItem<T>[];\n    actionsCountInInlineView?: number;\n    onActionClick?: (action: IActionItem<T>) => void;\n}\nexport function ActionList<T>({ actionsCountInInlineView = 2, actions, onActionClick }: IProps<T>): JSX.Element {\n    const mainActions = useMemo(() => {\n        return actionsCountInInlineView + 1 < actions.length\n            ? actions.slice(0, actionsCountInInlineView)\n            : actions.slice(0, actionsCountInInlineView + 1);\n    }, [actions, actionsCountInInlineView]);\n\n    const subActions = useMemo(() => {\n        return actions.length === actionsCountInInlineView + 1 ? [] : actions.slice(actionsCountInInlineView) || [];\n    }, [actions, actionsCountInInlineView]);\n\n    const createActionClickHandler = useCallback(\n        (action: IActionItem<T>): (() => void) =>\n            (): void => {\n                onActionClick && onActionClick(action);\n            },\n        [onActionClick],\n    );\n    return (\n        <div>\n            <div tw=\"flex\">\n                {mainActions.map((action) => {\n                    return (\n                        <div key={action.name as unknown as string} tw=\"pl-1\">\n                            <Button\n                                size=\"small\"\n                                variant=\"orange\"\n                                name={`aciton-${action.name}`}\n                                onClick={createActionClickHandler(action)}\n                            >\n                                {action.title}\n                            </Button>\n                        </div>\n                    );\n                })}\n                {subActions.length ? (\n                    <div>\n                        <DropDown\n                            placement=\"bottomRight\"\n                            showArrowIcon={false}\n                            popup={\n                                <DropDownPopup>\n                                    {subActions.map((subAction) => {\n                                        return (\n                                            <div key={subAction.name as unknown as string} tw=\"py-1\">\n                                                <Button\n                                                    size=\"small\"\n                                                    variant=\"orange\"\n                                                    onClick={createActionClickHandler(subAction)}\n                                                    name={`aciton-${subAction.name}`}\n                                                >\n                                                    {subAction.title}\n                                                </Button>\n                                            </div>\n                                        );\n                                    })}\n                                </DropDownPopup>\n                            }\n                        >\n                            <Button name=\"add\" variant=\"orange\" tw=\"ml-1\" size=\"small\">\n                                {t('More options')} &nbsp;<span tw=\"rotate-90\">&gt;</span>\n                            </Button>\n                        </DropDown>\n                    </div>\n                ) : undefined}\n            </div>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}