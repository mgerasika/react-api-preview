{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar _rollupPluginBabelHelpers = require('../../_virtual/_rollupPluginBabelHelpers.js');\nvar formControl_enum = require('../../enums/form-control.enum.js');\nvar formAddress_component = require('../address/form-address.component.js');\nvar formCheckboxGroup_component = require('../checkbox-group/form-checkbox-group.component.js');\nvar formCheckbox_component = require('../checkbox/form-checkbox.component.js');\nvar formDatePicker_component = require('../date-picker/form-date-picker.component.js');\nvar formInputLoqate_component = require('../input-loqate/form-input-loqate.component.js');\nvar formInput_component = require('../input/form-input.component.js');\nvar formMultiSelect_component = require('../multi-select/form-multi-select.component.js');\nvar formOrSwitch_component = require('../or-switch/form-or-switch.component.js');\nvar formPassword_component = require('../password/form-password.component.js');\nvar formPhoneNumber_component = require('../phone-number/form-phone-number.component.js');\nvar formRadioGroup_component = require('../radio-group/form-radio-group.component.js');\nvar formRangePicker_component = require('../range-picker/form-range-picker.component.js');\nvar formSelect_component = require('../select/form-select.component.js');\nvar formSwitch_component = require('../switch/form-switch.component.js');\nvar formTextarea_component = require('../textarea/form-textarea.component.js');\nvar formTimePicker_component = require('../time-picker/form-time-picker.component.js');\nvar formUploadImage_component = require('../upload-image/form-upload-image.component.js');\nvar React = require('react');\nvar reactHookForm = require('react-hook-form');\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\nvar React__default = /*#__PURE__*/_interopDefaultLegacy(React);\nfunction FormField(props) {\n  const {\n    onFieldChange,\n    onFieldBlur,\n    control,\n    name,\n    className,\n    maxLength,\n    readOnly,\n    ...rest\n  } = props;\n  const {\n    watch\n  } = reactHookForm.useFormContext();\n  const handleOnBlur = React.useCallback(() => {\n    onFieldBlur && onFieldBlur(name);\n  }, [name, onFieldBlur]);\n  const handleOnChange = React.useCallback(() => {\n    onFieldChange && onFieldChange(name, watch(name));\n  }, [name, onFieldChange, watch]);\n  const renderContent = () => {\n    switch (control) {\n      case formControl_enum.EFormControl.text:\n        return /*#__PURE__*/React__default[\"default\"].createElement(formInput_component.FormInput, _rollupPluginBabelHelpers[\"extends\"]({\n          type: \"text\",\n          className: className,\n          name: name,\n          onChange: handleOnChange,\n          onBlur: handleOnBlur,\n          maxLength: maxLength\n        }, rest, {\n          readOnly: readOnly\n        }));\n      case formControl_enum.EFormControl.phoneNumber:\n        return /*#__PURE__*/React__default[\"default\"].createElement(formPhoneNumber_component.FormPhoneNumber, _rollupPluginBabelHelpers[\"extends\"]({\n          type: \"text\",\n          className: className,\n          name: name,\n          onChange: handleOnChange,\n          onBlur: handleOnBlur\n        }, rest, {\n          readOnly: readOnly\n        }));\n      case formControl_enum.EFormControl.password:\n        return /*#__PURE__*/React__default[\"default\"].createElement(formPassword_component.FormPassword, _rollupPluginBabelHelpers[\"extends\"]({\n          type: \"password\",\n          className: className,\n          name: name,\n          onChange: handleOnChange,\n          onBlur: handleOnBlur\n        }, rest, {\n          readOnly: readOnly\n        }));\n      case formControl_enum.EFormControl.textArea:\n        return /*#__PURE__*/React__default[\"default\"].createElement(formTextarea_component.FormTextArea, _rollupPluginBabelHelpers[\"extends\"]({\n          className: className,\n          name: name,\n          onChange: handleOnChange,\n          onBlur: handleOnBlur,\n          maxLength: maxLength\n        }, rest, {\n          readOnly: readOnly\n        }));\n      case formControl_enum.EFormControl.checkbox:\n        return /*#__PURE__*/React__default[\"default\"].createElement(formCheckbox_component.FormCheckbox, _rollupPluginBabelHelpers[\"extends\"]({\n          className: className,\n          name: name,\n          onChange: handleOnChange,\n          onBlur: handleOnBlur\n        }, rest, {\n          readOnly: readOnly\n        }));\n      case formControl_enum.EFormControl.checkboxGroup:\n        return /*#__PURE__*/React__default[\"default\"].createElement(formCheckboxGroup_component.FormCheckboxGroup, _rollupPluginBabelHelpers[\"extends\"]({\n          className: className,\n          name: name,\n          onChange: handleOnChange,\n          onBlur: handleOnBlur\n        }, rest, {\n          readOnly: readOnly\n        }));\n      case formControl_enum.EFormControl.switch:\n        return /*#__PURE__*/React__default[\"default\"].createElement(formSwitch_component.FormSwitch, _rollupPluginBabelHelpers[\"extends\"]({\n          className: className,\n          name: name,\n          onChange: handleOnChange,\n          onBlur: handleOnBlur\n        }, rest, {\n          readOnly: readOnly\n        }));\n      case formControl_enum.EFormControl.orSwitch:\n        return /*#__PURE__*/React__default[\"default\"].createElement(formOrSwitch_component.FormORSwitch, _rollupPluginBabelHelpers[\"extends\"]({\n          className: className,\n          name: name,\n          onChange: handleOnChange,\n          onBlur: handleOnBlur,\n          childrenRight: \"\",\n          childrenLeft: \"\"\n        }, rest, {\n          readOnly: readOnly\n        }));\n      case formControl_enum.EFormControl.numeric:\n        return /*#__PURE__*/React__default[\"default\"].createElement(formInput_component.FormInput, _rollupPluginBabelHelpers[\"extends\"]({\n          className: className,\n          type: \"number\",\n          name: name,\n          onChange: handleOnChange,\n          onBlur: handleOnBlur\n        }, rest, {\n          readOnly: readOnly\n        }));\n      case formControl_enum.EFormControl.email:\n        return /*#__PURE__*/React__default[\"default\"].createElement(formInput_component.FormInput, _rollupPluginBabelHelpers[\"extends\"]({\n          className: className,\n          type: \"email\",\n          name: name,\n          onChange: handleOnChange,\n          onBlur: handleOnBlur\n        }, rest, {\n          readOnly: readOnly\n        }));\n      case formControl_enum.EFormControl.select:\n        return /*#__PURE__*/React__default[\"default\"].createElement(formSelect_component.FormSelect, _rollupPluginBabelHelpers[\"extends\"]({\n          className: className,\n          name: name\n        }, rest, {\n          onChange: handleOnChange,\n          onBlur: handleOnBlur,\n          readOnly: readOnly\n        }));\n      case formControl_enum.EFormControl.treeSelect:\n        return /*#__PURE__*/(\n          //FormTreeSelect problem with build\n          React__default[\"default\"].createElement(formSelect_component.FormSelect, _rollupPluginBabelHelpers[\"extends\"]({\n            className: className,\n            name: name\n          }, rest, {\n            onChange: handleOnChange,\n            onBlur: handleOnBlur,\n            readOnly: readOnly\n          }))\n        );\n      case formControl_enum.EFormControl.multiSelect:\n        return /*#__PURE__*/React__default[\"default\"].createElement(formMultiSelect_component.FormMultiSelect, _rollupPluginBabelHelpers[\"extends\"]({\n          className: className,\n          name: name\n        }, rest, {\n          onChange: handleOnChange,\n          onBlur: handleOnBlur,\n          readOnly: readOnly\n        }));\n      case formControl_enum.EFormControl.radioGroup:\n        return /*#__PURE__*/React__default[\"default\"].createElement(formRadioGroup_component.FormRadioGroup, _rollupPluginBabelHelpers[\"extends\"]({\n          className: className,\n          name: name,\n          onChange: handleOnChange,\n          onBlur: handleOnBlur\n        }, rest, {\n          readOnly: readOnly\n        }));\n      case formControl_enum.EFormControl.uploadImage:\n        return /*#__PURE__*/React__default[\"default\"].createElement(formUploadImage_component.FormUploadImage, _rollupPluginBabelHelpers[\"extends\"]({\n          className: className,\n          name: name,\n          onChange: handleOnChange,\n          onBlur: handleOnBlur\n        }, rest, {\n          readOnly: readOnly\n        }));\n      case formControl_enum.EFormControl.datePicker:\n        return /*#__PURE__*/React__default[\"default\"].createElement(formDatePicker_component.FormDatePicker, _rollupPluginBabelHelpers[\"extends\"]({\n          className: className,\n          name: name,\n          onChange: handleOnChange,\n          onBlur: handleOnBlur\n        }, rest, {\n          readOnly: readOnly\n        }));\n      case formControl_enum.EFormControl.rangePicker:\n        return /*#__PURE__*/React__default[\"default\"].createElement(formRangePicker_component.FormRangePicker, _rollupPluginBabelHelpers[\"extends\"]({\n          className: className,\n          name: name,\n          onChange: handleOnChange,\n          onBlur: handleOnBlur\n        }, rest, {\n          readOnly: readOnly\n        }));\n      case formControl_enum.EFormControl.inputLoqate:\n        return /*#__PURE__*/React__default[\"default\"].createElement(formInputLoqate_component.FormInputLoqate, _rollupPluginBabelHelpers[\"extends\"]({\n          className: className,\n          name: name,\n          onChange: handleOnChange,\n          onBlur: handleOnBlur\n        }, rest, {\n          readOnly: readOnly\n        }));\n      case formControl_enum.EFormControl.address:\n        return /*#__PURE__*/React__default[\"default\"].createElement(formAddress_component.FormAddress, _rollupPluginBabelHelpers[\"extends\"]({\n          className: className,\n          name: name,\n          onChange: handleOnChange,\n          onBlur: handleOnBlur\n        }, rest, {\n          readOnly: readOnly\n        }));\n      case formControl_enum.EFormControl.timePicker:\n        return /*#__PURE__*/React__default[\"default\"].createElement(formTimePicker_component.FormTimePicker, _rollupPluginBabelHelpers[\"extends\"]({\n          className: className,\n          name: name,\n          onChange: handleOnChange,\n          onBlur: handleOnBlur\n        }, rest, {\n          readOnly: readOnly\n        }));\n      default:\n        return /*#__PURE__*/React__default[\"default\"].createElement(\"div\", null, \"not implemented control=\", control);\n    }\n  };\n  return /*#__PURE__*/React__default[\"default\"].createElement(React__default[\"default\"].Fragment, null, renderContent());\n}\nexports.FormField = FormField;","map":{"version":3,"sources":["../../../../src/general-ui/form-field/form-field.component.tsx"],"names":["FormField","props","onFieldChange","onFieldBlur","control","name","className","maxLength","readOnly","rest","watch","useFormContext","handleOnBlur","useCallback","handleOnChange","renderContent","EFormControl","text","React","FormInput","phoneNumber","FormPhoneNumber","password","FormPassword","textArea","FormTextArea","checkbox","FormCheckbox","checkboxGroup","FormCheckboxGroup","switch","FormSwitch","orSwitch","FormORSwitch","numeric","email","select","FormSelect","treeSelect","multiSelect","FormMultiSelect","radioGroup","FormRadioGroup","uploadImage","FormUploadImage","datePicker","FormDatePicker","rangePicker","FormRangePicker","inputLoqate","FormInputLoqate","address","FormAddress","timePicker","FormTimePicker"],"mappings":"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","sourcesContent":["import { EFormControl } from '@common/enums/form-control.enum';\nimport { FormAddress } from '@common/general-ui/address/form-address.component';\nimport { FormCheckboxGroup } from '@common/general-ui/checkbox-group/form-checkbox-group.component';\nimport { FormCheckbox } from '@common/general-ui/checkbox/form-checkbox.component';\nimport { FormDatePicker } from '@common/general-ui/date-picker/form-date-picker.component';\nimport { FormInputLoqate } from '@common/general-ui/input-loqate/form-input-loqate.component';\nimport { FormInput as FormInput } from '@common/general-ui/input/form-input.component';\nimport { FormMultiSelect } from '@common/general-ui/multi-select/form-multi-select.component';\nimport { FormORSwitch } from '@common/general-ui/or-switch/form-or-switch.component';\nimport { FormPassword } from '@common/general-ui/password/form-password.component';\nimport { FormPhoneNumber } from '@common/general-ui/phone-number/form-phone-number.component';\nimport { FormRadioGroup } from '@common/general-ui/radio-group/form-radio-group.component';\nimport { IRadioGroupProps } from '@common/general-ui/radio-group/radio-group.component';\nimport { FormRangePicker } from '@common/general-ui/range-picker/form-range-picker.component';\nimport { FormSelect } from '@common/general-ui/select/form-select.component';\nimport { FormSwitch } from '@common/general-ui/switch/form-switch.component';\nimport { FormTextArea } from '@common/general-ui/textarea/form-textarea.component';\nimport { FormTimePicker } from '@common/general-ui/time-picker/form-time-picker.component';\nimport { FormUploadImage } from '@common/general-ui/upload-image/form-upload-image.component';\nimport { IFormFieldProps } from '@common/interfaces/form-field-props.interface';\nimport React, { useCallback } from 'react';\nimport { useFormContext } from 'react-hook-form';\n\ntype IProps<TFormValues> = {\n    className?: string;\n    name: keyof TFormValues;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    onFieldChange?: (name: keyof TFormValues, value: any) => void;\n    onFieldBlur?: (name: keyof TFormValues) => void;\n    maxLength?: number;\n} & IFormFieldProps<keyof TFormValues>;\n\nexport function FormField<TFormValues>(props: IProps<TFormValues>): JSX.Element {\n    const { onFieldChange, onFieldBlur, control, name, className, maxLength, readOnly, ...rest } = props;\n    const { watch } = useFormContext();\n\n    const handleOnBlur = useCallback(() => {\n        onFieldBlur && onFieldBlur(name);\n    }, [name, onFieldBlur]);\n\n    const handleOnChange = useCallback(() => {\n        onFieldChange && onFieldChange(name, watch(name as string));\n    }, [name, onFieldChange, watch]);\n\n    const renderContent = (): JSX.Element => {\n        switch (control) {\n            case EFormControl.text:\n                return (\n                    <FormInput<TFormValues>\n                        type=\"text\"\n                        className={className}\n                        name={name}\n                        onChange={handleOnChange}\n                        onBlur={handleOnBlur}\n                        maxLength={maxLength}\n                        {...rest}\n                        readOnly={readOnly}\n                    />\n                );\n            case EFormControl.phoneNumber:\n                return (\n                    <FormPhoneNumber<TFormValues>\n                        type=\"text\"\n                        className={className}\n                        name={name}\n                        onChange={handleOnChange}\n                        onBlur={handleOnBlur}\n                        {...rest}\n                        readOnly={readOnly}\n                    />\n                );\n            case EFormControl.password:\n                return (\n                    <FormPassword<TFormValues>\n                        type=\"password\"\n                        className={className}\n                        name={name}\n                        onChange={handleOnChange}\n                        onBlur={handleOnBlur}\n                        {...rest}\n                        readOnly={readOnly}\n                    />\n                );\n            case EFormControl.textArea:\n                return (\n                    <FormTextArea<TFormValues>\n                        className={className}\n                        name={name}\n                        onChange={handleOnChange}\n                        onBlur={handleOnBlur}\n                        maxLength={maxLength}\n                        {...rest}\n                        readOnly={readOnly}\n                    />\n                );\n            case EFormControl.checkbox:\n                return (\n                    <FormCheckbox<TFormValues>\n                        className={className}\n                        name={name}\n                        onChange={handleOnChange}\n                        onBlur={handleOnBlur}\n                        {...rest}\n                        readOnly={readOnly}\n                    />\n                );\n            case EFormControl.checkboxGroup:\n                return (\n                    <FormCheckboxGroup<TFormValues>\n                        className={className}\n                        name={name}\n                        onChange={handleOnChange}\n                        onBlur={handleOnBlur}\n                        {...rest}\n                        readOnly={readOnly}\n                    />\n                );\n            case EFormControl.switch:\n                return (\n                    <FormSwitch<TFormValues>\n                        className={className}\n                        name={name}\n                        onChange={handleOnChange}\n                        onBlur={handleOnBlur}\n                        {...rest}\n                        readOnly={readOnly}\n                    />\n                );\n            case EFormControl.orSwitch:\n                return (\n                    <FormORSwitch<TFormValues>\n                        className={className}\n                        name={name}\n                        onChange={handleOnChange}\n                        onBlur={handleOnBlur}\n                        childrenRight=\"\"\n                        childrenLeft=\"\"\n                        {...rest}\n                        readOnly={readOnly}\n                    />\n                );\n            case EFormControl.numeric:\n                return (\n                    <FormInput<TFormValues>\n                        className={className}\n                        type=\"number\"\n                        name={name}\n                        onChange={handleOnChange}\n                        onBlur={handleOnBlur}\n                        {...rest}\n                        readOnly={readOnly}\n                    />\n                );\n            case EFormControl.email:\n                return (\n                    <FormInput<TFormValues>\n                        className={className}\n                        type=\"email\"\n                        name={name}\n                        onChange={handleOnChange}\n                        onBlur={handleOnBlur}\n                        {...rest}\n                        readOnly={readOnly}\n                    />\n                );\n            case EFormControl.select:\n                return (\n                    <FormSelect<TFormValues>\n                        className={className}\n                        name={name}\n                        {...rest}\n                        onChange={handleOnChange}\n                        onBlur={handleOnBlur}\n                        readOnly={readOnly}\n                    />\n                );\n            case EFormControl.treeSelect:\n                return (\n                    //FormTreeSelect problem with build\n                    <FormSelect<TFormValues>\n                        className={className}\n                        name={name}\n                        {...rest}\n                        onChange={handleOnChange}\n                        onBlur={handleOnBlur}\n                        readOnly={readOnly}\n                    />\n                );\n            case EFormControl.multiSelect:\n                return (\n                    <FormMultiSelect<TFormValues>\n                        className={className}\n                        name={name}\n                        {...rest}\n                        onChange={handleOnChange}\n                        onBlur={handleOnBlur}\n                        readOnly={readOnly}\n                    />\n                );\n            case EFormControl.radioGroup:\n                return (\n                    <FormRadioGroup<TFormValues>\n                        className={className}\n                        name={name}\n                        onChange={handleOnChange}\n                        onBlur={handleOnBlur}\n                        {...(rest as unknown as Omit<IRadioGroupProps<TFormValues>, 'name'>)}\n                        readOnly={readOnly}\n                    />\n                );\n\n            case EFormControl.uploadImage:\n                return (\n                    <FormUploadImage<TFormValues>\n                        className={className}\n                        name={name}\n                        onChange={handleOnChange}\n                        onBlur={handleOnBlur}\n                        {...rest}\n                        readOnly={readOnly}\n                    />\n                );\n\n            case EFormControl.datePicker:\n                return (\n                    <FormDatePicker<TFormValues>\n                        className={className}\n                        name={name}\n                        onChange={handleOnChange}\n                        onBlur={handleOnBlur}\n                        {...rest}\n                        readOnly={readOnly}\n                    />\n                );\n\n            case EFormControl.rangePicker:\n                return (\n                    <FormRangePicker<TFormValues>\n                        className={className}\n                        name={name}\n                        onChange={handleOnChange}\n                        onBlur={handleOnBlur}\n                        {...rest}\n                        readOnly={readOnly}\n                    />\n                );\n\n            case EFormControl.inputLoqate:\n                return (\n                    <FormInputLoqate<TFormValues>\n                        className={className}\n                        name={name}\n                        onChange={handleOnChange}\n                        onBlur={handleOnBlur}\n                        {...rest}\n                        readOnly={readOnly}\n                    />\n                );\n            case EFormControl.address:\n                return (\n                    <FormAddress<TFormValues>\n                        className={className}\n                        name={name}\n                        onChange={handleOnChange}\n                        onBlur={handleOnBlur}\n                        {...rest}\n                        readOnly={readOnly}\n                    />\n                );\n            case EFormControl.timePicker:\n                return (\n                    <FormTimePicker<TFormValues>\n                        className={className}\n                        name={name}\n                        onChange={handleOnChange}\n                        onBlur={handleOnBlur}\n                        {...rest}\n                        readOnly={readOnly}\n                    />\n                );\n\n            default:\n                return <div>not implemented control={control}</div>;\n        }\n    };\n\n    return <>{renderContent()}</>;\n}\n"]},"metadata":{},"sourceType":"script"}