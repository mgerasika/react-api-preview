{"ast":null,"code":"/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport { Storage as StorageClass } from './Storage';\nimport { Amplify, ConsoleLogger as Logger } from '@aws-amplify/core';\nvar logger = new Logger('Storage');\nvar _instance = null;\nvar getInstance = function getInstance() {\n  if (_instance) {\n    return _instance;\n  }\n  logger.debug('Create Storage Instance, debug');\n  _instance = new StorageClass();\n  _instance.vault = new StorageClass();\n  var old_configure = _instance.configure;\n  _instance.configure = function (options) {\n    logger.debug('storage configure called');\n    var vaultConfig = __assign({}, old_configure.call(_instance, options));\n    // set level private for each provider for the vault\n    Object.keys(vaultConfig).forEach(function (providerName) {\n      if (typeof vaultConfig[providerName] !== 'string') {\n        vaultConfig[providerName] = __assign(__assign({}, vaultConfig[providerName]), {\n          level: 'private'\n        });\n      }\n    });\n    logger.debug('storage vault configure called');\n    _instance.vault.configure(vaultConfig);\n  };\n  return _instance;\n};\nexport var Storage = getInstance();\nAmplify.register(Storage);\n/**\n * @deprecated use named import\n */\nexport default Storage;\nexport { StorageClass };\nexport * from './providers';","map":{"version":3,"sources":["../src/index.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;AAWG;;;;;;;;;;;;;AAEH,SAAS,OAAO,IAAI,YAAY,QAAQ,WAAW;AAEnD,SAAS,OAAO,EAAE,aAAa,IAAI,MAAM,QAAQ,mBAAmB;AAEpE,IAAM,MAAM,GAAG,IAAI,MAAM,CAAC,SAAS,CAAC;AAEpC,IAAI,SAAS,GAAiB,IAAI;AAElC,IAAM,WAAW,GAAG,SAAd,WAAW,GAAG;EACnB,IAAI,SAAS,EAAE;IACd,OAAO,SAAS;EAChB;EACD,MAAM,CAAC,KAAK,CAAC,gCAAgC,CAAC;EAC9C,SAAS,GAAG,IAAI,YAAY,EAAE;EAC9B,SAAS,CAAC,KAAK,GAAG,IAAI,YAAY,EAAE;EAEpC,IAAM,aAAa,GAAG,SAAS,CAAC,SAAS;EACzC,SAAS,CAAC,SAAS,GAAG,UAAA,OAAO,EAAA;IAC5B,MAAM,CAAC,KAAK,CAAC,0BAA0B,CAAC;IACxC,IAAM,WAAW,GAAA,QAAA,CAAA,CAAA,CAAA,EAAQ,aAAa,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,CAAE;IAEjE;IACA,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,UAAA,YAAY,EAAA;MAC5C,IAAI,OAAO,WAAW,CAAC,YAAY,CAAC,KAAK,QAAQ,EAAE;QAClD,WAAW,CAAC,YAAY,CAAC,GAAA,QAAA,CAAA,QAAA,CAAA,CAAA,CAAA,EACrB,WAAW,CAAC,YAAY,CAAC,CAAA,EAAA;UAC5B,KAAK,EAAE;QAAS,CAAA,CAChB;MACD;IACF,CAAC,CAAC;IACF,MAAM,CAAC,KAAK,CAAC,gCAAgC,CAAC;IAC9C,SAAS,CAAC,KAAK,CAAC,SAAS,CAAC,WAAW,CAAC;EACvC,CAAC;EACD,OAAO,SAAS;AACjB,CAAC;AAED,OAAO,IAAM,OAAO,GAAiB,WAAW,EAAE;AAClD,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC;AAEzB;;AAEG;AACH,eAAe,OAAO;AAEtB,SAAS,YAAY;AACrB,cAAc,aAAa","sourceRoot":"","sourcesContent":["/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { Storage as StorageClass } from './Storage';\nimport { Amplify, ConsoleLogger as Logger } from '@aws-amplify/core';\nvar logger = new Logger('Storage');\nvar _instance = null;\nvar getInstance = function () {\n    if (_instance) {\n        return _instance;\n    }\n    logger.debug('Create Storage Instance, debug');\n    _instance = new StorageClass();\n    _instance.vault = new StorageClass();\n    var old_configure = _instance.configure;\n    _instance.configure = function (options) {\n        logger.debug('storage configure called');\n        var vaultConfig = __assign({}, old_configure.call(_instance, options));\n        // set level private for each provider for the vault\n        Object.keys(vaultConfig).forEach(function (providerName) {\n            if (typeof vaultConfig[providerName] !== 'string') {\n                vaultConfig[providerName] = __assign(__assign({}, vaultConfig[providerName]), { level: 'private' });\n            }\n        });\n        logger.debug('storage vault configure called');\n        _instance.vault.configure(vaultConfig);\n    };\n    return _instance;\n};\nexport var Storage = getInstance();\nAmplify.register(Storage);\n/**\n * @deprecated use named import\n */\nexport default Storage;\nexport { StorageClass };\nexport * from './providers';\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}