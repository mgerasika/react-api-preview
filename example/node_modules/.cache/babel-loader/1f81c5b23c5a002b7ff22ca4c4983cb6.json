{"ast":null,"code":"import { toConsumableArray as _toConsumableArray } from '../_virtual/_rollupPluginBabelHelpers.js';\nimport { comparePath } from './compare-path.util.js';\nvar findLinksByPath = function findLinksByPath(pathName, links) {\n  var res = [];\n  links.forEach(function (link) {\n    var _link$href;\n    if (link.subLinks) {\n      var subRes = findLinksByPath(pathName, link.subLinks);\n      if (subRes && subRes.length) {\n        res.push(link);\n      }\n      res = [].concat(_toConsumableArray(res), _toConsumableArray(subRes));\n    }\n    if (link.href && comparePath((_link$href = link.href) === null || _link$href === void 0 ? void 0 : _link$href.toString(), pathName)) {\n      res.push(link);\n    }\n  });\n  return res;\n};\nexport { findLinksByPath };","map":{"version":3,"sources":["../../../src/utils/find-links-by-path.util.ts"],"names":["findLinksByPath","pathName","links","res","forEach","link","subLinks","subRes","length","push","href","comparePath","toString"],"mappings":";;AAGO,IAAMA,eAAe,GAAG,SAAlBA,eAAe,CAAIC,QAAgB,EAAEC,KAAc,EAAc;EAC1E,IAAIC,GAAY,GAAG,EAAE;EACrBD,KAAK,CAACE,OAAO,CAAC,UAACC,IAAI,EAAK;IAAA,IAAA,UAAA;IACpB,IAAIA,IAAI,CAACC,QAAQ,EAAE;MACf,IAAMC,MAAM,GAAGP,eAAe,CAACC,QAAQ,EAAEI,IAAI,CAACC,QAAQ,CAAC;MACvD,IAAIC,MAAM,IAAIA,MAAM,CAACC,MAAM,EAAE;QACzBL,GAAG,CAACM,IAAI,CAACJ,IAAI,CAAC;MAClB;MACAF,GAAG,GAAOA,EAAAA,CAAAA,MAAAA,CAAAA,kBAAAA,CAAAA,GAAG,CAAKI,EAAAA,kBAAAA,CAAAA,MAAM,CAAC,CAAA;IAC7B;IACA,IAAIF,IAAI,CAACK,IAAI,IAAIC,WAAW,CAAA,CAAA,UAAA,GAACN,IAAI,CAACK,IAAI,MAAA,IAAA,IAAA,UAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAATL,UAAAA,CAAWO,QAAQ,EAAE,EAAEX,QAAQ,CAAC,EAAE;MAC3DE,GAAG,CAACM,IAAI,CAACJ,IAAI,CAAC;IAClB;EACJ,CAAC,CAAC;EACF,OAAOF,GAAG;AACd,CAAA","sourcesContent":["import { ILink } from '@common/interfaces/link.interface';\nimport { comparePath } from './compare-path.util';\n\nexport const findLinksByPath = (pathName: string, links: ILink[]): ILink[] => {\n    let res: ILink[] = [];\n    links.forEach((link) => {\n        if (link.subLinks) {\n            const subRes = findLinksByPath(pathName, link.subLinks);\n            if (subRes && subRes.length) {\n                res.push(link);\n            }\n            res = [...res, ...subRes];\n        }\n        if (link.href && comparePath(link.href?.toString(), pathName)) {\n            res.push(link);\n        }\n    });\n    return res;\n};\n"]},"metadata":{},"sourceType":"module"}