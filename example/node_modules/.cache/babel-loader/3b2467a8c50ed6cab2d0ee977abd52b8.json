{"ast":null,"code":"var _excluded = [\"size\", \"errorMessage\", \"helperText\", \"value\", \"validate\"];\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _s, _e;\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n  return _arr;\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport { Field } from '../field/field.component.js';\nimport { Readonly } from '../readonly.component.js';\nimport { Input } from 'antd';\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { inputStyles } from './input.component.js';\nvar InputNumber = function InputNumber(props) {\n  var size = props.size,\n    errorMessage = props.errorMessage,\n    helperText = props.helperText,\n    value = props.value,\n    registerOptions = props.validate,\n    rest = _objectWithoutProperties(props, _excluded);\n  var _useState = useState(props.defaultValue || props.value),\n    _useState2 = _slicedToArray(_useState, 2),\n    val = _useState2[0],\n    setVal = _useState2[1];\n  useEffect(function () {\n    if (props.value !== undefined) {\n      setVal(props.value);\n    }\n  }, [props.value]);\n  useEffect(function () {\n    if (props.defaultValue !== undefined) {\n      setVal(props.defaultValue);\n    }\n  }, [props.defaultValue]);\n  var handleChange = useCallback(function (e) {\n    // eslint-disable-next-line no-useless-escape\n    var newValueStr = e.target.value.replaceAll(/[^-0-9\\.]/g, '');\n    newValueStr = newValueStr.replaceAll(/--/g, '-');\n    if (newValueStr.split('.').length > 2) {\n      newValueStr = (value === null || value === void 0 ? void 0 : value.toString()) || '';\n    }\n    if (newValueStr === '.') {\n      newValueStr = '';\n    }\n    setVal(newValueStr);\n    props.onChange && props.onChange(_objectSpread(_objectSpread({}, e), {}, {\n      target: _objectSpread(_objectSpread({}, e.target), {}, {\n        value: newValueStr\n      })\n    }));\n  }, [props, value]);\n  var handleBlur = useCallback(function (e) {\n    props.onBlur && props.onBlur(_objectSpread(_objectSpread({}, e), {}, {\n      target: _objectSpread(_objectSpread({}, e.target), {}, {\n        value: e.target.value\n      })\n    }));\n  }, [props]);\n  var formatText = useMemo(function () {\n    return val !== undefined ? \"\".concat(val) : '';\n  }, [val]);\n  return /*#__PURE__*/React.createElement(Field, props, /*#__PURE__*/React.createElement(\"div\", {\n    tw: \"relative\"\n  }, props.readOnly && /*#__PURE__*/React.createElement(Readonly, null), /*#__PURE__*/React.createElement(Input, _extends({}, rest, {\n    prefix: props.prefix,\n    maxLength: props.maxLength,\n    tabIndex: props.readOnly ? -1 : 0,\n    type: \"text\",\n    css: inputStyles.input(!!props.readOnly),\n    value: formatText,\n    onChange: handleChange,\n    onPaste: handleChange,\n    onBlur: handleBlur\n  }))));\n};\nexport { InputNumber };","map":{"version":3,"sources":["../../../../src/general-ui/input/input-number.component.tsx"],"names":["InputNumber","props","size","errorMessage","helperText","value","validate","registerOptions","rest","val","setVal","useState","defaultValue","useEffect","undefined","handleChange","useCallback","e","newValueStr","target","replaceAll","split","length","toString","onChange","handleBlur","onBlur","formatText","useMemo","React","tw","readOnly","Readonly","AntdInput","prefix","maxLength","tabIndex","type","css","inputStyles","input","onPaste"],"mappings":"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","sourcesContent":["import { Field } from '@common/general-ui/field/field.component';\nimport { Readonly } from '@common/general-ui/readonly.component';\nimport { Input as AntdInput } from 'antd';\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { IInputProps, inputStyles } from './input.component';\n\nexport const InputNumber = (props: IInputProps): JSX.Element => {\n    const { size, errorMessage, helperText, value, validate: registerOptions, ...rest } = props;\n\n    const [val, setVal] = useState(props.defaultValue || props.value);\n    useEffect(() => {\n        if (props.value !== undefined) {\n            setVal(props.value);\n        }\n    }, [props.value]);\n\n    useEffect(() => {\n        if (props.defaultValue !== undefined) {\n            setVal(props.defaultValue);\n        }\n    }, [props.defaultValue]);\n\n    const handleChange = useCallback(\n        (e: React.ChangeEvent<HTMLInputElement>) => {\n            // eslint-disable-next-line no-useless-escape\n            let newValueStr = e.target.value.replaceAll(/[^-0-9\\.]/g, '');\n            newValueStr = newValueStr.replaceAll(/--/g, '-');\n            if (newValueStr.split('.').length > 2) {\n                newValueStr = value?.toString() || '';\n            }\n            if (newValueStr === '.') {\n                newValueStr = '';\n            }\n\n            setVal(newValueStr);\n            props.onChange && props.onChange({ ...e, target: { ...e.target, value: newValueStr as unknown as string } });\n        },\n        [props, value],\n    );\n\n    const handleBlur = useCallback(\n        (e: React.FocusEvent<HTMLInputElement>) => {\n            props.onBlur && props.onBlur({ ...e, target: { ...e.target, value: e.target.value } });\n        },\n        [props],\n    );\n\n    const formatText = useMemo(() => {\n        return val !== undefined ? `${val}` : '';\n    }, [val]);\n\n    return (\n        <Field {...props}>\n            <div tw=\"relative\">\n                {props.readOnly && <Readonly />}\n                <AntdInput\n                    {...rest}\n                    prefix={props.prefix}\n                    maxLength={props.maxLength}\n                    tabIndex={props.readOnly ? -1 : 0}\n                    type=\"text\"\n                    css={inputStyles.input(!!props.readOnly)}\n                    value={formatText}\n                    onChange={handleChange}\n                    onPaste={handleChange as unknown as React.ClipboardEventHandler}\n                    onBlur={handleBlur}\n                />\n            </div>\n        </Field>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}