{"ast":null,"code":"const createBreadCrumbItems = routes => {\n  return routes.map(route => {\n    return {\n      link: route.url ? route.url : route,\n      // TODO: maybe we should make changes in formatRouteName (make-links-util.ts)\n      // not here\n      title: route.formattedName?.replaceAll(/-/g, ' ')\n    };\n  });\n};\nexport { createBreadCrumbItems };","map":{"version":3,"sources":["../../../src/utils/create-bread-crumb-items.util.tsx"],"names":["createBreadCrumbItems","routes","map","route","link","url","title","formattedName","replaceAll"],"mappings":"AAIaA,MAAAA,qBAAqB,GAAIC,MAAe,IAAwB;EACzE,OAAOA,MAAM,CAACC,GAAG,CAAEC,KAAkC,IAAK;IACtD,OAAO;MACHC,IAAI,EAAED,KAAK,CAACE,GAAG,GAAGF,KAAK,CAACE,GAAG,GAAGF,KAAK;MACnC;MACA;MACAG,KAAK,EAAGH,KAAK,CAAcI,aAAa,EAAEC,UAAU,CAAC,IAAI,EAAE,GAAG;KACjE;EACL,CAAC,CAAC;AACN,CAAA","sourcesContent":["import { IBreadCrumbItem } from '@common/general-ui/breadcrumb/breadcrumb.component';\nimport { ILinkItem, LinkItem } from '@common/utils/make-links.util';\n\ntype IItem = ILinkItem | { url: ILinkItem; formattedName: string };\nexport const createBreadCrumbItems = (routes: IItem[]): IBreadCrumbItem[] => {\n    return routes.map((route: IItem & { url?: ILinkItem }) => {\n        return {\n            link: route.url ? route.url : route,\n            // TODO: maybe we should make changes in formatRouteName (make-links-util.ts)\n            // not here\n            title: (route as LinkItem).formattedName?.replaceAll(/-/g, ' '),\n        };\n    });\n};\n"]},"metadata":{},"sourceType":"module"}