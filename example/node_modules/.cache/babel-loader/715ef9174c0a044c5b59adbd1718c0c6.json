{"ast":null,"code":"'use strict';\n\n//parse Empty Node as self closing node\nconst buildOptions = require('./util').buildOptions;\nconst defaultOptions = {\n  attributeNamePrefix: '@_',\n  attrNodeName: false,\n  textNodeName: '#text',\n  ignoreAttributes: true,\n  cdataTagName: false,\n  cdataPositionChar: '\\\\c',\n  format: false,\n  indentBy: '  ',\n  supressEmptyNode: false,\n  tagValueProcessor: function (a) {\n    return a;\n  },\n  attrValueProcessor: function (a) {\n    return a;\n  }\n};\nconst props = ['attributeNamePrefix', 'attrNodeName', 'textNodeName', 'ignoreAttributes', 'cdataTagName', 'cdataPositionChar', 'format', 'indentBy', 'supressEmptyNode', 'tagValueProcessor', 'attrValueProcessor', 'rootNodeName' //when array as root\n];\n\nfunction Parser(options) {\n  this.options = buildOptions(options, defaultOptions, props);\n  if (this.options.ignoreAttributes || this.options.attrNodeName) {\n    this.isAttribute = function /*a*/\n    () {\n      return false;\n    };\n  } else {\n    this.attrPrefixLen = this.options.attributeNamePrefix.length;\n    this.isAttribute = isAttribute;\n  }\n  if (this.options.cdataTagName) {\n    this.isCDATA = isCDATA;\n  } else {\n    this.isCDATA = function /*a*/\n    () {\n      return false;\n    };\n  }\n  this.replaceCDATAstr = replaceCDATAstr;\n  this.replaceCDATAarr = replaceCDATAarr;\n  this.processTextOrObjNode = processTextOrObjNode;\n  if (this.options.format) {\n    this.indentate = indentate;\n    this.tagEndChar = '>\\n';\n    this.newLine = '\\n';\n  } else {\n    this.indentate = function () {\n      return '';\n    };\n    this.tagEndChar = '>';\n    this.newLine = '';\n  }\n  if (this.options.supressEmptyNode) {\n    this.buildTextNode = buildEmptyTextNode;\n    this.buildObjNode = buildEmptyObjNode;\n  } else {\n    this.buildTextNode = buildTextValNode;\n    this.buildObjNode = buildObjectNode;\n  }\n  this.buildTextValNode = buildTextValNode;\n  this.buildObjectNode = buildObjectNode;\n}\nParser.prototype.parse = function (jObj) {\n  if (Array.isArray(jObj) && this.options.rootNodeName && this.options.rootNodeName.length > 1) {\n    jObj = {\n      [this.options.rootNodeName]: jObj\n    };\n  }\n  return this.j2x(jObj, 0).val;\n};\nParser.prototype.j2x = function (jObj, level) {\n  let attrStr = '';\n  let val = '';\n  for (let key in jObj) {\n    if (typeof jObj[key] === 'undefined') {\n      // supress undefined node\n    } else if (jObj[key] === null) {\n      val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n    } else if (jObj[key] instanceof Date) {\n      val += this.buildTextNode(jObj[key], key, '', level);\n    } else if (typeof jObj[key] !== 'object') {\n      //premitive type\n      const attr = this.isAttribute(key);\n      if (attr) {\n        attrStr += ' ' + attr + '=\"' + this.options.attrValueProcessor('' + jObj[key]) + '\"';\n      } else if (this.isCDATA(key)) {\n        if (jObj[this.options.textNodeName]) {\n          val += this.replaceCDATAstr(jObj[this.options.textNodeName], jObj[key]);\n        } else {\n          val += this.replaceCDATAstr('', jObj[key]);\n        }\n      } else {\n        //tag value\n        if (key === this.options.textNodeName) {\n          if (jObj[this.options.cdataTagName]) {\n            //value will added while processing cdata\n          } else {\n            val += this.options.tagValueProcessor('' + jObj[key]);\n          }\n        } else {\n          val += this.buildTextNode(jObj[key], key, '', level);\n        }\n      }\n    } else if (Array.isArray(jObj[key])) {\n      //repeated nodes\n      if (this.isCDATA(key)) {\n        val += this.indentate(level);\n        if (jObj[this.options.textNodeName]) {\n          val += this.replaceCDATAarr(jObj[this.options.textNodeName], jObj[key]);\n        } else {\n          val += this.replaceCDATAarr('', jObj[key]);\n        }\n      } else {\n        //nested nodes\n        const arrLen = jObj[key].length;\n        for (let j = 0; j < arrLen; j++) {\n          const item = jObj[key][j];\n          if (typeof item === 'undefined') {\n            // supress undefined node\n          } else if (item === null) {\n            val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n          } else if (typeof item === 'object') {\n            val += this.processTextOrObjNode(item, key, level);\n          } else {\n            val += this.buildTextNode(item, key, '', level);\n          }\n        }\n      }\n    } else {\n      //nested node\n      if (this.options.attrNodeName && key === this.options.attrNodeName) {\n        const Ks = Object.keys(jObj[key]);\n        const L = Ks.length;\n        for (let j = 0; j < L; j++) {\n          attrStr += ' ' + Ks[j] + '=\"' + this.options.attrValueProcessor('' + jObj[key][Ks[j]]) + '\"';\n        }\n      } else {\n        val += this.processTextOrObjNode(jObj[key], key, level);\n      }\n    }\n  }\n  return {\n    attrStr: attrStr,\n    val: val\n  };\n};\nfunction processTextOrObjNode(object, key, level) {\n  const result = this.j2x(object, level + 1);\n  if (object[this.options.textNodeName] !== undefined && Object.keys(object).length === 1) {\n    return this.buildTextNode(result.val, key, result.attrStr, level);\n  } else {\n    return this.buildObjNode(result.val, key, result.attrStr, level);\n  }\n}\nfunction replaceCDATAstr(str, cdata) {\n  str = this.options.tagValueProcessor('' + str);\n  if (this.options.cdataPositionChar === '' || str === '') {\n    return str + '<![CDATA[' + cdata + ']]' + this.tagEndChar;\n  } else {\n    return str.replace(this.options.cdataPositionChar, '<![CDATA[' + cdata + ']]' + this.tagEndChar);\n  }\n}\nfunction replaceCDATAarr(str, cdata) {\n  str = this.options.tagValueProcessor('' + str);\n  if (this.options.cdataPositionChar === '' || str === '') {\n    return str + '<![CDATA[' + cdata.join(']]><![CDATA[') + ']]' + this.tagEndChar;\n  } else {\n    for (let v in cdata) {\n      str = str.replace(this.options.cdataPositionChar, '<![CDATA[' + cdata[v] + ']]>');\n    }\n    return str + this.newLine;\n  }\n}\nfunction buildObjectNode(val, key, attrStr, level) {\n  if (attrStr && val.indexOf('<') === -1) {\n    return this.indentate(level) + '<' + key + attrStr + '>' + val +\n    //+ this.newLine\n    // + this.indentate(level)\n    '</' + key + this.tagEndChar;\n  } else {\n    return this.indentate(level) + '<' + key + attrStr + this.tagEndChar + val +\n    //+ this.newLine\n    this.indentate(level) + '</' + key + this.tagEndChar;\n  }\n}\nfunction buildEmptyObjNode(val, key, attrStr, level) {\n  if (val !== '') {\n    return this.buildObjectNode(val, key, attrStr, level);\n  } else {\n    return this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;\n    //+ this.newLine\n  }\n}\n\nfunction buildTextValNode(val, key, attrStr, level) {\n  return this.indentate(level) + '<' + key + attrStr + '>' + this.options.tagValueProcessor(val) + '</' + key + this.tagEndChar;\n}\nfunction buildEmptyTextNode(val, key, attrStr, level) {\n  if (val !== '') {\n    return this.buildTextValNode(val, key, attrStr, level);\n  } else {\n    return this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;\n  }\n}\nfunction indentate(level) {\n  return this.options.indentBy.repeat(level);\n}\nfunction isAttribute(name /*, options*/) {\n  if (name.startsWith(this.options.attributeNamePrefix)) {\n    return name.substr(this.attrPrefixLen);\n  } else {\n    return false;\n  }\n}\nfunction isCDATA(name) {\n  return name === this.options.cdataTagName;\n}\n\n//formatting\n//indentation\n//\\n after each closing or self closing tag\n\nmodule.exports = Parser;","map":{"version":3,"names":["buildOptions","require","defaultOptions","attributeNamePrefix","attrNodeName","textNodeName","ignoreAttributes","cdataTagName","cdataPositionChar","format","indentBy","supressEmptyNode","tagValueProcessor","a","attrValueProcessor","props","Parser","options","isAttribute","attrPrefixLen","length","isCDATA","replaceCDATAstr","replaceCDATAarr","processTextOrObjNode","indentate","tagEndChar","newLine","buildTextNode","buildEmptyTextNode","buildObjNode","buildEmptyObjNode","buildTextValNode","buildObjectNode","prototype","parse","jObj","Array","isArray","rootNodeName","j2x","val","level","attrStr","key","Date","attr","arrLen","j","item","Ks","Object","keys","L","object","result","undefined","str","cdata","replace","join","v","indexOf","repeat","name","startsWith","substr","module","exports"],"sources":["/home/mgerasika/Documents/git/oddbox/oddbox-frontend-npm-usage-example/node_modules/fast-xml-parser/src/json2xml.js"],"sourcesContent":["'use strict';\n//parse Empty Node as self closing node\nconst buildOptions = require('./util').buildOptions;\n\nconst defaultOptions = {\n  attributeNamePrefix: '@_',\n  attrNodeName: false,\n  textNodeName: '#text',\n  ignoreAttributes: true,\n  cdataTagName: false,\n  cdataPositionChar: '\\\\c',\n  format: false,\n  indentBy: '  ',\n  supressEmptyNode: false,\n  tagValueProcessor: function(a) {\n    return a;\n  },\n  attrValueProcessor: function(a) {\n    return a;\n  },\n};\n\nconst props = [\n  'attributeNamePrefix',\n  'attrNodeName',\n  'textNodeName',\n  'ignoreAttributes',\n  'cdataTagName',\n  'cdataPositionChar',\n  'format',\n  'indentBy',\n  'supressEmptyNode',\n  'tagValueProcessor',\n  'attrValueProcessor',\n  'rootNodeName', //when array as root\n];\n\nfunction Parser(options) {\n  this.options = buildOptions(options, defaultOptions, props);\n  if (this.options.ignoreAttributes || this.options.attrNodeName) {\n    this.isAttribute = function(/*a*/) {\n      return false;\n    };\n  } else {\n    this.attrPrefixLen = this.options.attributeNamePrefix.length;\n    this.isAttribute = isAttribute;\n  }\n  if (this.options.cdataTagName) {\n    this.isCDATA = isCDATA;\n  } else {\n    this.isCDATA = function(/*a*/) {\n      return false;\n    };\n  }\n  this.replaceCDATAstr = replaceCDATAstr;\n  this.replaceCDATAarr = replaceCDATAarr;\n\n  this.processTextOrObjNode = processTextOrObjNode\n\n  if (this.options.format) {\n    this.indentate = indentate;\n    this.tagEndChar = '>\\n';\n    this.newLine = '\\n';\n  } else {\n    this.indentate = function() {\n      return '';\n    };\n    this.tagEndChar = '>';\n    this.newLine = '';\n  }\n\n  if (this.options.supressEmptyNode) {\n    this.buildTextNode = buildEmptyTextNode;\n    this.buildObjNode = buildEmptyObjNode;\n  } else {\n    this.buildTextNode = buildTextValNode;\n    this.buildObjNode = buildObjectNode;\n  }\n\n  this.buildTextValNode = buildTextValNode;\n  this.buildObjectNode = buildObjectNode;\n}\n\nParser.prototype.parse = function(jObj) {\n  if(Array.isArray(jObj) && this.options.rootNodeName && this.options.rootNodeName.length > 1){\n    jObj = {\n      [this.options.rootNodeName] : jObj\n    }\n  }\n  return this.j2x(jObj, 0).val;\n};\n\nParser.prototype.j2x = function(jObj, level) {\n  let attrStr = '';\n  let val = '';\n  for (let key in jObj) {\n    if (typeof jObj[key] === 'undefined') {\n      // supress undefined node\n    } else if (jObj[key] === null) {\n      val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n    } else if (jObj[key] instanceof Date) {\n      val += this.buildTextNode(jObj[key], key, '', level);\n    } else if (typeof jObj[key] !== 'object') {\n      //premitive type\n      const attr = this.isAttribute(key);\n      if (attr) {\n        attrStr += ' ' + attr + '=\"' + this.options.attrValueProcessor('' + jObj[key]) + '\"';\n      } else if (this.isCDATA(key)) {\n        if (jObj[this.options.textNodeName]) {\n          val += this.replaceCDATAstr(jObj[this.options.textNodeName], jObj[key]);\n        } else {\n          val += this.replaceCDATAstr('', jObj[key]);\n        }\n      } else {\n        //tag value\n        if (key === this.options.textNodeName) {\n          if (jObj[this.options.cdataTagName]) {\n            //value will added while processing cdata\n          } else {\n            val += this.options.tagValueProcessor('' + jObj[key]);\n          }\n        } else {\n          val += this.buildTextNode(jObj[key], key, '', level);\n        }\n      }\n    } else if (Array.isArray(jObj[key])) {\n      //repeated nodes\n      if (this.isCDATA(key)) {\n        val += this.indentate(level);\n        if (jObj[this.options.textNodeName]) {\n          val += this.replaceCDATAarr(jObj[this.options.textNodeName], jObj[key]);\n        } else {\n          val += this.replaceCDATAarr('', jObj[key]);\n        }\n      } else {\n        //nested nodes\n        const arrLen = jObj[key].length;\n        for (let j = 0; j < arrLen; j++) {\n          const item = jObj[key][j];\n          if (typeof item === 'undefined') {\n            // supress undefined node\n          } else if (item === null) {\n            val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n          } else if (typeof item === 'object') {\n            val += this.processTextOrObjNode(item, key, level)\n          } else {\n            val += this.buildTextNode(item, key, '', level);\n          }\n        }\n      }\n    } else {\n      //nested node\n      if (this.options.attrNodeName && key === this.options.attrNodeName) {\n        const Ks = Object.keys(jObj[key]);\n        const L = Ks.length;\n        for (let j = 0; j < L; j++) {\n          attrStr += ' ' + Ks[j] + '=\"' + this.options.attrValueProcessor('' + jObj[key][Ks[j]]) + '\"';\n        }\n      } else {\n        val += this.processTextOrObjNode(jObj[key], key, level)\n      }\n    }\n  }\n  return {attrStr: attrStr, val: val};\n};\n\nfunction processTextOrObjNode (object, key, level) {\n  const result = this.j2x(object, level + 1);\n  if (object[this.options.textNodeName] !== undefined && Object.keys(object).length === 1) {\n    return this.buildTextNode(result.val, key, result.attrStr, level);\n  } else {\n    return this.buildObjNode(result.val, key, result.attrStr, level);\n  }\n}\n\nfunction replaceCDATAstr(str, cdata) {\n  str = this.options.tagValueProcessor('' + str);\n  if (this.options.cdataPositionChar === '' || str === '') {\n    return str + '<![CDATA[' + cdata + ']]' + this.tagEndChar;\n  } else {\n    return str.replace(this.options.cdataPositionChar, '<![CDATA[' + cdata + ']]' + this.tagEndChar);\n  }\n}\n\nfunction replaceCDATAarr(str, cdata) {\n  str = this.options.tagValueProcessor('' + str);\n  if (this.options.cdataPositionChar === '' || str === '') {\n    return str + '<![CDATA[' + cdata.join(']]><![CDATA[') + ']]' + this.tagEndChar;\n  } else {\n    for (let v in cdata) {\n      str = str.replace(this.options.cdataPositionChar, '<![CDATA[' + cdata[v] + ']]>');\n    }\n    return str + this.newLine;\n  }\n}\n\nfunction buildObjectNode(val, key, attrStr, level) {\n  if (attrStr && val.indexOf('<') === -1) {\n    return (\n      this.indentate(level) +\n      '<' +\n      key +\n      attrStr +\n      '>' +\n      val +\n      //+ this.newLine\n      // + this.indentate(level)\n      '</' +\n      key +\n      this.tagEndChar\n    );\n  } else {\n    return (\n      this.indentate(level) +\n      '<' +\n      key +\n      attrStr +\n      this.tagEndChar +\n      val +\n      //+ this.newLine\n      this.indentate(level) +\n      '</' +\n      key +\n      this.tagEndChar\n    );\n  }\n}\n\nfunction buildEmptyObjNode(val, key, attrStr, level) {\n  if (val !== '') {\n    return this.buildObjectNode(val, key, attrStr, level);\n  } else {\n    return this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;\n    //+ this.newLine\n  }\n}\n\nfunction buildTextValNode(val, key, attrStr, level) {\n  return (\n    this.indentate(level) +\n    '<' +\n    key +\n    attrStr +\n    '>' +\n    this.options.tagValueProcessor(val) +\n    '</' +\n    key +\n    this.tagEndChar\n  );\n}\n\nfunction buildEmptyTextNode(val, key, attrStr, level) {\n  if (val !== '') {\n    return this.buildTextValNode(val, key, attrStr, level);\n  } else {\n    return this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;\n  }\n}\n\nfunction indentate(level) {\n  return this.options.indentBy.repeat(level);\n}\n\nfunction isAttribute(name /*, options*/) {\n  if (name.startsWith(this.options.attributeNamePrefix)) {\n    return name.substr(this.attrPrefixLen);\n  } else {\n    return false;\n  }\n}\n\nfunction isCDATA(name) {\n  return name === this.options.cdataTagName;\n}\n\n//formatting\n//indentation\n//\\n after each closing or self closing tag\n\nmodule.exports = Parser;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}