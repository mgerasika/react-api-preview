{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.what3words = void 0;\nvar client_1 = require(\"./client\");\nfunction what3words(apiKey, config, opts) {\n  var transport = (opts === null || opts === void 0 ? void 0 : opts.transport) || require('./lib').fetchTransport();\n  var autosuggestClient = new client_1.AutosuggestClient(apiKey, config, transport);\n  var availableLanguagesClient = new client_1.AvailableLanguagesClient(apiKey, config, transport);\n  var convertTo3waClient = new client_1.ConvertTo3waClient(apiKey, config, transport);\n  var convertToCoordinatesClient = new client_1.ConvertToCoordinatesClient(apiKey, config, transport);\n  var gridSectionClient = new client_1.GridSectionClient(apiKey, config, transport);\n  var service = {\n    clients: {\n      autosuggest: autosuggestClient,\n      availableLanguages: availableLanguagesClient,\n      convertTo3wa: convertTo3waClient,\n      convertToCoordinates: convertToCoordinatesClient,\n      gridSection: gridSectionClient\n    },\n    setApiKey: function (apiKey) {\n      autosuggestClient.apiKey(apiKey);\n      availableLanguagesClient.apiKey(apiKey);\n      convertTo3waClient.apiKey(apiKey);\n      convertToCoordinatesClient.apiKey(apiKey);\n      gridSectionClient.apiKey(apiKey);\n    },\n    setConfig: function (config) {\n      autosuggestClient.config(config);\n      availableLanguagesClient.config(config);\n      convertTo3waClient.config(config);\n      convertToCoordinatesClient.config(config);\n      gridSectionClient.config(config);\n    },\n    autosuggest: autosuggestClient.run.bind(autosuggestClient),\n    autosuggestSelection: autosuggestClient.onSelected.bind(autosuggestClient),\n    availableLanguages: availableLanguagesClient.run.bind(availableLanguagesClient),\n    convertTo3wa: convertTo3waClient.run.bind(convertTo3waClient),\n    convertToCoordinates: convertToCoordinatesClient.run.bind(convertToCoordinatesClient),\n    gridSection: gridSectionClient.run.bind(gridSectionClient)\n  };\n  return service;\n}\nexports.what3words = what3words;","map":{"version":3,"sources":["../src/service.ts"],"names":[],"mappings":";;;;;;AAAA,IAAA,QAAA,GAAA,OAAA,CAAA,UAAA,CAAA;AA8DA,SAAgB,UAAU,CACxB,MAAe,EACf,MAA+B,EAC/B,IAA+B,EAAA;EAE/B,IAAM,SAAS,GAAG,CAAA,IAAI,KAAA,IAAA,IAAJ,IAAI,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAJ,IAAI,CAAE,SAAS,KAAI,OAAO,CAAC,OAAO,CAAC,CAAC,cAAc,EAAE;EACtE,IAAM,iBAAiB,GAAG,IAAI,QAAA,CAAA,iBAAiB,CAAC,MAAM,EAAE,MAAM,EAAE,SAAS,CAAC;EAC1E,IAAM,wBAAwB,GAAG,IAAI,QAAA,CAAA,wBAAwB,CAC3D,MAAM,EACN,MAAM,EACN,SAAS,CACV;EACD,IAAM,kBAAkB,GAAG,IAAI,QAAA,CAAA,kBAAkB,CAAC,MAAM,EAAE,MAAM,EAAE,SAAS,CAAC;EAC5E,IAAM,0BAA0B,GAAG,IAAI,QAAA,CAAA,0BAA0B,CAC/D,MAAM,EACN,MAAM,EACN,SAAS,CACV;EACD,IAAM,iBAAiB,GAAG,IAAI,QAAA,CAAA,iBAAiB,CAAC,MAAM,EAAE,MAAM,EAAE,SAAS,CAAC;EAC1E,IAAM,OAAO,GAAG;IACd,OAAO,EAAE;MACP,WAAW,EAAE,iBAAiB;MAC9B,kBAAkB,EAAE,wBAAwB;MAC5C,YAAY,EAAE,kBAAkB;MAChC,oBAAoB,EAAE,0BAA0B;MAChD,WAAW,EAAE;KACd;IACD,SAAS,EAAE,UAAC,MAAc,EAAA;MACxB,iBAAiB,CAAC,MAAM,CAAC,MAAM,CAAC;MAChC,wBAAwB,CAAC,MAAM,CAAC,MAAM,CAAC;MACvC,kBAAkB,CAAC,MAAM,CAAC,MAAM,CAAC;MACjC,0BAA0B,CAAC,MAAM,CAAC,MAAM,CAAC;MACzC,iBAAiB,CAAC,MAAM,CAAC,MAAM,CAAC;IAClC,CAAC;IACD,SAAS,EAAE,UAAC,MAA8B,EAAA;MACxC,iBAAiB,CAAC,MAAM,CAAC,MAAM,CAAC;MAChC,wBAAwB,CAAC,MAAM,CAAC,MAAM,CAAC;MACvC,kBAAkB,CAAC,MAAM,CAAC,MAAM,CAAC;MACjC,0BAA0B,CAAC,MAAM,CAAC,MAAM,CAAC;MACzC,iBAAiB,CAAC,MAAM,CAAC,MAAM,CAAC;IAClC,CAAC;IACD,WAAW,EAAE,iBAAiB,CAAC,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC;IAC1D,oBAAoB,EAAE,iBAAiB,CAAC,UAAU,CAAC,IAAI,CAAC,iBAAiB,CAAC;IAC1E,kBAAkB,EAAE,wBAAwB,CAAC,GAAG,CAAC,IAAI,CACnD,wBAAwB,CACzB;IACD,YAAY,EAAE,kBAAkB,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC;IAC7D,oBAAoB,EAAE,0BAA0B,CAAC,GAAG,CAAC,IAAI,CACvD,0BAA0B,CAC3B;IACD,WAAW,EAAE,iBAAiB,CAAC,GAAG,CAAC,IAAI,CAAC,iBAAiB;GAC1D;EAED,OAAO,OAAO;AAChB;AAtDA,OAAA,CAAA,UAAA,GAAA,UAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.what3words = void 0;\nvar client_1 = require(\"./client\");\nfunction what3words(apiKey, config, opts) {\n    var transport = (opts === null || opts === void 0 ? void 0 : opts.transport) || require('./lib').fetchTransport();\n    var autosuggestClient = new client_1.AutosuggestClient(apiKey, config, transport);\n    var availableLanguagesClient = new client_1.AvailableLanguagesClient(apiKey, config, transport);\n    var convertTo3waClient = new client_1.ConvertTo3waClient(apiKey, config, transport);\n    var convertToCoordinatesClient = new client_1.ConvertToCoordinatesClient(apiKey, config, transport);\n    var gridSectionClient = new client_1.GridSectionClient(apiKey, config, transport);\n    var service = {\n        clients: {\n            autosuggest: autosuggestClient,\n            availableLanguages: availableLanguagesClient,\n            convertTo3wa: convertTo3waClient,\n            convertToCoordinates: convertToCoordinatesClient,\n            gridSection: gridSectionClient,\n        },\n        setApiKey: function (apiKey) {\n            autosuggestClient.apiKey(apiKey);\n            availableLanguagesClient.apiKey(apiKey);\n            convertTo3waClient.apiKey(apiKey);\n            convertToCoordinatesClient.apiKey(apiKey);\n            gridSectionClient.apiKey(apiKey);\n        },\n        setConfig: function (config) {\n            autosuggestClient.config(config);\n            availableLanguagesClient.config(config);\n            convertTo3waClient.config(config);\n            convertToCoordinatesClient.config(config);\n            gridSectionClient.config(config);\n        },\n        autosuggest: autosuggestClient.run.bind(autosuggestClient),\n        autosuggestSelection: autosuggestClient.onSelected.bind(autosuggestClient),\n        availableLanguages: availableLanguagesClient.run.bind(availableLanguagesClient),\n        convertTo3wa: convertTo3waClient.run.bind(convertTo3waClient),\n        convertToCoordinates: convertToCoordinatesClient.run.bind(convertToCoordinatesClient),\n        gridSection: gridSectionClient.run.bind(gridSectionClient),\n    };\n    return service;\n}\nexports.what3words = what3words;\n//# sourceMappingURL=service.js.map"]},"metadata":{},"sourceType":"script"}