{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spread = this && this.__spread || function () {\n  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n  return ar;\n};\nimport Auth from '@aws-amplify/auth';\nimport { GRAPHQL_AUTH_MODE } from '@aws-amplify/api-graphql';\nimport { ModelAttributeAuthProvider, ModelAttributeAuthAllow } from '../types';\nfunction getProviderFromRule(rule) {\n  // private with no provider means userPools\n  if (rule.allow === 'private' && !rule.provider) {\n    return ModelAttributeAuthProvider.USER_POOLS;\n  }\n  // public with no provider means apiKey\n  if (rule.allow === 'public' && !rule.provider) {\n    return ModelAttributeAuthProvider.API_KEY;\n  }\n  return rule.provider;\n}\nfunction sortAuthRulesWithPriority(rules) {\n  var allowSortPriority = [ModelAttributeAuthAllow.CUSTOM, ModelAttributeAuthAllow.OWNER, ModelAttributeAuthAllow.GROUPS, ModelAttributeAuthAllow.PRIVATE, ModelAttributeAuthAllow.PUBLIC];\n  var providerSortPriority = [ModelAttributeAuthProvider.FUNCTION, ModelAttributeAuthProvider.USER_POOLS, ModelAttributeAuthProvider.OIDC, ModelAttributeAuthProvider.IAM, ModelAttributeAuthProvider.API_KEY];\n  return __spread(rules).sort(function (a, b) {\n    if (a.allow === b.allow) {\n      return providerSortPriority.indexOf(getProviderFromRule(a)) - providerSortPriority.indexOf(getProviderFromRule(b));\n    }\n    return allowSortPriority.indexOf(a.allow) - allowSortPriority.indexOf(b.allow);\n  });\n}\nfunction getAuthRules(_a) {\n  var rules = _a.rules,\n    currentUser = _a.currentUser;\n  // Using Set to ensure uniqueness\n  var authModes = new Set();\n  rules.forEach(function (rule) {\n    switch (rule.allow) {\n      case ModelAttributeAuthAllow.CUSTOM:\n        // custom with no provider -> function\n        if (!rule.provider || rule.provider === ModelAttributeAuthProvider.FUNCTION) {\n          authModes.add(GRAPHQL_AUTH_MODE.AWS_LAMBDA);\n        }\n        break;\n      case ModelAttributeAuthAllow.GROUPS:\n      case ModelAttributeAuthAllow.OWNER:\n        {\n          // We shouldn't attempt User Pool or OIDC if there isn't an authenticated user\n          if (currentUser) {\n            if (rule.provider === ModelAttributeAuthProvider.USER_POOLS) {\n              authModes.add(GRAPHQL_AUTH_MODE.AMAZON_COGNITO_USER_POOLS);\n            } else if (rule.provider === ModelAttributeAuthProvider.OIDC) {\n              authModes.add(GRAPHQL_AUTH_MODE.OPENID_CONNECT);\n            }\n          }\n          break;\n        }\n      case ModelAttributeAuthAllow.PRIVATE:\n        {\n          // We shouldn't attempt private if there isn't an authenticated user\n          if (currentUser) {\n            // private with no provider means userPools\n            if (!rule.provider || rule.provider === ModelAttributeAuthProvider.USER_POOLS) {\n              authModes.add(GRAPHQL_AUTH_MODE.AMAZON_COGNITO_USER_POOLS);\n            } else if (rule.provider === ModelAttributeAuthProvider.IAM) {\n              authModes.add(GRAPHQL_AUTH_MODE.AWS_IAM);\n            }\n          }\n          break;\n        }\n      case ModelAttributeAuthAllow.PUBLIC:\n        {\n          if (rule.provider === ModelAttributeAuthProvider.IAM) {\n            authModes.add(GRAPHQL_AUTH_MODE.AWS_IAM);\n          } else if (!rule.provider || rule.provider === ModelAttributeAuthProvider.API_KEY) {\n            // public with no provider means apiKey\n            authModes.add(GRAPHQL_AUTH_MODE.API_KEY);\n          }\n          break;\n        }\n      default:\n        break;\n    }\n  });\n  return Array.from(authModes);\n}\n/**\n * Returns an array of auth modes to try based on the schema, model, and\n * authenticated user (or lack thereof). Rules are sourced from `getAuthRules`\n * and returned in the order they ought to be attempted.\n *\n * @see sortAuthRulesWithPriority\n * @see getAuthRules\n *\n * @param param0 The `{schema, modelName}` to inspect.\n * @returns A sorted array of auth modes to attempt.\n */\nexport var multiAuthStrategy = function (amplifyContext) {\n  return function (_a) {\n    var schema = _a.schema,\n      modelName = _a.modelName;\n    return __awaiter(void 0, void 0, void 0, function () {\n      var currentUser, e_1, attributes, authAttribute, sortedRules;\n      var _b;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            amplifyContext.Auth = amplifyContext.Auth || Auth;\n            _c.label = 1;\n          case 1:\n            _c.trys.push([1, 3,, 4]);\n            return [4 /*yield*/, amplifyContext.Auth.currentAuthenticatedUser()];\n          case 2:\n            currentUser = _c.sent();\n            return [3 /*break*/, 4];\n          case 3:\n            e_1 = _c.sent();\n            return [3 /*break*/, 4];\n          case 4:\n            attributes = schema.namespaces.user.models[modelName].attributes;\n            if (attributes) {\n              authAttribute = attributes.find(function (attr) {\n                return attr.type === 'auth';\n              });\n              if ((_b = authAttribute === null || authAttribute === void 0 ? void 0 : authAttribute.properties) === null || _b === void 0 ? void 0 : _b.rules) {\n                sortedRules = sortAuthRulesWithPriority(authAttribute.properties.rules);\n                return [2 /*return*/, getAuthRules({\n                  currentUser: currentUser,\n                  rules: sortedRules\n                })];\n              }\n            }\n            return [2 /*return*/, []];\n        }\n      });\n    });\n  };\n};","map":{"version":3,"sources":["../../src/authModeStrategies/multiAuthStrategy.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nimport Auth from '@aws-amplify/auth';\nimport { GRAPHQL_AUTH_MODE } from '@aws-amplify/api-graphql';\nimport { ModelAttributeAuthProvider, ModelAttributeAuthAllow, } from '../types';\nfunction getProviderFromRule(rule) {\n    // private with no provider means userPools\n    if (rule.allow === 'private' && !rule.provider) {\n        return ModelAttributeAuthProvider.USER_POOLS;\n    }\n    // public with no provider means apiKey\n    if (rule.allow === 'public' && !rule.provider) {\n        return ModelAttributeAuthProvider.API_KEY;\n    }\n    return rule.provider;\n}\nfunction sortAuthRulesWithPriority(rules) {\n    var allowSortPriority = [\n        ModelAttributeAuthAllow.CUSTOM,\n        ModelAttributeAuthAllow.OWNER,\n        ModelAttributeAuthAllow.GROUPS,\n        ModelAttributeAuthAllow.PRIVATE,\n        ModelAttributeAuthAllow.PUBLIC,\n    ];\n    var providerSortPriority = [\n        ModelAttributeAuthProvider.FUNCTION,\n        ModelAttributeAuthProvider.USER_POOLS,\n        ModelAttributeAuthProvider.OIDC,\n        ModelAttributeAuthProvider.IAM,\n        ModelAttributeAuthProvider.API_KEY,\n    ];\n    return __spread(rules).sort(function (a, b) {\n        if (a.allow === b.allow) {\n            return (providerSortPriority.indexOf(getProviderFromRule(a)) -\n                providerSortPriority.indexOf(getProviderFromRule(b)));\n        }\n        return (allowSortPriority.indexOf(a.allow) - allowSortPriority.indexOf(b.allow));\n    });\n}\nfunction getAuthRules(_a) {\n    var rules = _a.rules, currentUser = _a.currentUser;\n    // Using Set to ensure uniqueness\n    var authModes = new Set();\n    rules.forEach(function (rule) {\n        switch (rule.allow) {\n            case ModelAttributeAuthAllow.CUSTOM:\n                // custom with no provider -> function\n                if (!rule.provider ||\n                    rule.provider === ModelAttributeAuthProvider.FUNCTION) {\n                    authModes.add(GRAPHQL_AUTH_MODE.AWS_LAMBDA);\n                }\n                break;\n            case ModelAttributeAuthAllow.GROUPS:\n            case ModelAttributeAuthAllow.OWNER: {\n                // We shouldn't attempt User Pool or OIDC if there isn't an authenticated user\n                if (currentUser) {\n                    if (rule.provider === ModelAttributeAuthProvider.USER_POOLS) {\n                        authModes.add(GRAPHQL_AUTH_MODE.AMAZON_COGNITO_USER_POOLS);\n                    }\n                    else if (rule.provider === ModelAttributeAuthProvider.OIDC) {\n                        authModes.add(GRAPHQL_AUTH_MODE.OPENID_CONNECT);\n                    }\n                }\n                break;\n            }\n            case ModelAttributeAuthAllow.PRIVATE: {\n                // We shouldn't attempt private if there isn't an authenticated user\n                if (currentUser) {\n                    // private with no provider means userPools\n                    if (!rule.provider ||\n                        rule.provider === ModelAttributeAuthProvider.USER_POOLS) {\n                        authModes.add(GRAPHQL_AUTH_MODE.AMAZON_COGNITO_USER_POOLS);\n                    }\n                    else if (rule.provider === ModelAttributeAuthProvider.IAM) {\n                        authModes.add(GRAPHQL_AUTH_MODE.AWS_IAM);\n                    }\n                }\n                break;\n            }\n            case ModelAttributeAuthAllow.PUBLIC: {\n                if (rule.provider === ModelAttributeAuthProvider.IAM) {\n                    authModes.add(GRAPHQL_AUTH_MODE.AWS_IAM);\n                }\n                else if (!rule.provider ||\n                    rule.provider === ModelAttributeAuthProvider.API_KEY) {\n                    // public with no provider means apiKey\n                    authModes.add(GRAPHQL_AUTH_MODE.API_KEY);\n                }\n                break;\n            }\n            default:\n                break;\n        }\n    });\n    return Array.from(authModes);\n}\n/**\n * Returns an array of auth modes to try based on the schema, model, and\n * authenticated user (or lack thereof). Rules are sourced from `getAuthRules`\n * and returned in the order they ought to be attempted.\n *\n * @see sortAuthRulesWithPriority\n * @see getAuthRules\n *\n * @param param0 The `{schema, modelName}` to inspect.\n * @returns A sorted array of auth modes to attempt.\n */\nexport var multiAuthStrategy = function (amplifyContext) {\n    return function (_a) {\n        var schema = _a.schema, modelName = _a.modelName;\n        return __awaiter(void 0, void 0, void 0, function () {\n            var currentUser, e_1, attributes, authAttribute, sortedRules;\n            var _b;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        amplifyContext.Auth = amplifyContext.Auth || Auth;\n                        _c.label = 1;\n                    case 1:\n                        _c.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, amplifyContext.Auth.currentAuthenticatedUser()];\n                    case 2:\n                        currentUser = _c.sent();\n                        return [3 /*break*/, 4];\n                    case 3:\n                        e_1 = _c.sent();\n                        return [3 /*break*/, 4];\n                    case 4:\n                        attributes = schema.namespaces.user.models[modelName].attributes;\n                        if (attributes) {\n                            authAttribute = attributes.find(function (attr) { return attr.type === 'auth'; });\n                            if ((_b = authAttribute === null || authAttribute === void 0 ? void 0 : authAttribute.properties) === null || _b === void 0 ? void 0 : _b.rules) {\n                                sortedRules = sortAuthRulesWithPriority(authAttribute.properties.rules);\n                                return [2 /*return*/, getAuthRules({ currentUser: currentUser, rules: sortedRules })];\n                            }\n                        }\n                        return [2 /*return*/, []];\n                }\n            });\n        });\n    };\n};\n//# sourceMappingURL=multiAuthStrategy.js.map"]},"metadata":{},"sourceType":"module"}