{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { ListBucketInventoryConfigurationsOutput, ListBucketInventoryConfigurationsRequest } from \"../models/models_0\";\nimport { deserializeAws_restXmlListBucketInventoryConfigurationsCommand, serializeAws_restXmlListBucketInventoryConfigurationsCommand } from \"../protocols/Aws_restXml\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Returns a list of inventory configurations for the bucket. You can have up to 1,000\n *          analytics configurations per bucket.</p>\n *\n *          <p>This operation supports list pagination and does not return more than 100 configurations\n *          at a time. Always check the <code>IsTruncated</code> element in the response. If there are\n *          no more configurations to list, <code>IsTruncated</code> is set to false. If there are more\n *          configurations to list, <code>IsTruncated</code> is set to true, and there is a value in\n *             <code>NextContinuationToken</code>. You use the <code>NextContinuationToken</code> value\n *          to continue the pagination of the list by passing the value in continuation-token in the\n *          request to <code>GET</code> the next page.</p>\n *\n *          <p> To use this operation, you must have permissions to perform the\n *             <code>s3:GetInventoryConfiguration</code> action. The bucket owner has this permission\n *          by default. The bucket owner can grant this permission to others. For more information\n *          about permissions, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources\">Permissions Related to Bucket Subresource Operations</a> and <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html\">Managing Access Permissions to Your Amazon S3\n *             Resources</a>.</p>\n *\n *          <p>For information about the Amazon S3 inventory feature, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-inventory.html\">Amazon S3 Inventory</a>\n *          </p>\n *\n *          <p>The following operations are related to\n *          <code>ListBucketInventoryConfigurations</code>:</p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketInventoryConfiguration.html\">GetBucketInventoryConfiguration</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketInventoryConfiguration.html\">DeleteBucketInventoryConfiguration</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketInventoryConfiguration.html\">PutBucketInventoryConfiguration</a>\n *                </p>\n *             </li>\n *          </ul>\n */\nvar ListBucketInventoryConfigurationsCommand = /** @class */function (_super) {\n  __extends(ListBucketInventoryConfigurationsCommand, _super);\n  // Start section: command_properties\n  // End section: command_properties\n  function ListBucketInventoryConfigurationsCommand(input) {\n    var _this =\n    // Start section: command_constructor\n    _super.call(this) || this;\n    _this.input = input;\n    return _this;\n    // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n  ListBucketInventoryConfigurationsCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"S3Client\";\n    var commandName = \"ListBucketInventoryConfigurationsCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: ListBucketInventoryConfigurationsRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: ListBucketInventoryConfigurationsOutput.filterSensitiveLog\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n  ListBucketInventoryConfigurationsCommand.prototype.serialize = function (input, context) {\n    return serializeAws_restXmlListBucketInventoryConfigurationsCommand(input, context);\n  };\n  ListBucketInventoryConfigurationsCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_restXmlListBucketInventoryConfigurationsCommand(output, context);\n  };\n  return ListBucketInventoryConfigurationsCommand;\n}($Command);\nexport { ListBucketInventoryConfigurationsCommand };","map":{"version":3,"sources":["../../../commands/ListBucketInventoryConfigurationsCommand.ts"],"names":[],"mappings":";AACA,SAAS,uCAAuC,EAAE,wCAAwC,QAAQ,oBAAoB;AACtH,SACE,8DAA8D,EAC9D,4DAA4D,QACvD,0BAA0B;AACjC,SAAS,uBAAuB,QAAQ,qCAAqC;AAC7E,SAAS,cAAc,QAAQ,2BAA2B;AAE1D,SAAS,OAAO,IAAI,QAAQ,QAAQ,wBAAwB;AAc5D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCG;AACH,IAAA,wCAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAA8D,SAAA,CAAA,wCAAA,EAAA,MAAA,CAAA;EAK5D;EACA;EAEA,SAAA,wCAAA,CAAqB,KAAoD,EAAA;IAAzE,IAAA,KAAA;IACE;IACA,MAAA,CAAA,IAAA,CAAA,IAAA,CAAO,IAAA,IAAA;IAFY,KAAA,CAAA,KAAK,GAAL,KAAK;;IAGxB;EACF;EAEA;;AAEG;EACH,wCAAA,CAAA,SAAA,CAAA,iBAAiB,GAAjB,UACE,WAAmE,EACnE,aAAqC,EACrC,OAA8B,EAAA;IAE9B,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,cAAc,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IACzF,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,uBAAuB,CAAC,aAAa,CAAC,CAAC;IAEhE,IAAM,KAAK,GAAG,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC;IAE9C,IAAA,MAAM,GAAK,aAAa,CAAA,MAAlB;IACd,IAAM,UAAU,GAAG,UAAU;IAC7B,IAAM,WAAW,GAAG,0CAA0C;IAC9D,IAAM,uBAAuB,GAA4B;MACvD,MAAM,EAAA,MAAA;MACN,UAAU,EAAA,UAAA;MACV,WAAW,EAAA,WAAA;MACX,uBAAuB,EAAE,wCAAwC,CAAC,kBAAkB;MACpF,wBAAwB,EAAE,uCAAuC,CAAC;KACnE;IACO,IAAA,cAAc,GAAK,aAAa,CAAA,cAAlB;IACtB,OAAO,KAAK,CAAC,OAAO,CAClB,UAAC,OAAsC,EAAA;MACrC,OAAA,cAAc,CAAC,MAAM,CAAC,OAAO,CAAC,OAAwB,EAAE,OAAO,IAAI,CAAA,CAAE,CAAC;IAAtE,CAAsE,EACxE,uBAAuB,CACxB;EACH,CAAC;EAEO,wCAAA,CAAA,SAAA,CAAA,SAAS,GAAjB,UACE,KAAoD,EACpD,OAAuB,EAAA;IAEvB,OAAO,4DAA4D,CAAC,KAAK,EAAE,OAAO,CAAC;EACrF,CAAC;EAEO,wCAAA,CAAA,SAAA,CAAA,WAAW,GAAnB,UACE,MAAsB,EACtB,OAAuB,EAAA;IAEvB,OAAO,8DAA8D,CAAC,MAAM,EAAE,OAAO,CAAC;EACxF,CAAC;EAIH,OAAA,wCAAC;AAAD,CAAC,CA7D6D,QAAQ,CAAA","sourceRoot":"","sourcesContent":["import { __extends } from \"tslib\";\nimport { ListBucketInventoryConfigurationsOutput, ListBucketInventoryConfigurationsRequest } from \"../models/models_0\";\nimport { deserializeAws_restXmlListBucketInventoryConfigurationsCommand, serializeAws_restXmlListBucketInventoryConfigurationsCommand, } from \"../protocols/Aws_restXml\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Returns a list of inventory configurations for the bucket. You can have up to 1,000\n *          analytics configurations per bucket.</p>\n *\n *          <p>This operation supports list pagination and does not return more than 100 configurations\n *          at a time. Always check the <code>IsTruncated</code> element in the response. If there are\n *          no more configurations to list, <code>IsTruncated</code> is set to false. If there are more\n *          configurations to list, <code>IsTruncated</code> is set to true, and there is a value in\n *             <code>NextContinuationToken</code>. You use the <code>NextContinuationToken</code> value\n *          to continue the pagination of the list by passing the value in continuation-token in the\n *          request to <code>GET</code> the next page.</p>\n *\n *          <p> To use this operation, you must have permissions to perform the\n *             <code>s3:GetInventoryConfiguration</code> action. The bucket owner has this permission\n *          by default. The bucket owner can grant this permission to others. For more information\n *          about permissions, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources\">Permissions Related to Bucket Subresource Operations</a> and <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html\">Managing Access Permissions to Your Amazon S3\n *             Resources</a>.</p>\n *\n *          <p>For information about the Amazon S3 inventory feature, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-inventory.html\">Amazon S3 Inventory</a>\n *          </p>\n *\n *          <p>The following operations are related to\n *          <code>ListBucketInventoryConfigurations</code>:</p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketInventoryConfiguration.html\">GetBucketInventoryConfiguration</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketInventoryConfiguration.html\">DeleteBucketInventoryConfiguration</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketInventoryConfiguration.html\">PutBucketInventoryConfiguration</a>\n *                </p>\n *             </li>\n *          </ul>\n */\nvar ListBucketInventoryConfigurationsCommand = /** @class */ (function (_super) {\n    __extends(ListBucketInventoryConfigurationsCommand, _super);\n    // Start section: command_properties\n    // End section: command_properties\n    function ListBucketInventoryConfigurationsCommand(input) {\n        var _this = \n        // Start section: command_constructor\n        _super.call(this) || this;\n        _this.input = input;\n        return _this;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    ListBucketInventoryConfigurationsCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n        var stack = clientStack.concat(this.middlewareStack);\n        var logger = configuration.logger;\n        var clientName = \"S3Client\";\n        var commandName = \"ListBucketInventoryConfigurationsCommand\";\n        var handlerExecutionContext = {\n            logger: logger,\n            clientName: clientName,\n            commandName: commandName,\n            inputFilterSensitiveLog: ListBucketInventoryConfigurationsRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: ListBucketInventoryConfigurationsOutput.filterSensitiveLog,\n        };\n        var requestHandler = configuration.requestHandler;\n        return stack.resolve(function (request) {\n            return requestHandler.handle(request.request, options || {});\n        }, handlerExecutionContext);\n    };\n    ListBucketInventoryConfigurationsCommand.prototype.serialize = function (input, context) {\n        return serializeAws_restXmlListBucketInventoryConfigurationsCommand(input, context);\n    };\n    ListBucketInventoryConfigurationsCommand.prototype.deserialize = function (output, context) {\n        return deserializeAws_restXmlListBucketInventoryConfigurationsCommand(output, context);\n    };\n    return ListBucketInventoryConfigurationsCommand;\n}($Command));\nexport { ListBucketInventoryConfigurationsCommand };\n//# sourceMappingURL=ListBucketInventoryConfigurationsCommand.js.map"]},"metadata":{},"sourceType":"module"}