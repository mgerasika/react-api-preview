{"ast":null,"code":"import { useRef, useEffect } from 'react';\nvar useIsScrollEnd = function useIsScrollEnd(_ref) {\n  var haveNextPage = _ref.next_page,\n    onScrollEnd = _ref.onScrollEnd;\n  var nextPageRef = useRef();\n  nextPageRef.current = haveNextPage;\n  useEffect(function () {\n    var scrollHandler = function scrollHandler(_ev) {\n      if (nextPageRef.current) {\n        var el = document.documentElement;\n        if (el.offsetHeight + el.scrollTop + 1 >= el.scrollHeight) {\n          onScrollEnd && onScrollEnd();\n        }\n      }\n    };\n    window.addEventListener('scroll', scrollHandler);\n    return function () {\n      return window.removeEventListener('scroll', scrollHandler);\n    };\n  }, [onScrollEnd]);\n};\nexport { useIsScrollEnd };","map":{"version":3,"sources":["../../../src/hooks/use-is-scroll-end.hook.ts"],"names":["useIsScrollEnd","next_page","haveNextPage","onScrollEnd","nextPageRef","useRef","current","useEffect","scrollHandler","_ev","el","document","documentElement","offsetHeight","scrollTop","scrollHeight","window","addEventListener","removeEventListener"],"mappings":";AAEO,IAAMA,cAAc,GAAG,SAAjBA,cAAc,CAAA,IAAA,EAMf;EAAA,IALGE,YAAY,GAAA,IAAA,CAAvBD,SAAS;IACTE,WAAAA,GAAAA,IAAAA,CAAAA,WAAAA;EAKA,IAAMC,WAAW,GAAGC,MAAM,EAAsB;EAChDD,WAAW,CAACE,OAAO,GAAGJ,YAAY;EAClCK,SAAS,CAAC,YAAM;IACZ,IAAMC,aAAa,GAAIC,SAAjBD,aAAa,CAAIC,GAAU,EAAW;MACxC,IAAIL,WAAW,CAACE,OAAO,EAAE;QACrB,IAAMI,EAAE,GAAGC,QAAQ,CAACC,eAAe;QACnC,IAAIF,EAAE,CAACG,YAAY,GAAGH,EAAE,CAACI,SAAS,GAAG,CAAC,IAAIJ,EAAE,CAACK,YAAY,EAAE;UACvDZ,WAAW,IAAIA,WAAW,EAAE;QAChC;MACJ;KACH;IACDa,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAET,aAAa,CAAC;IAChD,OAAO,YAAA;MAAA,OAAYQ,MAAM,CAACE,mBAAmB,CAAC,QAAQ,EAAEV,aAAa,CAAC;IAAA,CAAA;EAC1E,CAAC,EAAE,CAACL,WAAW,CAAC,CAAC;AACrB,CAAA","sourcesContent":["import { useEffect, useRef } from 'react';\n\nexport const useIsScrollEnd = ({\n    next_page: haveNextPage,\n    onScrollEnd,\n}: {\n    next_page: number | undefined;\n    onScrollEnd?: () => void;\n}): void => {\n    const nextPageRef = useRef<number | undefined>();\n    nextPageRef.current = haveNextPage;\n    useEffect(() => {\n        const scrollHandler = (_ev: Event): void => {\n            if (nextPageRef.current) {\n                const el = document.documentElement;\n                if (el.offsetHeight + el.scrollTop + 1 >= el.scrollHeight) {\n                    onScrollEnd && onScrollEnd();\n                }\n            }\n        };\n        window.addEventListener('scroll', scrollHandler);\n        return (): void => window.removeEventListener('scroll', scrollHandler);\n    }, [onScrollEnd]);\n};\n"]},"metadata":{},"sourceType":"module"}