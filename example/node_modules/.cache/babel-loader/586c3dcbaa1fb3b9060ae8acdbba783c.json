{"ast":null,"code":"'use strict';\n\nvar util = require('./util');\nvar convertToJson = function convertToJson(node, options, parentTagName) {\n  var jObj = {};\n\n  // when no child node or attr is present\n  if (!options.alwaysCreateTextNode && (!node.child || util.isEmptyObject(node.child)) && (!node.attrsMap || util.isEmptyObject(node.attrsMap))) {\n    return util.isExist(node.val) ? node.val : '';\n  }\n\n  // otherwise create a textnode if node has some text\n  if (util.isExist(node.val) && !(typeof node.val === 'string' && (node.val === '' || node.val === options.cdataPositionChar))) {\n    var asArray = util.isTagNameInArrayMode(node.tagname, options.arrayMode, parentTagName);\n    jObj[options.textNodeName] = asArray ? [node.val] : node.val;\n  }\n  util.merge(jObj, node.attrsMap, options.arrayMode);\n  var keys = Object.keys(node.child);\n  for (var index = 0; index < keys.length; index++) {\n    var tagName = keys[index];\n    if (node.child[tagName] && node.child[tagName].length > 1) {\n      jObj[tagName] = [];\n      for (var tag in node.child[tagName]) {\n        if (node.child[tagName].hasOwnProperty(tag)) {\n          jObj[tagName].push(convertToJson(node.child[tagName][tag], options, tagName));\n        }\n      }\n    } else {\n      var result = convertToJson(node.child[tagName][0], options, tagName);\n      var _asArray = options.arrayMode === true && typeof result === 'object' || util.isTagNameInArrayMode(tagName, options.arrayMode, parentTagName);\n      jObj[tagName] = _asArray ? [result] : result;\n    }\n  }\n\n  //add value\n  return jObj;\n};\nexports.convertToJson = convertToJson;","map":{"version":3,"names":["util","require","convertToJson","node","options","parentTagName","jObj","alwaysCreateTextNode","child","isEmptyObject","attrsMap","isExist","val","cdataPositionChar","asArray","isTagNameInArrayMode","tagname","arrayMode","textNodeName","merge","keys","Object","index","length","tagName","tag","hasOwnProperty","push","result","exports"],"sources":["/home/mgerasika/Documents/git/oddbox/oddbox-frontend-npm-usage-example/node_modules/fast-xml-parser/src/node2json.js"],"sourcesContent":["'use strict';\n\nconst util = require('./util');\n\nconst convertToJson = function(node, options, parentTagName) {\n  const jObj = {};\n\n  // when no child node or attr is present\n  if (!options.alwaysCreateTextNode && (!node.child || util.isEmptyObject(node.child)) && (!node.attrsMap || util.isEmptyObject(node.attrsMap))) {\n    return util.isExist(node.val) ? node.val : '';\n  }\n\n  // otherwise create a textnode if node has some text\n  if (util.isExist(node.val) && !(typeof node.val === 'string' && (node.val === '' || node.val === options.cdataPositionChar))) {\n    const asArray = util.isTagNameInArrayMode(node.tagname, options.arrayMode, parentTagName)\n    jObj[options.textNodeName] = asArray ? [node.val] : node.val;\n  }\n\n  util.merge(jObj, node.attrsMap, options.arrayMode);\n\n  const keys = Object.keys(node.child);\n  for (let index = 0; index < keys.length; index++) {\n    const tagName = keys[index];\n    if (node.child[tagName] && node.child[tagName].length > 1) {\n      jObj[tagName] = [];\n      for (let tag in node.child[tagName]) {\n        if (node.child[tagName].hasOwnProperty(tag)) {\n          jObj[tagName].push(convertToJson(node.child[tagName][tag], options, tagName));\n        }\n      }\n    } else {\n      const result = convertToJson(node.child[tagName][0], options, tagName);\n      const asArray = (options.arrayMode === true && typeof result === 'object') || util.isTagNameInArrayMode(tagName, options.arrayMode, parentTagName);\n      jObj[tagName] = asArray ? [result] : result;\n    }\n  }\n\n  //add value\n  return jObj;\n};\n\nexports.convertToJson = convertToJson;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}