{"ast":null,"code":"function _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _s, _e;\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n  return _arr;\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nimport { useState, useCallback } from 'react';\nimport { useTimeout } from './use-timeout.hook.js';\nvar useIndividualPromise = function useIndividualPromise(_ref) {\n  var _ref$parallel = _ref.parallel,\n    parallel = _ref$parallel === void 0 ? true : _ref$parallel;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    loading = _useState2[0],\n    setIsLoading = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    result = _useState4[0],\n    setResult = _useState4[1];\n  var _useTimeout = useTimeout(useCallback(function (promises) {\n      if (!parallel) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        promises.reduce(function (acc, item) {\n          return acc.finally(function () {\n            return item === null || item === void 0 ? void 0 : item.promiseFn().then(function () {\n              setResult(function (prevs) {\n                return prevs.map(function (prev) {\n                  if (prev.id === item.id) {\n                    return {\n                      id: item.id,\n                      loading: false,\n                      success: true,\n                      error: undefined\n                    };\n                  }\n                  return prev;\n                });\n              });\n            }).catch(function (e) {\n              setResult(function (prevs) {\n                return prevs.map(function (prev) {\n                  if (prev.id === item.id) {\n                    return {\n                      id: item.id,\n                      loading: false,\n                      success: false,\n                      error: e\n                    };\n                  }\n                  return prev;\n                });\n              });\n            }).finally(function () {\n              return setIsLoading(false);\n            });\n          });\n        }, Promise.resolve());\n      } else {\n        promises.forEach(function (item) {\n          item.promiseFn().then(function () {\n            setResult(function (prevs) {\n              return prevs.map(function (prev) {\n                if (prev.id === item.id) {\n                  return {\n                    id: item.id,\n                    loading: false,\n                    success: true,\n                    error: undefined\n                  };\n                }\n                return prev;\n              });\n            });\n          }).catch(function (e) {\n            setResult(function (prevs) {\n              return prevs.map(function (prev) {\n                if (prev.id === item.id) {\n                  return {\n                    id: item.id,\n                    loading: false,\n                    success: false,\n                    error: e\n                  };\n                }\n                return prev;\n              });\n            });\n          }).finally(function () {\n            return setIsLoading(false);\n          });\n        });\n      }\n    }, [parallel]), 50),\n    startTimeout = _useTimeout.start;\n  return {\n    start: useCallback(function (promises) {\n      setResult([]);\n      setIsLoading(true);\n      promises.forEach(function (item) {\n        setResult(function (prev) {\n          return [].concat(_toConsumableArray(prev), [{\n            id: item.id,\n            loading: true,\n            success: false,\n            error: undefined\n          }]);\n        });\n      });\n      startTimeout(promises);\n    }, [startTimeout]),\n    loading: result.some(function (r) {\n      return r.loading;\n    }) || loading,\n    clearResults: useCallback(function () {\n      setResult([]);\n    }, []),\n    result: result\n  };\n};\nexport { useIndividualPromise };","map":{"version":3,"sources":["../../../src/hooks/use-individual-promise.hook.ts"],"names":["useIndividualPromise","parallel","loading","setIsLoading","useState","result","setResult","start","startTimeout","useTimeout","useCallback","promises","reduce","acc","item","finally","promiseFn","then","prevs","map","prev","id","success","error","undefined","catch","e","Promise","resolve","forEach","some","r","clearResults"],"mappings":"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","sourcesContent":["import { IBEError } from '@common/interfaces/be-error.interface';\nimport { useCallback, useState } from 'react';\nimport { useTimeout } from './use-timeout.hook';\n\nexport interface IPromiseItem {\n    id: string;\n    promiseFn: () => Promise<unknown>;\n}\nexport interface IPromiseResult {\n    id: string;\n    loading: boolean;\n    success: boolean;\n    error: IBEError | undefined;\n}\ninterface IReturn {\n    start: (promises: IPromiseItem[]) => void;\n    loading: boolean;\n    result: IPromiseResult[];\n    clearResults: () => void;\n}\nexport const useIndividualPromise = ({ parallel = true }: { parallel?: boolean }): IReturn => {\n    const [loading, setIsLoading] = useState<boolean>(false);\n    const [result, setResult] = useState<IPromiseResult[]>([]);\n    const { start: startTimeout } = useTimeout<IPromiseItem[]>(\n        useCallback(\n            (promises: IPromiseItem[]): void => {\n                if (!parallel) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    promises.reduce((acc, item?: IPromiseItem): any => {\n                        return acc.finally(() => {\n                            return item\n                                ?.promiseFn()\n                                .then((): void => {\n                                    setResult((prevs): IPromiseResult[] => {\n                                        return prevs.map((prev) => {\n                                            if (prev.id === item.id) {\n                                                return { id: item.id, loading: false, success: true, error: undefined };\n                                            }\n                                            return prev;\n                                        });\n                                    });\n                                })\n                                .catch((e) => {\n                                    setResult((prevs): IPromiseResult[] => {\n                                        return prevs.map((prev) => {\n                                            if (prev.id === item.id) {\n                                                return { id: item.id, loading: false, success: false, error: e };\n                                            }\n                                            return prev;\n                                        });\n                                    });\n                                })\n                                .finally(() => setIsLoading(false));\n                        });\n                    }, Promise.resolve());\n                } else {\n                    promises.forEach((item) => {\n                        item.promiseFn()\n                            .then((): void => {\n                                setResult((prevs): IPromiseResult[] => {\n                                    return prevs.map((prev) => {\n                                        if (prev.id === item.id) {\n                                            return { id: item.id, loading: false, success: true, error: undefined };\n                                        }\n                                        return prev;\n                                    });\n                                });\n                            })\n                            .catch((e) => {\n                                setResult((prevs): IPromiseResult[] => {\n                                    return prevs.map((prev) => {\n                                        if (prev.id === item.id) {\n                                            return { id: item.id, loading: false, success: false, error: e };\n                                        }\n                                        return prev;\n                                    });\n                                });\n                            })\n                            .finally(() => setIsLoading(false));\n                    });\n                }\n            },\n            [parallel],\n        ),\n        50,\n    );\n\n    return {\n        start: useCallback(\n            (promises: IPromiseItem[]): void => {\n                setResult([]);\n                setIsLoading(true);\n\n                promises.forEach((item) => {\n                    setResult((prev): IPromiseResult[] => {\n                        return [...prev, { id: item.id, loading: true, success: false, error: undefined }];\n                    });\n                });\n\n                startTimeout(promises);\n            },\n            [startTimeout],\n        ),\n        loading: result.some((r) => r.loading) || loading,\n        clearResults: useCallback(() => {\n            setResult([]);\n        }, []),\n        result,\n    };\n};\n"]},"metadata":{},"sourceType":"module"}