{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar React = require('react');\nconst SCREENS = {\n  sm: 640,\n  md: 768,\n  lg: 1024,\n  xl: 1280,\n  xxl: 1690,\n  xxxl: 1920\n};\nfunction useScreenMediaQuery() {\n  const [width, setWidth] = React.useState(window.innerWidth);\n  React.useEffect(() => {\n    const handleWindowResize = () => setWidth(window.innerWidth);\n    window.addEventListener('resize', handleWindowResize);\n    return () => window.removeEventListener('resize', handleWindowResize);\n  }, [setWidth]);\n  return {\n    isDownSM: width < SCREENS.sm,\n    isDownMD: width < SCREENS.md,\n    isDownLG: width < SCREENS.lg,\n    isDownXL: width < SCREENS.xl,\n    isDownXXL: width < SCREENS.xxl,\n    isDownXXXL: width < SCREENS.xxxl,\n    isUpSM: width >= SCREENS.sm,\n    isUpMD: width >= SCREENS.md,\n    isUpLG: width >= SCREENS.lg,\n    isUpXL: width >= SCREENS.xl,\n    isUpXXL: width >= SCREENS.xxl,\n    isUpXXXL: width >= SCREENS.xxxl\n  };\n}\nexports.SCREENS = SCREENS;\nexports.useScreenMediaQuery = useScreenMediaQuery;","map":{"version":3,"sources":["../../../src/hooks/use-screen-media-query.hook.ts"],"names":["SCREENS","sm","md","lg","xl","xxl","xxxl","useScreenMediaQuery","width","setWidth","useState","window","innerWidth","useEffect","handleWindowResize","addEventListener","removeEventListener","isDownSM","isDownMD","isDownLG","isDownXL","isDownXXL","isDownXXXL","isUpSM","isUpMD","isUpLG","isUpXL","isUpXXL","isUpXXXL"],"mappings":";;;;;;AAEO,MAAMA,OAAO,GAAG;EACnBC,EAAE,EAAE,GAAG;EACPC,EAAE,EAAE,GAAG;EACPC,EAAE,EAAE,IAAI;EACRC,EAAE,EAAE,IAAI;EACRC,GAAG,EAAE,IAAI;EACTC,IAAI,EAAE;AACV,CAAA;AAEO,SAASC,mBAAmB,GAajC;EACE,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGC,KAAAA,CAAAA,QAAQ,CAACC,MAAM,CAACC,UAAU,CAAC;EACrDC,KAAAA,CAAAA,SAAS,CAAC,MAAM;IACZ,MAAMC,kBAAkB,GAAG,MAAYL,QAAQ,CAACE,MAAM,CAACC,UAAU,CAAC;IAClED,MAAM,CAACI,gBAAgB,CAAC,QAAQ,EAAED,kBAAkB,CAAC;IACrD,OAAO,MAAYH,MAAM,CAACK,mBAAmB,CAAC,QAAQ,EAAEF,kBAAkB,CAAC;EAC/E,CAAC,EAAE,CAACL,QAAQ,CAAC,CAAC;EAEd,OAAO;IACHQ,QAAQ,EAAET,KAAK,GAAGR,OAAO,CAACC,EAAE;IAC5BiB,QAAQ,EAAEV,KAAK,GAAGR,OAAO,CAACE,EAAE;IAC5BiB,QAAQ,EAAEX,KAAK,GAAGR,OAAO,CAACG,EAAE;IAC5BiB,QAAQ,EAAEZ,KAAK,GAAGR,OAAO,CAACI,EAAE;IAC5BiB,SAAS,EAAEb,KAAK,GAAGR,OAAO,CAACK,GAAG;IAC9BiB,UAAU,EAAEd,KAAK,GAAGR,OAAO,CAACM,IAAI;IAEhCiB,MAAM,EAAEf,KAAK,IAAIR,OAAO,CAACC,EAAE;IAC3BuB,MAAM,EAAEhB,KAAK,IAAIR,OAAO,CAACE,EAAE;IAC3BuB,MAAM,EAAEjB,KAAK,IAAIR,OAAO,CAACG,EAAE;IAC3BuB,MAAM,EAAElB,KAAK,IAAIR,OAAO,CAACI,EAAE;IAC3BuB,OAAO,EAAEnB,KAAK,IAAIR,OAAO,CAACK,GAAG;IAC7BuB,QAAQ,EAAEpB,KAAK,IAAIR,OAAO,CAACM;GAC9B;AACL","sourcesContent":["import { useEffect, useState } from 'react';\n\nexport const SCREENS = {\n    sm: 640,\n    md: 768,\n    lg: 1024,\n    xl: 1280,\n    xxl: 1690,\n    xxxl: 1920,\n};\n\nexport function useScreenMediaQuery(): {\n    isDownSM: boolean;\n    isDownMD: boolean;\n    isDownLG: boolean;\n    isDownXL: boolean;\n    isDownXXL: boolean;\n    isDownXXXL: boolean;\n    isUpSM: boolean;\n    isUpMD: boolean;\n    isUpLG: boolean;\n    isUpXL: boolean;\n    isUpXXL: boolean;\n    isUpXXXL: boolean;\n} {\n    const [width, setWidth] = useState(window.innerWidth);\n    useEffect(() => {\n        const handleWindowResize = (): void => setWidth(window.innerWidth);\n        window.addEventListener('resize', handleWindowResize);\n        return (): void => window.removeEventListener('resize', handleWindowResize);\n    }, [setWidth]);\n\n    return {\n        isDownSM: width < SCREENS.sm,\n        isDownMD: width < SCREENS.md,\n        isDownLG: width < SCREENS.lg,\n        isDownXL: width < SCREENS.xl,\n        isDownXXL: width < SCREENS.xxl,\n        isDownXXXL: width < SCREENS.xxxl,\n\n        isUpSM: width >= SCREENS.sm,\n        isUpMD: width >= SCREENS.md,\n        isUpLG: width >= SCREENS.lg,\n        isUpXL: width >= SCREENS.xl,\n        isUpXXL: width >= SCREENS.xxl,\n        isUpXXXL: width >= SCREENS.xxxl,\n    };\n}\n"]},"metadata":{},"sourceType":"script"}