{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spread = this && this.__spread || function () {\n  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n  return ar;\n};\n/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { ConsoleLogger as Logger, Credentials, Parser, StorageHelper, Hub } from '@aws-amplify/core';\nimport { GetObjectCommand, DeleteObjectCommand, ListObjectsV2Command, CopyObjectCommand } from '@aws-sdk/client-s3';\nimport { formatUrl } from '@aws-sdk/util-format-url';\nimport { createRequest } from '@aws-sdk/util-create-request';\nimport { S3RequestPresigner } from '@aws-sdk/s3-request-presigner';\nimport { SEND_DOWNLOAD_PROGRESS_EVENT, SEND_UPLOAD_PROGRESS_EVENT } from './axios-http-handler';\nimport { StorageErrorStrings } from '../common/StorageErrorStrings';\nimport { dispatchStorageEvent } from '../common/StorageUtils';\nimport { createPrefixMiddleware, prefixMiddlewareOptions, getPrefix, autoAdjustClockskewMiddleware, autoAdjustClockskewMiddlewareOptions, createS3Client } from '../common/S3ClientUtils';\nimport { AWSS3ProviderManagedUpload } from './AWSS3ProviderManagedUpload';\nimport { AWSS3UploadTask, TaskEvents } from './AWSS3UploadTask';\nimport { UPLOADS_STORAGE_KEY } from '../common/StorageConstants';\nimport * as events from 'events';\nvar logger = new Logger('AWSS3Provider');\nvar DEFAULT_STORAGE_LEVEL = 'public';\nvar DEFAULT_PRESIGN_EXPIRATION = 900;\n/**\n * Provide storage methods to use AWS S3\n */\nvar AWSS3Provider = /** @class */function () {\n  /**\n   * Initialize Storage with AWS configurations\n   * @param {Object} config - Configuration object for storage\n   */\n  function AWSS3Provider(config) {\n    var _this = this;\n    this._config = config ? config : {};\n    this._storage = new StorageHelper().getStorage();\n    Hub.listen('auth', function (data) {\n      var payload = data.payload;\n      if (payload.event === 'signOut' || payload.event === 'signIn') {\n        _this._storage.removeItem(UPLOADS_STORAGE_KEY);\n      }\n    });\n    logger.debug('Storage Options', this._config);\n  }\n  /**\n   * get the category of the plugin\n   */\n  AWSS3Provider.prototype.getCategory = function () {\n    return AWSS3Provider.CATEGORY;\n  };\n  /**\n   * get provider name of the plugin\n   */\n  AWSS3Provider.prototype.getProviderName = function () {\n    return AWSS3Provider.PROVIDER_NAME;\n  };\n  /**\n   * Configure Storage part with aws configuration\n   * @param {Object} config - Configuration of the Storage\n   * @return {Object} - Current configuration\n   */\n  AWSS3Provider.prototype.configure = function (config) {\n    logger.debug('configure Storage', config);\n    if (!config) return this._config;\n    var amplifyConfig = Parser.parseMobilehubConfig(config);\n    this._config = Object.assign({}, this._config, amplifyConfig.Storage);\n    if (!this._config.bucket) {\n      logger.debug('Do not have bucket yet');\n    }\n    return this._config;\n  };\n  AWSS3Provider.prototype.startResumableUpload = function (addTaskInput, config) {\n    var s3Client = addTaskInput.s3Client,\n      emitter = addTaskInput.emitter,\n      key = addTaskInput.key,\n      file = addTaskInput.file,\n      params = addTaskInput.params;\n    var progressCallback = config.progressCallback,\n      completeCallback = config.completeCallback,\n      errorCallback = config.errorCallback,\n      _a = config.track,\n      track = _a === void 0 ? false : _a;\n    if (!(file instanceof Blob)) {\n      throw new Error(StorageErrorStrings.INVALID_BLOB);\n    }\n    emitter.on(TaskEvents.UPLOAD_PROGRESS, function (event) {\n      if (progressCallback) {\n        if (typeof progressCallback === 'function') {\n          progressCallback(event);\n        } else {\n          logger.warn('progressCallback should be a function, not a ' + typeof progressCallback);\n        }\n      }\n    });\n    emitter.on(TaskEvents.UPLOAD_COMPLETE, function (event) {\n      if (completeCallback) {\n        if (typeof completeCallback === 'function') {\n          completeCallback(event);\n        } else {\n          logger.warn('completeCallback should be a function, not a ' + typeof completeCallback);\n        }\n      }\n    });\n    emitter.on(TaskEvents.ERROR, function (err) {\n      if (errorCallback) {\n        if (typeof errorCallback === 'function') {\n          errorCallback(err);\n        } else {\n          logger.warn('errorCallback should be a function, not a ' + typeof errorCallback);\n        }\n      }\n    });\n    // we want to keep this function sync so we defer this promise to AWSS3UploadTask to resolve when it's needed\n    // when its doing a final check with _listSingleFile function\n    var prefixPromise = Credentials.get().then(function (credentials) {\n      var cred = Credentials.shear(credentials);\n      return getPrefix(__assign(__assign({}, config), {\n        credentials: cred\n      }));\n    });\n    var task = new AWSS3UploadTask({\n      s3Client: s3Client,\n      file: file,\n      emitter: emitter,\n      level: config.level,\n      storage: this._storage,\n      params: params,\n      prefixPromise: prefixPromise\n    });\n    dispatchStorageEvent(track, 'upload', {\n      method: 'put',\n      result: 'success'\n    }, null, \"Upload Task created successfully for \" + key);\n    // automatically start the upload task\n    task.resume();\n    return task;\n  };\n  /**\n   * Copy an object from a source object to a new object within the same bucket. Can optionally copy files across\n   * different level or identityId (if source object's level is 'protected').\n   *\n   * @async\n   * @param {S3CopySource} src - Key and optionally access level and identityId of the source object.\n   * @param {S3CopyDestination} dest - Key and optionally access level of the destination object.\n   * @param {S3ProviderCopyConfig} [config] - Optional configuration for s3 commands.\n   * @return {Promise<S3ProviderCopyOutput>} The key of the copied object.\n   */\n  AWSS3Provider.prototype.copy = function (src, dest, config) {\n    return __awaiter(this, void 0, void 0, function () {\n      var credentialsOK, opt, acl, bucket, cacheControl, expires, track, serverSideEncryption, SSECustomerAlgorithm, SSECustomerKey, SSECustomerKeyMD5, SSEKMSKeyId, _a, srcLevel, srcIdentityId, srcKey, _b, destLevel, destKey, srcPrefix, destPrefix, finalSrcKey, finalDestKey, params, s3, error_1;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            return [4 /*yield*/, this._ensureCredentials()];\n          case 1:\n            credentialsOK = _c.sent();\n            if (!credentialsOK || !this._isWithCredentials(this._config)) {\n              throw new Error(StorageErrorStrings.NO_CREDENTIALS);\n            }\n            opt = Object.assign({}, this._config, config);\n            acl = opt.acl, bucket = opt.bucket, cacheControl = opt.cacheControl, expires = opt.expires, track = opt.track, serverSideEncryption = opt.serverSideEncryption, SSECustomerAlgorithm = opt.SSECustomerAlgorithm, SSECustomerKey = opt.SSECustomerKey, SSECustomerKeyMD5 = opt.SSECustomerKeyMD5, SSEKMSKeyId = opt.SSEKMSKeyId;\n            _a = src.level, srcLevel = _a === void 0 ? DEFAULT_STORAGE_LEVEL : _a, srcIdentityId = src.identityId, srcKey = src.key;\n            _b = dest.level, destLevel = _b === void 0 ? DEFAULT_STORAGE_LEVEL : _b, destKey = dest.key;\n            if (!srcKey || typeof srcKey !== 'string') {\n              throw new Error(StorageErrorStrings.NO_SRC_KEY);\n            }\n            if (!destKey || typeof destKey !== 'string') {\n              throw new Error(StorageErrorStrings.NO_DEST_KEY);\n            }\n            if (srcLevel !== 'protected' && srcIdentityId) {\n              logger.warn(\"You may copy files from another user if the source level is \\\"protected\\\", currently it's \" + srcLevel);\n            }\n            srcPrefix = this._prefix(__assign(__assign(__assign({}, opt), {\n              level: srcLevel\n            }), srcIdentityId && {\n              identityId: srcIdentityId\n            }));\n            destPrefix = this._prefix(__assign(__assign({}, opt), {\n              level: destLevel\n            }));\n            finalSrcKey = bucket + \"/\" + srcPrefix + srcKey;\n            finalDestKey = \"\" + destPrefix + destKey;\n            logger.debug(\"copying \" + finalSrcKey + \" to \" + finalDestKey);\n            params = {\n              Bucket: bucket,\n              CopySource: finalSrcKey,\n              Key: finalDestKey,\n              // Copies over metadata like contentType as well\n              MetadataDirective: 'COPY'\n            };\n            if (cacheControl) params.CacheControl = cacheControl;\n            if (expires) params.Expires = expires;\n            if (serverSideEncryption) {\n              params.ServerSideEncryption = serverSideEncryption;\n            }\n            if (SSECustomerAlgorithm) {\n              params.SSECustomerAlgorithm = SSECustomerAlgorithm;\n            }\n            if (SSECustomerKey) {\n              params.SSECustomerKey = SSECustomerKey;\n            }\n            if (SSECustomerKeyMD5) {\n              params.SSECustomerKeyMD5 = SSECustomerKeyMD5;\n            }\n            if (SSEKMSKeyId) {\n              params.SSEKMSKeyId = SSEKMSKeyId;\n            }\n            if (acl) params.ACL = acl;\n            s3 = this._createNewS3Client(opt);\n            _c.label = 2;\n          case 2:\n            _c.trys.push([2, 4,, 5]);\n            return [4 /*yield*/, s3.send(new CopyObjectCommand(params))];\n          case 3:\n            _c.sent();\n            dispatchStorageEvent(track, 'copy', {\n              method: 'copy',\n              result: 'success'\n            }, null, \"Copy success from \" + srcKey + \" to \" + destKey);\n            return [2 /*return*/, {\n              key: destKey\n            }];\n          case 4:\n            error_1 = _c.sent();\n            dispatchStorageEvent(track, 'copy', {\n              method: 'copy',\n              result: 'failed'\n            }, null, \"Copy failed from \" + srcKey + \" to \" + destKey);\n            throw error_1;\n          case 5:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  AWSS3Provider.prototype.get = function (key, config) {\n    return __awaiter(this, void 0, void 0, function () {\n      var credentialsOK, opt, bucket, download, cacheControl, contentDisposition, contentEncoding, contentLanguage, contentType, expires, track, SSECustomerAlgorithm, SSECustomerKey, SSECustomerKeyMD5, progressCallback, prefix, final_key, emitter, s3, params, getObjectCommand, response, error_2, signer, request, url, _a, error_3;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4 /*yield*/, this._ensureCredentials()];\n          case 1:\n            credentialsOK = _b.sent();\n            if (!credentialsOK || !this._isWithCredentials(this._config)) {\n              throw new Error(StorageErrorStrings.NO_CREDENTIALS);\n            }\n            opt = Object.assign({}, this._config, config);\n            bucket = opt.bucket, download = opt.download, cacheControl = opt.cacheControl, contentDisposition = opt.contentDisposition, contentEncoding = opt.contentEncoding, contentLanguage = opt.contentLanguage, contentType = opt.contentType, expires = opt.expires, track = opt.track, SSECustomerAlgorithm = opt.SSECustomerAlgorithm, SSECustomerKey = opt.SSECustomerKey, SSECustomerKeyMD5 = opt.SSECustomerKeyMD5, progressCallback = opt.progressCallback;\n            prefix = this._prefix(opt);\n            final_key = prefix + key;\n            emitter = new events.EventEmitter();\n            s3 = this._createNewS3Client(opt, emitter);\n            logger.debug('get ' + key + ' from ' + final_key);\n            params = {\n              Bucket: bucket,\n              Key: final_key\n            };\n            // See: https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/S3.html#getObject-property\n            if (cacheControl) params.ResponseCacheControl = cacheControl;\n            if (contentDisposition) params.ResponseContentDisposition = contentDisposition;\n            if (contentEncoding) params.ResponseContentEncoding = contentEncoding;\n            if (contentLanguage) params.ResponseContentLanguage = contentLanguage;\n            if (contentType) params.ResponseContentType = contentType;\n            if (SSECustomerAlgorithm) {\n              params.SSECustomerAlgorithm = SSECustomerAlgorithm;\n            }\n            if (SSECustomerKey) {\n              params.SSECustomerKey = SSECustomerKey;\n            }\n            if (SSECustomerKeyMD5) {\n              params.SSECustomerKeyMD5 = SSECustomerKeyMD5;\n            }\n            if (!(download === true)) return [3 /*break*/, 5];\n            getObjectCommand = new GetObjectCommand(params);\n            _b.label = 2;\n          case 2:\n            _b.trys.push([2, 4,, 5]);\n            if (progressCallback) {\n              if (typeof progressCallback === 'function') {\n                emitter.on(SEND_DOWNLOAD_PROGRESS_EVENT, function (progress) {\n                  progressCallback(progress);\n                });\n              } else {\n                logger.warn('progressCallback should be a function, not a ' + typeof progressCallback);\n              }\n            }\n            return [4 /*yield*/, s3.send(getObjectCommand)];\n          case 3:\n            response = _b.sent();\n            emitter.removeAllListeners(SEND_DOWNLOAD_PROGRESS_EVENT);\n            dispatchStorageEvent(track, 'download', {\n              method: 'get',\n              result: 'success'\n            }, {\n              fileSize: Number(response.Body['size'] || response.Body['length'])\n            }, \"Download success for \" + key);\n            return [2 /*return*/, response];\n          case 4:\n            error_2 = _b.sent();\n            dispatchStorageEvent(track, 'download', {\n              method: 'get',\n              result: 'failed'\n            }, null, \"Download failed with \" + error_2.message);\n            throw error_2;\n          case 5:\n            _b.trys.push([5, 8,, 9]);\n            signer = new S3RequestPresigner(__assign({}, s3.config));\n            return [4 /*yield*/, createRequest(s3, new GetObjectCommand(params))];\n          case 6:\n            request = _b.sent();\n            _a = formatUrl;\n            return [4 /*yield*/, signer.presign(request, {\n              expiresIn: expires || DEFAULT_PRESIGN_EXPIRATION\n            })];\n          case 7:\n            url = _a.apply(void 0, [_b.sent()]);\n            dispatchStorageEvent(track, 'getSignedUrl', {\n              method: 'get',\n              result: 'success'\n            }, null, \"Signed URL: \" + url);\n            return [2 /*return*/, url];\n          case 8:\n            error_3 = _b.sent();\n            logger.warn('get signed url error', error_3);\n            dispatchStorageEvent(track, 'getSignedUrl', {\n              method: 'get',\n              result: 'failed'\n            }, null, \"Could not get a signed URL for \" + key);\n            throw error_3;\n          case 9:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\n   * Put a file in S3 bucket specified to configure method\n   * @param key - key of the object\n   * @param object - File to be put in Amazon S3 bucket\n   * @param [config] - Optional configuration for the underlying S3 command\n   * @return an instance of AWSS3UploadTask or a promise that resolves to an object with the new object's key on\n   * success.\n   */\n  AWSS3Provider.prototype.put = function (key, object, config) {\n    var opt = Object.assign({}, this._config, config);\n    var bucket = opt.bucket,\n      track = opt.track,\n      progressCallback = opt.progressCallback,\n      level = opt.level,\n      resumable = opt.resumable;\n    var contentType = opt.contentType,\n      contentDisposition = opt.contentDisposition,\n      contentEncoding = opt.contentEncoding,\n      cacheControl = opt.cacheControl,\n      expires = opt.expires,\n      metadata = opt.metadata,\n      tagging = opt.tagging,\n      acl = opt.acl;\n    var serverSideEncryption = opt.serverSideEncryption,\n      SSECustomerAlgorithm = opt.SSECustomerAlgorithm,\n      SSECustomerKey = opt.SSECustomerKey,\n      SSECustomerKeyMD5 = opt.SSECustomerKeyMD5,\n      SSEKMSKeyId = opt.SSEKMSKeyId;\n    var type = contentType ? contentType : 'binary/octet-stream';\n    var params = {\n      Bucket: bucket,\n      Key: key,\n      Body: object,\n      ContentType: type\n    };\n    if (cacheControl) {\n      params.CacheControl = cacheControl;\n    }\n    if (contentDisposition) {\n      params.ContentDisposition = contentDisposition;\n    }\n    if (contentEncoding) {\n      params.ContentEncoding = contentEncoding;\n    }\n    if (expires) {\n      params.Expires = expires;\n    }\n    if (metadata) {\n      params.Metadata = metadata;\n    }\n    if (tagging) {\n      params.Tagging = tagging;\n    }\n    if (serverSideEncryption) {\n      params.ServerSideEncryption = serverSideEncryption;\n    }\n    if (SSECustomerAlgorithm) {\n      params.SSECustomerAlgorithm = SSECustomerAlgorithm;\n    }\n    if (SSECustomerKey) {\n      params.SSECustomerKey = SSECustomerKey;\n    }\n    if (SSECustomerKeyMD5) {\n      params.SSECustomerKeyMD5 = SSECustomerKeyMD5;\n    }\n    if (SSEKMSKeyId) {\n      params.SSEKMSKeyId = SSEKMSKeyId;\n    }\n    var emitter = new events.EventEmitter();\n    var uploader = new AWSS3ProviderManagedUpload(params, opt, emitter);\n    if (acl) {\n      params.ACL = acl;\n    }\n    if (resumable === true) {\n      var s3Client = this._createNewS3Client(opt);\n      // we are using aws sdk middleware to inject the prefix to key, this way we don't have to call\n      // this._ensureCredentials() which allows us to make this function sync so we can return non-Promise like UploadTask\n      s3Client.middlewareStack.add(createPrefixMiddleware(opt, key), prefixMiddlewareOptions);\n      var addTaskInput = {\n        bucket: bucket,\n        key: key,\n        s3Client: s3Client,\n        file: object,\n        emitter: emitter,\n        accessLevel: level,\n        params: params\n      };\n      // explicitly asserting the type here as Typescript could not infer that resumable is of type true\n      return this.startResumableUpload(addTaskInput, config);\n    }\n    try {\n      if (progressCallback) {\n        if (typeof progressCallback === 'function') {\n          emitter.on(SEND_UPLOAD_PROGRESS_EVENT, function (progress) {\n            progressCallback(progress);\n          });\n        } else {\n          logger.warn('progressCallback should be a function, not a ' + typeof progressCallback);\n        }\n      }\n      return uploader.upload().then(function (response) {\n        logger.debug('upload result', response);\n        dispatchStorageEvent(track, 'upload', {\n          method: 'put',\n          result: 'success'\n        }, null, \"Upload success for \" + key);\n        return {\n          key: key\n        };\n      });\n    } catch (error) {\n      logger.warn('error uploading', error);\n      dispatchStorageEvent(track, 'upload', {\n        method: 'put',\n        result: 'failed'\n      }, null, \"Error uploading \" + key);\n      throw error;\n    }\n  };\n  /**\n   * Remove the object for specified key\n   * @param {string} key - key of the object\n   * @param {S3ProviderRemoveConfig} [config] - Optional configuration for the underlying S3 command\n   * @return {Promise<S3ProviderRemoveOutput>} - Promise resolves upon successful removal of the object\n   */\n  AWSS3Provider.prototype.remove = function (key, config) {\n    return __awaiter(this, void 0, void 0, function () {\n      var credentialsOK, opt, bucket, track, prefix, final_key, s3, params, deleteObjectCommand, response, error_4;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this._ensureCredentials()];\n          case 1:\n            credentialsOK = _a.sent();\n            if (!credentialsOK || !this._isWithCredentials(this._config)) {\n              throw new Error(StorageErrorStrings.NO_CREDENTIALS);\n            }\n            opt = Object.assign({}, this._config, config);\n            bucket = opt.bucket, track = opt.track;\n            prefix = this._prefix(opt);\n            final_key = prefix + key;\n            s3 = this._createNewS3Client(opt);\n            logger.debug('remove ' + key + ' from ' + final_key);\n            params = {\n              Bucket: bucket,\n              Key: final_key\n            };\n            deleteObjectCommand = new DeleteObjectCommand(params);\n            _a.label = 2;\n          case 2:\n            _a.trys.push([2, 4,, 5]);\n            return [4 /*yield*/, s3.send(deleteObjectCommand)];\n          case 3:\n            response = _a.sent();\n            dispatchStorageEvent(track, 'delete', {\n              method: 'remove',\n              result: 'success'\n            }, null, \"Deleted \" + key + \" successfully\");\n            return [2 /*return*/, response];\n          case 4:\n            error_4 = _a.sent();\n            dispatchStorageEvent(track, 'delete', {\n              method: 'remove',\n              result: 'failed'\n            }, null, \"Deletion of \" + key + \" failed with \" + error_4);\n            throw error_4;\n          case 5:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  AWSS3Provider.prototype._list = function (params, opt, prefix) {\n    return __awaiter(this, void 0, void 0, function () {\n      var result, s3, listObjectsV2Command, response;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            result = {\n              contents: [],\n              nextToken: ''\n            };\n            s3 = this._createNewS3Client(opt);\n            listObjectsV2Command = new ListObjectsV2Command(__assign({}, params));\n            return [4 /*yield*/, s3.send(listObjectsV2Command)];\n          case 1:\n            response = _a.sent();\n            if (response && response.Contents) {\n              result.contents = response.Contents.map(function (item) {\n                return {\n                  key: item.Key.substr(prefix.length),\n                  eTag: item.ETag,\n                  lastModified: item.LastModified,\n                  size: item.Size\n                };\n              });\n              result.nextToken = response.NextContinuationToken;\n            }\n            return [2 /*return*/, result];\n        }\n      });\n    });\n  };\n  /**\n   * List bucket objects relative to the level and prefix specified\n   * @param {string} path - the path that contains objects\n   * @param {S3ProviderListConfig} [config] - Optional configuration for the underlying S3 command\n   * @return {Promise<S3ProviderListOutput>} - Promise resolves to list of keys, eTags, lastModified and file size for\n   * all objects in path\n   */\n  AWSS3Provider.prototype.list = function (path, config) {\n    return __awaiter(this, void 0, void 0, function () {\n      var credentialsOK, opt, bucket, track, maxKeys, prefix, final_path, list, token, listResult, params, error_5;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this._ensureCredentials()];\n          case 1:\n            credentialsOK = _a.sent();\n            if (!credentialsOK || !this._isWithCredentials(this._config)) {\n              throw new Error(StorageErrorStrings.NO_CREDENTIALS);\n            }\n            opt = Object.assign({}, this._config, config);\n            bucket = opt.bucket, track = opt.track, maxKeys = opt.maxKeys;\n            prefix = this._prefix(opt);\n            final_path = prefix + path;\n            logger.debug('list ' + path + ' from ' + final_path);\n            _a.label = 2;\n          case 2:\n            _a.trys.push([2, 10,, 11]);\n            list = [];\n            token = void 0;\n            listResult = void 0;\n            params = {\n              Bucket: bucket,\n              Prefix: final_path,\n              MaxKeys: 1000\n            };\n            if (!(maxKeys === 'ALL')) return [3 /*break*/, 7];\n            _a.label = 3;\n          case 3:\n            params.ContinuationToken = token;\n            params.MaxKeys = 1000;\n            return [4 /*yield*/, this._list(params, opt, prefix)];\n          case 4:\n            listResult = _a.sent();\n            list.push.apply(list, __spread(listResult.contents));\n            if (listResult.nextToken) token = listResult.nextToken;\n            _a.label = 5;\n          case 5:\n            if (listResult.nextToken) return [3 /*break*/, 3];\n            _a.label = 6;\n          case 6:\n            return [3 /*break*/, 9];\n          case 7:\n            maxKeys < 1000 || typeof maxKeys === 'string' ? params.MaxKeys = maxKeys : params.MaxKeys = 1000;\n            return [4 /*yield*/, this._list(params, opt, prefix)];\n          case 8:\n            listResult = _a.sent();\n            list.push.apply(list, __spread(listResult.contents));\n            if (maxKeys > 1000) logger.warn(\"maxkeys can be from 0 - 1000 or 'ALL'. To list all files you can set maxKeys to 'ALL'.\");\n            _a.label = 9;\n          case 9:\n            dispatchStorageEvent(track, 'list', {\n              method: 'list',\n              result: 'success'\n            }, null, list.length + \" items returned from list operation\");\n            logger.debug('list', list);\n            return [2 /*return*/, list];\n          case 10:\n            error_5 = _a.sent();\n            logger.warn('list error', error_5);\n            dispatchStorageEvent(track, 'list', {\n              method: 'list',\n              result: 'failed'\n            }, null, \"Listing items failed: \" + error_5.message);\n            throw error_5;\n          case 11:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  AWSS3Provider.prototype._ensureCredentials = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var credentials, cred, error_6;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n            return [4 /*yield*/, Credentials.get()];\n          case 1:\n            credentials = _a.sent();\n            if (!credentials) return [2 /*return*/, false];\n            cred = Credentials.shear(credentials);\n            logger.debug('set credentials for storage', cred);\n            this._config.credentials = cred;\n            return [2 /*return*/, true];\n          case 2:\n            error_6 = _a.sent();\n            logger.warn('ensure credentials error', error_6);\n            return [2 /*return*/, false];\n          case 3:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  AWSS3Provider.prototype._isWithCredentials = function (config) {\n    return typeof config === 'object' && config.hasOwnProperty('credentials');\n  };\n  AWSS3Provider.prototype._prefix = function (config) {\n    var credentials = config.credentials,\n      level = config.level;\n    var customPrefix = config.customPrefix || {};\n    var identityId = config.identityId || credentials.identityId;\n    var privatePath = (customPrefix.private !== undefined ? customPrefix.private : 'private/') + identityId + '/';\n    var protectedPath = (customPrefix.protected !== undefined ? customPrefix.protected : 'protected/') + identityId + '/';\n    var publicPath = customPrefix.public !== undefined ? customPrefix.public : 'public/';\n    switch (level) {\n      case 'private':\n        return privatePath;\n      case 'protected':\n        return protectedPath;\n      default:\n        return publicPath;\n    }\n  };\n  /**\n   * Creates an S3 client with new V3 aws sdk\n   */\n  AWSS3Provider.prototype._createNewS3Client = function (config, emitter) {\n    var s3client = createS3Client(config, emitter);\n    s3client.middlewareStack.add(autoAdjustClockskewMiddleware(s3client.config), autoAdjustClockskewMiddlewareOptions);\n    return s3client;\n  };\n  AWSS3Provider.CATEGORY = 'Storage';\n  AWSS3Provider.PROVIDER_NAME = 'AWSS3';\n  return AWSS3Provider;\n}();\nexport { AWSS3Provider };\n/**\n * @deprecated use named import\n */\nexport default AWSS3Provider;","map":{"version":3,"sources":["../../src/providers/AWSS3Provider.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;AAWG;AACH,SACC,aAAa,IAAI,MAAM,EACvB,WAAW,EACX,MAAM,EAEN,aAAa,EACb,GAAG,QACG,mBAAmB;AAC1B,SAEC,gBAAgB,EAChB,mBAAmB,EACnB,oBAAoB,EAIpB,iBAAiB,QAIX,oBAAoB;AAC3B,SAAS,SAAS,QAAQ,0BAA0B;AACpD,SAAS,aAAa,QAAQ,8BAA8B;AAC5D,SAAS,kBAAkB,QAAQ,+BAA+B;AAClE,SACC,4BAA4B,EAC5B,0BAA0B,QACpB,sBAAsB;AAsB7B,SAAS,mBAAmB,QAAQ,+BAA+B;AACnE,SAAS,oBAAoB,QAAQ,wBAAwB;AAC7D,SACC,sBAAsB,EACtB,uBAAuB,EACvB,SAAS,EACT,6BAA6B,EAC7B,oCAAoC,EACpC,cAAc,QACR,yBAAyB;AAEhC,SAAS,0BAA0B,QAAQ,8BAA8B;AACzE,SAAS,eAAe,EAAE,UAAU,QAAQ,mBAAmB;AAC/D,SAAS,mBAAmB,QAAQ,4BAA4B;AAChE,OAAO,KAAK,MAAM,MAAM,QAAQ;AAGhC,IAAM,MAAM,GAAG,IAAI,MAAM,CAAC,eAAe,CAAC;AAE1C,IAAM,qBAAqB,GAAG,QAAQ;AACtC,IAAM,0BAA0B,GAAG,GAAG;AAYtC;;AAEG;AACH,IAAA,aAAA,GAAA,aAAA,YAAA;EAMC;;;AAGG;EACH,SAAA,aAAA,CAAY,MAAuB,EAAA;IAAnC,IAAA,KAAA,GAAA,IAAA;IACC,IAAI,CAAC,OAAO,GAAG,MAAM,GAAG,MAAM,GAAG,CAAA,CAAE;IACnC,IAAI,CAAC,QAAQ,GAAG,IAAI,aAAa,EAAE,CAAC,UAAU,EAAE;IAChD,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE,UAAA,IAAI,EAAA;MACd,IAAA,OAAA,GAAA,IAAA,CAAA,OAAO;MACf,IAAI,OAAO,CAAC,KAAK,KAAK,SAAS,IAAI,OAAO,CAAC,KAAK,KAAK,QAAQ,EAAE;QAC9D,KAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,mBAAmB,CAAC;MAC7C;IACF,CAAC,CAAC;IACF,MAAM,CAAC,KAAK,CAAC,iBAAiB,EAAE,IAAI,CAAC,OAAO,CAAC;EAC9C;EAEA;;AAEG;EACI,aAAA,CAAA,SAAA,CAAA,WAAW,GAAlB,YAAA;IACC,OAAO,aAAa,CAAC,QAAQ;EAC9B,CAAC;EAED;;AAEG;EACH,aAAA,CAAA,SAAA,CAAA,eAAe,GAAf,YAAA;IACC,OAAO,aAAa,CAAC,aAAa;EACnC,CAAC;EAED;;;;AAIG;EACI,aAAA,CAAA,SAAA,CAAA,SAAS,GAAhB,UAAiB,MAAO,EAAA;IACvB,MAAM,CAAC,KAAK,CAAC,mBAAmB,EAAE,MAAM,CAAC;IACzC,IAAI,CAAC,MAAM,EAAE,OAAO,IAAI,CAAC,OAAO;IAChC,IAAM,aAAa,GAAG,MAAM,CAAC,oBAAoB,CAAC,MAAM,CAAC;IACzD,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,CAAA,CAAE,EAAE,IAAI,CAAC,OAAO,EAAE,aAAa,CAAC,OAAO,CAAC;IACrE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;MACzB,MAAM,CAAC,KAAK,CAAC,wBAAwB,CAAC;IACtC;IACD,OAAO,IAAI,CAAC,OAAO;EACpB,CAAC;EAEO,aAAA,CAAA,SAAA,CAAA,oBAAoB,GAA5B,UACC,YAA0B,EAC1B,MAAmD,EAAA;IAE3C,IAAA,QAAA,GAAA,YAAA,CAAA,QAAQ;MAAE,OAAA,GAAA,YAAA,CAAA,OAAO;MAAE,GAAA,GAAA,YAAA,CAAA,GAAG;MAAE,IAAA,GAAA,YAAA,CAAA,IAAI;MAAE,MAAA,GAAA,YAAA,CAAA,MAAM;IAE3C,IAAA,gBAAA,GAAA,MAAA,CAAA,gBAAgB;MAChB,gBAAA,GAAA,MAAA,CAAA,gBAAgB;MAChB,aAAA,GAAA,MAAA,CAAA,aAAa;MACb,EAAA,GAAA,MAAA,CAAA,KAAa;MAAb,KAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,GAAA,EAAa;IAEd,IAAI,EAAE,IAAI,YAAY,IAAI,CAAC,EAAE;MAC5B,MAAM,IAAI,KAAK,CAAC,mBAAmB,CAAC,YAAY,CAAC;IACjD;IAED,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,eAAe,EAAE,UAAA,KAAK,EAAA;MAC3C,IAAI,gBAAgB,EAAE;QACrB,IAAI,OAAO,gBAAgB,KAAK,UAAU,EAAE;UAC3C,gBAAgB,CAAC,KAAK,CAAC;SACvB,MAAM;UACN,MAAM,CAAC,IAAI,CACV,+CAA+C,GAC9C,OAAO,gBAAgB,CACxB;QACD;MACD;IACF,CAAC,CAAC;IAEF,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,eAAe,EAAE,UAAA,KAAK,EAAA;MAC3C,IAAI,gBAAgB,EAAE;QACrB,IAAI,OAAO,gBAAgB,KAAK,UAAU,EAAE;UAC3C,gBAAgB,CAAC,KAAK,CAAC;SACvB,MAAM;UACN,MAAM,CAAC,IAAI,CACV,+CAA+C,GAC9C,OAAO,gBAAgB,CACxB;QACD;MACD;IACF,CAAC,CAAC;IAEF,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,KAAK,EAAE,UAAA,GAAG,EAAA;MAC/B,IAAI,aAAa,EAAE;QAClB,IAAI,OAAO,aAAa,KAAK,UAAU,EAAE;UACxC,aAAa,CAAC,GAAG,CAAC;SAClB,MAAM;UACN,MAAM,CAAC,IAAI,CACV,4CAA4C,GAAG,OAAO,aAAa,CACnE;QACD;MACD;IACF,CAAC,CAAC;IAEF;IACA;IACA,IAAM,aAAa,GAAoB,WAAW,CAAC,GAAG,EAAE,CAAC,IAAI,CAC5D,UAAC,WAAgB,EAAA;MAChB,IAAM,IAAI,GAAG,WAAW,CAAC,KAAK,CAAC,WAAW,CAAC;MAC3C,OAAO,SAAS,CAAA,QAAA,CAAA,QAAA,CAAA,CAAA,CAAA,EACZ,MAAM,CAAA,EAAA;QACT,WAAW,EAAE;MAAI,CAAA,CAAA,CAChB;IACH,CAAC,CACD;IAED,IAAM,IAAI,GAAG,IAAI,eAAe,CAAC;MAChC,QAAQ,EAAA,QAAA;MACR,IAAI,EAAA,IAAA;MACJ,OAAO,EAAA,OAAA;MACP,KAAK,EAAE,MAAM,CAAC,KAAK;MACnB,OAAO,EAAE,IAAI,CAAC,QAAQ;MACtB,MAAM,EAAA,MAAA;MACN,aAAa,EAAA;KACb,CAAC;IAEF,oBAAoB,CACnB,KAAK,EACL,QAAQ,EACR;MAAE,MAAM,EAAE,KAAK;MAAE,MAAM,EAAE;IAAS,CAAE,EACpC,IAAI,EACJ,uCAAA,GAAwC,GAAK,CAC7C;IAED;IACA,IAAI,CAAC,MAAM,EAAE;IAEb,OAAO,IAAI;EACZ,CAAC;EAED;;;;;;;;;AASG;EACU,aAAA,CAAA,SAAA,CAAA,IAAI,GAAjB,UACC,GAAiB,EACjB,IAAuB,EACvB,MAA6B,EAAA;;;;;;YAEP,OAAA,CAAA,CAAA,CAAA,WAAM,IAAI,CAAC,kBAAkB,EAAE,CAAA;;YAA/C,aAAa,GAAG,EAAA,CAAA,IAAA,EAA+B;YACrD,IAAI,CAAC,aAAa,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;cAC7D,MAAM,IAAI,KAAK,CAAC,mBAAmB,CAAC,cAAc,CAAC;YACnD;YACK,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,CAAA,CAAE,EAAE,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC;YAElD,GAAG,GAUA,GAAG,CAAA,GAVH,EACH,MAAM,GASH,GAAG,CAAA,MATA,EACN,YAAY,GAQT,GAAG,CAAA,YARM,EACZ,OAAO,GAOJ,GAAG,CAAA,OAPC,EACP,KAAK,GAMF,GAAG,CAAA,KAND,EACL,oBAAoB,GAKjB,GAAG,CAAA,oBALc,EACpB,oBAAoB,GAIjB,GAAG,CAAA,oBAJc,EACpB,cAAc,GAGX,GAAG,CAAA,cAHQ,EACd,iBAAiB,GAEd,GAAG,CAAA,iBAFW,EACjB,WAAW,GACR,GAAG,CAAA,WADK;YAGX,EAAA,GAGG,GAAG,CAAA,KAHiC,EAAhC,QAAQ,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,qBAAqB,GAAA,EAAA,EAC3B,aAAa,GAEtB,GAAG,CAAA,UAFmB,EACpB,MAAM,GACR,GAAG,CAAA,GADK;YAEJ,EAAA,GAA2D,IAAI,CAAA,KAAvB,EAAjC,SAAS,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,qBAAqB,GAAA,EAAA,EAAO,OAAO,GAAK,IAAI,CAAA,GAAT;YAC9D,IAAI,CAAC,MAAM,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;cAC1C,MAAM,IAAI,KAAK,CAAC,mBAAmB,CAAC,UAAU,CAAC;YAC/C;YACD,IAAI,CAAC,OAAO,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;cAC5C,MAAM,IAAI,KAAK,CAAC,mBAAmB,CAAC,WAAW,CAAC;YAChD;YACD,IAAI,QAAQ,KAAK,WAAW,IAAI,aAAa,EAAE;cAC9C,MAAM,CAAC,IAAI,CACV,4FAAA,GAA2F,QAAU,CACrG;YACD;YACK,SAAS,GAAG,IAAI,CAAC,OAAO,CAAA,QAAA,CAAA,QAAA,CAAA,QAAA,CAAA,CAAA,CAAA,EAC1B,GAAG,CAAA,EAAA;cACN,KAAK,EAAE;YAAQ,CAAA,CAAA,EACX,aAAa,IAAI;cAAE,UAAU,EAAE;YAAa,CAAE,CAAC,CAClD;YACI,UAAU,GAAG,IAAI,CAAC,OAAO,CAAA,QAAA,CAAA,QAAA,CAAA,CAAA,CAAA,EAAM,GAAG,CAAA,EAAA;cAAE,KAAK,EAAE;YAAS,CAAA,CAAA,CAAG;YACvD,WAAW,GAAM,MAAM,GAAA,GAAA,GAAI,SAAS,GAAG,MAAQ;YAC/C,YAAY,GAAG,EAAA,GAAG,UAAU,GAAG,OAAS;YAC9C,MAAM,CAAC,KAAK,CAAC,UAAA,GAAW,WAAW,GAAA,MAAA,GAAO,YAAc,CAAC;YAEnD,MAAM,GAA2B;cACtC,MAAM,EAAE,MAAM;cACd,UAAU,EAAE,WAAW;cACvB,GAAG,EAAE,YAAY;cACjB;cACA,iBAAiB,EAAE;aACnB;YAED,IAAI,YAAY,EAAE,MAAM,CAAC,YAAY,GAAG,YAAY;YACpD,IAAI,OAAO,EAAE,MAAM,CAAC,OAAO,GAAG,OAAO;YACrC,IAAI,oBAAoB,EAAE;cACzB,MAAM,CAAC,oBAAoB,GAAG,oBAAoB;YAClD;YACD,IAAI,oBAAoB,EAAE;cACzB,MAAM,CAAC,oBAAoB,GAAG,oBAAoB;YAClD;YACD,IAAI,cAAc,EAAE;cACnB,MAAM,CAAC,cAAc,GAAG,cAAc;YACtC;YACD,IAAI,iBAAiB,EAAE;cACtB,MAAM,CAAC,iBAAiB,GAAG,iBAAiB;YAC5C;YACD,IAAI,WAAW,EAAE;cAChB,MAAM,CAAC,WAAW,GAAG,WAAW;YAChC;YACD,IAAI,GAAG,EAAE,MAAM,CAAC,GAAG,GAAG,GAAG;YAEnB,EAAE,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC;;;;YAEtC,OAAA,CAAA,CAAA,CAAA,WAAM,EAAE,CAAC,IAAI,CAAC,IAAI,iBAAiB,CAAC,MAAM,CAAC,CAAC,CAAA;;YAA5C,EAAA,CAAA,IAAA,EAA4C;YAC5C,oBAAoB,CACnB,KAAK,EACL,MAAM,EACN;cACC,MAAM,EAAE,MAAM;cACd,MAAM,EAAE;aACR,EACD,IAAI,EACJ,oBAAA,GAAqB,MAAM,GAAA,MAAA,GAAO,OAAS,CAC3C;YACD,OAAA,CAAA,CAAA,CAAA,YAAO;cACN,GAAG,EAAE;aACL,CAAA;;;YAED,oBAAoB,CACnB,KAAK,EACL,MAAM,EACN;cACC,MAAM,EAAE,MAAM;cACd,MAAM,EAAE;aACR,EACD,IAAI,EACJ,mBAAA,GAAoB,MAAM,GAAA,MAAA,GAAO,OAAS,CAC1C;YACD,MAAM,OAAK;;;;;;GAEZ;;EAcY,aAAA,CAAA,SAAA,CAAA,GAAG,GAAhB,UACC,GAAW,EACX,MAA4B,EAAA;;;;;;YAEN,OAAA,CAAA,CAAA,CAAA,WAAM,IAAI,CAAC,kBAAkB,EAAE,CAAA;;YAA/C,aAAa,GAAG,EAAA,CAAA,IAAA,EAA+B;YACrD,IAAI,CAAC,aAAa,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;cAC7D,MAAM,IAAI,KAAK,CAAC,mBAAmB,CAAC,cAAc,CAAC;YACnD;YACK,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,CAAA,CAAE,EAAE,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC;YAElD,MAAM,GAaH,GAAG,CAAA,MAbA,EACN,QAAQ,GAYL,GAAG,CAAA,QAZE,EACR,YAAY,GAWT,GAAG,CAAA,YAXM,EACZ,kBAAkB,GAUf,GAAG,CAAA,kBAVY,EAClB,eAAe,GASZ,GAAG,CAAA,eATS,EACf,eAAe,GAQZ,GAAG,CAAA,eARS,EACf,WAAW,GAOR,GAAG,CAAA,WAPK,EACX,OAAO,GAMJ,GAAG,CAAA,OANC,EACP,KAAK,GAKF,GAAG,CAAA,KALD,EACL,oBAAoB,GAIjB,GAAG,CAAA,oBAJc,EACpB,cAAc,GAGX,GAAG,CAAA,cAHQ,EACd,iBAAiB,GAEd,GAAG,CAAA,iBAFW,EACjB,gBAAgB,GACb,GAAG,CAAA,gBADU;YAEX,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC;YAC1B,SAAS,GAAG,MAAM,GAAG,GAAG;YACxB,OAAO,GAAG,IAAI,MAAM,CAAC,YAAY,EAAE;YACnC,EAAE,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,EAAE,OAAO,CAAC;YAChD,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,GAAG,QAAQ,GAAG,SAAS,CAAC;YAE3C,MAAM,GAA0B;cACrC,MAAM,EAAE,MAAM;cACd,GAAG,EAAE;aACL;YAED;YACA,IAAI,YAAY,EAAE,MAAM,CAAC,oBAAoB,GAAG,YAAY;YAC5D,IAAI,kBAAkB,EACrB,MAAM,CAAC,0BAA0B,GAAG,kBAAkB;YACvD,IAAI,eAAe,EAAE,MAAM,CAAC,uBAAuB,GAAG,eAAe;YACrE,IAAI,eAAe,EAAE,MAAM,CAAC,uBAAuB,GAAG,eAAe;YACrE,IAAI,WAAW,EAAE,MAAM,CAAC,mBAAmB,GAAG,WAAW;YACzD,IAAI,oBAAoB,EAAE;cACzB,MAAM,CAAC,oBAAoB,GAAG,oBAAoB;YAClD;YACD,IAAI,cAAc,EAAE;cACnB,MAAM,CAAC,cAAc,GAAG,cAAc;YACtC;YACD,IAAI,iBAAiB,EAAE;cACtB,MAAM,CAAC,iBAAiB,GAAG,iBAAiB;YAC5C;gBAEG,EAAA,QAAQ,KAAK,IAAI,CAAA,EAAjB,OAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA;YACG,gBAAgB,GAAG,IAAI,gBAAgB,CAAC,MAAM,CAAC;;;;YAEpD,IAAI,gBAAgB,EAAE;cACrB,IAAI,OAAO,gBAAgB,KAAK,UAAU,EAAE;gBAC3C,OAAO,CAAC,EAAE,CAAC,4BAA4B,EAAE,UAAA,QAAQ,EAAA;kBAChD,gBAAgB,CAAC,QAAQ,CAAC;gBAC3B,CAAC,CAAC;eACF,MAAM;gBACN,MAAM,CAAC,IAAI,CACV,+CAA+C,GAC9C,OAAO,gBAAgB,CACxB;cACD;YACD;YACgB,OAAA,CAAA,CAAA,CAAA,WAAM,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAA;;YAA1C,QAAQ,GAAG,EAAA,CAAA,IAAA,EAA+B;YAChD,OAAO,CAAC,kBAAkB,CAAC,4BAA4B,CAAC;YACxD,oBAAoB,CACnB,KAAK,EACL,UAAU,EACV;cAAE,MAAM,EAAE,KAAK;cAAE,MAAM,EAAE;YAAS,CAAE,EACpC;cACC,QAAQ,EAAE,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC;aACjE,EACD,uBAAA,GAAwB,GAAK,CAC7B;YACD,OAAA,CAAA,CAAA,CAAA,YAAO,QAAQ,CAAA;;;YAEf,oBAAoB,CACnB,KAAK,EACL,UAAU,EACV;cACC,MAAM,EAAE,KAAK;cACb,MAAM,EAAE;aACR,EACD,IAAI,EACJ,uBAAA,GAAwB,OAAK,CAAC,OAAS,CACvC;YACD,MAAM,OAAK;;;YAKN,MAAM,GAAG,IAAI,kBAAkB,CAAA,QAAA,CAAA,CAAA,CAAA,EAAM,EAAE,CAAC,MAAM,CAAA,CAAG;YACvC,OAAA,CAAA,CAAA,CAAA,WAAM,aAAa,CAAC,EAAE,EAAE,IAAI,gBAAgB,CAAC,MAAM,CAAC,CAAC,CAAA;;YAA/D,OAAO,GAAG,EAAA,CAAA,IAAA,EAAqD;YAEzD,EAAA,GAAA,SAAS;YACpB,OAAA,CAAA,CAAA,CAAA,WAAM,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE;cAC7B,SAAS,EAAE,OAAO,IAAI;aACtB,CAAC,CAAA;;YAHG,GAAG,GAAG,EAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CACX,EAAA,CAAA,IAAA,EAEE,CAAA,CACF;YACD,oBAAoB,CACnB,KAAK,EACL,cAAc,EACd;cAAE,MAAM,EAAE,KAAK;cAAE,MAAM,EAAE;YAAS,CAAE,EACpC,IAAI,EACJ,cAAA,GAAe,GAAK,CACpB;YACD,OAAA,CAAA,CAAA,CAAA,YAAO,GAAG,CAAA;;;YAEV,MAAM,CAAC,IAAI,CAAC,sBAAsB,EAAE,OAAK,CAAC;YAC1C,oBAAoB,CACnB,KAAK,EACL,cAAc,EACd;cAAE,MAAM,EAAE,KAAK;cAAE,MAAM,EAAE;YAAQ,CAAE,EACnC,IAAI,EACJ,iCAAA,GAAkC,GAAK,CACvC;YACD,MAAM,OAAK;;;;;;GAEZ;EAED;;;;;;;AAOG;EACI,aAAA,CAAA,SAAA,CAAA,GAAG,GAAV,UACC,GAAW,EACX,MAAqC,EACrC,MAAU,EAAA;IAEV,IAAM,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,CAAA,CAAE,EAAE,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC;IAC3C,IAAA,MAAA,GAAA,GAAA,CAAA,MAAM;MAAE,KAAA,GAAA,GAAA,CAAA,KAAK;MAAE,gBAAA,GAAA,GAAA,CAAA,gBAAgB;MAAE,KAAA,GAAA,GAAA,CAAA,KAAK;MAAE,SAAA,GAAA,GAAA,CAAA,SAAS;IAExD,IAAA,WAAA,GAAA,GAAA,CAAA,WAAW;MACX,kBAAA,GAAA,GAAA,CAAA,kBAAkB;MAClB,eAAA,GAAA,GAAA,CAAA,eAAe;MACf,YAAA,GAAA,GAAA,CAAA,YAAY;MACZ,OAAA,GAAA,GAAA,CAAA,OAAO;MACP,QAAA,GAAA,GAAA,CAAA,QAAQ;MACR,OAAA,GAAA,GAAA,CAAA,OAAO;MACP,GAAA,GAAA,GAAA,CAAA,GAAG;IAGH,IAAA,oBAAA,GAAA,GAAA,CAAA,oBAAoB;MACpB,oBAAA,GAAA,GAAA,CAAA,oBAAoB;MACpB,cAAA,GAAA,GAAA,CAAA,cAAc;MACd,iBAAA,GAAA,GAAA,CAAA,iBAAiB;MACjB,WAAA,GAAA,GAAA,CAAA,WAAW;IAEZ,IAAM,IAAI,GAAG,WAAW,GAAG,WAAW,GAAG,qBAAqB;IAE9D,IAAM,MAAM,GAA0B;MACrC,MAAM,EAAE,MAAM;MACd,GAAG,EAAE,GAAG;MACR,IAAI,EAAE,MAAM;MACZ,WAAW,EAAE;KACb;IACD,IAAI,YAAY,EAAE;MACjB,MAAM,CAAC,YAAY,GAAG,YAAY;IAClC;IACD,IAAI,kBAAkB,EAAE;MACvB,MAAM,CAAC,kBAAkB,GAAG,kBAAkB;IAC9C;IACD,IAAI,eAAe,EAAE;MACpB,MAAM,CAAC,eAAe,GAAG,eAAe;IACxC;IACD,IAAI,OAAO,EAAE;MACZ,MAAM,CAAC,OAAO,GAAG,OAAO;IACxB;IACD,IAAI,QAAQ,EAAE;MACb,MAAM,CAAC,QAAQ,GAAG,QAAQ;IAC1B;IACD,IAAI,OAAO,EAAE;MACZ,MAAM,CAAC,OAAO,GAAG,OAAO;IACxB;IACD,IAAI,oBAAoB,EAAE;MACzB,MAAM,CAAC,oBAAoB,GAAG,oBAAoB;IAClD;IACD,IAAI,oBAAoB,EAAE;MACzB,MAAM,CAAC,oBAAoB,GAAG,oBAAoB;IAClD;IACD,IAAI,cAAc,EAAE;MACnB,MAAM,CAAC,cAAc,GAAG,cAAc;IACtC;IACD,IAAI,iBAAiB,EAAE;MACtB,MAAM,CAAC,iBAAiB,GAAG,iBAAiB;IAC5C;IACD,IAAI,WAAW,EAAE;MAChB,MAAM,CAAC,WAAW,GAAG,WAAW;IAChC;IAED,IAAM,OAAO,GAAG,IAAI,MAAM,CAAC,YAAY,EAAE;IACzC,IAAM,QAAQ,GAAG,IAAI,0BAA0B,CAAC,MAAM,EAAE,GAAG,EAAE,OAAO,CAAC;IAErE,IAAI,GAAG,EAAE;MACR,MAAM,CAAC,GAAG,GAAG,GAAG;IAChB;IAED,IAAI,SAAS,KAAK,IAAI,EAAE;MACvB,IAAM,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC;MAC7C;MACA;MACA,QAAQ,CAAC,eAAe,CAAC,GAAG,CAC3B,sBAAsB,CAAC,GAAG,EAAE,GAAG,CAAC,EAChC,uBAAuB,CACvB;MACD,IAAM,YAAY,GAAiB;QAClC,MAAM,EAAA,MAAA;QACN,GAAG,EAAA,GAAA;QACH,QAAQ,EAAA,QAAA;QACR,IAAI,EAAE,MAAc;QACpB,OAAO,EAAA,OAAA;QACP,WAAW,EAAE,KAAK;QAClB,MAAM,EAAA;OACN;MACD;MACA,OAAO,IAAI,CAAC,oBAAoB,CAC/B,YAAY,EACZ,MAA6C,CACnB;IAC3B;IAED,IAAI;MACH,IAAI,gBAAgB,EAAE;QACrB,IAAI,OAAO,gBAAgB,KAAK,UAAU,EAAE;UAC3C,OAAO,CAAC,EAAE,CAAC,0BAA0B,EAAE,UAAA,QAAQ,EAAA;YAC9C,gBAAgB,CAAC,QAAQ,CAAC;UAC3B,CAAC,CAAC;SACF,MAAM;UACN,MAAM,CAAC,IAAI,CACV,+CAA+C,GAC9C,OAAO,gBAAgB,CACxB;QACD;MACD;MAED,OAAO,QAAQ,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,UAAA,QAAQ,EAAA;QACrC,MAAM,CAAC,KAAK,CAAC,eAAe,EAAE,QAAQ,CAAC;QACvC,oBAAoB,CACnB,KAAK,EACL,QAAQ,EACR;UAAE,MAAM,EAAE,KAAK;UAAE,MAAM,EAAE;QAAS,CAAE,EACpC,IAAI,EACJ,qBAAA,GAAsB,GAAK,CAC3B;QACD,OAAO;UAAE,GAAG,EAAA;QAAA,CAAE;MACf,CAAC,CAA2B;KAC5B,CAAC,OAAO,KAAK,EAAE;MACf,MAAM,CAAC,IAAI,CAAC,iBAAiB,EAAE,KAAK,CAAC;MACrC,oBAAoB,CACnB,KAAK,EACL,QAAQ,EACR;QAAE,MAAM,EAAE,KAAK;QAAE,MAAM,EAAE;MAAQ,CAAE,EACnC,IAAI,EACJ,kBAAA,GAAmB,GAAK,CACxB;MACD,MAAM,KAAK;IACX;EACF,CAAC;EAED;;;;;AAKG;EACU,aAAA,CAAA,SAAA,CAAA,MAAM,GAAnB,UACC,GAAW,EACX,MAA+B,EAAA;;;;;;YAET,OAAA,CAAA,CAAA,CAAA,WAAM,IAAI,CAAC,kBAAkB,EAAE,CAAA;;YAA/C,aAAa,GAAG,EAAA,CAAA,IAAA,EAA+B;YACrD,IAAI,CAAC,aAAa,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;cAC7D,MAAM,IAAI,KAAK,CAAC,mBAAmB,CAAC,cAAc,CAAC;YACnD;YACK,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,CAAA,CAAE,EAAE,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC;YAC3C,MAAM,GAAY,GAAG,CAAA,MAAf,EAAE,KAAK,GAAK,GAAG,CAAA,KAAR;YAEf,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC;YAC1B,SAAS,GAAG,MAAM,GAAG,GAAG;YACxB,EAAE,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC;YACvC,MAAM,CAAC,KAAK,CAAC,SAAS,GAAG,GAAG,GAAG,QAAQ,GAAG,SAAS,CAAC;YAE9C,MAAM,GAA6B;cACxC,MAAM,EAAE,MAAM;cACd,GAAG,EAAE;aACL;YAEK,mBAAmB,GAAG,IAAI,mBAAmB,CAAC,MAAM,CAAC;;;;YAGzC,OAAA,CAAA,CAAA,CAAA,WAAM,EAAE,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAA;;YAA7C,QAAQ,GAAG,EAAA,CAAA,IAAA,EAAkC;YACnD,oBAAoB,CACnB,KAAK,EACL,QAAQ,EACR;cAAE,MAAM,EAAE,QAAQ;cAAE,MAAM,EAAE;YAAS,CAAE,EACvC,IAAI,EACJ,UAAA,GAAW,GAAG,GAAA,eAAe,CAC7B;YACD,OAAA,CAAA,CAAA,CAAA,YAAO,QAAQ,CAAA;;;YAEf,oBAAoB,CACnB,KAAK,EACL,QAAQ,EACR;cAAE,MAAM,EAAE,QAAQ;cAAE,MAAM,EAAE;YAAQ,CAAE,EACtC,IAAI,EACJ,cAAA,GAAe,GAAG,GAAA,eAAA,GAAgB,OAAO,CACzC;YACD,MAAM,OAAK;;;;;;GAEZ;;EACa,aAAA,CAAA,SAAA,CAAA,KAAK,GAAnB,UACC,MAA4B,EAC5B,GAAoB,EACpB,MAAc,EAAA;;;;;;YAER,MAAM,GAAkC;cAC7C,QAAQ,EAAE,EAAE;cACZ,SAAS,EAAE;aACX;YACK,EAAE,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC;YACjC,oBAAoB,GAAG,IAAI,oBAAoB,CAAA,QAAA,CAAA,CAAA,CAAA,EAAM,MAAM,CAAA,CAAG;YACnD,OAAA,CAAA,CAAA,CAAA,WAAM,EAAE,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAA;;YAA9C,QAAQ,GAAG,EAAA,CAAA,IAAA,EAAmC;YACpD,IAAI,QAAQ,IAAI,QAAQ,CAAC,QAAQ,EAAE;cAClC,MAAM,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAA,IAAI,EAAA;gBAC3C,OAAO;kBACN,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC;kBACnC,IAAI,EAAE,IAAI,CAAC,IAAI;kBACf,YAAY,EAAE,IAAI,CAAC,YAAY;kBAC/B,IAAI,EAAE,IAAI,CAAC;iBACX;cACF,CAAC,CAAC;cACF,MAAM,CAAC,SAAS,GAAG,QAAQ,CAAC,qBAAqB;YACjD;YACD,OAAA,CAAA,CAAA,CAAA,YAAO,MAAM,CAAA;QAAC;;;GACd;EAED;;;;;;AAMG;EACU,aAAA,CAAA,SAAA,CAAA,IAAI,GAAjB,UACC,IAAY,EACZ,MAA6B,EAAA;;;;;;YAEP,OAAA,CAAA,CAAA,CAAA,WAAM,IAAI,CAAC,kBAAkB,EAAE,CAAA;;YAA/C,aAAa,GAAG,EAAA,CAAA,IAAA,EAA+B;YACrD,IAAI,CAAC,aAAa,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;cAC7D,MAAM,IAAI,KAAK,CAAC,mBAAmB,CAAC,cAAc,CAAC;YACnD;YACK,GAAG,GAAoB,MAAM,CAAC,MAAM,CAAC,CAAA,CAAE,EAAE,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC;YAC5D,MAAM,GAAqB,GAAG,CAAA,MAAxB,EAAE,KAAK,GAAc,GAAG,CAAA,KAAjB,EAAE,OAAO,GAAK,GAAG,CAAA,OAAR;YACxB,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC;YAC1B,UAAU,GAAG,MAAM,GAAG,IAAI;YAChC,MAAM,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,GAAG,QAAQ,GAAG,UAAU,CAAC;;;;YAE7C,IAAI,GAAyB,EAAE;YACjC,KAAK,GAAA,KAAA,CAAQ;YACb,UAAU,GAAA,KAAA,CAA+B;YACvC,MAAM,GAAyB;cACpC,MAAM,EAAE,MAAM;cACd,MAAM,EAAE,UAAU;cAClB,OAAO,EAAE;aACT;gBACG,EAAA,OAAO,KAAK,KAAK,CAAA,EAAjB,OAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA;;;YAEF,MAAM,CAAC,iBAAiB,GAAG,KAAK;YAChC,MAAM,CAAC,OAAO,GAAG,IAAI;YACR,OAAA,CAAA,CAAA,CAAA,WAAM,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC,CAAA;;YAAlD,UAAU,GAAG,EAAA,CAAA,IAAA,EAAqC;YAClD,IAAI,CAAC,IAAI,CAAA,KAAA,CAAT,IAAI,EAAA,QAAA,CAAS,UAAU,CAAC,QAAQ,CAAA,CAAA;YAChC,IAAI,UAAU,CAAC,SAAS,EAAE,KAAK,GAAG,UAAU,CAAC,SAAS;;;gBAC9C,UAAU,CAAC,SAAS,EAAA,OAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA;;;;;YAE7B,OAAO,GAAG,IAAI,IAAI,OAAO,OAAO,KAAK,QAAQ,GACzC,MAAM,CAAC,OAAO,GAAG,OAAO,GACxB,MAAM,CAAC,OAAO,GAAG,IAAK;YACb,OAAA,CAAA,CAAA,CAAA,WAAM,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC,CAAA;;YAAlD,UAAU,GAAG,EAAA,CAAA,IAAA,EAAqC;YAClD,IAAI,CAAC,IAAI,CAAA,KAAA,CAAT,IAAI,EAAA,QAAA,CAAS,UAAU,CAAC,QAAQ,CAAA,CAAA;YAChC,IAAI,OAAO,GAAG,IAAI,EACjB,MAAM,CAAC,IAAI,CACV,wFAAwF,CACxF;;;YAEH,oBAAoB,CACnB,KAAK,EACL,MAAM,EACN;cAAE,MAAM,EAAE,MAAM;cAAE,MAAM,EAAE;YAAS,CAAE,EACrC,IAAI,EACD,IAAI,CAAC,MAAM,GAAA,qCAAqC,CACnD;YACD,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC;YAC1B,OAAA,CAAA,CAAA,CAAA,YAAO,IAAI,CAAA;;;YAEX,MAAM,CAAC,IAAI,CAAC,YAAY,EAAE,OAAK,CAAC;YAChC,oBAAoB,CACnB,KAAK,EACL,MAAM,EACN;cAAE,MAAM,EAAE,MAAM;cAAE,MAAM,EAAE;YAAQ,CAAE,EACpC,IAAI,EACJ,wBAAA,GAAyB,OAAK,CAAC,OAAS,CACxC;YACD,MAAM,OAAK;;;;;;GAEZ;;EAEa,aAAA,CAAA,SAAA,CAAA,kBAAkB,GAAhC,YAAA;;;;;;;YAEsB,OAAA,CAAA,CAAA,CAAA,WAAM,WAAW,CAAC,GAAG,EAAE,CAAA;;YAArC,WAAW,GAAG,EAAA,CAAA,IAAA,EAAuB;YAC3C,IAAI,CAAC,WAAW,EAAE,OAAA,CAAA,CAAA,CAAA,YAAO,KAAK,CAAA;YACxB,IAAI,GAAG,WAAW,CAAC,KAAK,CAAC,WAAW,CAAC;YAC3C,MAAM,CAAC,KAAK,CAAC,6BAA6B,EAAE,IAAI,CAAC;YACjD,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,IAAI;YAE/B,OAAA,CAAA,CAAA,CAAA,YAAO,IAAI,CAAA;;;YAEX,MAAM,CAAC,IAAI,CAAC,0BAA0B,EAAE,OAAK,CAAC;YAC9C,OAAA,CAAA,CAAA,CAAA,YAAO,KAAK,CAAA;;;;;;GAEb;;EAEO,aAAA,CAAA,SAAA,CAAA,kBAAkB,GAA1B,UACC,MAAsB,EAAA;IAEtB,OAAO,OAAO,MAAM,KAAK,QAAQ,IAAI,MAAM,CAAC,cAAc,CAAC,aAAa,CAAC;EAC1E,CAAC;EAEO,aAAA,CAAA,SAAA,CAAA,OAAO,GAAf,UAAgB,MAKf,EAAA;IACQ,IAAA,WAAA,GAAA,MAAA,CAAA,WAAW;MAAE,KAAA,GAAA,MAAA,CAAA,KAAK;IAE1B,IAAM,YAAY,GAAG,MAAM,CAAC,YAAY,IAAI,CAAA,CAAE;IAC9C,IAAM,UAAU,GAAG,MAAM,CAAC,UAAU,IAAI,WAAW,CAAC,UAAU;IAC9D,IAAM,WAAW,GAChB,CAAC,YAAY,CAAC,OAAO,KAAK,SAAS,GAAG,YAAY,CAAC,OAAO,GAAG,UAAU,IACvE,UAAU,GACV,GAAG;IACJ,IAAM,aAAa,GAClB,CAAC,YAAY,CAAC,SAAS,KAAK,SAAS,GAClC,YAAY,CAAC,SAAS,GACtB,YAAY,IACf,UAAU,GACV,GAAG;IACJ,IAAM,UAAU,GACf,YAAY,CAAC,MAAM,KAAK,SAAS,GAAG,YAAY,CAAC,MAAM,GAAG,SAAS;IAEpE,QAAQ,KAAK;MACZ,KAAK,SAAS;QACb,OAAO,WAAW;MACnB,KAAK,WAAW;QACf,OAAO,aAAa;MACrB;QACC,OAAO,UAAU;IAAC;EAErB,CAAC;EAED;;AAEG;EACK,aAAA,CAAA,SAAA,CAAA,kBAAkB,GAA1B,UACC,MAKC,EACD,OAA6B,EAAA;IAE7B,IAAM,QAAQ,GAAG,cAAc,CAAC,MAAM,EAAE,OAAO,CAAC;IAChD,QAAQ,CAAC,eAAe,CAAC,GAAG,CAC3B,6BAA6B,CAAC,QAAQ,CAAC,MAAM,CAAC,EAC9C,oCAAoC,CACpC;IACD,OAAO,QAAQ;EAChB,CAAC;EAlvBe,aAAA,CAAA,QAAQ,GAAG,SAAS;EACpB,aAAA,CAAA,aAAa,GAAG,OAAO;EAkvBxC,OAAA,aAAC;CAAA,EAAA;SApvBY,aAAa;AAsvB1B;;AAEG;AACH,eAAe,aAAa","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\n/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { ConsoleLogger as Logger, Credentials, Parser, StorageHelper, Hub, } from '@aws-amplify/core';\nimport { GetObjectCommand, DeleteObjectCommand, ListObjectsV2Command, CopyObjectCommand, } from '@aws-sdk/client-s3';\nimport { formatUrl } from '@aws-sdk/util-format-url';\nimport { createRequest } from '@aws-sdk/util-create-request';\nimport { S3RequestPresigner } from '@aws-sdk/s3-request-presigner';\nimport { SEND_DOWNLOAD_PROGRESS_EVENT, SEND_UPLOAD_PROGRESS_EVENT, } from './axios-http-handler';\nimport { StorageErrorStrings } from '../common/StorageErrorStrings';\nimport { dispatchStorageEvent } from '../common/StorageUtils';\nimport { createPrefixMiddleware, prefixMiddlewareOptions, getPrefix, autoAdjustClockskewMiddleware, autoAdjustClockskewMiddlewareOptions, createS3Client, } from '../common/S3ClientUtils';\nimport { AWSS3ProviderManagedUpload } from './AWSS3ProviderManagedUpload';\nimport { AWSS3UploadTask, TaskEvents } from './AWSS3UploadTask';\nimport { UPLOADS_STORAGE_KEY } from '../common/StorageConstants';\nimport * as events from 'events';\nvar logger = new Logger('AWSS3Provider');\nvar DEFAULT_STORAGE_LEVEL = 'public';\nvar DEFAULT_PRESIGN_EXPIRATION = 900;\n/**\n * Provide storage methods to use AWS S3\n */\nvar AWSS3Provider = /** @class */ (function () {\n    /**\n     * Initialize Storage with AWS configurations\n     * @param {Object} config - Configuration object for storage\n     */\n    function AWSS3Provider(config) {\n        var _this = this;\n        this._config = config ? config : {};\n        this._storage = new StorageHelper().getStorage();\n        Hub.listen('auth', function (data) {\n            var payload = data.payload;\n            if (payload.event === 'signOut' || payload.event === 'signIn') {\n                _this._storage.removeItem(UPLOADS_STORAGE_KEY);\n            }\n        });\n        logger.debug('Storage Options', this._config);\n    }\n    /**\n     * get the category of the plugin\n     */\n    AWSS3Provider.prototype.getCategory = function () {\n        return AWSS3Provider.CATEGORY;\n    };\n    /**\n     * get provider name of the plugin\n     */\n    AWSS3Provider.prototype.getProviderName = function () {\n        return AWSS3Provider.PROVIDER_NAME;\n    };\n    /**\n     * Configure Storage part with aws configuration\n     * @param {Object} config - Configuration of the Storage\n     * @return {Object} - Current configuration\n     */\n    AWSS3Provider.prototype.configure = function (config) {\n        logger.debug('configure Storage', config);\n        if (!config)\n            return this._config;\n        var amplifyConfig = Parser.parseMobilehubConfig(config);\n        this._config = Object.assign({}, this._config, amplifyConfig.Storage);\n        if (!this._config.bucket) {\n            logger.debug('Do not have bucket yet');\n        }\n        return this._config;\n    };\n    AWSS3Provider.prototype.startResumableUpload = function (addTaskInput, config) {\n        var s3Client = addTaskInput.s3Client, emitter = addTaskInput.emitter, key = addTaskInput.key, file = addTaskInput.file, params = addTaskInput.params;\n        var progressCallback = config.progressCallback, completeCallback = config.completeCallback, errorCallback = config.errorCallback, _a = config.track, track = _a === void 0 ? false : _a;\n        if (!(file instanceof Blob)) {\n            throw new Error(StorageErrorStrings.INVALID_BLOB);\n        }\n        emitter.on(TaskEvents.UPLOAD_PROGRESS, function (event) {\n            if (progressCallback) {\n                if (typeof progressCallback === 'function') {\n                    progressCallback(event);\n                }\n                else {\n                    logger.warn('progressCallback should be a function, not a ' +\n                        typeof progressCallback);\n                }\n            }\n        });\n        emitter.on(TaskEvents.UPLOAD_COMPLETE, function (event) {\n            if (completeCallback) {\n                if (typeof completeCallback === 'function') {\n                    completeCallback(event);\n                }\n                else {\n                    logger.warn('completeCallback should be a function, not a ' +\n                        typeof completeCallback);\n                }\n            }\n        });\n        emitter.on(TaskEvents.ERROR, function (err) {\n            if (errorCallback) {\n                if (typeof errorCallback === 'function') {\n                    errorCallback(err);\n                }\n                else {\n                    logger.warn('errorCallback should be a function, not a ' + typeof errorCallback);\n                }\n            }\n        });\n        // we want to keep this function sync so we defer this promise to AWSS3UploadTask to resolve when it's needed\n        // when its doing a final check with _listSingleFile function\n        var prefixPromise = Credentials.get().then(function (credentials) {\n            var cred = Credentials.shear(credentials);\n            return getPrefix(__assign(__assign({}, config), { credentials: cred }));\n        });\n        var task = new AWSS3UploadTask({\n            s3Client: s3Client,\n            file: file,\n            emitter: emitter,\n            level: config.level,\n            storage: this._storage,\n            params: params,\n            prefixPromise: prefixPromise,\n        });\n        dispatchStorageEvent(track, 'upload', { method: 'put', result: 'success' }, null, \"Upload Task created successfully for \" + key);\n        // automatically start the upload task\n        task.resume();\n        return task;\n    };\n    /**\n     * Copy an object from a source object to a new object within the same bucket. Can optionally copy files across\n     * different level or identityId (if source object's level is 'protected').\n     *\n     * @async\n     * @param {S3CopySource} src - Key and optionally access level and identityId of the source object.\n     * @param {S3CopyDestination} dest - Key and optionally access level of the destination object.\n     * @param {S3ProviderCopyConfig} [config] - Optional configuration for s3 commands.\n     * @return {Promise<S3ProviderCopyOutput>} The key of the copied object.\n     */\n    AWSS3Provider.prototype.copy = function (src, dest, config) {\n        return __awaiter(this, void 0, void 0, function () {\n            var credentialsOK, opt, acl, bucket, cacheControl, expires, track, serverSideEncryption, SSECustomerAlgorithm, SSECustomerKey, SSECustomerKeyMD5, SSEKMSKeyId, _a, srcLevel, srcIdentityId, srcKey, _b, destLevel, destKey, srcPrefix, destPrefix, finalSrcKey, finalDestKey, params, s3, error_1;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0: return [4 /*yield*/, this._ensureCredentials()];\n                    case 1:\n                        credentialsOK = _c.sent();\n                        if (!credentialsOK || !this._isWithCredentials(this._config)) {\n                            throw new Error(StorageErrorStrings.NO_CREDENTIALS);\n                        }\n                        opt = Object.assign({}, this._config, config);\n                        acl = opt.acl, bucket = opt.bucket, cacheControl = opt.cacheControl, expires = opt.expires, track = opt.track, serverSideEncryption = opt.serverSideEncryption, SSECustomerAlgorithm = opt.SSECustomerAlgorithm, SSECustomerKey = opt.SSECustomerKey, SSECustomerKeyMD5 = opt.SSECustomerKeyMD5, SSEKMSKeyId = opt.SSEKMSKeyId;\n                        _a = src.level, srcLevel = _a === void 0 ? DEFAULT_STORAGE_LEVEL : _a, srcIdentityId = src.identityId, srcKey = src.key;\n                        _b = dest.level, destLevel = _b === void 0 ? DEFAULT_STORAGE_LEVEL : _b, destKey = dest.key;\n                        if (!srcKey || typeof srcKey !== 'string') {\n                            throw new Error(StorageErrorStrings.NO_SRC_KEY);\n                        }\n                        if (!destKey || typeof destKey !== 'string') {\n                            throw new Error(StorageErrorStrings.NO_DEST_KEY);\n                        }\n                        if (srcLevel !== 'protected' && srcIdentityId) {\n                            logger.warn(\"You may copy files from another user if the source level is \\\"protected\\\", currently it's \" + srcLevel);\n                        }\n                        srcPrefix = this._prefix(__assign(__assign(__assign({}, opt), { level: srcLevel }), (srcIdentityId && { identityId: srcIdentityId })));\n                        destPrefix = this._prefix(__assign(__assign({}, opt), { level: destLevel }));\n                        finalSrcKey = bucket + \"/\" + srcPrefix + srcKey;\n                        finalDestKey = \"\" + destPrefix + destKey;\n                        logger.debug(\"copying \" + finalSrcKey + \" to \" + finalDestKey);\n                        params = {\n                            Bucket: bucket,\n                            CopySource: finalSrcKey,\n                            Key: finalDestKey,\n                            // Copies over metadata like contentType as well\n                            MetadataDirective: 'COPY',\n                        };\n                        if (cacheControl)\n                            params.CacheControl = cacheControl;\n                        if (expires)\n                            params.Expires = expires;\n                        if (serverSideEncryption) {\n                            params.ServerSideEncryption = serverSideEncryption;\n                        }\n                        if (SSECustomerAlgorithm) {\n                            params.SSECustomerAlgorithm = SSECustomerAlgorithm;\n                        }\n                        if (SSECustomerKey) {\n                            params.SSECustomerKey = SSECustomerKey;\n                        }\n                        if (SSECustomerKeyMD5) {\n                            params.SSECustomerKeyMD5 = SSECustomerKeyMD5;\n                        }\n                        if (SSEKMSKeyId) {\n                            params.SSEKMSKeyId = SSEKMSKeyId;\n                        }\n                        if (acl)\n                            params.ACL = acl;\n                        s3 = this._createNewS3Client(opt);\n                        _c.label = 2;\n                    case 2:\n                        _c.trys.push([2, 4, , 5]);\n                        return [4 /*yield*/, s3.send(new CopyObjectCommand(params))];\n                    case 3:\n                        _c.sent();\n                        dispatchStorageEvent(track, 'copy', {\n                            method: 'copy',\n                            result: 'success',\n                        }, null, \"Copy success from \" + srcKey + \" to \" + destKey);\n                        return [2 /*return*/, {\n                                key: destKey,\n                            }];\n                    case 4:\n                        error_1 = _c.sent();\n                        dispatchStorageEvent(track, 'copy', {\n                            method: 'copy',\n                            result: 'failed',\n                        }, null, \"Copy failed from \" + srcKey + \" to \" + destKey);\n                        throw error_1;\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSS3Provider.prototype.get = function (key, config) {\n        return __awaiter(this, void 0, void 0, function () {\n            var credentialsOK, opt, bucket, download, cacheControl, contentDisposition, contentEncoding, contentLanguage, contentType, expires, track, SSECustomerAlgorithm, SSECustomerKey, SSECustomerKeyMD5, progressCallback, prefix, final_key, emitter, s3, params, getObjectCommand, response, error_2, signer, request, url, _a, error_3;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this._ensureCredentials()];\n                    case 1:\n                        credentialsOK = _b.sent();\n                        if (!credentialsOK || !this._isWithCredentials(this._config)) {\n                            throw new Error(StorageErrorStrings.NO_CREDENTIALS);\n                        }\n                        opt = Object.assign({}, this._config, config);\n                        bucket = opt.bucket, download = opt.download, cacheControl = opt.cacheControl, contentDisposition = opt.contentDisposition, contentEncoding = opt.contentEncoding, contentLanguage = opt.contentLanguage, contentType = opt.contentType, expires = opt.expires, track = opt.track, SSECustomerAlgorithm = opt.SSECustomerAlgorithm, SSECustomerKey = opt.SSECustomerKey, SSECustomerKeyMD5 = opt.SSECustomerKeyMD5, progressCallback = opt.progressCallback;\n                        prefix = this._prefix(opt);\n                        final_key = prefix + key;\n                        emitter = new events.EventEmitter();\n                        s3 = this._createNewS3Client(opt, emitter);\n                        logger.debug('get ' + key + ' from ' + final_key);\n                        params = {\n                            Bucket: bucket,\n                            Key: final_key,\n                        };\n                        // See: https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/S3.html#getObject-property\n                        if (cacheControl)\n                            params.ResponseCacheControl = cacheControl;\n                        if (contentDisposition)\n                            params.ResponseContentDisposition = contentDisposition;\n                        if (contentEncoding)\n                            params.ResponseContentEncoding = contentEncoding;\n                        if (contentLanguage)\n                            params.ResponseContentLanguage = contentLanguage;\n                        if (contentType)\n                            params.ResponseContentType = contentType;\n                        if (SSECustomerAlgorithm) {\n                            params.SSECustomerAlgorithm = SSECustomerAlgorithm;\n                        }\n                        if (SSECustomerKey) {\n                            params.SSECustomerKey = SSECustomerKey;\n                        }\n                        if (SSECustomerKeyMD5) {\n                            params.SSECustomerKeyMD5 = SSECustomerKeyMD5;\n                        }\n                        if (!(download === true)) return [3 /*break*/, 5];\n                        getObjectCommand = new GetObjectCommand(params);\n                        _b.label = 2;\n                    case 2:\n                        _b.trys.push([2, 4, , 5]);\n                        if (progressCallback) {\n                            if (typeof progressCallback === 'function') {\n                                emitter.on(SEND_DOWNLOAD_PROGRESS_EVENT, function (progress) {\n                                    progressCallback(progress);\n                                });\n                            }\n                            else {\n                                logger.warn('progressCallback should be a function, not a ' +\n                                    typeof progressCallback);\n                            }\n                        }\n                        return [4 /*yield*/, s3.send(getObjectCommand)];\n                    case 3:\n                        response = _b.sent();\n                        emitter.removeAllListeners(SEND_DOWNLOAD_PROGRESS_EVENT);\n                        dispatchStorageEvent(track, 'download', { method: 'get', result: 'success' }, {\n                            fileSize: Number(response.Body['size'] || response.Body['length']),\n                        }, \"Download success for \" + key);\n                        return [2 /*return*/, response];\n                    case 4:\n                        error_2 = _b.sent();\n                        dispatchStorageEvent(track, 'download', {\n                            method: 'get',\n                            result: 'failed',\n                        }, null, \"Download failed with \" + error_2.message);\n                        throw error_2;\n                    case 5:\n                        _b.trys.push([5, 8, , 9]);\n                        signer = new S3RequestPresigner(__assign({}, s3.config));\n                        return [4 /*yield*/, createRequest(s3, new GetObjectCommand(params))];\n                    case 6:\n                        request = _b.sent();\n                        _a = formatUrl;\n                        return [4 /*yield*/, signer.presign(request, {\n                                expiresIn: expires || DEFAULT_PRESIGN_EXPIRATION,\n                            })];\n                    case 7:\n                        url = _a.apply(void 0, [_b.sent()]);\n                        dispatchStorageEvent(track, 'getSignedUrl', { method: 'get', result: 'success' }, null, \"Signed URL: \" + url);\n                        return [2 /*return*/, url];\n                    case 8:\n                        error_3 = _b.sent();\n                        logger.warn('get signed url error', error_3);\n                        dispatchStorageEvent(track, 'getSignedUrl', { method: 'get', result: 'failed' }, null, \"Could not get a signed URL for \" + key);\n                        throw error_3;\n                    case 9: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Put a file in S3 bucket specified to configure method\n     * @param key - key of the object\n     * @param object - File to be put in Amazon S3 bucket\n     * @param [config] - Optional configuration for the underlying S3 command\n     * @return an instance of AWSS3UploadTask or a promise that resolves to an object with the new object's key on\n     * success.\n     */\n    AWSS3Provider.prototype.put = function (key, object, config) {\n        var opt = Object.assign({}, this._config, config);\n        var bucket = opt.bucket, track = opt.track, progressCallback = opt.progressCallback, level = opt.level, resumable = opt.resumable;\n        var contentType = opt.contentType, contentDisposition = opt.contentDisposition, contentEncoding = opt.contentEncoding, cacheControl = opt.cacheControl, expires = opt.expires, metadata = opt.metadata, tagging = opt.tagging, acl = opt.acl;\n        var serverSideEncryption = opt.serverSideEncryption, SSECustomerAlgorithm = opt.SSECustomerAlgorithm, SSECustomerKey = opt.SSECustomerKey, SSECustomerKeyMD5 = opt.SSECustomerKeyMD5, SSEKMSKeyId = opt.SSEKMSKeyId;\n        var type = contentType ? contentType : 'binary/octet-stream';\n        var params = {\n            Bucket: bucket,\n            Key: key,\n            Body: object,\n            ContentType: type,\n        };\n        if (cacheControl) {\n            params.CacheControl = cacheControl;\n        }\n        if (contentDisposition) {\n            params.ContentDisposition = contentDisposition;\n        }\n        if (contentEncoding) {\n            params.ContentEncoding = contentEncoding;\n        }\n        if (expires) {\n            params.Expires = expires;\n        }\n        if (metadata) {\n            params.Metadata = metadata;\n        }\n        if (tagging) {\n            params.Tagging = tagging;\n        }\n        if (serverSideEncryption) {\n            params.ServerSideEncryption = serverSideEncryption;\n        }\n        if (SSECustomerAlgorithm) {\n            params.SSECustomerAlgorithm = SSECustomerAlgorithm;\n        }\n        if (SSECustomerKey) {\n            params.SSECustomerKey = SSECustomerKey;\n        }\n        if (SSECustomerKeyMD5) {\n            params.SSECustomerKeyMD5 = SSECustomerKeyMD5;\n        }\n        if (SSEKMSKeyId) {\n            params.SSEKMSKeyId = SSEKMSKeyId;\n        }\n        var emitter = new events.EventEmitter();\n        var uploader = new AWSS3ProviderManagedUpload(params, opt, emitter);\n        if (acl) {\n            params.ACL = acl;\n        }\n        if (resumable === true) {\n            var s3Client = this._createNewS3Client(opt);\n            // we are using aws sdk middleware to inject the prefix to key, this way we don't have to call\n            // this._ensureCredentials() which allows us to make this function sync so we can return non-Promise like UploadTask\n            s3Client.middlewareStack.add(createPrefixMiddleware(opt, key), prefixMiddlewareOptions);\n            var addTaskInput = {\n                bucket: bucket,\n                key: key,\n                s3Client: s3Client,\n                file: object,\n                emitter: emitter,\n                accessLevel: level,\n                params: params,\n            };\n            // explicitly asserting the type here as Typescript could not infer that resumable is of type true\n            return this.startResumableUpload(addTaskInput, config);\n        }\n        try {\n            if (progressCallback) {\n                if (typeof progressCallback === 'function') {\n                    emitter.on(SEND_UPLOAD_PROGRESS_EVENT, function (progress) {\n                        progressCallback(progress);\n                    });\n                }\n                else {\n                    logger.warn('progressCallback should be a function, not a ' +\n                        typeof progressCallback);\n                }\n            }\n            return uploader.upload().then(function (response) {\n                logger.debug('upload result', response);\n                dispatchStorageEvent(track, 'upload', { method: 'put', result: 'success' }, null, \"Upload success for \" + key);\n                return { key: key };\n            });\n        }\n        catch (error) {\n            logger.warn('error uploading', error);\n            dispatchStorageEvent(track, 'upload', { method: 'put', result: 'failed' }, null, \"Error uploading \" + key);\n            throw error;\n        }\n    };\n    /**\n     * Remove the object for specified key\n     * @param {string} key - key of the object\n     * @param {S3ProviderRemoveConfig} [config] - Optional configuration for the underlying S3 command\n     * @return {Promise<S3ProviderRemoveOutput>} - Promise resolves upon successful removal of the object\n     */\n    AWSS3Provider.prototype.remove = function (key, config) {\n        return __awaiter(this, void 0, void 0, function () {\n            var credentialsOK, opt, bucket, track, prefix, final_key, s3, params, deleteObjectCommand, response, error_4;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._ensureCredentials()];\n                    case 1:\n                        credentialsOK = _a.sent();\n                        if (!credentialsOK || !this._isWithCredentials(this._config)) {\n                            throw new Error(StorageErrorStrings.NO_CREDENTIALS);\n                        }\n                        opt = Object.assign({}, this._config, config);\n                        bucket = opt.bucket, track = opt.track;\n                        prefix = this._prefix(opt);\n                        final_key = prefix + key;\n                        s3 = this._createNewS3Client(opt);\n                        logger.debug('remove ' + key + ' from ' + final_key);\n                        params = {\n                            Bucket: bucket,\n                            Key: final_key,\n                        };\n                        deleteObjectCommand = new DeleteObjectCommand(params);\n                        _a.label = 2;\n                    case 2:\n                        _a.trys.push([2, 4, , 5]);\n                        return [4 /*yield*/, s3.send(deleteObjectCommand)];\n                    case 3:\n                        response = _a.sent();\n                        dispatchStorageEvent(track, 'delete', { method: 'remove', result: 'success' }, null, \"Deleted \" + key + \" successfully\");\n                        return [2 /*return*/, response];\n                    case 4:\n                        error_4 = _a.sent();\n                        dispatchStorageEvent(track, 'delete', { method: 'remove', result: 'failed' }, null, \"Deletion of \" + key + \" failed with \" + error_4);\n                        throw error_4;\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSS3Provider.prototype._list = function (params, opt, prefix) {\n        return __awaiter(this, void 0, void 0, function () {\n            var result, s3, listObjectsV2Command, response;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        result = {\n                            contents: [],\n                            nextToken: '',\n                        };\n                        s3 = this._createNewS3Client(opt);\n                        listObjectsV2Command = new ListObjectsV2Command(__assign({}, params));\n                        return [4 /*yield*/, s3.send(listObjectsV2Command)];\n                    case 1:\n                        response = _a.sent();\n                        if (response && response.Contents) {\n                            result.contents = response.Contents.map(function (item) {\n                                return {\n                                    key: item.Key.substr(prefix.length),\n                                    eTag: item.ETag,\n                                    lastModified: item.LastModified,\n                                    size: item.Size,\n                                };\n                            });\n                            result.nextToken = response.NextContinuationToken;\n                        }\n                        return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    /**\n     * List bucket objects relative to the level and prefix specified\n     * @param {string} path - the path that contains objects\n     * @param {S3ProviderListConfig} [config] - Optional configuration for the underlying S3 command\n     * @return {Promise<S3ProviderListOutput>} - Promise resolves to list of keys, eTags, lastModified and file size for\n     * all objects in path\n     */\n    AWSS3Provider.prototype.list = function (path, config) {\n        return __awaiter(this, void 0, void 0, function () {\n            var credentialsOK, opt, bucket, track, maxKeys, prefix, final_path, list, token, listResult, params, error_5;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._ensureCredentials()];\n                    case 1:\n                        credentialsOK = _a.sent();\n                        if (!credentialsOK || !this._isWithCredentials(this._config)) {\n                            throw new Error(StorageErrorStrings.NO_CREDENTIALS);\n                        }\n                        opt = Object.assign({}, this._config, config);\n                        bucket = opt.bucket, track = opt.track, maxKeys = opt.maxKeys;\n                        prefix = this._prefix(opt);\n                        final_path = prefix + path;\n                        logger.debug('list ' + path + ' from ' + final_path);\n                        _a.label = 2;\n                    case 2:\n                        _a.trys.push([2, 10, , 11]);\n                        list = [];\n                        token = void 0;\n                        listResult = void 0;\n                        params = {\n                            Bucket: bucket,\n                            Prefix: final_path,\n                            MaxKeys: 1000,\n                        };\n                        if (!(maxKeys === 'ALL')) return [3 /*break*/, 7];\n                        _a.label = 3;\n                    case 3:\n                        params.ContinuationToken = token;\n                        params.MaxKeys = 1000;\n                        return [4 /*yield*/, this._list(params, opt, prefix)];\n                    case 4:\n                        listResult = _a.sent();\n                        list.push.apply(list, __spread(listResult.contents));\n                        if (listResult.nextToken)\n                            token = listResult.nextToken;\n                        _a.label = 5;\n                    case 5:\n                        if (listResult.nextToken) return [3 /*break*/, 3];\n                        _a.label = 6;\n                    case 6: return [3 /*break*/, 9];\n                    case 7:\n                        maxKeys < 1000 || typeof maxKeys === 'string'\n                            ? (params.MaxKeys = maxKeys)\n                            : (params.MaxKeys = 1000);\n                        return [4 /*yield*/, this._list(params, opt, prefix)];\n                    case 8:\n                        listResult = _a.sent();\n                        list.push.apply(list, __spread(listResult.contents));\n                        if (maxKeys > 1000)\n                            logger.warn(\"maxkeys can be from 0 - 1000 or 'ALL'. To list all files you can set maxKeys to 'ALL'.\");\n                        _a.label = 9;\n                    case 9:\n                        dispatchStorageEvent(track, 'list', { method: 'list', result: 'success' }, null, list.length + \" items returned from list operation\");\n                        logger.debug('list', list);\n                        return [2 /*return*/, list];\n                    case 10:\n                        error_5 = _a.sent();\n                        logger.warn('list error', error_5);\n                        dispatchStorageEvent(track, 'list', { method: 'list', result: 'failed' }, null, \"Listing items failed: \" + error_5.message);\n                        throw error_5;\n                    case 11: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSS3Provider.prototype._ensureCredentials = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var credentials, cred, error_6;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, Credentials.get()];\n                    case 1:\n                        credentials = _a.sent();\n                        if (!credentials)\n                            return [2 /*return*/, false];\n                        cred = Credentials.shear(credentials);\n                        logger.debug('set credentials for storage', cred);\n                        this._config.credentials = cred;\n                        return [2 /*return*/, true];\n                    case 2:\n                        error_6 = _a.sent();\n                        logger.warn('ensure credentials error', error_6);\n                        return [2 /*return*/, false];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSS3Provider.prototype._isWithCredentials = function (config) {\n        return typeof config === 'object' && config.hasOwnProperty('credentials');\n    };\n    AWSS3Provider.prototype._prefix = function (config) {\n        var credentials = config.credentials, level = config.level;\n        var customPrefix = config.customPrefix || {};\n        var identityId = config.identityId || credentials.identityId;\n        var privatePath = (customPrefix.private !== undefined ? customPrefix.private : 'private/') +\n            identityId +\n            '/';\n        var protectedPath = (customPrefix.protected !== undefined\n            ? customPrefix.protected\n            : 'protected/') +\n            identityId +\n            '/';\n        var publicPath = customPrefix.public !== undefined ? customPrefix.public : 'public/';\n        switch (level) {\n            case 'private':\n                return privatePath;\n            case 'protected':\n                return protectedPath;\n            default:\n                return publicPath;\n        }\n    };\n    /**\n     * Creates an S3 client with new V3 aws sdk\n     */\n    AWSS3Provider.prototype._createNewS3Client = function (config, emitter) {\n        var s3client = createS3Client(config, emitter);\n        s3client.middlewareStack.add(autoAdjustClockskewMiddleware(s3client.config), autoAdjustClockskewMiddlewareOptions);\n        return s3client;\n    };\n    AWSS3Provider.CATEGORY = 'Storage';\n    AWSS3Provider.PROVIDER_NAME = 'AWSS3';\n    return AWSS3Provider;\n}());\nexport { AWSS3Provider };\n/**\n * @deprecated use named import\n */\nexport default AWSS3Provider;\n//# sourceMappingURL=AWSS3Provider.js.map"]},"metadata":{},"sourceType":"module"}