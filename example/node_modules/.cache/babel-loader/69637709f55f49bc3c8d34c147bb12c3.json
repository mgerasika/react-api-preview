{"ast":null,"code":"function _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport { CONST } from '../constants/const.constant.js';\nimport { throwException } from './throw-exception.util.js';\nfunction createCollection(data, next_page, request) {\n  return {\n    request: _objectSpread(_objectSpread({}, request), {}, {\n      limit: (request === null || request === void 0 ? void 0 : request.limit) || CONST.LIST_LIMIT\n    }),\n    next_page: next_page || 0,\n    list: data || []\n  };\n}\nfunction deleteFromCollection(data, id) {\n  if (!data) {\n    return createCollection([], 0, {});\n  }\n  return _objectSpread(_objectSpread({}, data), {}, {\n    list: data === null || data === void 0 ? void 0 : data.list.filter(function (f) {\n      return f.id !== id;\n    })\n  });\n}\nfunction addToCollection(data, item) {\n  if (!data) {\n    return createCollection([item], 0, {});\n  }\n  return _objectSpread(_objectSpread({}, data), {}, {\n    list: [item].concat(_toConsumableArray(data.list))\n  });\n}\nfunction getItem(data, id) {\n  return data === null || data === void 0 ? void 0 : data.list.find(function (item) {\n    if (item.id === id) {\n      return item;\n    }\n    return undefined;\n  });\n}\nfunction updateCollection(data, id, newItem) {\n  if (!data) {\n    return createCollection([newItem], 0, {});\n  }\n  var found = false;\n  var res = _objectSpread(_objectSpread({}, data), {}, {\n    list: data === null || data === void 0 ? void 0 : data.list.map(function (item) {\n      if (item.id === id) {\n        found = true;\n        return _objectSpread({}, newItem);\n      }\n      return item;\n    })\n  });\n  if (!found) {\n    throwException('update collection not found');\n  }\n  return res;\n}\nexport { addToCollection, createCollection, deleteFromCollection, getItem, updateCollection };","map":{"version":3,"sources":["../../../src/utils/create-collection.util.ts"],"names":["createCollection","data","next_page","request","limit","CONST","LIST_LIMIT","list","deleteFromCollection","id","filter","f","addToCollection","item","getItem","find","undefined","updateCollection","newItem","found","res","map","throwException"],"mappings":"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","sourcesContent":["import { CONST } from '@common/constants/const.constant';\nimport { ICollectionRequestOptions } from '@common/interfaces/collection-request-options.interface';\nimport { ICollection } from '@common/interfaces/collection.interface';\nimport { IIdObject } from '@common/interfaces/id-object.interface';\nimport { UID } from '@common/interfaces/uid.interface';\nimport { throwException } from './throw-exception.util';\n\nexport function createCollection<T, TFilter = unknown>(\n    data: T[] | undefined,\n    next_page: number | undefined,\n    request: (Omit<ICollectionRequestOptions<TFilter>, 'limit'> & { limit?: number }) | undefined,\n): ICollection<T, TFilter> {\n    return {\n        request: { ...request, limit: request?.limit || CONST.LIST_LIMIT },\n        next_page: next_page || 0,\n        list: data || [],\n    };\n}\n\nexport function deleteFromCollection<T extends IIdObject>(data: ICollection<T> | undefined, id: UID): ICollection<T> {\n    if (!data) {\n        return createCollection([], 0, {});\n    }\n    return {\n        ...data,\n        list: data?.list.filter((f) => f.id !== id),\n    };\n}\n\nexport function addToCollection<T extends IIdObject>(data: ICollection<T> | undefined, item: T): ICollection<T> {\n    if (!data) {\n        return createCollection([item], 0, {});\n    }\n    return {\n        ...data,\n        list: [item, ...data.list],\n    };\n}\n\nexport function getItem<T extends IIdObject>(data: ICollection<T> | undefined, id: UID): T | undefined {\n    return data?.list.find((item): T | undefined => {\n        if (item.id === id) {\n            return item;\n        }\n        return undefined;\n    });\n}\n\nexport function updateCollection<T extends IIdObject>(\n    data: ICollection<T> | undefined,\n    id: UID,\n    newItem: T,\n): ICollection<T> {\n    if (!data) {\n        return createCollection([newItem], 0, {});\n    }\n    let found = false;\n    const res = {\n        ...data,\n        list: data?.list.map((item) => {\n            if (item.id === id) {\n                found = true;\n                return { ...newItem };\n            }\n            return item;\n        }),\n    };\n    if (!found) {\n        throwException('update collection not found');\n    }\n    return res;\n}\n"]},"metadata":{},"sourceType":"module"}