{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nvar logger = new Logger('AbstractXRProvider');\nvar AbstractXRProvider = /** @class */function () {\n  function AbstractXRProvider(options) {\n    if (options === void 0) {\n      options = {};\n    }\n    this._config = options;\n  }\n  AbstractXRProvider.prototype.configure = function (config) {\n    if (config === void 0) {\n      config = {};\n    }\n    this._config = __assign(__assign({}, config), this._config);\n    logger.debug(\"configure \" + this.getProviderName(), this._config);\n    return this.options;\n  };\n  AbstractXRProvider.prototype.getCategory = function () {\n    return 'XR';\n  };\n  Object.defineProperty(AbstractXRProvider.prototype, \"options\", {\n    get: function () {\n      return __assign({}, this._config);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return AbstractXRProvider;\n}();\nexport { AbstractXRProvider };","map":{"version":3,"sources":["../../src/Providers/XRProvider.ts"],"names":[],"mappings":";;;;;;;;;;AAaA,SAAS,aAAa,IAAI,MAAM,QAAQ,mBAAmB;AAE3D,IAAM,MAAM,GAAG,IAAI,MAAM,CAAC,oBAAoB,CAAC;AAE/C,IAAA,kBAAA,GAAA,aAAA,YAAA;EAGC,SAAA,kBAAA,CAAY,OAA6B,EAAA;IAA7B,IAAA,OAAA,KAAA,KAAA,CAAA,EAAA;MAAA,OAAA,GAAA,CAAA,CAA6B;IAAA;IACxC,IAAI,CAAC,OAAO,GAAG,OAAO;EACvB;EAEA,kBAAA,CAAA,SAAA,CAAA,SAAS,GAAT,UAAU,MAA4B,EAAA;IAA5B,IAAA,MAAA,KAAA,KAAA,CAAA,EAAA;MAAA,MAAA,GAAA,CAAA,CAA4B;IAAA;IACrC,IAAI,CAAC,OAAO,GAAA,QAAA,CAAA,QAAA,CAAA,CAAA,CAAA,EAAQ,MAAM,CAAA,EAAK,IAAI,CAAC,OAAO,CAAE;IAE7C,MAAM,CAAC,KAAK,CAAC,YAAA,GAAa,IAAI,CAAC,eAAe,EAAI,EAAE,IAAI,CAAC,OAAO,CAAC;IAEjE,OAAO,IAAI,CAAC,OAAO;EACpB,CAAC;EAED,kBAAA,CAAA,SAAA,CAAA,WAAW,GAAX,YAAA;IACC,OAAO,IAAI;EACZ,CAAC;EAID,MAAA,CAAA,cAAA,CAAc,kBAAA,CAAA,SAAA,EAAA,SAAO,EAAA;SAArB,YAAA;MACC,OAAA,QAAA,CAAA,CAAA,CAAA,EAAY,IAAI,CAAC,OAAO,CAAA;IACzB,CAAC;;;IAAA;EAsBF,OAAA,kBAAC;AAAD,CAAC,EAAA","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nvar logger = new Logger('AbstractXRProvider');\nvar AbstractXRProvider = /** @class */ (function () {\n    function AbstractXRProvider(options) {\n        if (options === void 0) { options = {}; }\n        this._config = options;\n    }\n    AbstractXRProvider.prototype.configure = function (config) {\n        if (config === void 0) { config = {}; }\n        this._config = __assign(__assign({}, config), this._config);\n        logger.debug(\"configure \" + this.getProviderName(), this._config);\n        return this.options;\n    };\n    AbstractXRProvider.prototype.getCategory = function () {\n        return 'XR';\n    };\n    Object.defineProperty(AbstractXRProvider.prototype, \"options\", {\n        get: function () {\n            return __assign({}, this._config);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return AbstractXRProvider;\n}());\nexport { AbstractXRProvider };\n//# sourceMappingURL=XRProvider.js.map"]},"metadata":{},"sourceType":"module"}