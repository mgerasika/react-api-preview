{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function sent() {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n          case 7:\n            op = _.ops.pop();\n            _.trys.pop();\n            continue;\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n              _.ops.push(op);\n              break;\n            }\n            if (t[2]) _.ops.pop();\n            _.trys.pop();\n            continue;\n        }\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { Auth } from '@aws-amplify/auth';\nimport Cache from '@aws-amplify/cache';\nimport { RestAPIClass } from '@aws-amplify/api-rest';\nimport { GraphQLAPIClass } from '@aws-amplify/api-graphql';\nimport { Amplify, ConsoleLogger as Logger, Credentials } from '@aws-amplify/core';\nvar logger = new Logger('API');\n/**\n * @deprecated\n * Use RestApi or GraphQLAPI to reduce your application bundle size\n * Export Cloud Logic APIs\n */\nvar APIClass = /** @class */function () {\n  /**\n   * Initialize API with AWS configuration\n   * @param {Object} options - Configuration object for API\n   */\n  function APIClass(options) {\n    this.Auth = Auth;\n    this.Cache = Cache;\n    this.Credentials = Credentials;\n    this._options = options;\n    this._restApi = new RestAPIClass(options);\n    this._graphqlApi = new GraphQLAPIClass(options);\n    logger.debug('API Options', this._options);\n  }\n  APIClass.prototype.getModuleName = function () {\n    return 'API';\n  };\n  /**\n   * Configure API part with aws configurations\n   * @param {Object} config - Configuration of the API\n   * @return {Object} - The current configuration\n   */\n  APIClass.prototype.configure = function (options) {\n    this._options = Object.assign({}, this._options, options);\n    // Share Amplify instance with client for SSR\n    this._restApi.Credentials = this.Credentials;\n    this._graphqlApi.Auth = this.Auth;\n    this._graphqlApi.Cache = this.Cache;\n    this._graphqlApi.Credentials = this.Credentials;\n    var restAPIConfig = this._restApi.configure(this._options);\n    var graphQLAPIConfig = this._graphqlApi.configure(this._options);\n    return __assign(__assign({}, restAPIConfig), graphQLAPIConfig);\n  };\n  /**\n   * Make a GET request\n   * @param apiName - The api name of the request\n   * @param path - The path of the request\n   * @param [init] - Request extra params\n   * @return A promise that resolves to an object with response status and JSON data, if successful.\n   */\n  APIClass.prototype.get = function (apiName, path, init) {\n    return this._restApi.get(apiName, path, init);\n  };\n  /**\n   * Make a POST request\n   * @param apiName - The api name of the request\n   * @param path - The path of the request\n   * @param [init] - Request extra params\n   * @return A promise that resolves to an object with response status and JSON data, if successful.\n   */\n  APIClass.prototype.post = function (apiName, path, init) {\n    return this._restApi.post(apiName, path, init);\n  };\n  /**\n   * Make a PUT request\n   * @param apiName - The api name of the request\n   * @param path - The path of the request\n   * @param [init] - Request extra params\n   * @return A promise that resolves to an object with response status and JSON data, if successful.\n   */\n  APIClass.prototype.put = function (apiName, path, init) {\n    return this._restApi.put(apiName, path, init);\n  };\n  /**\n   * Make a PATCH request\n   * @param apiName - The api name of the request\n   * @param path - The path of the request\n   * @param [init] - Request extra params\n   * @return A promise that resolves to an object with response status and JSON data, if successful.\n   */\n  APIClass.prototype.patch = function (apiName, path, init) {\n    return this._restApi.patch(apiName, path, init);\n  };\n  /**\n   * Make a DEL request\n   * @param apiName - The api name of the request\n   * @param path - The path of the request\n   * @param [init] - Request extra params\n   * @return A promise that resolves to an object with response status and JSON data, if successful.\n   */\n  APIClass.prototype.del = function (apiName, path, init) {\n    return this._restApi.del(apiName, path, init);\n  };\n  /**\n   * Make a HEAD request\n   * @param apiName - The api name of the request\n   * @param path - The path of the request\n   * @param [init] - Request extra params\n   * @return A promise that resolves to an object with response status and JSON data, if successful.\n   */\n  APIClass.prototype.head = function (apiName, path, init) {\n    return this._restApi.head(apiName, path, init);\n  };\n  /**\n   * Checks to see if an error thrown is from an api request cancellation\n   * @param error - Any error\n   * @return If the error was from an api request cancellation\n   */\n  APIClass.prototype.isCancel = function (error) {\n    return this._restApi.isCancel(error);\n  };\n  /**\n   * Cancels an inflight request for either a GraphQL request or a Rest API request.\n   * @param request - request to cancel\n   * @param [message] - custom error message\n   * @return If the request was cancelled\n   */\n  APIClass.prototype.cancel = function (request, message) {\n    if (this._restApi.hasCancelToken(request)) {\n      return this._restApi.cancel(request, message);\n    } else if (this._graphqlApi.hasCancelToken(request)) {\n      return this._graphqlApi.cancel(request, message);\n    }\n    return false;\n  };\n  /**\n   * Getting endpoint for API\n   * @param apiName - The name of the api\n   * @return The endpoint of the api\n   */\n  APIClass.prototype.endpoint = function (apiName) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2 /*return*/, this._restApi.endpoint(apiName)];\n      });\n    });\n  };\n  /**\n   * to get the operation type\n   * @param operation\n   */\n  APIClass.prototype.getGraphqlOperationType = function (operation) {\n    return this._graphqlApi.getGraphqlOperationType(operation);\n  };\n  APIClass.prototype.graphql = function (options, additionalHeaders) {\n    return this._graphqlApi.graphql(options, additionalHeaders);\n  };\n  return APIClass;\n}();\nexport { APIClass };\nexport var API = new APIClass(null);\nAmplify.register(API);","map":{"version":3,"sources":["../src/API.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { Auth } from '@aws-amplify/auth';\nimport Cache from '@aws-amplify/cache';\nimport { RestAPIClass } from '@aws-amplify/api-rest';\nimport { GraphQLAPIClass, } from '@aws-amplify/api-graphql';\nimport { Amplify, ConsoleLogger as Logger, Credentials, } from '@aws-amplify/core';\nvar logger = new Logger('API');\n/**\n * @deprecated\n * Use RestApi or GraphQLAPI to reduce your application bundle size\n * Export Cloud Logic APIs\n */\nvar APIClass = /** @class */ (function () {\n    /**\n     * Initialize API with AWS configuration\n     * @param {Object} options - Configuration object for API\n     */\n    function APIClass(options) {\n        this.Auth = Auth;\n        this.Cache = Cache;\n        this.Credentials = Credentials;\n        this._options = options;\n        this._restApi = new RestAPIClass(options);\n        this._graphqlApi = new GraphQLAPIClass(options);\n        logger.debug('API Options', this._options);\n    }\n    APIClass.prototype.getModuleName = function () {\n        return 'API';\n    };\n    /**\n     * Configure API part with aws configurations\n     * @param {Object} config - Configuration of the API\n     * @return {Object} - The current configuration\n     */\n    APIClass.prototype.configure = function (options) {\n        this._options = Object.assign({}, this._options, options);\n        // Share Amplify instance with client for SSR\n        this._restApi.Credentials = this.Credentials;\n        this._graphqlApi.Auth = this.Auth;\n        this._graphqlApi.Cache = this.Cache;\n        this._graphqlApi.Credentials = this.Credentials;\n        var restAPIConfig = this._restApi.configure(this._options);\n        var graphQLAPIConfig = this._graphqlApi.configure(this._options);\n        return __assign(__assign({}, restAPIConfig), graphQLAPIConfig);\n    };\n    /**\n     * Make a GET request\n     * @param apiName - The api name of the request\n     * @param path - The path of the request\n     * @param [init] - Request extra params\n     * @return A promise that resolves to an object with response status and JSON data, if successful.\n     */\n    APIClass.prototype.get = function (apiName, path, init) {\n        return this._restApi.get(apiName, path, init);\n    };\n    /**\n     * Make a POST request\n     * @param apiName - The api name of the request\n     * @param path - The path of the request\n     * @param [init] - Request extra params\n     * @return A promise that resolves to an object with response status and JSON data, if successful.\n     */\n    APIClass.prototype.post = function (apiName, path, init) {\n        return this._restApi.post(apiName, path, init);\n    };\n    /**\n     * Make a PUT request\n     * @param apiName - The api name of the request\n     * @param path - The path of the request\n     * @param [init] - Request extra params\n     * @return A promise that resolves to an object with response status and JSON data, if successful.\n     */\n    APIClass.prototype.put = function (apiName, path, init) {\n        return this._restApi.put(apiName, path, init);\n    };\n    /**\n     * Make a PATCH request\n     * @param apiName - The api name of the request\n     * @param path - The path of the request\n     * @param [init] - Request extra params\n     * @return A promise that resolves to an object with response status and JSON data, if successful.\n     */\n    APIClass.prototype.patch = function (apiName, path, init) {\n        return this._restApi.patch(apiName, path, init);\n    };\n    /**\n     * Make a DEL request\n     * @param apiName - The api name of the request\n     * @param path - The path of the request\n     * @param [init] - Request extra params\n     * @return A promise that resolves to an object with response status and JSON data, if successful.\n     */\n    APIClass.prototype.del = function (apiName, path, init) {\n        return this._restApi.del(apiName, path, init);\n    };\n    /**\n     * Make a HEAD request\n     * @param apiName - The api name of the request\n     * @param path - The path of the request\n     * @param [init] - Request extra params\n     * @return A promise that resolves to an object with response status and JSON data, if successful.\n     */\n    APIClass.prototype.head = function (apiName, path, init) {\n        return this._restApi.head(apiName, path, init);\n    };\n    /**\n     * Checks to see if an error thrown is from an api request cancellation\n     * @param error - Any error\n     * @return If the error was from an api request cancellation\n     */\n    APIClass.prototype.isCancel = function (error) {\n        return this._restApi.isCancel(error);\n    };\n    /**\n     * Cancels an inflight request for either a GraphQL request or a Rest API request.\n     * @param request - request to cancel\n     * @param [message] - custom error message\n     * @return If the request was cancelled\n     */\n    APIClass.prototype.cancel = function (request, message) {\n        if (this._restApi.hasCancelToken(request)) {\n            return this._restApi.cancel(request, message);\n        }\n        else if (this._graphqlApi.hasCancelToken(request)) {\n            return this._graphqlApi.cancel(request, message);\n        }\n        return false;\n    };\n    /**\n     * Getting endpoint for API\n     * @param apiName - The name of the api\n     * @return The endpoint of the api\n     */\n    APIClass.prototype.endpoint = function (apiName) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this._restApi.endpoint(apiName)];\n            });\n        });\n    };\n    /**\n     * to get the operation type\n     * @param operation\n     */\n    APIClass.prototype.getGraphqlOperationType = function (operation) {\n        return this._graphqlApi.getGraphqlOperationType(operation);\n    };\n    APIClass.prototype.graphql = function (options, additionalHeaders) {\n        return this._graphqlApi.graphql(options, additionalHeaders);\n    };\n    return APIClass;\n}());\nexport { APIClass };\nexport var API = new APIClass(null);\nAmplify.register(API);\n//# sourceMappingURL=API.js.map"]},"metadata":{},"sourceType":"module"}