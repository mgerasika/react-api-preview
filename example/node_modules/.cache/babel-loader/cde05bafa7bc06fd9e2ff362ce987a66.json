{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar console_service = require('../services/console.service.js');\nvar React = require('react');\nfunction useHookDependencyLogger(name, value) {\n  const ref = React.useRef(undefined);\n  if (ref.current) {\n    const tmp = [];\n    ref.current.forEach((val, index) => {\n      const equal = val === value[index];\n      if (!equal) {\n        tmp[tmp.length] = {\n          index,\n          previousValue: val,\n          currentValue: value[index],\n          isEqual: equal\n        };\n      }\n    });\n    if (tmp.length) {\n      console_service.consoleService.log(`[${name}] -> hook dependency are different`, tmp);\n    }\n  } else {\n    console_service.consoleService.log(`[${name}]-> hook dependency call first time (empty)`, value);\n  }\n  ref.current = value;\n  return ref.current;\n}\nexports.useHookDependencyLogger = useHookDependencyLogger;","map":{"version":3,"sources":["../../../src/hooks/use-hook-dependency-logger.hook.ts"],"names":["useHookDependencyLogger","name","value","ref","useRef","undefined","current","tmp","forEach","val","index","equal","length","previousValue","currentValue","isEqual","consoleService","log"],"mappings":";;;;;;;AAGO,SAASA,uBAAuB,CAACC,IAAY,EAAEC,KAAS,EAAM;EACjE,MAAMC,GAAG,GAAGC,KAAAA,CAAAA,MAAM,CAAiBC,SAAS,CAAC;EAE7C,IAAIF,GAAG,CAACG,OAAO,EAAE;IACb,MAAMC,GAAc,GAAG,EAAE;IACzBJ,GAAG,CAACG,OAAO,CAACE,OAAO,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAK;MAChC,MAAMC,KAAK,GAAGF,GAAG,KAAKP,KAAK,CAACQ,KAAK,CAAC;MAClC,IAAI,CAACC,KAAK,EAAE;QACRJ,GAAG,CAACA,GAAG,CAACK,MAAM,CAAC,GAAG;UACdF,KAAK;UACLG,aAAa,EAAEJ,GAAG;UAClBK,YAAY,EAAEZ,KAAK,CAACQ,KAAK,CAAC;UAC1BK,OAAO,EAAEJ;SACZ;MACL;IACJ,CAAC,CAAC;IACF,IAAIJ,GAAG,CAACK,MAAM,EAAE;MACZI,eAAAA,CAAAA,cAAc,CAACC,GAAG,CAAE,IAAGhB,IAAwC,oCAAA,EAAEM,GAAG,CAAC;IACzE;EACJ,CAAC,MAAM;IACHS,eAAAA,CAAAA,cAAc,CAACC,GAAG,CAAE,IAAGhB,IAAiD,6CAAA,EAAEC,KAAK,CAAC;EACpF;EACAC,GAAG,CAACG,OAAO,GAAGJ,KAAK;EACnB,OAAOC,GAAG,CAACG,OAAO;AACtB","sourcesContent":["import { consoleService } from '@common/services/console.service';\nimport { useRef } from 'react';\n\nexport function useHookDependencyLogger(name: string, value: []): [] {\n    const ref = useRef<[] | undefined>(undefined);\n\n    if (ref.current) {\n        const tmp: unknown[] = [];\n        ref.current.forEach((val, index) => {\n            const equal = val === value[index];\n            if (!equal) {\n                tmp[tmp.length] = {\n                    index,\n                    previousValue: val,\n                    currentValue: value[index],\n                    isEqual: equal,\n                };\n            }\n        });\n        if (tmp.length) {\n            consoleService.log(`[${name}] -> hook dependency are different`, tmp);\n        }\n    } else {\n        consoleService.log(`[${name}]-> hook dependency call first time (empty)`, value);\n    }\n    ref.current = value;\n    return ref.current;\n}\n"]},"metadata":{},"sourceType":"script"}