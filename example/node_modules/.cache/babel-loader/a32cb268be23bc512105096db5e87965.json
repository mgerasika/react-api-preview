{"ast":null,"code":"import { notify } from '../general-ui/notify/notify.component.js';\nimport { t } from '../hooks/use-t.hook.js';\nlet _errorHandler;\nconst customNotify = {\n  initCustomHandler: errorHandler => {\n    _errorHandler = errorHandler;\n  },\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  error: e => {\n    if (Array.isArray(e)) {\n      e.filter(f => f).forEach(e => customNotify.error(e));\n    } else if (e) {\n      const beError = e;\n      if (beError?.error) {\n        _errorHandler(beError);\n      } else {\n        notify.error({\n          title: t('Operation failed'),\n          description: t('Something went wrong')\n        });\n      }\n    } else {\n      notify.error({\n        title: t('Operation failed'),\n        description: t('Something went wrong')\n      });\n    }\n  }\n};\nexport { customNotify };","map":{"version":3,"sources":["../../../src/utils/custom-notify.util.tsx"],"names":["_errorHandler","customNotify","initCustomHandler","errorHandler","error","e","Array","isArray","filter","f","forEach","beError","notify","title","t","description"],"mappings":";;AAIA,IAAIA,aAAwC;AACrC,MAAMC,YAAY,GAAG;EACxBC,iBAAiB,EAAGC,YAAuC,IAAW;IAClEH,aAAa,GAAGG,YAAY;GAC/B;EAED;EACAC,KAAK,EAAGC,CAAsE,IAAW;IACrF,IAAIC,KAAK,CAACC,OAAO,CAACF,CAAC,CAAC,EAAE;MAClBA,CAAC,CAACG,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAAC,CAACC,OAAO,CAAEL,CAAC,IAAKJ,YAAY,CAACG,KAAK,CAACC,CAAC,CAAa,CAAC;KACvE,MAAM,IAAIA,CAAC,EAAE;MACV,MAAMM,OAAO,GAAGN,CAAiC;MACjD,IAAIM,OAAO,EAAEP,KAAK,EAAE;QAChBJ,aAAa,CAACW,OAAO,CAAC;MAC1B,CAAC,MAAM;QACHC,MAAM,CAACR,KAAK,CAAC;UACTS,KAAK,EAAEC,CAAC,CAAC,kBAAkB,CAAC;UAC5BC,WAAW,EAAED,CAAC,CAAC,sBAAsB;QACzC,CAAC,CAAC;MACN;IACJ,CAAC,MAAM;MACHF,MAAM,CAACR,KAAK,CAAC;QACTS,KAAK,EAAEC,CAAC,CAAC,kBAAkB,CAAC;QAC5BC,WAAW,EAAED,CAAC,CAAC,sBAAsB;MACzC,CAAC,CAAC;IACN;EACJ;AACJ,CAAA","sourcesContent":["import { notify } from '@common/general-ui/notify/notify.component';\nimport { t } from '@common/hooks/use-t.hook';\nimport { IBEError } from '@common/interfaces/be-error.interface';\n\nlet _errorHandler: (error: IBEError) => void;\nexport const customNotify = {\n    initCustomHandler: (errorHandler: (error: IBEError) => void): void => {\n        _errorHandler = errorHandler;\n    },\n\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    error: (e: IBEError<unknown> | (IBEError<unknown> | undefined | null)[] | null): void => {\n        if (Array.isArray(e)) {\n            e.filter((f) => f).forEach((e) => customNotify.error(e as IBEError));\n        } else if (e) {\n            const beError = e as IBEError<string> | undefined;\n            if (beError?.error) {\n                _errorHandler(beError);\n            } else {\n                notify.error({\n                    title: t('Operation failed'),\n                    description: t('Something went wrong'),\n                });\n            }\n        } else {\n            notify.error({\n                title: t('Operation failed'),\n                description: t('Something went wrong'),\n            });\n        }\n    },\n};\n"]},"metadata":{},"sourceType":"module"}