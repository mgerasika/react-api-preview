{"ast":null,"code":"import { objectWithoutProperties as _objectWithoutProperties, extends as _extends } from '../_virtual/_rollupPluginBabelHelpers.js';\nimport { getCurrentLocaleTranslationPrefix, getTranslationPrefix } from '../utils/get-translation-prefix.util.js';\nimport i18n from 'i18next';\nimport React from 'react';\nimport { Trans } from 'react-i18next';\nimport { jsx } from '@emotion/react';\nvar _excluded = [\"children\", \"i18nKey\"];\n// export const useT = (): IReturn => {\n//     const { t } = useTranslation();\n//     return {\n//         t: (translation, _description, options): string => {\n//             const localePrefix = i18n.exists(translation) ? getCurrentLocaleTranslationPrefix() : '';\n//             return `${getTranslationPrefix()}${localePrefix}${t(translation, options)}`;\n//         },\n//     };\n// };\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction t(i18nKey, _description, options) {\n  var localePrefix = i18n.exists(i18nKey) ? getCurrentLocaleTranslationPrefix() : '';\n  return \"\".concat(getTranslationPrefix()).concat(localePrefix).concat(i18n.t(i18nKey, options) || i18nKey);\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction T(_ref) {\n  var children = _ref.children,\n    i18nKey = _ref.i18nKey,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var localePrefix = i18nKey && i18n.exists(i18nKey) ? getCurrentLocaleTranslationPrefix() : '';\n  return jsx(React.Fragment, null, getTranslationPrefix(), localePrefix, jsx(Trans, _extends({\n    i18nKey: i18nKey\n  }, rest), children));\n}\nexport { T, t };","map":{"version":3,"sources":["../../../src/hooks/use-t.hook.tsx"],"names":["t","i18nKey","_description","options","localePrefix","i18n","exists","getCurrentLocaleTranslationPrefix","getTranslationPrefix","T","children","rest","___EmotionJSX","Trans"],"mappings":";;;;;;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACO,SAASA,CAAC,CAACC,OAAe,EAAEC,YAAmC,EAAEC,OAAiC,EAAU;EAC/G,IAAMC,YAAY,GAAGC,IAAI,CAACC,MAAM,CAACL,OAAO,CAAC,GAAGM,iCAAiC,EAAE,GAAG,EAAE;EACpF,OAAA,EAAA,CAAA,MAAA,CAAUC,oBAAoB,EAAE,CAAGJ,CAAAA,MAAAA,CAAAA,YAAY,CAAA,CAAA,MAAA,CAAGC,IAAI,CAACL,CAAC,CAACC,OAAO,EAAEE,OAAO,CAAC,IAAIF,OAAO,CAAA;AACzF;AAOA;AACO,SAASQ,CAAC,CAA4D,IAAA,EAAA;EAAA,IAAzDC,QAAQ,GAAA,IAAA,CAARA,QAAQ;IAAET,OAAO,GAAA,IAAA,CAAPA,OAAO;IAAKU,IAAI,GAAA,wBAAA,CAAA,IAAA,EAAA,SAAA,CAAA;EAC1C,IAAMP,YAAY,GAAGH,OAAO,IAAII,IAAI,CAACC,MAAM,CAACL,OAAO,CAAC,GAAGM,iCAAiC,EAAE,GAAG,EAAE;EAC/F,OACIK,GAAAA,CAAAA,KAAAA,CAAAA,QAAAA,EAAAA,IAAAA,EACKJ,oBAAoB,EAAE,EACtBJ,YAAY,EACbQ,GAAAA,CAACC,KAAK,EAAA,QAAA,CAAA;IAACZ,OAAO,EAAEA;EAAQ,CAAA,EAAKU,IAAI,CAAA,EAC5BD,QAAQ,CACL,CACT;AAEX","sourcesContent":["import { getCurrentLocaleTranslationPrefix, getTranslationPrefix } from '@common/utils/get-translation-prefix.util';\nimport i18n, { TOptions } from 'i18next';\nimport React, { ReactNode } from 'react';\nimport { Trans } from 'react-i18next';\n\n// interface IReturn {\n//     t: (i18nKey: string, description?: TTranslationCategory, options?: any) => any;\n// }\n\ntype TTranslationCategory = string;\n// export const useT = (): IReturn => {\n//     const { t } = useTranslation();\n//     return {\n//         t: (translation, _description, options): string => {\n//             const localePrefix = i18n.exists(translation) ? getCurrentLocaleTranslationPrefix() : '';\n//             return `${getTranslationPrefix()}${localePrefix}${t(translation, options)}`;\n//         },\n//     };\n// };\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function t(i18nKey: string, _description?: TTranslationCategory, options?: string | TOptions | any): string {\n    const localePrefix = i18n.exists(i18nKey) ? getCurrentLocaleTranslationPrefix() : '';\n    return `${getTranslationPrefix()}${localePrefix}${i18n.t(i18nKey, options) || i18nKey}`;\n}\n\ninterface IProps {\n    i18nKey?: string;\n    children: JSX.Element | JSX.Element[] | ReactNode;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function T({ children, i18nKey, ...rest }: IProps & any): JSX.Element {\n    const localePrefix = i18nKey && i18n.exists(i18nKey) ? getCurrentLocaleTranslationPrefix() : '';\n    return (\n        <>\n            {getTranslationPrefix()}\n            {localePrefix}\n            <Trans i18nKey={i18nKey} {...rest}>\n                {children}\n            </Trans>\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}