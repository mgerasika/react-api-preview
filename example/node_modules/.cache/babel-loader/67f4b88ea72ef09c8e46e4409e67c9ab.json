{"ast":null,"code":"var queryToString = function queryToString(data) {\n  return Object.keys(data).filter(function (key) {\n    return data && data[key] !== undefined;\n  }).map(function (key) {\n    return \"\".concat(key, \"=\").concat(encodeURIComponent(data[key]));\n  }).join('&');\n};\nexport { queryToString };","map":{"version":3,"sources":["../../../src/utils/query-to-string.util.ts"],"names":["queryToString","data","Object","keys","filter","key","undefined","map","encodeURIComponent","join"],"mappings":"AAEaA,IAAAA,aAAa,GAAIC,SAAjBD,aAAa,CAAIC,IAAiB,EAAa;EACxD,OAAOC,MAAM,CAACC,IAAI,CAACF,IAAI,CAAC,CACnBG,MAAM,CAAEC,UAAAA,GAAG,EAAA;IAAA,OAAKJ,IAAI,IAAIA,IAAI,CAACI,GAAG,CAAC,KAAKC,SAAS;EAAA,CAAA,CAAC,CAChDC,GAAG,CAAEF,UAAAA,GAAG,EAAK;IACV,OAAA,EAAA,CAAA,MAAA,CAAUA,GAAI,EAAA,GAAA,CAAA,CAAA,MAAA,CAAGG,kBAAkB,CAACP,IAAI,CAACI,GAAG,CAAC,CAAE,CAAA;EACnD,CAAC,CAAC,CACDI,IAAI,CAAC,GAAG,CAAC;AAClB,CAAA","sourcesContent":["import { IDictionary } from '@common/interfaces/dictionary.interface';\n\nexport const queryToString = (data: IDictionary): string => {\n    return Object.keys(data)\n        .filter((key) => data && data[key] !== undefined)\n        .map((key) => {\n            return `${key}=${encodeURIComponent(data[key])}`;\n        })\n        .join('&');\n};\n"]},"metadata":{},"sourceType":"module"}