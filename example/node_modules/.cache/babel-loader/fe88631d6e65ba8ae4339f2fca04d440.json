{"ast":null,"code":"/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { getCurrTime, getByteLength, defaultConfig, isInteger } from './Utils';\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nvar logger = new Logger('StorageCache');\n/**\n * Initialization of the cache\n *\n */\nvar StorageCache = /** @class */function () {\n  /**\n   * Initialize the cache\n   * @param config - the configuration of the cache\n   */\n  function StorageCache(config) {\n    this.config = Object.assign({}, config);\n    this.cacheCurSizeKey = this.config.keyPrefix + 'CurSize';\n    this.checkConfig();\n  }\n  StorageCache.prototype.getModuleName = function () {\n    return 'Cache';\n  };\n  StorageCache.prototype.checkConfig = function () {\n    // check configuration\n    if (!isInteger(this.config.capacityInBytes)) {\n      logger.error('Invalid parameter: capacityInBytes. It should be an Integer. Setting back to default.');\n      this.config.capacityInBytes = defaultConfig.capacityInBytes;\n    }\n    if (!isInteger(this.config.itemMaxSize)) {\n      logger.error('Invalid parameter: itemMaxSize. It should be an Integer. Setting back to default.');\n      this.config.itemMaxSize = defaultConfig.itemMaxSize;\n    }\n    if (!isInteger(this.config.defaultTTL)) {\n      logger.error('Invalid parameter: defaultTTL. It should be an Integer. Setting back to default.');\n      this.config.defaultTTL = defaultConfig.defaultTTL;\n    }\n    if (!isInteger(this.config.defaultPriority)) {\n      logger.error('Invalid parameter: defaultPriority. It should be an Integer. Setting back to default.');\n      this.config.defaultPriority = defaultConfig.defaultPriority;\n    }\n    if (this.config.itemMaxSize > this.config.capacityInBytes) {\n      logger.error('Invalid parameter: itemMaxSize. It should be smaller than capacityInBytes. Setting back to default.');\n      this.config.itemMaxSize = defaultConfig.itemMaxSize;\n    }\n    if (this.config.defaultPriority > 5 || this.config.defaultPriority < 1) {\n      logger.error('Invalid parameter: defaultPriority. It should be between 1 and 5. Setting back to default.');\n      this.config.defaultPriority = defaultConfig.defaultPriority;\n    }\n    if (Number(this.config.warningThreshold) > 1 || Number(this.config.warningThreshold) < 0) {\n      logger.error('Invalid parameter: warningThreshold. It should be between 0 and 1. Setting back to default.');\n      this.config.warningThreshold = defaultConfig.warningThreshold;\n    }\n    // set 5MB limit\n    var cacheLimit = 5 * 1024 * 1024;\n    if (this.config.capacityInBytes > cacheLimit) {\n      logger.error('Cache Capacity should be less than 5MB. Setting back to default. Setting back to default.');\n      this.config.capacityInBytes = defaultConfig.capacityInBytes;\n    }\n  };\n  /**\n   * produce a JSON object with meta-data and data value\n   * @param value - the value of the item\n   * @param options - optional, the specified meta-data\n   *\n   * @return - the item which has the meta-data and the value\n   */\n  StorageCache.prototype.fillCacheItem = function (key, value, options) {\n    var ret = {\n      key: key,\n      data: value,\n      timestamp: getCurrTime(),\n      visitedTime: getCurrTime(),\n      priority: options.priority,\n      expires: options.expires,\n      type: typeof value,\n      byteSize: 0\n    };\n    ret.byteSize = getByteLength(JSON.stringify(ret));\n    // for accurate size\n    ret.byteSize = getByteLength(JSON.stringify(ret));\n    return ret;\n  };\n  /**\n   * set cache with customized configuration\n   * @param config - customized configuration\n   *\n   * @return - the current configuration\n   */\n  StorageCache.prototype.configure = function (config) {\n    if (!config) {\n      return this.config;\n    }\n    if (config.keyPrefix) {\n      logger.warn(\"Don't try to configure keyPrefix!\");\n    }\n    this.config = Object.assign({}, this.config, config, config.Cache);\n    this.checkConfig();\n    return this.config;\n  };\n  return StorageCache;\n}();\nexport { StorageCache };\n/**\n * @deprecated use named import\n */\nexport default StorageCache;","map":{"version":3,"sources":["../src/StorageCache.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { getCurrTime, getByteLength, defaultConfig, isInteger } from './Utils';\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nvar logger = new Logger('StorageCache');\n/**\n * Initialization of the cache\n *\n */\nvar StorageCache = /** @class */ (function () {\n    /**\n     * Initialize the cache\n     * @param config - the configuration of the cache\n     */\n    function StorageCache(config) {\n        this.config = Object.assign({}, config);\n        this.cacheCurSizeKey = this.config.keyPrefix + 'CurSize';\n        this.checkConfig();\n    }\n    StorageCache.prototype.getModuleName = function () {\n        return 'Cache';\n    };\n    StorageCache.prototype.checkConfig = function () {\n        // check configuration\n        if (!isInteger(this.config.capacityInBytes)) {\n            logger.error('Invalid parameter: capacityInBytes. It should be an Integer. Setting back to default.');\n            this.config.capacityInBytes = defaultConfig.capacityInBytes;\n        }\n        if (!isInteger(this.config.itemMaxSize)) {\n            logger.error('Invalid parameter: itemMaxSize. It should be an Integer. Setting back to default.');\n            this.config.itemMaxSize = defaultConfig.itemMaxSize;\n        }\n        if (!isInteger(this.config.defaultTTL)) {\n            logger.error('Invalid parameter: defaultTTL. It should be an Integer. Setting back to default.');\n            this.config.defaultTTL = defaultConfig.defaultTTL;\n        }\n        if (!isInteger(this.config.defaultPriority)) {\n            logger.error('Invalid parameter: defaultPriority. It should be an Integer. Setting back to default.');\n            this.config.defaultPriority = defaultConfig.defaultPriority;\n        }\n        if (this.config.itemMaxSize > this.config.capacityInBytes) {\n            logger.error('Invalid parameter: itemMaxSize. It should be smaller than capacityInBytes. Setting back to default.');\n            this.config.itemMaxSize = defaultConfig.itemMaxSize;\n        }\n        if (this.config.defaultPriority > 5 || this.config.defaultPriority < 1) {\n            logger.error('Invalid parameter: defaultPriority. It should be between 1 and 5. Setting back to default.');\n            this.config.defaultPriority = defaultConfig.defaultPriority;\n        }\n        if (Number(this.config.warningThreshold) > 1 ||\n            Number(this.config.warningThreshold) < 0) {\n            logger.error('Invalid parameter: warningThreshold. It should be between 0 and 1. Setting back to default.');\n            this.config.warningThreshold = defaultConfig.warningThreshold;\n        }\n        // set 5MB limit\n        var cacheLimit = 5 * 1024 * 1024;\n        if (this.config.capacityInBytes > cacheLimit) {\n            logger.error('Cache Capacity should be less than 5MB. Setting back to default. Setting back to default.');\n            this.config.capacityInBytes = defaultConfig.capacityInBytes;\n        }\n    };\n    /**\n     * produce a JSON object with meta-data and data value\n     * @param value - the value of the item\n     * @param options - optional, the specified meta-data\n     *\n     * @return - the item which has the meta-data and the value\n     */\n    StorageCache.prototype.fillCacheItem = function (key, value, options) {\n        var ret = {\n            key: key,\n            data: value,\n            timestamp: getCurrTime(),\n            visitedTime: getCurrTime(),\n            priority: options.priority,\n            expires: options.expires,\n            type: typeof value,\n            byteSize: 0,\n        };\n        ret.byteSize = getByteLength(JSON.stringify(ret));\n        // for accurate size\n        ret.byteSize = getByteLength(JSON.stringify(ret));\n        return ret;\n    };\n    /**\n     * set cache with customized configuration\n     * @param config - customized configuration\n     *\n     * @return - the current configuration\n     */\n    StorageCache.prototype.configure = function (config) {\n        if (!config) {\n            return this.config;\n        }\n        if (config.keyPrefix) {\n            logger.warn(\"Don't try to configure keyPrefix!\");\n        }\n        this.config = Object.assign({}, this.config, config, config.Cache);\n        this.checkConfig();\n        return this.config;\n    };\n    return StorageCache;\n}());\nexport { StorageCache };\n/**\n * @deprecated use named import\n */\nexport default StorageCache;\n//# sourceMappingURL=StorageCache.js.map"]},"metadata":{},"sourceType":"module"}