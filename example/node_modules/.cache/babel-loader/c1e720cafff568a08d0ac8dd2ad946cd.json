{"ast":null,"code":"import { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport { useField } from '../../hooks/use-field.hook.js';\nimport React, { useCallback } from 'react';\nimport { RadioGroup } from './radio-group.component.js';\nfunction FormRadioGroup(props) {\n  const {\n    onChange,\n    onBlur,\n    getCustomErrorMessage\n  } = props;\n  const {\n    setFieldValue,\n    setFieldTouched,\n    value,\n    errorMessage\n  } = useField({\n    ...props,\n    getCustomErrorMessage\n  });\n  const handleChange = useCallback(e => {\n    onChange && onChange(e);\n    setFieldValue(e.target.name);\n  }, [onChange, setFieldValue]);\n  const handleBlur = useCallback(e => {\n    onBlur && onBlur(e);\n    setFieldTouched();\n  }, [onBlur, setFieldTouched]);\n  return /*#__PURE__*/React.createElement(RadioGroup, _extends({\n    errorMessage: errorMessage\n  }, props, {\n    onChange: handleChange,\n    onBlur: handleBlur,\n    name: props.name,\n    value: value\n  }));\n}\nexport { FormRadioGroup };","map":{"version":3,"sources":["../../../../src/general-ui/radio-group/form-radio-group.component.tsx"],"names":["FormRadioGroup","props","onChange","onBlur","getCustomErrorMessage","setFieldValue","setFieldTouched","value","errorMessage","useField","handleChange","useCallback","e","target","name","handleBlur"],"mappings":";;;;AAKO,SAASA,cAAc,CAC1BC,KAA0E,EAC/D;EACX,MAAM;IAAEC,QAAQ;IAAEC,MAAM;IAAEC;EAAsB,CAAC,GAAGH,KAAK;EACzD,MAAM;IAAEI,aAAa;IAAEC,eAAe;IAAEC,KAAK;IAAEC;GAAc,GAAGC,QAAQ,CAAS;IAC7E,GAAGR,KAAK;IACRG;EACJ,CAAC,CAAC;EAEF,MAAMM,YAAY,GAAGC,WAAW,CAC3BC,CAAC,IAAK;IACHV,QAAQ,IAAIA,QAAQ,CAACU,CAAC,CAAC;IACvBP,aAAa,CAACO,CAAC,CAACC,MAAM,CAACC,IAAI,CAAC;EAChC,CAAC,EACD,CAACZ,QAAQ,EAAEG,aAAa,CAAC,CAC5B;EAED,MAAMU,UAAU,GAAGJ,WAAW,CACzBC,CAAC,IAAK;IACHT,MAAM,IAAIA,MAAM,CAACS,CAAC,CAAC;IACnBN,eAAe,EAAE;EACrB,CAAC,EACD,CAACH,MAAM,EAAEG,eAAe,CAAC,CAC5B;EAED,OAAA,aACI,KAAA,CAAA,aAAA,CAAC,UAAU,EAAA,QAAA,CAAA;IACP,YAAY,EAAEE;EAAa,CAAA,EACvBP,KAAK,EAAA;IACT,QAAQ,EAAES,YAAa;IACvB,MAAM,EAAEK,UAAW;IACnB,IAAI,EAAEd,KAAK,CAACa,IAAe;IAC3B,KAAK,EAAEP;GACT,CAAA,CAAA;AAEV","sourcesContent":["import { useField } from '@common/hooks/use-field.hook';\nimport React, { useCallback } from 'react';\nimport { IRadioGroupProps, RadioGroup } from './radio-group.component';\nimport { IRadioBlurHandler, IRadioChangeHandler } from './radio.component';\n\nexport function FormRadioGroup<TFormValues>(\n    props: Omit<IRadioGroupProps<keyof TFormValues>, 'value' | 'defaultValue'>,\n): JSX.Element {\n    const { onChange, onBlur, getCustomErrorMessage } = props;\n    const { setFieldValue, setFieldTouched, value, errorMessage } = useField<string>({\n        ...props,\n        getCustomErrorMessage,\n    });\n\n    const handleChange = useCallback<IRadioChangeHandler>(\n        (e) => {\n            onChange && onChange(e);\n            setFieldValue(e.target.name);\n        },\n        [onChange, setFieldValue],\n    );\n\n    const handleBlur = useCallback<IRadioBlurHandler>(\n        (e) => {\n            onBlur && onBlur(e);\n            setFieldTouched();\n        },\n        [onBlur, setFieldTouched],\n    );\n\n    return (\n        <RadioGroup\n            errorMessage={errorMessage}\n            {...props}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            name={props.name as string}\n            value={value}\n        />\n    );\n}\n"]},"metadata":{},"sourceType":"module"}