{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar React = require('react');\nvar useTimeout_hook = require('./use-timeout.hook.js');\nconst useIndividualPromise = _ref => {\n  let {\n    parallel = true\n  } = _ref;\n  const [loading, setIsLoading] = React.useState(false);\n  const [result, setResult] = React.useState([]);\n  const {\n    start: startTimeout\n  } = useTimeout_hook.useTimeout(React.useCallback(promises => {\n    if (!parallel) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      promises.reduce((acc, item) => {\n        return acc.finally(() => {\n          return item?.promiseFn().then(() => {\n            setResult(prevs => {\n              return prevs.map(prev => {\n                if (prev.id === item.id) {\n                  return {\n                    id: item.id,\n                    loading: false,\n                    success: true,\n                    error: undefined\n                  };\n                }\n                return prev;\n              });\n            });\n          }).catch(e => {\n            setResult(prevs => {\n              return prevs.map(prev => {\n                if (prev.id === item.id) {\n                  return {\n                    id: item.id,\n                    loading: false,\n                    success: false,\n                    error: e\n                  };\n                }\n                return prev;\n              });\n            });\n          }).finally(() => setIsLoading(false));\n        });\n      }, Promise.resolve());\n    } else {\n      promises.forEach(item => {\n        item.promiseFn().then(() => {\n          setResult(prevs => {\n            return prevs.map(prev => {\n              if (prev.id === item.id) {\n                return {\n                  id: item.id,\n                  loading: false,\n                  success: true,\n                  error: undefined\n                };\n              }\n              return prev;\n            });\n          });\n        }).catch(e => {\n          setResult(prevs => {\n            return prevs.map(prev => {\n              if (prev.id === item.id) {\n                return {\n                  id: item.id,\n                  loading: false,\n                  success: false,\n                  error: e\n                };\n              }\n              return prev;\n            });\n          });\n        }).finally(() => setIsLoading(false));\n      });\n    }\n  }, [parallel]), 50);\n  return {\n    start: React.useCallback(promises => {\n      setResult([]);\n      setIsLoading(true);\n      promises.forEach(item => {\n        setResult(prev => {\n          return [...prev, {\n            id: item.id,\n            loading: true,\n            success: false,\n            error: undefined\n          }];\n        });\n      });\n      startTimeout(promises);\n    }, [startTimeout]),\n    loading: result.some(r => r.loading) || loading,\n    clearResults: React.useCallback(() => {\n      setResult([]);\n    }, []),\n    result\n  };\n};\nexports.useIndividualPromise = useIndividualPromise;","map":{"version":3,"sources":["../../../src/hooks/use-individual-promise.hook.ts"],"names":["useIndividualPromise","parallel","loading","setIsLoading","useState","result","setResult","start","startTimeout","useTimeout","useCallback","promises","reduce","acc","item","finally","promiseFn","then","prevs","map","prev","id","success","error","undefined","catch","e","Promise","resolve","forEach","some","r","clearResults"],"mappings":"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","sourcesContent":["import { IBEError } from '@common/interfaces/be-error.interface';\nimport { useCallback, useState } from 'react';\nimport { useTimeout } from './use-timeout.hook';\n\nexport interface IPromiseItem {\n    id: string;\n    promiseFn: () => Promise<unknown>;\n}\nexport interface IPromiseResult {\n    id: string;\n    loading: boolean;\n    success: boolean;\n    error: IBEError | undefined;\n}\ninterface IReturn {\n    start: (promises: IPromiseItem[]) => void;\n    loading: boolean;\n    result: IPromiseResult[];\n    clearResults: () => void;\n}\nexport const useIndividualPromise = ({ parallel = true }: { parallel?: boolean }): IReturn => {\n    const [loading, setIsLoading] = useState<boolean>(false);\n    const [result, setResult] = useState<IPromiseResult[]>([]);\n    const { start: startTimeout } = useTimeout<IPromiseItem[]>(\n        useCallback(\n            (promises: IPromiseItem[]): void => {\n                if (!parallel) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    promises.reduce((acc, item?: IPromiseItem): any => {\n                        return acc.finally(() => {\n                            return item\n                                ?.promiseFn()\n                                .then((): void => {\n                                    setResult((prevs): IPromiseResult[] => {\n                                        return prevs.map((prev) => {\n                                            if (prev.id === item.id) {\n                                                return { id: item.id, loading: false, success: true, error: undefined };\n                                            }\n                                            return prev;\n                                        });\n                                    });\n                                })\n                                .catch((e) => {\n                                    setResult((prevs): IPromiseResult[] => {\n                                        return prevs.map((prev) => {\n                                            if (prev.id === item.id) {\n                                                return { id: item.id, loading: false, success: false, error: e };\n                                            }\n                                            return prev;\n                                        });\n                                    });\n                                })\n                                .finally(() => setIsLoading(false));\n                        });\n                    }, Promise.resolve());\n                } else {\n                    promises.forEach((item) => {\n                        item.promiseFn()\n                            .then((): void => {\n                                setResult((prevs): IPromiseResult[] => {\n                                    return prevs.map((prev) => {\n                                        if (prev.id === item.id) {\n                                            return { id: item.id, loading: false, success: true, error: undefined };\n                                        }\n                                        return prev;\n                                    });\n                                });\n                            })\n                            .catch((e) => {\n                                setResult((prevs): IPromiseResult[] => {\n                                    return prevs.map((prev) => {\n                                        if (prev.id === item.id) {\n                                            return { id: item.id, loading: false, success: false, error: e };\n                                        }\n                                        return prev;\n                                    });\n                                });\n                            })\n                            .finally(() => setIsLoading(false));\n                    });\n                }\n            },\n            [parallel],\n        ),\n        50,\n    );\n\n    return {\n        start: useCallback(\n            (promises: IPromiseItem[]): void => {\n                setResult([]);\n                setIsLoading(true);\n\n                promises.forEach((item) => {\n                    setResult((prev): IPromiseResult[] => {\n                        return [...prev, { id: item.id, loading: true, success: false, error: undefined }];\n                    });\n                });\n\n                startTimeout(promises);\n            },\n            [startTimeout],\n        ),\n        loading: result.some((r) => r.loading) || loading,\n        clearResults: useCallback(() => {\n            setResult([]);\n        }, []),\n        result,\n    };\n};\n"]},"metadata":{},"sourceType":"script"}