{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { DescribeDocumentClassificationJobRequest, DescribeDocumentClassificationJobResponse } from \"../models/models_0\";\nimport { deserializeAws_json1_1DescribeDocumentClassificationJobCommand, serializeAws_json1_1DescribeDocumentClassificationJobCommand } from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Gets the properties associated with a document classification job. Use this operation to\n *       get the status of a classification job.</p>\n */\nvar DescribeDocumentClassificationJobCommand = /** @class */function (_super) {\n  __extends(DescribeDocumentClassificationJobCommand, _super);\n  // Start section: command_properties\n  // End section: command_properties\n  function DescribeDocumentClassificationJobCommand(input) {\n    var _this =\n    // Start section: command_constructor\n    _super.call(this) || this;\n    _this.input = input;\n    return _this;\n    // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n  DescribeDocumentClassificationJobCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"ComprehendClient\";\n    var commandName = \"DescribeDocumentClassificationJobCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: DescribeDocumentClassificationJobRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: DescribeDocumentClassificationJobResponse.filterSensitiveLog\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n  DescribeDocumentClassificationJobCommand.prototype.serialize = function (input, context) {\n    return serializeAws_json1_1DescribeDocumentClassificationJobCommand(input, context);\n  };\n  DescribeDocumentClassificationJobCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_json1_1DescribeDocumentClassificationJobCommand(output, context);\n  };\n  return DescribeDocumentClassificationJobCommand;\n}($Command);\nexport { DescribeDocumentClassificationJobCommand };","map":{"version":3,"sources":["../../../commands/DescribeDocumentClassificationJobCommand.ts"],"names":[],"mappings":";AACA,SACE,wCAAwC,EACxC,yCAAyC,QACpC,oBAAoB;AAC3B,SACE,8DAA8D,EAC9D,4DAA4D,QACvD,0BAA0B;AACjC,SAAS,cAAc,QAAQ,2BAA2B;AAE1D,SAAS,OAAO,IAAI,QAAQ,QAAQ,wBAAwB;AAe5D;;;AAGG;AACH,IAAA,wCAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAA8D,SAAA,CAAA,wCAAA,EAAA,MAAA,CAAA;EAK5D;EACA;EAEA,SAAA,wCAAA,CAAqB,KAAoD,EAAA;IAAzE,IAAA,KAAA;IACE;IACA,MAAA,CAAA,IAAA,CAAA,IAAA,CAAO,IAAA,IAAA;IAFY,KAAA,CAAA,KAAK,GAAL,KAAK;;IAGxB;EACF;EAEA;;AAEG;EACH,wCAAA,CAAA,SAAA,CAAA,iBAAiB,GAAjB,UACE,WAAmE,EACnE,aAA6C,EAC7C,OAA8B,EAAA;IAE9B,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,cAAc,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IAEzF,IAAM,KAAK,GAAG,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC;IAE9C,IAAA,MAAM,GAAK,aAAa,CAAA,MAAlB;IACd,IAAM,UAAU,GAAG,kBAAkB;IACrC,IAAM,WAAW,GAAG,0CAA0C;IAC9D,IAAM,uBAAuB,GAA4B;MACvD,MAAM,EAAA,MAAA;MACN,UAAU,EAAA,UAAA;MACV,WAAW,EAAA,WAAA;MACX,uBAAuB,EAAE,wCAAwC,CAAC,kBAAkB;MACpF,wBAAwB,EAAE,yCAAyC,CAAC;KACrE;IACO,IAAA,cAAc,GAAK,aAAa,CAAA,cAAlB;IACtB,OAAO,KAAK,CAAC,OAAO,CAClB,UAAC,OAAsC,EAAA;MACrC,OAAA,cAAc,CAAC,MAAM,CAAC,OAAO,CAAC,OAAwB,EAAE,OAAO,IAAI,CAAA,CAAE,CAAC;IAAtE,CAAsE,EACxE,uBAAuB,CACxB;EACH,CAAC;EAEO,wCAAA,CAAA,SAAA,CAAA,SAAS,GAAjB,UACE,KAAoD,EACpD,OAAuB,EAAA;IAEvB,OAAO,4DAA4D,CAAC,KAAK,EAAE,OAAO,CAAC;EACrF,CAAC;EAEO,wCAAA,CAAA,SAAA,CAAA,WAAW,GAAnB,UACE,MAAsB,EACtB,OAAuB,EAAA;IAEvB,OAAO,8DAA8D,CAAC,MAAM,EAAE,OAAO,CAAC;EACxF,CAAC;EAIH,OAAA,wCAAC;AAAD,CAAC,CA5D6D,QAAQ,CAAA","sourceRoot":"","sourcesContent":["import { __extends } from \"tslib\";\nimport { DescribeDocumentClassificationJobRequest, DescribeDocumentClassificationJobResponse, } from \"../models/models_0\";\nimport { deserializeAws_json1_1DescribeDocumentClassificationJobCommand, serializeAws_json1_1DescribeDocumentClassificationJobCommand, } from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Gets the properties associated with a document classification job. Use this operation to\n *       get the status of a classification job.</p>\n */\nvar DescribeDocumentClassificationJobCommand = /** @class */ (function (_super) {\n    __extends(DescribeDocumentClassificationJobCommand, _super);\n    // Start section: command_properties\n    // End section: command_properties\n    function DescribeDocumentClassificationJobCommand(input) {\n        var _this = \n        // Start section: command_constructor\n        _super.call(this) || this;\n        _this.input = input;\n        return _this;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    DescribeDocumentClassificationJobCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        var stack = clientStack.concat(this.middlewareStack);\n        var logger = configuration.logger;\n        var clientName = \"ComprehendClient\";\n        var commandName = \"DescribeDocumentClassificationJobCommand\";\n        var handlerExecutionContext = {\n            logger: logger,\n            clientName: clientName,\n            commandName: commandName,\n            inputFilterSensitiveLog: DescribeDocumentClassificationJobRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: DescribeDocumentClassificationJobResponse.filterSensitiveLog,\n        };\n        var requestHandler = configuration.requestHandler;\n        return stack.resolve(function (request) {\n            return requestHandler.handle(request.request, options || {});\n        }, handlerExecutionContext);\n    };\n    DescribeDocumentClassificationJobCommand.prototype.serialize = function (input, context) {\n        return serializeAws_json1_1DescribeDocumentClassificationJobCommand(input, context);\n    };\n    DescribeDocumentClassificationJobCommand.prototype.deserialize = function (output, context) {\n        return deserializeAws_json1_1DescribeDocumentClassificationJobCommand(output, context);\n    };\n    return DescribeDocumentClassificationJobCommand;\n}($Command));\nexport { DescribeDocumentClassificationJobCommand };\n//# sourceMappingURL=DescribeDocumentClassificationJobCommand.js.map"]},"metadata":{},"sourceType":"module"}