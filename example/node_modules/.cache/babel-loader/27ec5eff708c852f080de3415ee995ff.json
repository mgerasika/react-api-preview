{"ast":null,"code":"function _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _s, _e;\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n  return _arr;\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nfunction getFirst(items) {\n  if (items && items.length) {\n    return items[0];\n  }\n  return undefined;\n}\nfunction deleteItem(items, id) {\n  var item = items.find(function (i) {\n    return i.id === id;\n  });\n  if (item) {\n    var idx = items.indexOf(item);\n    if (idx >= 0) {\n      return [].concat(_toConsumableArray(items.slice(0, idx)), _toConsumableArray(items.slice(idx + 1)));\n    }\n  }\n  return items;\n}\nfunction replaceItem(items, id, newItem) {\n  var item = items.find(function (i) {\n    return i.id === id;\n  });\n  if (item) {\n    var idx = items.indexOf(item);\n    if (idx >= 0) {\n      return [].concat(_toConsumableArray(items.slice(0, idx)), [newItem], _toConsumableArray(items.slice(idx + 1)));\n    }\n  }\n  return items;\n}\nfunction unique(list, name) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  var result = list.reduce(function (acc, it) {\n    acc[it[name]] = it;\n    return acc;\n  }, {});\n  return Object.values(result);\n}\nfunction reorder(list, startIndex, endIndex) {\n  var result = Array.from(list);\n  var _result$splice = result.splice(startIndex, 1),\n    _result$splice2 = _slicedToArray(_result$splice, 1),\n    removed = _result$splice2[0];\n  result.splice(endIndex, 0, removed);\n  return result;\n}\nvar arrayUtils = {\n  getFirst: getFirst,\n  unique: unique,\n  deleteItem: deleteItem,\n  replaceItem: replaceItem,\n  reorder: reorder\n};\nexport { arrayUtils };","map":{"version":3,"sources":["../../../src/utils/array-utils.util.ts"],"names":["getFirst","items","length","undefined","deleteItem","id","item","find","i","idx","indexOf","slice","replaceItem","newItem","unique","list","name","result","reduce","acc","it","Object","values","reorder","startIndex","endIndex","Array","from","removed","splice","arrayUtils"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,SAASA,QAAQ,CAAsBC,KAAsB,EAAiB;EAC1E,IAAIA,KAAK,IAAIA,KAAK,CAACC,MAAM,EAAE;IACvB,OAAOD,KAAK,CAAC,CAAC,CAAC;EACnB;EACA,OAAOE,SAAS;AACpB;AAEA,SAASC,UAAU,CAAsBH,KAAU,EAAEI,EAAO,EAAO;EAC/D,IAAMC,IAAI,GAAGL,KAAK,CAACM,IAAI,CAAEC,UAAAA,CAAC,EAAA;IAAA,OAAKA,CAAC,CAACH,EAAE,KAAKA,EAAE;EAAA,CAAA,CAAC;EAC3C,IAAIC,IAAI,EAAE;IACN,IAAMG,GAAG,GAAGR,KAAK,CAACS,OAAO,CAACJ,IAAI,CAAC;IAC/B,IAAIG,GAAG,IAAI,CAAC,EAAE;MACV,OAAA,EAAA,CAAA,MAAA,CAAA,kBAAA,CAAWR,KAAK,CAACU,KAAK,CAAC,CAAC,EAAEF,GAAG,CAAC,CAAA,EAAA,kBAAA,CAAKR,KAAK,CAACU,KAAK,CAACF,GAAG,GAAG,CAAC,CAAC,CAAA,CAAA;IAC3D;EACJ;EACA,OAAOR,KAAK;AAChB;AAEA,SAASW,WAAW,CAAsBX,KAAU,EAAEI,EAAO,EAAEQ,OAAU,EAAO;EAC5E,IAAMP,IAAI,GAAGL,KAAK,CAACM,IAAI,CAAEC,UAAAA,CAAC,EAAA;IAAA,OAAKA,CAAC,CAACH,EAAE,KAAKA,EAAE;EAAA,CAAA,CAAC;EAC3C,IAAIC,IAAI,EAAE;IACN,IAAMG,GAAG,GAAGR,KAAK,CAACS,OAAO,CAACJ,IAAI,CAAC;IAC/B,IAAIG,GAAG,IAAI,CAAC,EAAE;MACV,OAAA,EAAA,CAAA,MAAA,CAAA,kBAAA,CAAWR,KAAK,CAACU,KAAK,CAAC,CAAC,EAAEF,GAAG,CAAC,CAAA,EAAA,CAAEI,OAAO,CAAA,EAAA,kBAAA,CAAKZ,KAAK,CAACU,KAAK,CAACF,GAAG,GAAG,CAAC,CAAC,CAAA,CAAA;IACpE;EACJ;EACA,OAAOR,KAAK;AAChB;AAEA,SAASa,MAAM,CAAIC,IAAS,EAAEC,IAAa,EAAO;EAC9C;EACA,IAAMC,MAAM,GAAGF,IAAI,CAACG,MAAM,CAAC,UAACC,GAAQ,EAAEC,EAAK,EAAK;IAC5CD,GAAG,CAACC,EAAE,CAACJ,IAAI,CAAC,CAAC,GAAGI,EAAE;IAClB,OAAOD,GAAG;EACb,CAAA,EAAE,CAAE,CAAA,CAAC;EAEN,OAAOE,MAAM,CAACC,MAAM,CAACL,MAAM,CAAC;AAChC;AAEA,SAASM,OAAO,CAAIR,IAAS,EAAES,UAAkB,EAAEC,QAAgB,EAAO;EACtE,IAAMR,MAAM,GAAGS,KAAK,CAACC,IAAI,CAACZ,IAAI,CAAC;EAC/B,IAAA,cAAA,GAAkBE,MAAM,CAACY,MAAM,CAACL,UAAU,EAAE,CAAC,CAAC;IAAA,eAAA,GAAA,cAAA,CAAA,cAAA,EAAA,CAAA,CAAA;IAAvCI,OAAO,GAAA,eAAA,CAAA,CAAA,CAAA;EACdX,MAAM,CAACY,MAAM,CAACJ,QAAQ,EAAE,CAAC,EAAEG,OAAO,CAAC;EAEnC,OAAOX,MAAM;AACjB;AAEO,IAAMa,UAAU,GAAG;EACtB9B,QAAQ,EAARA,QAAQ;EACRc,MAAM,EAANA,MAAM;EACNV,UAAU,EAAVA,UAAU;EACVQ,WAAW,EAAXA,WAAW;EACXW,OAAAA,EAAAA;AACJ,CAAA","sourcesContent":["import { IIdObject } from '@common/interfaces/id-object.interface';\nimport { UID } from '@common/interfaces/uid.interface';\n\nfunction getFirst<T extends IIdObject>(items: T[] | undefined): T | undefined {\n    if (items && items.length) {\n        return items[0];\n    }\n    return undefined;\n}\n\nfunction deleteItem<T extends IIdObject>(items: T[], id: UID): T[] {\n    const item = items.find((i) => i.id === id);\n    if (item) {\n        const idx = items.indexOf(item);\n        if (idx >= 0) {\n            return [...items.slice(0, idx), ...items.slice(idx + 1)];\n        }\n    }\n    return items;\n}\n\nfunction replaceItem<T extends IIdObject>(items: T[], id: UID, newItem: T): T[] {\n    const item = items.find((i) => i.id === id);\n    if (item) {\n        const idx = items.indexOf(item);\n        if (idx >= 0) {\n            return [...items.slice(0, idx), newItem, ...items.slice(idx + 1)];\n        }\n    }\n    return items;\n}\n\nfunction unique<T>(list: T[], name: keyof T): T[] {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const result = list.reduce((acc: any, it: T) => {\n        acc[it[name]] = it;\n        return acc;\n    }, {});\n\n    return Object.values(result);\n}\n\nfunction reorder<T>(list: T[], startIndex: number, endIndex: number): T[] {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n}\n\nexport const arrayUtils = {\n    getFirst,\n    unique,\n    deleteItem,\n    replaceItem,\n    reorder,\n};\n"]},"metadata":{},"sourceType":"module"}