{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar _rollupPluginBabelHelpers = require('../../_virtual/_rollupPluginBabelHelpers.js');\nvar useField_hook = require('../../hooks/use-field.hook.js');\nvar React = require('react');\nvar checkboxGroup_component = require('./checkbox-group.component.js');\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\nvar React__default = /*#__PURE__*/_interopDefaultLegacy(React);\nfunction FormCheckboxGroup(props) {\n  const {\n    onChange,\n    getCustomErrorMessage\n  } = props;\n  const {\n    setFieldValue,\n    value,\n    errorMessage\n  } = useField_hook.useField({\n    ...props,\n    getCustomErrorMessage\n  });\n  const handleChange = React.useCallback(e => {\n    onChange && onChange(e);\n    setFieldValue(e.value);\n  }, [setFieldValue, onChange]);\n  return /*#__PURE__*/React__default[\"default\"].createElement(checkboxGroup_component.CheckboxGroup, _rollupPluginBabelHelpers[\"extends\"]({\n    errorMessage: errorMessage\n  }, props, {\n    onChange: handleChange,\n    name: props.name,\n    value: value\n  }));\n}\nexports.FormCheckboxGroup = FormCheckboxGroup;","map":{"version":3,"sources":["../../../../src/general-ui/checkbox-group/form-checkbox-group.component.tsx"],"names":["FormCheckboxGroup","props","onChange","getCustomErrorMessage","setFieldValue","value","errorMessage","useField","handleChange","useCallback","e","React","CheckboxGroup","name"],"mappings":";;;;;;;;;;;;;;;AAIO,SAASA,iBAAiB,CAC7BC,KAA6E,EAClE;EACX,MAAM;IAAEC,QAAQ;IAAEC;EAAsB,CAAC,GAAGF,KAAK;EACjD,MAAM;IAAEG,aAAa;IAAEC,KAAK;IAAEC;GAAc,GAAGC,aAAAA,CAAAA,QAAQ,CAAW;IAC9D,GAAGN,KAAK;IACRE;EACJ,CAAC,CAAC;EAEF,MAAMK,YAAY,GAAGC,KAAAA,CAAAA,WAAW,CAC3BC,CAAC,IAAK;IACHR,QAAQ,IAAIA,QAAQ,CAACQ,CAAC,CAAC;IACvBN,aAAa,CAACM,CAAC,CAACL,KAAK,CAAC;EAC1B,CAAC,EACD,CAACD,aAAa,EAAEF,QAAQ,CAAC,CAC5B;EAED,OAAA,aACIS,cAAAA,CAAAA,SAAAA,CAAAA,CAAAA,aAAAA,CAACC,uBAAAA,CAAAA,aAAa,EAAA,yBAAA,CAAA,SAAA,CAAA,CAAA;IACV,YAAY,EAAEN;EAAa,CAAA,EACvBL,KAAK,EAAA;IACT,QAAQ,EAAEO,YAAa;IACvB,IAAI,EAAEP,KAAK,CAACY,IAAe;IAC3B,KAAK,EAAER;GACT,CAAA,CAAA;AAEV","sourcesContent":["import { useField } from '@common/hooks/use-field.hook';\nimport React, { useCallback } from 'react';\nimport { CheckboxGroup, ICheckboxGroupChangeHandler, ICheckboxGroupProps } from './checkbox-group.component';\n\nexport function FormCheckboxGroup<TFormValues>(\n    props: Omit<ICheckboxGroupProps<keyof TFormValues>, 'value' | 'defaultValue'>,\n): JSX.Element {\n    const { onChange, getCustomErrorMessage } = props;\n    const { setFieldValue, value, errorMessage } = useField<string[]>({\n        ...props,\n        getCustomErrorMessage,\n    });\n\n    const handleChange = useCallback<ICheckboxGroupChangeHandler>(\n        (e) => {\n            onChange && onChange(e);\n            setFieldValue(e.value);\n        },\n        [setFieldValue, onChange],\n    );\n\n    return (\n        <CheckboxGroup\n            errorMessage={errorMessage}\n            {...props}\n            onChange={handleChange}\n            name={props.name as string}\n            value={value}\n        />\n    );\n}\n"]},"metadata":{},"sourceType":"script"}