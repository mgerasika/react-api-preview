{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { ClientDefaultValues as __ClientDefaultValues } from \"./runtimeConfig\";\nimport { resolveEndpointsConfig, resolveRegionConfig } from \"@aws-sdk/config-resolver\";\nimport { getContentLengthPlugin } from \"@aws-sdk/middleware-content-length\";\nimport { getHostHeaderPlugin, resolveHostHeaderConfig } from \"@aws-sdk/middleware-host-header\";\nimport { getLoggerPlugin } from \"@aws-sdk/middleware-logger\";\nimport { getRetryPlugin, resolveRetryConfig } from \"@aws-sdk/middleware-retry\";\nimport { getAwsAuthPlugin, resolveAwsAuthConfig } from \"@aws-sdk/middleware-signing\";\nimport { getUserAgentPlugin, resolveUserAgentConfig } from \"@aws-sdk/middleware-user-agent\";\nimport { Client as __Client } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Amazon Textract detects and analyzes text in documents and converts it\n *          into machine-readable text. This is the API reference documentation for\n *          Amazon Textract.</p>\n */\nvar TextractClient = /** @class */function (_super) {\n  __extends(TextractClient, _super);\n  function TextractClient(configuration) {\n    var _this = this;\n    var _config_0 = __assign(__assign({}, __ClientDefaultValues), configuration);\n    var _config_1 = resolveRegionConfig(_config_0);\n    var _config_2 = resolveEndpointsConfig(_config_1);\n    var _config_3 = resolveAwsAuthConfig(_config_2);\n    var _config_4 = resolveRetryConfig(_config_3);\n    var _config_5 = resolveHostHeaderConfig(_config_4);\n    var _config_6 = resolveUserAgentConfig(_config_5);\n    _this = _super.call(this, _config_6) || this;\n    _this.config = _config_6;\n    _this.middlewareStack.use(getAwsAuthPlugin(_this.config));\n    _this.middlewareStack.use(getRetryPlugin(_this.config));\n    _this.middlewareStack.use(getContentLengthPlugin(_this.config));\n    _this.middlewareStack.use(getHostHeaderPlugin(_this.config));\n    _this.middlewareStack.use(getLoggerPlugin(_this.config));\n    _this.middlewareStack.use(getUserAgentPlugin(_this.config));\n    return _this;\n  }\n  TextractClient.prototype.destroy = function () {\n    _super.prototype.destroy.call(this);\n  };\n  return TextractClient;\n}(__Client);\nexport { TextractClient };","map":{"version":3,"sources":["../../TextractClient.ts"],"names":[],"mappings":";AAkBA,SAAS,mBAAmB,IAAI,qBAAqB,QAAQ,iBAAiB;AAC9E,SAKE,sBAAsB,EACtB,mBAAmB,QACd,0BAA0B;AACjC,SAAS,sBAAsB,QAAQ,oCAAoC;AAC3E,SAGE,mBAAmB,EACnB,uBAAuB,QAClB,iCAAiC;AACxC,SAAS,eAAe,QAAQ,4BAA4B;AAC5D,SAAgD,cAAc,EAAE,kBAAkB,QAAQ,2BAA2B;AACrH,SAGE,gBAAgB,EAChB,oBAAoB,QACf,6BAA6B;AACpC,SAGE,kBAAkB,EAClB,sBAAsB,QACjB,gCAAgC;AAEvC,SACE,MAAM,IAAI,QAAQ,QAGb,wBAAwB;AAkJ/B;;;;AAIG;AACH,IAAA,cAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAAoC,SAAA,CAAA,cAAA,EAAA,MAAA,CAAA;EAQlC,SAAA,cAAA,CAAY,aAAmC,EAAA;IAA/C,IAAA,KAAA,GAAA,IAAA;IACE,IAAI,SAAS,GAAA,QAAA,CAAA,QAAA,CAAA,CAAA,CAAA,EACR,qBAAqB,CAAA,EACrB,aAAa,CACjB;IACD,IAAI,SAAS,GAAG,mBAAmB,CAAC,SAAS,CAAC;IAC9C,IAAI,SAAS,GAAG,sBAAsB,CAAC,SAAS,CAAC;IACjD,IAAI,SAAS,GAAG,oBAAoB,CAAC,SAAS,CAAC;IAC/C,IAAI,SAAS,GAAG,kBAAkB,CAAC,SAAS,CAAC;IAC7C,IAAI,SAAS,GAAG,uBAAuB,CAAC,SAAS,CAAC;IAClD,IAAI,SAAS,GAAG,sBAAsB,CAAC,SAAS,CAAC;IACjD,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,SAAS,CAAC,IAAA,IAAA;IAChB,KAAI,CAAC,MAAM,GAAG,SAAS;IACvB,KAAI,CAAC,eAAe,CAAC,GAAG,CAAC,gBAAgB,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;IACvD,KAAI,CAAC,eAAe,CAAC,GAAG,CAAC,cAAc,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;IACrD,KAAI,CAAC,eAAe,CAAC,GAAG,CAAC,sBAAsB,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;IAC7D,KAAI,CAAC,eAAe,CAAC,GAAG,CAAC,mBAAmB,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;IAC1D,KAAI,CAAC,eAAe,CAAC,GAAG,CAAC,eAAe,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;IACtD,KAAI,CAAC,eAAe,CAAC,GAAG,CAAC,kBAAkB,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;;EAC3D;EAEA,cAAA,CAAA,SAAA,CAAA,OAAO,GAAP,YAAA;IACE,MAAA,CAAA,SAAA,CAAM,OAAO,CAAA,IAAA,CAAA,IAAA,CAAE;EACjB,CAAC;EACH,OAAA,cAAC;AAAD,CAAC,CAhCmC,QAAQ,CAAA","sourceRoot":"","sourcesContent":["import { __assign, __extends } from \"tslib\";\nimport { ClientDefaultValues as __ClientDefaultValues } from \"./runtimeConfig\";\nimport { resolveEndpointsConfig, resolveRegionConfig, } from \"@aws-sdk/config-resolver\";\nimport { getContentLengthPlugin } from \"@aws-sdk/middleware-content-length\";\nimport { getHostHeaderPlugin, resolveHostHeaderConfig, } from \"@aws-sdk/middleware-host-header\";\nimport { getLoggerPlugin } from \"@aws-sdk/middleware-logger\";\nimport { getRetryPlugin, resolveRetryConfig } from \"@aws-sdk/middleware-retry\";\nimport { getAwsAuthPlugin, resolveAwsAuthConfig, } from \"@aws-sdk/middleware-signing\";\nimport { getUserAgentPlugin, resolveUserAgentConfig, } from \"@aws-sdk/middleware-user-agent\";\nimport { Client as __Client, } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Amazon Textract detects and analyzes text in documents and converts it\n *          into machine-readable text. This is the API reference documentation for\n *          Amazon Textract.</p>\n */\nvar TextractClient = /** @class */ (function (_super) {\n    __extends(TextractClient, _super);\n    function TextractClient(configuration) {\n        var _this = this;\n        var _config_0 = __assign(__assign({}, __ClientDefaultValues), configuration);\n        var _config_1 = resolveRegionConfig(_config_0);\n        var _config_2 = resolveEndpointsConfig(_config_1);\n        var _config_3 = resolveAwsAuthConfig(_config_2);\n        var _config_4 = resolveRetryConfig(_config_3);\n        var _config_5 = resolveHostHeaderConfig(_config_4);\n        var _config_6 = resolveUserAgentConfig(_config_5);\n        _this = _super.call(this, _config_6) || this;\n        _this.config = _config_6;\n        _this.middlewareStack.use(getAwsAuthPlugin(_this.config));\n        _this.middlewareStack.use(getRetryPlugin(_this.config));\n        _this.middlewareStack.use(getContentLengthPlugin(_this.config));\n        _this.middlewareStack.use(getHostHeaderPlugin(_this.config));\n        _this.middlewareStack.use(getLoggerPlugin(_this.config));\n        _this.middlewareStack.use(getUserAgentPlugin(_this.config));\n        return _this;\n    }\n    TextractClient.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n    };\n    return TextractClient;\n}(__Client));\nexport { TextractClient };\n//# sourceMappingURL=TextractClient.js.map"]},"metadata":{},"sourceType":"module"}