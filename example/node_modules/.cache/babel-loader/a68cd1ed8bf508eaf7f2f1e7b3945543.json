{"ast":null,"code":"import { css, jsx } from '@emotion/react';\nimport { THEME } from '../../constants/theme.constant.js';\nimport FullCalendarOriginal from '@fullcalendar/react';\nimport TimeGridPlugin from '@fullcalendar/timegrid';\nimport React, { useState, useCallback, useEffect } from 'react';\nconst InteractionPlugin = require('@fullcalendar/interaction').default;\nconst DayGridPlugin = require('@fullcalendar/daygrid').default;\nconst ListPlugin = require('@fullcalendar/list').default;\nconst formatDateForCalendar = date => date.toISOString().replace(/T.*$/, ''); // YYYY-MM-DD of today\n\n// TODO don't remove comments - most advanced component\nfunction FullCalendar(_ref) {\n  let {\n    events,\n    className,\n    onEventClick,\n    renderEventContent,\n    onEventChange,\n    onDateRangeChange,\n    onDateSelect\n  } = _ref;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const calendarRef = /*#__PURE__*/React.createRef();\n  const [state, setState] = useState({\n    weekendsVisible: true,\n    currentEvents: []\n  });\n  const getCalendarApi = useCallback(() => calendarRef.current?.getApi(), [calendarRef]);\n  useEffect(() => {\n    if (getCalendarApi()) {\n      const range = getCalendarApi()?.view.getCurrentData().dateProfile.renderRange;\n      // consoleService.log('calendarApi', getCalendarApi());\n      onDateRangeChange && onDateRangeChange(range);\n    }\n  }, [getCalendarApi, onDateRangeChange]);\n  const handleDateSelect = selectInfo => {\n    onDateSelect && onDateSelect(selectInfo);\n    // const title = prompt('Please enter a new title for your event');\n    // const calendarApi = selectInfo.view.calendar;\n    // calendarApi.unselect(); // clear date selection\n    // if (title) {\n    //     calendarApi.addEvent({\n    //         id: createEventId(),\n    //         title,\n    //         start: selectInfo.startStr,\n    //         end: selectInfo.endStr,\n    //         allDay: selectInfo.allDay,\n    //     });\n    // }\n  };\n\n  const handleEventClick = clickInfo => {\n    const id = clickInfo.event.id;\n    const el = events.find(e => e.id === id);\n    onEventClick && onEventClick(el, clickInfo);\n  };\n  const handleEventChange = changeInfo => {\n    const id = changeInfo.event.id;\n    const el = events.find(e => e.id === id);\n    onEventChange && onEventChange(el, changeInfo);\n  };\n  const handleEvents = events => {\n    setState({\n      ...state,\n      currentEvents: events\n    });\n  };\n  return jsx(\"div\", {\n    css: [styles.calendar, \"font-family:Interstate;\" + (process.env.NODE_ENV === \"production\" ? \"\" : \";label:FullCalendar;\"), process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\", process.env.NODE_ENV === \"production\" ? \"\" : \";label:FullCalendar;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZ1bGwtY2FsZW5kYXIuY29tcG9uZW50LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE2SGEiLCJmaWxlIjoiZnVsbC1jYWxlbmRhci5jb21wb25lbnQudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVEhFTUUgfSBmcm9tICdAY29tbW9uL2NvbnN0YW50cy90aGVtZS5jb25zdGFudCc7XG5pbXBvcnQgeyBJSWRPYmplY3QgfSBmcm9tICdAY29tbW9uL2ludGVyZmFjZXMvaWQtb2JqZWN0LmludGVyZmFjZSc7XG5pbXBvcnQgRnVsbENhbGVuZGFyT3JpZ2luYWwsIHtcbiAgICBEYXRlU2VsZWN0QXJnLFxuICAgIEV2ZW50QXBpLFxuICAgIEV2ZW50Q2hhbmdlQXJnLFxuICAgIEV2ZW50Q2xpY2tBcmcsXG4gICAgRXZlbnRDb250ZW50QXJnLFxuICAgIEV2ZW50SW5wdXQsXG59IGZyb20gJ0BmdWxsY2FsZW5kYXIvcmVhY3QnO1xuaW1wb3J0IFRpbWVHcmlkUGx1Z2luIGZyb20gJ0BmdWxsY2FsZW5kYXIvdGltZWdyaWQnO1xuaW1wb3J0IFJlYWN0LCB7IHVzZUNhbGxiYWNrLCB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAndHdpbi5tYWNybyc7XG5cbnsvKiBwcmV0dGllci1pZ25vcmUgKi9cbn1cbmNvbnN0IEludGVyYWN0aW9uUGx1Z2luID0gcmVxdWlyZSgnQGZ1bGxjYWxlbmRhci9pbnRlcmFjdGlvbicpLmRlZmF1bHQ7XG5jb25zdCBEYXlHcmlkUGx1Z2luID0gcmVxdWlyZSgnQGZ1bGxjYWxlbmRhci9kYXlncmlkJykuZGVmYXVsdDtcbmNvbnN0IExpc3RQbHVnaW4gPSByZXF1aXJlKCdAZnVsbGNhbGVuZGFyL2xpc3QnKS5kZWZhdWx0O1xuXG5leHBvcnQgdHlwZSBEYXRlU2VsZWN0QXJnRXggPSBEYXRlU2VsZWN0QXJnO1xuZXhwb3J0IHR5cGUgRXZlbnRDaGFuZ2VBcmdFeCA9IEV2ZW50Q2hhbmdlQXJnO1xuZXhwb3J0IHR5cGUgRXZlbnRDb250ZW50QXJnRXggPSBFdmVudENvbnRlbnRBcmc7XG5cbmludGVyZmFjZSBJRnVsbENhbGVuZGFyU3RhdGUge1xuICAgIHdlZWtlbmRzVmlzaWJsZTogYm9vbGVhbjtcbiAgICBjdXJyZW50RXZlbnRzOiBFdmVudEFwaVtdO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIElDYWxlbmRhckRhdGVSYW5nZSB7XG4gICAgc3RhcnQ6IERhdGU7XG4gICAgZW5kOiBEYXRlO1xufVxuZXhwb3J0IGNvbnN0IGZvcm1hdERhdGVGb3JDYWxlbmRhciA9IChkYXRlOiBEYXRlKTogc3RyaW5nID0+IGRhdGUudG9JU09TdHJpbmcoKS5yZXBsYWNlKC9ULiokLywgJycpOyAvLyBZWVlZLU1NLUREIG9mIHRvZGF5XG5pbnRlcmZhY2UgSVByb3BzPFQ+IHtcbiAgICBjbGFzc05hbWU/OiBzdHJpbmc7XG4gICAgZXZlbnRzOiBDdXN0b21FdmVudElucHV0W107XG4gICAgb25EYXRlUmFuZ2VDaGFuZ2U/OiAocmFuZ2U6IElDYWxlbmRhckRhdGVSYW5nZSkgPT4gdm9pZDtcbiAgICBvbkV2ZW50Q2xpY2s/OiAoZXZlbnQ6IEN1c3RvbUV2ZW50SW5wdXQ8VD4gJiBJSWRPYmplY3QsIG9yaWdpbmFsOiBFdmVudENsaWNrQXJnKSA9PiB2b2lkO1xuICAgIG9uRXZlbnRDaGFuZ2U/OiAoZXZlbnQ6IEN1c3RvbUV2ZW50SW5wdXQ8VD4gJiBJSWRPYmplY3QsIG9yaWdpbmFsOiBFdmVudENoYW5nZUFyZykgPT4gdm9pZDtcbiAgICBvbkRhdGVTZWxlY3Q/OiAoc2VsZWN0OiBEYXRlU2VsZWN0QXJnKSA9PiB2b2lkO1xuICAgIHJlbmRlckV2ZW50Q29udGVudD86IChldmVudENvbnRlbnQ6IEV2ZW50Q29udGVudEFyZykgPT4gSlNYLkVsZW1lbnQ7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ3VzdG9tRXZlbnRJbnB1dDxUID0gdW5rbm93bj4gZXh0ZW5kcyBJSWRPYmplY3Qge1xuICAgIHRpdGxlOiBzdHJpbmcgfCB1bmRlZmluZWQ7XG4gICAgc3RhcnQ6IERhdGUgfCBzdHJpbmc7XG4gICAgZWRpdGFibGU/OiBib29sZWFuO1xuICAgIGFsbERheT86IGJvb2xlYW47XG4gICAgZW5kPzogRGF0ZSB8IHN0cmluZztcbiAgICBtZXRhZGF0YT86IFQ7XG4gICAgZXh0cmFEYXRlPzogRGF0ZTsgLy8gVE9ETzogZG8gd2UgbmVlZCB0aGlzP1xuICAgIGR1cmF0aW9uRWRpdGFibGU/OiBib29sZWFuO1xuICAgIGRpc3BsYXk/OiBFdmVudElucHV0WydkaXNwbGF5J107XG59XG4vLyBUT0RPIGRvbid0IHJlbW92ZSBjb21tZW50cyAtIG1vc3QgYWR2YW5jZWQgY29tcG9uZW50XG5leHBvcnQgZnVuY3Rpb24gRnVsbENhbGVuZGFyPFQ+KHtcbiAgICBldmVudHMsXG4gICAgY2xhc3NOYW1lLFxuICAgIG9uRXZlbnRDbGljayxcbiAgICByZW5kZXJFdmVudENvbnRlbnQsXG4gICAgb25FdmVudENoYW5nZSxcbiAgICBvbkRhdGVSYW5nZUNoYW5nZSxcbiAgICBvbkRhdGVTZWxlY3QsXG59OiBJUHJvcHM8VD4pOiBKU1guRWxlbWVudCB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcbiAgICBjb25zdCBjYWxlbmRhclJlZiA9IFJlYWN0LmNyZWF0ZVJlZjx7IGdldEFwaTogKCkgPT4geyB2aWV3OiBhbnkgfSB9PigpO1xuICAgIGNvbnN0IFtzdGF0ZSwgc2V0U3RhdGVdID0gdXNlU3RhdGU8SUZ1bGxDYWxlbmRhclN0YXRlPih7XG4gICAgICAgIHdlZWtlbmRzVmlzaWJsZTogdHJ1ZSxcbiAgICAgICAgY3VycmVudEV2ZW50czogW10sXG4gICAgfSk7XG5cbiAgICBjb25zdCBfaGFuZGxlV2Vla2VuZHNUb2dnbGUgPSAoKTogdm9pZCA9PiB7XG4gICAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgICAgIC4uLnN0YXRlLFxuICAgICAgICAgICAgd2Vla2VuZHNWaXNpYmxlOiAhc3RhdGUud2Vla2VuZHNWaXNpYmxlLFxuICAgICAgICB9KTtcbiAgICB9O1xuXG4gICAgY29uc3QgZ2V0Q2FsZW5kYXJBcGkgPSB1c2VDYWxsYmFjaygoKSA9PiBjYWxlbmRhclJlZi5jdXJyZW50Py5nZXRBcGkoKSwgW2NhbGVuZGFyUmVmXSk7XG5cbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBpZiAoZ2V0Q2FsZW5kYXJBcGkoKSkge1xuICAgICAgICAgICAgY29uc3QgcmFuZ2UgPSBnZXRDYWxlbmRhckFwaSgpPy52aWV3LmdldEN1cnJlbnREYXRhKCkuZGF0ZVByb2ZpbGUucmVuZGVyUmFuZ2U7XG4gICAgICAgICAgICAvLyBjb25zb2xlU2VydmljZS5sb2coJ2NhbGVuZGFyQXBpJywgZ2V0Q2FsZW5kYXJBcGkoKSk7XG4gICAgICAgICAgICBvbkRhdGVSYW5nZUNoYW5nZSAmJiBvbkRhdGVSYW5nZUNoYW5nZShyYW5nZSk7XG4gICAgICAgIH1cbiAgICB9LCBbZ2V0Q2FsZW5kYXJBcGksIG9uRGF0ZVJhbmdlQ2hhbmdlXSk7XG5cbiAgICBjb25zdCBoYW5kbGVEYXRlU2VsZWN0ID0gKHNlbGVjdEluZm86IERhdGVTZWxlY3RBcmcpOiB2b2lkID0+IHtcbiAgICAgICAgb25EYXRlU2VsZWN0ICYmIG9uRGF0ZVNlbGVjdChzZWxlY3RJbmZvKTtcbiAgICAgICAgLy8gY29uc3QgdGl0bGUgPSBwcm9tcHQoJ1BsZWFzZSBlbnRlciBhIG5ldyB0aXRsZSBmb3IgeW91ciBldmVudCcpO1xuICAgICAgICAvLyBjb25zdCBjYWxlbmRhckFwaSA9IHNlbGVjdEluZm8udmlldy5jYWxlbmRhcjtcbiAgICAgICAgLy8gY2FsZW5kYXJBcGkudW5zZWxlY3QoKTsgLy8gY2xlYXIgZGF0ZSBzZWxlY3Rpb25cbiAgICAgICAgLy8gaWYgKHRpdGxlKSB7XG4gICAgICAgIC8vICAgICBjYWxlbmRhckFwaS5hZGRFdmVudCh7XG4gICAgICAgIC8vICAgICAgICAgaWQ6IGNyZWF0ZUV2ZW50SWQoKSxcbiAgICAgICAgLy8gICAgICAgICB0aXRsZSxcbiAgICAgICAgLy8gICAgICAgICBzdGFydDogc2VsZWN0SW5mby5zdGFydFN0cixcbiAgICAgICAgLy8gICAgICAgICBlbmQ6IHNlbGVjdEluZm8uZW5kU3RyLFxuICAgICAgICAvLyAgICAgICAgIGFsbERheTogc2VsZWN0SW5mby5hbGxEYXksXG4gICAgICAgIC8vICAgICB9KTtcbiAgICAgICAgLy8gfVxuICAgIH07XG5cbiAgICBjb25zdCBoYW5kbGVFdmVudENsaWNrID0gKGNsaWNrSW5mbzogRXZlbnRDbGlja0FyZyk6IHZvaWQgPT4ge1xuICAgICAgICBjb25zdCBpZCA9IGNsaWNrSW5mby5ldmVudC5pZDtcbiAgICAgICAgY29uc3QgZWwgPSBldmVudHMuZmluZCgoZSkgPT4gZS5pZCA9PT0gaWQpO1xuICAgICAgICBvbkV2ZW50Q2xpY2sgJiYgb25FdmVudENsaWNrKGVsIGFzIEN1c3RvbUV2ZW50SW5wdXQ8VD4gJiBJSWRPYmplY3QsIGNsaWNrSW5mbyk7XG4gICAgfTtcblxuICAgIGNvbnN0IGhhbmRsZUV2ZW50Q2hhbmdlID0gKGNoYW5nZUluZm86IEV2ZW50Q2hhbmdlQXJnKTogdm9pZCA9PiB7XG4gICAgICAgIGNvbnN0IGlkID0gY2hhbmdlSW5mby5ldmVudC5pZDtcbiAgICAgICAgY29uc3QgZWwgPSBldmVudHMuZmluZCgoZSkgPT4gZS5pZCA9PT0gaWQpO1xuICAgICAgICBvbkV2ZW50Q2hhbmdlICYmIG9uRXZlbnRDaGFuZ2UoZWwgYXMgQ3VzdG9tRXZlbnRJbnB1dDxUPiAmIElJZE9iamVjdCwgY2hhbmdlSW5mbyk7XG4gICAgfTtcblxuICAgIGNvbnN0IGhhbmRsZUV2ZW50cyA9IChldmVudHM6IEV2ZW50QXBpW10pOiB2b2lkID0+IHtcbiAgICAgICAgc2V0U3RhdGUoe1xuICAgICAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgICAgICBjdXJyZW50RXZlbnRzOiBldmVudHMsXG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8ZGl2IGNzcz17c3R5bGVzLmNhbGVuZGFyfSB0dz1cImZvbnQtcHJpbWFyeVwiIGNsYXNzTmFtZT17Y2xhc3NOYW1lfT5cbiAgICAgICAgICAgIDxGdWxsQ2FsZW5kYXJPcmlnaW5hbFxuICAgICAgICAgICAgICAgIHsuLi57IHJlZjogY2FsZW5kYXJSZWYgYXMgdW5rbm93biBhcyBSZWFjdC5MZWdhY3lSZWY8RnVsbENhbGVuZGFyT3JpZ2luYWw+IH19XG4gICAgICAgICAgICAgICAgcGx1Z2lucz17W0RheUdyaWRQbHVnaW4sIFRpbWVHcmlkUGx1Z2luLCBJbnRlcmFjdGlvblBsdWdpbiwgTGlzdFBsdWdpbl19XG4gICAgICAgICAgICAgICAgaGVhZGVyVG9vbGJhcj17e1xuICAgICAgICAgICAgICAgICAgICBsZWZ0OiAncHJldixuZXh0IHRvZGF5JyxcbiAgICAgICAgICAgICAgICAgICAgY2VudGVyOiAndGl0bGUnLFxuICAgICAgICAgICAgICAgICAgICByaWdodDogJ2RheUdyaWRNb250aCxkYXlHcmlkV2VlayxsaXN0TW9udGgnLFxuICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgZXZlbnRPdmVybGFwPXsoc3RpbGxFdmVudCk6IGJvb2xlYW4gPT4ge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gc3RpbGxFdmVudD8uZGlzcGxheSAhPT0gJ2JhY2tncm91bmQnO1xuICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgaW5pdGlhbFZpZXc9XCJkYXlHcmlkTW9udGhcIlxuICAgICAgICAgICAgICAgIGVkaXRhYmxlPXt0cnVlfVxuICAgICAgICAgICAgICAgIGRhdGVzU2V0PXtvbkRhdGVSYW5nZUNoYW5nZX1cbiAgICAgICAgICAgICAgICBzZWxlY3RhYmxlPXt0cnVlfSAvLyB1bmNvbW1lbnRcbiAgICAgICAgICAgICAgICBzZWxlY3RNaXJyb3I9e3RydWV9XG4gICAgICAgICAgICAgICAgLy8gZGF5TWF4RXZlbnRzPXt0cnVlfVxuICAgICAgICAgICAgICAgIHdlZWtlbmRzPXtzdGF0ZS53ZWVrZW5kc1Zpc2libGV9XG4gICAgICAgICAgICAgICAgLy8gaW5pdGlhbEV2ZW50cz17ZXZlbnRzfSAvLyBhbHRlcm5hdGl2ZWx5LCB1c2UgdGhlIGBldmVudHNgIHNldHRpbmcgdG8gZmV0Y2ggZnJvbSBhIGZlZWRcbiAgICAgICAgICAgICAgICBldmVudHM9e2V2ZW50c31cbiAgICAgICAgICAgICAgICBzZWxlY3RPdmVybGFwPXsoc3RpbGxFdmVudCk6IGJvb2xlYW4gPT4ge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gc3RpbGxFdmVudD8uZGlzcGxheSAhPT0gJ2JhY2tncm91bmQnO1xuICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgc2VsZWN0PXtoYW5kbGVEYXRlU2VsZWN0fVxuICAgICAgICAgICAgICAgIGV2ZW50Q29udGVudD17cmVuZGVyRXZlbnRDb250ZW50IHx8IHJlbmRlckRlZmF1bHRFdmVudENvbnRlbnR9IC8vIGN1c3RvbSByZW5kZXIgZnVuY3Rpb25cbiAgICAgICAgICAgICAgICBldmVudENsaWNrPXtoYW5kbGVFdmVudENsaWNrfVxuICAgICAgICAgICAgICAgIGV2ZW50Q2hhbmdlPXtoYW5kbGVFdmVudENoYW5nZX1cbiAgICAgICAgICAgICAgICBldmVudHNTZXQ9e2hhbmRsZUV2ZW50c30gLy8gY2FsbGVkIGFmdGVyIGV2ZW50cyBhcmUgaW5pdGlhbGl6ZWQvYWRkZWQvY2hhbmdlZC9yZW1vdmVkXG4gICAgICAgICAgICAgICAgLyogeW91IGNhbiB1cGRhdGUgYSByZW1vdGUgZGF0YWJhc2Ugd2hlbiB0aGVzZSBmaXJlOlxuXHRcdFx0XHRcdFx0XHRldmVudEFkZD17ZnVuY3Rpb24oKXt9fVxuXHRcdFx0XHRcdFx0XHRldmVudENoYW5nZT17ZnVuY3Rpb24oKXt9fVxuXHRcdFx0XHRcdFx0XHRldmVudFJlbW92ZT17ZnVuY3Rpb24oKXt9fVxuXHRcdFx0XHRcdFx0XHQqL1xuICAgICAgICAgICAgLz5cbiAgICAgICAgPC9kaXY+XG4gICAgKTtcbn1cblxuLy9ldmVudENvbnRlbnQ6RXZlbnRDb250ZW50QXJnXG5mdW5jdGlvbiByZW5kZXJEZWZhdWx0RXZlbnRDb250ZW50KGV2ZW50Q29udGVudDogRXZlbnRDb250ZW50QXJnKTogSlNYLkVsZW1lbnQge1xuICAgIHJldHVybiAoXG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgICA8aT57ZXZlbnRDb250ZW50LmV2ZW50LnRpdGxlfTwvaT5cbiAgICAgICAgPC9kaXY+XG4gICAgKTtcbn1cblxuY29uc3Qgc3R5bGVzID0ge1xuICAgIGNhbGVuZGFyOiBjc3NgXG4gICAgICAgICYmIC5mYy10b29sYmFyLXRpdGxlIHtcbiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiAnT2RkdHlwZSc7XG4gICAgICAgIH1cbiAgICAgICAgJiYgLmZjLWJ1dHRvbiB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke1RIRU1FLkdSRUVOfTtcbiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICAgICAgICAgICAgYm9yZGVyOiAwO1xuICAgICAgICAgICAgb3V0bGluZTogbm9uZTtcbiAgICAgICAgICAgIGJveC1zaGFkb3c6IG5vbmU7XG5cbiAgICAgICAgICAgIDpob3ZlcixcbiAgICAgICAgICAgIDphY3RpdmUsXG4gICAgICAgICAgICA6Zm9jdXMge1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7VEhFTUUuR1JFRU59O1xuICAgICAgICAgICAgICAgIGJvcmRlcjogMCAhaW1wb3J0YW50O1xuICAgICAgICAgICAgICAgIGJveC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgICYmIC5mYy1idXR0b24tYWN0aXZlIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7VEhFTUUuR1JFRU59O1xuICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gICAgICAgICAgICB6LWluZGV4OiAwO1xuICAgICAgICB9XG5cbiAgICAgICAgJiYgLmZjLWV2ZW50IHtcbiAgICAgICAgICAgIGJvcmRlci1jb2xvcjogJHtUSEVNRS5HUkVFTn07XG4gICAgICAgIH1cblxuICAgICAgICAmJiAuZmMtZXZlbnQtbWFpbiB7XG4gICAgICAgICAgICAvLyBiYWNrZ3JvdW5kLWNvbG9yOiAke1RIRU1FLkdSRUVOfTtcbiAgICAgICAgfVxuXG4gICAgICAgICYmIC5mYy1iZy1ldmVudCB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke1RIRU1FLkdSQVl9O1xuICAgICAgICB9XG5cbiAgICAgICAgJiYgLmZjIC5mYy1kYXlncmlkLWJnLWhhcm5lc3MgLmZjLWhpZ2hsaWdodCB7XG4gICAgICAgICAgICAvLyBiYWNrZ3JvdW5kLWNvbG9yOiAke1RIRU1FLkdSRUVOfTtcbiAgICAgICAgfVxuICAgIGAsXG59O1xuIl19 */\"],\n    className: className\n  }, jsx(FullCalendarOriginal, {\n    ref: calendarRef,\n    plugins: [DayGridPlugin, TimeGridPlugin, InteractionPlugin, ListPlugin],\n    headerToolbar: {\n      left: 'prev,next today',\n      center: 'title',\n      right: 'dayGridMonth,dayGridWeek,listMonth'\n    },\n    eventOverlap: stillEvent => {\n      return stillEvent?.display !== 'background';\n    },\n    initialView: \"dayGridMonth\",\n    editable: true,\n    datesSet: onDateRangeChange,\n    selectable: true // uncomment\n    ,\n\n    selectMirror: true\n    // dayMaxEvents={true}\n    ,\n\n    weekends: state.weekendsVisible\n    // initialEvents={events} // alternatively, use the `events` setting to fetch from a feed\n    ,\n\n    events: events,\n    selectOverlap: stillEvent => {\n      return stillEvent?.display !== 'background';\n    },\n    select: handleDateSelect,\n    eventContent: renderEventContent || renderDefaultEventContent // custom render function\n    ,\n\n    eventClick: handleEventClick,\n    eventChange: handleEventChange,\n    eventsSet: handleEvents // called after events are initialized/added/changed/removed\n    /* you can update a remote database when these fire:\n    eventAdd={function(){}}\n    eventChange={function(){}}\n    eventRemove={function(){}}\n    */\n  }));\n}\n\n//eventContent:EventContentArg\nfunction renderDefaultEventContent(eventContent) {\n  return jsx(\"div\", null, jsx(\"i\", null, eventContent.event.title));\n}\nconst styles = {\n  calendar: /*#__PURE__*/\n  /*#__PURE__*/\n  css(\"&& .fc-toolbar-title{font-family:'Oddtype';}&& .fc-button{background-color:\", THEME.GREEN, \";font-family:inherit;border:0;outline:none;box-shadow:none;:hover,:active,:focus{background-color:\", THEME.GREEN, \";border:0!important;box-shadow:none!important;}}&& .fc-button-active{background-color:\", THEME.GREEN, \";text-decoration:underline;z-index:0;}&& .fc-event{border-color:\", THEME.GREEN, \";}&& .fc-event-main{}&& .fc-bg-event{background-color:\", THEME.GRAY, \";}&& .fc .fc-daygrid-bg-harness .fc-highlight{}\" + (process.env.NODE_ENV === \"production\" ? \"\" : \";label:calendar;\"), process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\", process.env.NODE_ENV === \"production\" ? \"\" : \";label:calendar;\")\n};\nexport { FullCalendar, formatDateForCalendar };","map":{"version":3,"sources":["../../../../src/general-ui/full-calendar/full-calendar.component.tsx"],"names":["InteractionPlugin","require","default","DayGridPlugin","ListPlugin","formatDateForCalendar","date","toISOString","replace","FullCalendar","events","className","onEventClick","renderEventContent","onEventChange","onDateRangeChange","onDateSelect","calendarRef","React","createRef","state","setState","useState","weekendsVisible","currentEvents","getCalendarApi","useCallback","current","getApi","useEffect","range","view","getCurrentData","dateProfile","renderRange","handleDateSelect","selectInfo","handleEventClick","clickInfo","id","event","el","find","e","handleEventChange","changeInfo","handleEvents","___EmotionJSX","styles","calendar","ref","TimeGridPlugin","left","center","right","stillEvent","display","renderDefaultEventContent","eventContent","title","css","THEME","GREEN","GRAY"],"mappings":";;;;;AAgBA,MAAMA,iBAAiB,GAAGC,OAAO,CAAC,2BAA2B,CAAC,CAACC,OAAO;AACtE,MAAMC,aAAa,GAAGF,OAAO,CAAC,uBAAuB,CAAC,CAACC,OAAO;AAC9D,MAAME,UAAU,GAAGH,OAAO,CAAC,oBAAoB,CAAC,CAACC,OAAO;MAe3CG,qBAAqB,GAAIC,IAAU,IAAaA,IAAI,CAACC,WAAW,EAAE,CAACC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAA,CAAE,CAAA;;AAsBpG;AACO,SAASC,YAAY,OAQD;EAAA,IARK;IAC5BC,MAAM;IACNC,SAAS;IACTC,YAAY;IACZC,kBAAkB;IAClBC,aAAa;IACbC,iBAAiB;IACjBC;EACO,CAAC;EACR;EACA,MAAMC,WAAW,GAAA,aAAGC,KAAK,CAACC,SAAS,EAAmC;EACtE,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGC,QAAQ,CAAqB;IACnDC,eAAe,EAAE,IAAI;IACrBC,aAAa,EAAE;EACnB,CAAC,CAAC;EASF,MAAMC,cAAc,GAAGC,WAAW,CAAC,MAAMT,WAAW,CAACU,OAAO,EAAEC,MAAM,EAAE,EAAE,CAACX,WAAW,CAAC,CAAC;EAEtFY,SAAS,CAAC,MAAM;IACZ,IAAIJ,cAAc,EAAE,EAAE;MAClB,MAAMK,KAAK,GAAGL,cAAc,EAAE,EAAEM,IAAI,CAACC,cAAc,EAAE,CAACC,WAAW,CAACC,WAAW;MAC7E;MACAnB,iBAAiB,IAAIA,iBAAiB,CAACe,KAAK,CAAC;IACjD;EACJ,CAAC,EAAE,CAACL,cAAc,EAAEV,iBAAiB,CAAC,CAAC;EAEvC,MAAMoB,gBAAgB,GAAIC,UAAyB,IAAW;IAC1DpB,YAAY,IAAIA,YAAY,CAACoB,UAAU,CAAC;IACxC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;GACH;;EAED,MAAMC,gBAAgB,GAAIC,SAAwB,IAAW;IACzD,MAAMC,EAAE,GAAGD,SAAS,CAACE,KAAK,CAACD,EAAE;IAC7B,MAAME,EAAE,GAAG/B,MAAM,CAACgC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACJ,EAAE,KAAKA,EAAE,CAAC;IAC1C3B,YAAY,IAAIA,YAAY,CAAC6B,EAAE,EAAqCH,SAAS,CAAC;GACjF;EAED,MAAMM,iBAAiB,GAAIC,UAA0B,IAAW;IAC5D,MAAMN,EAAE,GAAGM,UAAU,CAACL,KAAK,CAACD,EAAE;IAC9B,MAAME,EAAE,GAAG/B,MAAM,CAACgC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACJ,EAAE,KAAKA,EAAE,CAAC;IAC1CzB,aAAa,IAAIA,aAAa,CAAC2B,EAAE,EAAqCI,UAAU,CAAC;GACpF;EAED,MAAMC,YAAY,GAAIpC,MAAkB,IAAW;IAC/CW,QAAQ,CAAC;MACL,GAAGD,KAAK;MACRI,aAAa,EAAEd;IACnB,CAAC,CAAC;GACL;EAED,OACIqC,GAAAA,CAAAA,KAAAA,EAAAA;IAAK,GAAG,EAAEC,CAAAA,MAAM,CAACC,QAAQ,EAAC,yBAAA,IAAA,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,YAAA,GAAA,EAAA,GAAA,sBAAA,CAAA,EAAA,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,YAAA,GAAA,EAAA,GAAA,ylUAAA,EAAA,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,YAAA,GAAA,EAAA,GAAA,sBAAA,EAAA,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,YAAA,GAAA,EAAA,GAAA,ylUAAA,CAAA;IAAmB,SAAS,EAAEtC;EAAU,CAAA,EAC9DoC,GAAAA,CAAC,oBAAoB,EAAA;IACXG,GAAG,EAAEjC,WAA+D;IAC1E,OAAO,EAAE,CAACd,aAAa,EAAEgD,cAAc,EAAEnD,iBAAiB,EAAEI,UAAU,CAAE;IACxE,aAAa,EAAE;MACXgD,IAAI,EAAE,iBAAiB;MACvBC,MAAM,EAAE,OAAO;MACfC,KAAK,EAAE;KACT;IACF,YAAY,EAAGC,UAAU,IAAc;MACnC,OAAOA,UAAU,EAAEC,OAAO,KAAK,YAAY;KAC7C;IACF,WAAW,EAAC,cAAc;IAC1B,QAAQ,EAAE,IAAK;IACf,QAAQ,EAAEzC,iBAAkB;IAC5B,UAAU,EAAE,IAAK,CAAA;IAAA;;IACjB,YAAY,EAAE;IACd;IAAA;;IACA,QAAQ,EAAEK,KAAK,CAACG;IAChB;IAAA;;IACA,MAAM,EAAEb,MAAO;IACf,aAAa,EAAG6C,UAAU,IAAc;MACpC,OAAOA,UAAU,EAAEC,OAAO,KAAK,YAAY;KAC7C;IACF,MAAM,EAAErB,gBAAiB;IACzB,YAAY,EAAEtB,kBAAkB,IAAI4C,yBAA0B,CAAA;IAAA;;IAC9D,UAAU,EAAEpB,gBAAiB;IAC7B,WAAW,EAAEO,iBAAkB;IAC/B,SAAS,EAAEE,YAAa,CAAA;IACxB;AAChB;AACA;AACA;AACA;EAJgB,CAAA,CAKF,CACA;AAEd;;AAEA;AACA,SAASW,yBAAyB,CAACC,YAA6B,EAAe;EAC3E,OACIX,GAAAA,CAAAA,KAAAA,EAAAA,IAAAA,EACIA,GAAAA,CAAAA,GAAAA,EAAAA,IAAAA,EAAIW,YAAY,CAAClB,KAAK,CAACmB,KAAK,CAAK,CAC/B;AAEd;AAEA,MAAMX,MAAM,GAAG;EACXC,QAAQ,EAAA;EAAA;EAAEW,GAAG,CAAA,6EAAA,EAKeC,KAAK,CAACC,KAAK,EASPD,oGAAAA,EAAAA,KAAK,CAACC,KAAK,EAAA,wFAAA,EAOfD,KAAK,CAACC,KAAK,EAAA,kEAAA,EAMfD,KAAK,CAACC,KAAK,EAQPD,wDAAAA,EAAAA,KAAK,CAACE,IAAI,EAAA,iDAAA,IAAA,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,YAAA,GAAA,EAAA,GAAA,kBAAA,CAAA,EAAA,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,YAAA,GAAA,EAAA,GAAA,6lUAAA,EAAA,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,YAAA,GAAA,EAAA,GAAA,kBAAA;AAO1C,CAAC","sourcesContent":["import { THEME } from '@common/constants/theme.constant';\nimport { IIdObject } from '@common/interfaces/id-object.interface';\nimport FullCalendarOriginal, {\n    DateSelectArg,\n    EventApi,\n    EventChangeArg,\n    EventClickArg,\n    EventContentArg,\n    EventInput,\n} from '@fullcalendar/react';\nimport TimeGridPlugin from '@fullcalendar/timegrid';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { css } from 'twin.macro';\n\n{/* prettier-ignore */\n}\nconst InteractionPlugin = require('@fullcalendar/interaction').default;\nconst DayGridPlugin = require('@fullcalendar/daygrid').default;\nconst ListPlugin = require('@fullcalendar/list').default;\n\nexport type DateSelectArgEx = DateSelectArg;\nexport type EventChangeArgEx = EventChangeArg;\nexport type EventContentArgEx = EventContentArg;\n\ninterface IFullCalendarState {\n    weekendsVisible: boolean;\n    currentEvents: EventApi[];\n}\n\nexport interface ICalendarDateRange {\n    start: Date;\n    end: Date;\n}\nexport const formatDateForCalendar = (date: Date): string => date.toISOString().replace(/T.*$/, ''); // YYYY-MM-DD of today\ninterface IProps<T> {\n    className?: string;\n    events: CustomEventInput[];\n    onDateRangeChange?: (range: ICalendarDateRange) => void;\n    onEventClick?: (event: CustomEventInput<T> & IIdObject, original: EventClickArg) => void;\n    onEventChange?: (event: CustomEventInput<T> & IIdObject, original: EventChangeArg) => void;\n    onDateSelect?: (select: DateSelectArg) => void;\n    renderEventContent?: (eventContent: EventContentArg) => JSX.Element;\n}\n\nexport interface CustomEventInput<T = unknown> extends IIdObject {\n    title: string | undefined;\n    start: Date | string;\n    editable?: boolean;\n    allDay?: boolean;\n    end?: Date | string;\n    metadata?: T;\n    extraDate?: Date; // TODO: do we need this?\n    durationEditable?: boolean;\n    display?: EventInput['display'];\n}\n// TODO don't remove comments - most advanced component\nexport function FullCalendar<T>({\n    events,\n    className,\n    onEventClick,\n    renderEventContent,\n    onEventChange,\n    onDateRangeChange,\n    onDateSelect,\n}: IProps<T>): JSX.Element {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const calendarRef = React.createRef<{ getApi: () => { view: any } }>();\n    const [state, setState] = useState<IFullCalendarState>({\n        weekendsVisible: true,\n        currentEvents: [],\n    });\n\n    const _handleWeekendsToggle = (): void => {\n        setState({\n            ...state,\n            weekendsVisible: !state.weekendsVisible,\n        });\n    };\n\n    const getCalendarApi = useCallback(() => calendarRef.current?.getApi(), [calendarRef]);\n\n    useEffect(() => {\n        if (getCalendarApi()) {\n            const range = getCalendarApi()?.view.getCurrentData().dateProfile.renderRange;\n            // consoleService.log('calendarApi', getCalendarApi());\n            onDateRangeChange && onDateRangeChange(range);\n        }\n    }, [getCalendarApi, onDateRangeChange]);\n\n    const handleDateSelect = (selectInfo: DateSelectArg): void => {\n        onDateSelect && onDateSelect(selectInfo);\n        // const title = prompt('Please enter a new title for your event');\n        // const calendarApi = selectInfo.view.calendar;\n        // calendarApi.unselect(); // clear date selection\n        // if (title) {\n        //     calendarApi.addEvent({\n        //         id: createEventId(),\n        //         title,\n        //         start: selectInfo.startStr,\n        //         end: selectInfo.endStr,\n        //         allDay: selectInfo.allDay,\n        //     });\n        // }\n    };\n\n    const handleEventClick = (clickInfo: EventClickArg): void => {\n        const id = clickInfo.event.id;\n        const el = events.find((e) => e.id === id);\n        onEventClick && onEventClick(el as CustomEventInput<T> & IIdObject, clickInfo);\n    };\n\n    const handleEventChange = (changeInfo: EventChangeArg): void => {\n        const id = changeInfo.event.id;\n        const el = events.find((e) => e.id === id);\n        onEventChange && onEventChange(el as CustomEventInput<T> & IIdObject, changeInfo);\n    };\n\n    const handleEvents = (events: EventApi[]): void => {\n        setState({\n            ...state,\n            currentEvents: events,\n        });\n    };\n\n    return (\n        <div css={styles.calendar} tw=\"font-primary\" className={className}>\n            <FullCalendarOriginal\n                {...{ ref: calendarRef as unknown as React.LegacyRef<FullCalendarOriginal> }}\n                plugins={[DayGridPlugin, TimeGridPlugin, InteractionPlugin, ListPlugin]}\n                headerToolbar={{\n                    left: 'prev,next today',\n                    center: 'title',\n                    right: 'dayGridMonth,dayGridWeek,listMonth',\n                }}\n                eventOverlap={(stillEvent): boolean => {\n                    return stillEvent?.display !== 'background';\n                }}\n                initialView=\"dayGridMonth\"\n                editable={true}\n                datesSet={onDateRangeChange}\n                selectable={true} // uncomment\n                selectMirror={true}\n                // dayMaxEvents={true}\n                weekends={state.weekendsVisible}\n                // initialEvents={events} // alternatively, use the `events` setting to fetch from a feed\n                events={events}\n                selectOverlap={(stillEvent): boolean => {\n                    return stillEvent?.display !== 'background';\n                }}\n                select={handleDateSelect}\n                eventContent={renderEventContent || renderDefaultEventContent} // custom render function\n                eventClick={handleEventClick}\n                eventChange={handleEventChange}\n                eventsSet={handleEvents} // called after events are initialized/added/changed/removed\n                /* you can update a remote database when these fire:\n\t\t\t\t\t\t\teventAdd={function(){}}\n\t\t\t\t\t\t\teventChange={function(){}}\n\t\t\t\t\t\t\teventRemove={function(){}}\n\t\t\t\t\t\t\t*/\n            />\n        </div>\n    );\n}\n\n//eventContent:EventContentArg\nfunction renderDefaultEventContent(eventContent: EventContentArg): JSX.Element {\n    return (\n        <div>\n            <i>{eventContent.event.title}</i>\n        </div>\n    );\n}\n\nconst styles = {\n    calendar: css`\n        && .fc-toolbar-title {\n            font-family: 'Oddtype';\n        }\n        && .fc-button {\n            background-color: ${THEME.GREEN};\n            font-family: inherit;\n            border: 0;\n            outline: none;\n            box-shadow: none;\n\n            :hover,\n            :active,\n            :focus {\n                background-color: ${THEME.GREEN};\n                border: 0 !important;\n                box-shadow: none !important;\n            }\n        }\n\n        && .fc-button-active {\n            background-color: ${THEME.GREEN};\n            text-decoration: underline;\n            z-index: 0;\n        }\n\n        && .fc-event {\n            border-color: ${THEME.GREEN};\n        }\n\n        && .fc-event-main {\n            // background-color: ${THEME.GREEN};\n        }\n\n        && .fc-bg-event {\n            background-color: ${THEME.GRAY};\n        }\n\n        && .fc .fc-daygrid-bg-harness .fc-highlight {\n            // background-color: ${THEME.GREEN};\n        }\n    `,\n};\n"]},"metadata":{},"sourceType":"module"}