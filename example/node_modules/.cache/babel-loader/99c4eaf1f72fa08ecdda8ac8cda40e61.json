{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar icons = require('@ant-design/icons');\nvar icon_component = require('../icon/icon.component.js');\nvar switch_component = require('../switch/switch.component.js');\nvar toBoolean_util = require('../../utils/to-boolean.util.js');\nvar React = require('react');\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\nvar React__default = /*#__PURE__*/_interopDefaultLegacy(React);\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() {\n  return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";\n}\nvar _ref = process.env.NODE_ENV === \"production\" ? {\n  name: \"oc9ddb\",\n  styles: \"display:flex;justify-content:space-between;padding-top:0.25rem;padding-left:0.25rem;padding-right:0.25rem;align-items:center;border-radius:4px\"\n} : {\n  name: \"i7q16r-ColumnChooserItem\",\n  styles: \"display:flex;justify-content:space-between;padding-top:0.25rem;padding-left:0.25rem;padding-right:0.25rem;align-items:center;border-radius:4px;label:ColumnChooserItem;\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\nvar _ref2 = process.env.NODE_ENV === \"production\" ? {\n  name: \"zjik7\",\n  styles: \"display:flex\"\n} : {\n  name: \"lddrd3-ColumnChooserItem\",\n  styles: \"display:flex;label:ColumnChooserItem;\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\nvar _ref3 = process.env.NODE_ENV === \"production\" ? {\n  name: \"acrv8p\",\n  styles: \"margin-top:0.125rem;margin-right:0.5rem\"\n} : {\n  name: \"zwo5vx-ColumnChooserItem\",\n  styles: \"margin-top:0.125rem;margin-right:0.5rem;label:ColumnChooserItem;\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\nconst ColumnChooserItem = _ref4 => {\n  let {\n    column,\n    onChange\n  } = _ref4;\n  const handleChange = React.useCallback(e => {\n    onChange({\n      ...column,\n      isHidden: !toBoolean_util.toBoolean(e.target.value)\n    });\n  }, [onChange, column]);\n  return /*#__PURE__*/React__default[\"default\"].createElement(\"div\", {\n    css: _ref,\n    \"data-testid\": `column-item-${column.id}`\n  }, /*#__PURE__*/React__default[\"default\"].createElement(\"div\", {\n    css: _ref2\n  }, /*#__PURE__*/React__default[\"default\"].createElement(icon_component.Icon, {\n    icon: icons.DragOutlined,\n    css: _ref3\n  }), /*#__PURE__*/React__default[\"default\"].createElement(\"span\", null, column.title)), /*#__PURE__*/React__default[\"default\"].createElement(\"div\", null, /*#__PURE__*/React__default[\"default\"].createElement(switch_component.Switch, {\n    name: column.id,\n    value: !column.isHidden,\n    onChange: handleChange,\n    readOnly: column.isAlwaysVisible\n  })));\n};\nexports.ColumnChooserItem = ColumnChooserItem;","map":{"version":3,"sources":["../../../../src/general-ui/column-chooser/column-chooser-item.component.tsx"],"names":["ColumnChooserItem","column","onChange","handleChange","useCallback","e","isHidden","toBoolean","target","value","id","React","Icon","DragOutlined","title","Switch","isAlwaysVisible"],"mappings":";;;;;;;;;;;;;;;;;;;AAI2C,IAAA,IAAA,GAAA,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,YAAA,GAAA;EAAA,IAAA,EAAA,QAAA;EAAA,MAAA,EAAA;AAAA,CAAA,GAAA;EAAA,IAAA,EAAA,0BAAA;EAAA,MAAA,EAAA,yKAAA;EAAA,QAAA,EAAA;AAAA,CAAA;AAAA,IAAA,KAAA,GAAA,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,YAAA,GAAA;EAAA,IAAA,EAAA,OAAA;EAAA,MAAA,EAAA;AAAA,CAAA,GAAA;EAAA,IAAA,EAAA,0BAAA;EAAA,MAAA,EAAA,uCAAA;EAAA,QAAA,EAAA;AAAA,CAAA;AAAA,IAAA,KAAA,GAAA,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,YAAA,GAAA;EAAA,IAAA,EAAA,QAAA;EAAA,MAAA,EAAA;AAAA,CAAA,GAAA;EAAA,IAAA,EAAA,0BAAA;EAAA,MAAA,EAAA,kEAAA;EAAA,QAAA,EAAA;AAAA,CAAA;AASpC,MAAMA,iBAAiB,GAAG,SAAgE;EAAA,IAA/D;IAAEC,MAAM;IAAEC;EAAkC,CAAC;EAC3E,MAAMC,YAAY,GAAGC,KAAAA,CAAAA,WAAW,CAC3BC,CAAsC,IAAK;IACxCH,QAAQ,CAAC;MAAE,GAAGD,MAAM;MAAEK,QAAQ,EAAE,CAACC,cAAAA,CAAAA,SAAS,CAACF,CAAC,CAACG,MAAM,CAACC,KAAK;IAAE,CAAC,CAAC;EACjE,CAAC,EACD,CAACP,QAAQ,EAAED,MAAM,CAAC,CACrB;EACD,OAAA,aACI,cAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAA,KAAA,EAAA;IAAA,GAAA,EAAA,IAAA;IAAyE,aAAc,EAAA,eAAcA,MAAM,CAACS,EAAG;GAC3G,EAAA,aAAA,cAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAA,KAAA,EAAA;IAAA,GAAA,EAAA;EAAA,CAAA,EAAA,aACIC,cAAAA,CAAAA,SAAAA,CAAAA,CAAAA,aAAAA,CAACC,cAAAA,CAAAA,IAAI,EAAA;IAAC,IAAI,EAAEC,KAAAA,CAAAA,YAAa;IAAA,GAAA,EAAA;GAAoB,CAAA,EAAA,aAC7CF,cAAAA,CAAAA,SAAAA,CAAOV,CAAAA,aAAAA,CAAAA,MAAAA,EAAAA,IAAAA,EAAAA,MAAM,CAACa,KAAK,CAAQ,CACzB,EAAA,aACNH,cAAAA,CAAAA,SAAAA,CACI,CAAA,aAAA,CAAA,KAAA,EAAA,IAAA,EAAA,aAAA,cAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAACI,gBAAAA,CAAAA,MAAM,EAAA;IACH,IAAI,EAAEd,MAAM,CAACS,EAAG;IAChB,KAAK,EAAE,CAACT,MAAM,CAACK,QAAS;IACxB,QAAQ,EAAEH,YAAa;IACvB,QAAQ,EAAEF,MAAM,CAACe;EAAgB,CAAA,CACnC,CACA,CACJ;AAEd,CAAA","sourcesContent":["import { DragOutlined } from '@ant-design/icons';\nimport { Icon } from '@common/general-ui/icon/icon.component';\nimport { Switch } from '@common/general-ui/switch/switch.component';\nimport { toBoolean } from '@common/utils/to-boolean.util';\nimport React, { useCallback } from 'react';\nimport 'twin.macro';\nimport { IColumnChooser } from './column-chooser.component';\n\ninterface IColumnChooserItemProps {\n    column: IColumnChooser;\n    onChange: (c: IColumnChooser) => void;\n}\n\nexport const ColumnChooserItem = ({ column, onChange }: IColumnChooserItemProps): JSX.Element => {\n    const handleChange = useCallback(\n        (e: React.ChangeEvent<HTMLInputElement>) => {\n            onChange({ ...column, isHidden: !toBoolean(e.target.value) });\n        },\n        [onChange, column],\n    );\n    return (\n        <div tw=\"flex justify-between pt-1 px-1 items-center border-radius[4px]\" data-testid={`column-item-${column.id}`}>\n            <div tw=\"flex\">\n                <Icon icon={DragOutlined} tw=\"mt-0.5 mr-2\" />\n                <span>{column.title}</span>\n            </div>\n            <div>\n                <Switch\n                    name={column.id}\n                    value={!column.isHidden}\n                    onChange={handleChange}\n                    readOnly={column.isAlwaysVisible}\n                />\n            </div>\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"script"}