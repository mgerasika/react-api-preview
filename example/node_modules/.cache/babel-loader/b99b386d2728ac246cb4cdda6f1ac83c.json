{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isScope;\nvar _generated = require(\"./generated\");\nfunction isScope(node, parent) {\n  if ((0, _generated.isBlockStatement)(node) && ((0, _generated.isFunction)(parent) || (0, _generated.isCatchClause)(parent))) {\n    return false;\n  }\n  if ((0, _generated.isPattern)(node) && ((0, _generated.isFunction)(parent) || (0, _generated.isCatchClause)(parent))) {\n    return true;\n  }\n  return (0, _generated.isScopable)(node);\n}","map":{"version":3,"sources":["../../src/validators/isScope.ts"],"names":["isScope","node","parent"],"mappings":";;;;;;AAAA,IAAA,UAAA,GAAA,OAAA,CAAA,aAAA,CAAA;AAYe,SAASA,OAAT,CAAiBC,IAAjB,EAA+BC,MAA/B,EAAwD;EAGrE,IAAI,CAAA,CAAA,EAAA,UAAA,CAAA,gBAAA,EAAiBD,IAAjB,CAAA,KAA2B,CAAA,CAAA,EAAA,UAAA,CAAA,UAAA,EAAWC,MAAX,CAAA,IAAsB,CAAA,CAAA,EAAA,UAAA,CAAA,aAAA,EAAcA,MAAd,CAAjD,CAAJ,EAA6E;IAC3E,OAAO,KAAP;EACD;EAID,IAAI,CAAA,CAAA,EAAA,UAAA,CAAA,SAAA,EAAUD,IAAV,CAAA,KAAoB,CAAA,CAAA,EAAA,UAAA,CAAA,UAAA,EAAWC,MAAX,CAAA,IAAsB,CAAA,CAAA,EAAA,UAAA,CAAA,aAAA,EAAcA,MAAd,CAA1C,CAAJ,EAAsE;IACpE,OAAO,IAAP;EACD;EAED,OAAO,CAAA,CAAA,EAAA,UAAA,CAAA,UAAA,EAAWD,IAAX,CAAP;AACD","sourcesContent":["import {\n  isFunction,\n  isCatchClause,\n  isBlockStatement,\n  isScopable,\n  isPattern,\n} from \"./generated\";\nimport type * as t from \"..\";\n\n/**\n * Check if the input `node` is a scope.\n */\nexport default function isScope(node: t.Node, parent: t.Node): boolean {\n  // If a BlockStatement is an immediate descendent of a Function/CatchClause, it must be in the body.\n  // Hence we skipped the parentKey === \"params\" check\n  if (isBlockStatement(node) && (isFunction(parent) || isCatchClause(parent))) {\n    return false;\n  }\n\n  // If a Pattern is an immediate descendent of a Function/CatchClause, it must be in the params.\n  // Hence we skipped the parentKey === \"params\" check\n  if (isPattern(node) && (isFunction(parent) || isCatchClause(parent))) {\n    return true;\n  }\n\n  return isScopable(node);\n}\n"]},"metadata":{},"sourceType":"script"}