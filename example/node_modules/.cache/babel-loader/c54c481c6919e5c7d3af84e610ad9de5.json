{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar _rollupPluginBabelHelpers = require('../../_virtual/_rollupPluginBabelHelpers.js');\nvar useField_hook = require('../../hooks/use-field.hook.js');\nvar React = require('react');\nvar switch_component = require('./switch.component.js');\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\nvar React__default = /*#__PURE__*/_interopDefaultLegacy(React);\nfunction FormSwitch(props) {\n  const {\n    onChange,\n    onBlur,\n    getCustomErrorMessage\n  } = props;\n  const {\n    setFieldValue,\n    setFieldTouched,\n    value,\n    errorMessage,\n    triggerValidate\n  } = useField_hook.useField({\n    ...props,\n    getCustomErrorMessage\n  });\n  const handleChange = React.useCallback(e => {\n    onChange && onChange(e);\n    setFieldValue(e.target.checked);\n    setFieldTouched();\n    triggerValidate();\n  }, [onChange, setFieldValue, setFieldTouched, triggerValidate]);\n  const handleBlur = React.useCallback(e => {\n    onBlur && onBlur(e);\n    setFieldTouched();\n  }, [onBlur, setFieldTouched]);\n  return /*#__PURE__*/React__default[\"default\"].createElement(switch_component.Switch, _rollupPluginBabelHelpers[\"extends\"]({\n    errorMessage: errorMessage\n  }, props, {\n    onChange: handleChange,\n    onBlur: handleBlur,\n    name: props.name,\n    value: value\n  }));\n}\nexports.FormSwitch = FormSwitch;","map":{"version":3,"sources":["../../../../src/general-ui/switch/form-switch.component.tsx"],"names":["FormSwitch","props","onChange","onBlur","getCustomErrorMessage","setFieldValue","setFieldTouched","value","errorMessage","triggerValidate","useField","handleChange","useCallback","e","target","checked","handleBlur","React","Switch","name"],"mappings":";;;;;;;;;;;;;;;AAIO,SAASA,UAAU,CACtBC,KAAsE,EAC3D;EACX,MAAM;IAAEC,QAAQ;IAAEC,MAAM;IAAEC;EAAsB,CAAC,GAAGH,KAAK;EACzD,MAAM;IAAEI,aAAa;IAAEC,eAAe;IAAEC,KAAK;IAAEC,YAAY;IAAEC;GAAiB,GAAGC,aAAAA,CAAAA,QAAQ,CAAU;IAC/F,GAAGT,KAAK;IACRG;EACJ,CAAC,CAAC;EAEF,MAAMO,YAAY,GAAGC,KAAAA,CAAAA,WAAW,CAC3BC,CAAC,IAAK;IACHX,QAAQ,IAAIA,QAAQ,CAACW,CAAC,CAAC;IACvBR,aAAa,CAACQ,CAAC,CAACC,MAAM,CAACC,OAAO,CAAC;IAC/BT,eAAe,EAAE;IACjBG,eAAe,EAAE;GACpB,EACD,CAACP,QAAQ,EAAEG,aAAa,EAAEC,eAAe,EAAEG,eAAe,CAAC,CAC9D;EAED,MAAMO,UAAU,GAAGJ,KAAAA,CAAAA,WAAW,CACzBC,CAAqC,IAAK;IACvCV,MAAM,IAAIA,MAAM,CAACU,CAAC,CAAC;IACnBP,eAAe,EAAE;EACrB,CAAC,EACD,CAACH,MAAM,EAAEG,eAAe,CAAC,CAC5B;EAED,OAAA,aACIW,cAAAA,CAAAA,SAAAA,CAAAA,CAAAA,aAAAA,CAACC,gBAAAA,CAAAA,MAAM,EAAA,yBAAA,CAAA,SAAA,CAAA,CAAA;IACH,YAAY,EAAEV;EAAa,CAAA,EACvBP,KAAK,EAAA;IACT,QAAQ,EAAEU,YAAa;IACvB,MAAM,EAAEK,UAAW;IACnB,IAAI,EAAEf,KAAK,CAACkB,IAAe;IAC3B,KAAK,EAAEZ;GACT,CAAA,CAAA;AAEV","sourcesContent":["import { useField } from '@common/hooks/use-field.hook';\nimport React, { useCallback } from 'react';\nimport { ISwitchProps, Switch } from './switch.component';\n\nexport function FormSwitch<TFormValues>(\n    props: Omit<ISwitchProps<keyof TFormValues>, 'value' | 'defaultValue'>,\n): JSX.Element {\n    const { onChange, onBlur, getCustomErrorMessage } = props;\n    const { setFieldValue, setFieldTouched, value, errorMessage, triggerValidate } = useField<boolean>({\n        ...props,\n        getCustomErrorMessage,\n    });\n\n    const handleChange = useCallback<React.ChangeEventHandler<HTMLInputElement>>(\n        (e) => {\n            onChange && onChange(e);\n            setFieldValue(e.target.checked);\n            setFieldTouched();\n            triggerValidate();\n        },\n        [onChange, setFieldValue, setFieldTouched, triggerValidate],\n    );\n\n    const handleBlur = useCallback(\n        (e: React.FocusEvent<HTMLInputElement>) => {\n            onBlur && onBlur(e);\n            setFieldTouched();\n        },\n        [onBlur, setFieldTouched],\n    );\n\n    return (\n        <Switch\n            errorMessage={errorMessage}\n            {...props}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            name={props.name as string}\n            value={value}\n        />\n    );\n}\n"]},"metadata":{},"sourceType":"script"}