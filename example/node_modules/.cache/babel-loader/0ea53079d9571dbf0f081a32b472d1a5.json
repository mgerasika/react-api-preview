{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isSpecifierDefault;\nvar _generated = require(\"./generated\");\nfunction isSpecifierDefault(specifier) {\n  return (0, _generated.isImportDefaultSpecifier)(specifier) || (0, _generated.isIdentifier)(specifier.imported || specifier.exported, {\n    name: \"default\"\n  });\n}","map":{"version":3,"sources":["../../src/validators/isSpecifierDefault.ts"],"names":["isSpecifierDefault","specifier","imported","exported","name"],"mappings":";;;;;;AAAA,IAAA,UAAA,GAAA,OAAA,CAAA,aAAA,CAAA;AAMe,SAASA,kBAAT,CACbC,SADa,EAEJ;EACT,OACE,CAAA,CAAA,EAAA,UAAA,CAAA,wBAAA,EAAyBA,SAAzB,CAAA,IAEA,CAAA,CAAA,EAAA,UAAA,CAAA,YAAA,EAAaA,SAAS,CAACC,QAAVD,IAAsBA,SAAS,CAACE,QAA7C,EAAuD;IACrDC,IAAI,EAAE;EAD+C,CAAvD,CAHF;AAOD","sourcesContent":["import { isIdentifier, isImportDefaultSpecifier } from \"./generated\";\nimport type * as t from \"..\";\n\n/**\n * Check if the input `specifier` is a `default` import or export.\n */\nexport default function isSpecifierDefault(\n  specifier: t.ModuleSpecifier,\n): boolean {\n  return (\n    isImportDefaultSpecifier(specifier) ||\n    // @ts-expect-error todo(flow->ts): stricter type for specifier\n    isIdentifier(specifier.imported || specifier.exported, {\n      name: \"default\",\n    })\n  );\n}\n"]},"metadata":{},"sourceType":"script"}