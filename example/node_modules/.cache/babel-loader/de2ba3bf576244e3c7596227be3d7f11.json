{"ast":null,"code":"/**\n * Copyright (c) 2017, Philip Walton <philip@philipwalton.com>\n */\nimport { JS } from '@aws-amplify/core';\nvar proto = JS.browserOrNode().isBrowser && window['Element'] ? window['Element'].prototype : null;\nvar nativeMatches = proto ? proto.matches ||\n// @ts-ignore\nproto.matchesSelector ||\n// @ts-ignore\nproto.webkitMatchesSelector ||\n// @ts-ignore\nproto.mozMatchesSelector ||\n// @ts-ignore\nproto.msMatchesSelector ||\n// @ts-ignore\nproto.oMatchesSelector : null;\n/**\n * Tests if a DOM elements matches any of the test DOM elements or selectors.\n * @param {Element} element The DOM element to test.\n * @param {Element|string|Array<Element|string>} test A DOM element, a CSS\n *     selector, or an array of DOM elements or CSS selectors to match against.\n * @return {boolean} True of any part of the test matches.\n */\nexport function matches(element, test) {\n  // Validate input.\n  if (element && element.nodeType === 1 && test) {\n    // if test is a string or DOM element test it.\n    if (typeof test === 'string' || test.nodeType === 1) {\n      return element === test || matchesSelector(element, /** @type {string} */test);\n    } else if ('length' in test) {\n      // if it has a length property iterate over the items\n      // and return true if any match.\n      for (var i = 0, item = void 0; item = test[i]; i++) {\n        if (element === item || matchesSelector(element, item)) return true;\n      }\n    }\n  }\n  // Still here? Return false\n  return false;\n}\n/**\n * Tests whether a DOM element matches a selector. This polyfills the native\n * Element.prototype.matches method across browsers.\n * @param {!Element} element The DOM element to test.\n * @param {string} selector The CSS selector to test element against.\n * @return {boolean} True if the selector matches.\n */\nfunction matchesSelector(element, selector) {\n  if (typeof selector !== 'string') return false;\n  if (nativeMatches) return nativeMatches.call(element, selector);\n  var nodes = element.parentNode.querySelectorAll(selector);\n  for (var i = 0, node = void 0; node = nodes[i]; i++) {\n    if (node === element) return true;\n  }\n  return false;\n}","map":{"version":3,"sources":["../../../src/vendor/dom-utils/matches.ts"],"names":[],"mappings":"AAAA;;AAEG;AAEH,SAAS,EAAE,QAAQ,mBAAmB;AAEtC,IAAM,KAAK,GACV,EAAE,CAAC,aAAa,EAAE,CAAC,SAAS,IAAI,MAAM,CAAC,SAAS,CAAC,GAC9C,MAAM,CAAC,SAAS,CAAC,CAAC,SAAS,GAC3B,IAAI;AAER,IAAM,aAAa,GAAG,KAAK,GACxB,KAAK,CAAC,OAAO;AACb;AACA,KAAK,CAAC,eAAe;AACrB;AACA,KAAK,CAAC,qBAAqB;AAC3B;AACA,KAAK,CAAC,kBAAkB;AACxB;AACA,KAAK,CAAC,iBAAiB;AACvB;AACA,KAAK,CAAC,gBAAgB,GACtB,IAAI;AAEP;;;;;;AAMG;AACH,OAAM,SAAU,OAAO,CAAC,OAAO,EAAE,IAAI,EAAA;EACpC;EACA,IAAI,OAAO,IAAI,OAAO,CAAC,QAAQ,KAAK,CAAC,IAAI,IAAI,EAAE;IAC9C;IACA,IAAI,OAAO,IAAI,KAAK,QAAQ,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAE;MACpD,OACC,OAAO,KAAK,IAAI,IAAI,eAAe,CAAC,OAAO,EAAE,qBAAsB,IAAI,CAAC;KAEzE,MAAM,IAAI,QAAQ,IAAI,IAAI,EAAE;MAC5B;MACA;MACA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,GAAA,KAAA,CAAA,EAAG,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,EAAG,CAAC,EAAE,EAAE;QAC5C,IAAI,OAAO,KAAK,IAAI,IAAI,eAAe,CAAC,OAAO,EAAE,IAAI,CAAC,EAAE,OAAO,IAAI;MACnE;IACD;EACD;EACD;EACA,OAAO,KAAK;AACb;AAEA;;;;;;AAMG;AACH,SAAS,eAAe,CAAC,OAAO,EAAE,QAAQ,EAAA;EACzC,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE,OAAO,KAAK;EAC9C,IAAI,aAAa,EAAE,OAAO,aAAa,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC;EAC/D,IAAM,KAAK,GAAG,OAAO,CAAC,UAAU,CAAC,gBAAgB,CAAC,QAAQ,CAAC;EAC3D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,GAAA,KAAA,CAAA,EAAG,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,EAAG,CAAC,EAAE,EAAE;IAC7C,IAAI,IAAI,KAAK,OAAO,EAAE,OAAO,IAAI;EACjC;EACD,OAAO,KAAK;AACb","sourceRoot":"","sourcesContent":["/**\n * Copyright (c) 2017, Philip Walton <philip@philipwalton.com>\n */\nimport { JS } from '@aws-amplify/core';\nvar proto = JS.browserOrNode().isBrowser && window['Element']\n    ? window['Element'].prototype\n    : null;\nvar nativeMatches = proto\n    ? proto.matches ||\n        // @ts-ignore\n        proto.matchesSelector ||\n        // @ts-ignore\n        proto.webkitMatchesSelector ||\n        // @ts-ignore\n        proto.mozMatchesSelector ||\n        // @ts-ignore\n        proto.msMatchesSelector ||\n        // @ts-ignore\n        proto.oMatchesSelector\n    : null;\n/**\n * Tests if a DOM elements matches any of the test DOM elements or selectors.\n * @param {Element} element The DOM element to test.\n * @param {Element|string|Array<Element|string>} test A DOM element, a CSS\n *     selector, or an array of DOM elements or CSS selectors to match against.\n * @return {boolean} True of any part of the test matches.\n */\nexport function matches(element, test) {\n    // Validate input.\n    if (element && element.nodeType === 1 && test) {\n        // if test is a string or DOM element test it.\n        if (typeof test === 'string' || test.nodeType === 1) {\n            return (element === test || matchesSelector(element, /** @type {string} */ test));\n        }\n        else if ('length' in test) {\n            // if it has a length property iterate over the items\n            // and return true if any match.\n            for (var i = 0, item = void 0; (item = test[i]); i++) {\n                if (element === item || matchesSelector(element, item))\n                    return true;\n            }\n        }\n    }\n    // Still here? Return false\n    return false;\n}\n/**\n * Tests whether a DOM element matches a selector. This polyfills the native\n * Element.prototype.matches method across browsers.\n * @param {!Element} element The DOM element to test.\n * @param {string} selector The CSS selector to test element against.\n * @return {boolean} True if the selector matches.\n */\nfunction matchesSelector(element, selector) {\n    if (typeof selector !== 'string')\n        return false;\n    if (nativeMatches)\n        return nativeMatches.call(element, selector);\n    var nodes = element.parentNode.querySelectorAll(selector);\n    for (var i = 0, node = void 0; (node = nodes[i]); i++) {\n        if (node === element)\n            return true;\n    }\n    return false;\n}\n//# sourceMappingURL=matches.js.map"]},"metadata":{},"sourceType":"module"}