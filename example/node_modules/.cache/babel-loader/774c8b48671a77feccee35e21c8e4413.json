{"ast":null,"code":"import { objectSpread2 as _objectSpread2, extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport { useField } from '../../hooks/use-field.hook.js';\nimport { useCallback } from 'react';\nimport { InputLoqate } from './input-loqate.component.js';\nimport { jsx } from '@emotion/react';\nfunction FormInputLoqate(props) {\n  var onChange = props.onChange,\n    getCustomErrorMessage = props.getCustomErrorMessage;\n  var _useField = useField(_objectSpread2(_objectSpread2({}, props), {}, {\n      getCustomErrorMessage: getCustomErrorMessage\n    })),\n    setFieldValue = _useField.setFieldValue,\n    value = _useField.value,\n    errorMessage = _useField.errorMessage,\n    setFieldTouched = _useField.setFieldTouched;\n  var handleChange = useCallback(function (e) {\n    setFieldValue(e.value);\n    onChange && onChange(e);\n    setFieldTouched();\n  }, [onChange, setFieldTouched, setFieldValue]);\n  return jsx(InputLoqate, _extends({\n    errorMessage: errorMessage\n  }, props, {\n    onChange: handleChange,\n    name: props.name,\n    defaultValue: value,\n    value: value\n  }));\n}\nexport { FormInputLoqate };","map":{"version":3,"sources":["../../../../src/general-ui/input-loqate/form-input-loqate.component.tsx"],"names":["FormInputLoqate","props","onChange","getCustomErrorMessage","setFieldValue","value","errorMessage","setFieldTouched","useField","handleChange","useCallback","e","___EmotionJSX","InputLoqate","name","defaultValue"],"mappings":";;;;;AAIO,SAASA,eAAe,CAC3BC,KAA2E,EAChE;EACX,IAAQC,QAAQ,GAA4BD,KAAK,CAAzCC,QAAQ;IAAEC,qBAAqB,GAAKF,KAAK,CAA/BE,qBAAqB;EACvC,IAMIK,SAAAA,GAAAA,QAAQ,CAAA,cAAA,CAAA,cAAA,CAAA,CAAA,CAAA,EACLP,KAAK,CAAA,EAAA,CAAA,CAAA,EAAA;MACRE,qBAAqB,EAArBA;KACF,CAAA,CAAA;IAREC,aAAa,GAAA,SAAA,CAAbA,aAAa;IAEbC,KAAK,GAAA,SAAA,CAALA,KAAK;IACLC,YAAY,GAAA,SAAA,CAAZA,YAAY;IACKC,eAAe,GAAA,SAAA,CAAhCA,eAAe;EAMnB,IAAME,YAAY,GAAGC,WAAW,CAC5B,UAACC,CAAC,EAAK;IACHP,aAAa,CAACO,CAAC,CAACN,KAAK,CAAC;IACtBH,QAAQ,IAAIA,QAAQ,CAACS,CAAC,CAAC;IACvBJ,eAAe,EAAE;EACpB,CAAA,EACD,CAACL,QAAQ,EAAEK,eAAe,EAAEH,aAAa,CAAC,CAC7C;EACD,OACIQ,GAAAA,CAACC,WAAW,EAAA,QAAA,CAAA;IACRP,YAAY,EAAEA;EAAa,CAAA,EACvBL,KAAK,EAAA;IACTC,QAAQ,EAAEO,YAAa;IACvBK,IAAI,EAAEb,KAAK,CAACa,IAAe;IAC3BC,YAAY,EAAEV,KAAM;IACpBA,KAAK,EAAEA;EACT,CAAA,CAAA,CAAA;AAEV","sourcesContent":["import { useField } from '@common/hooks/use-field.hook';\nimport React, { useCallback } from 'react';\nimport { IInputLoqateChangeHandler, IInputLoqateProps, IInputLoqateValue, InputLoqate } from './input-loqate.component';\n\nexport function FormInputLoqate<TFormValues>(\n    props: Omit<IInputLoqateProps<keyof TFormValues>, 'value' | 'defaultValue'>,\n): JSX.Element {\n    const { onChange, getCustomErrorMessage } = props;\n    const {\n        setFieldValue,\n\n        value,\n        errorMessage,\n        setFieldTouched: setFieldTouched,\n    } = useField<IInputLoqateValue>({\n        ...props,\n        getCustomErrorMessage,\n    });\n\n    const handleChange = useCallback<IInputLoqateChangeHandler>(\n        (e) => {\n            setFieldValue(e.value);\n            onChange && onChange(e);\n            setFieldTouched();\n        },\n        [onChange, setFieldTouched, setFieldValue],\n    );\n    return (\n        <InputLoqate\n            errorMessage={errorMessage}\n            {...props}\n            onChange={handleChange}\n            name={props.name as string}\n            defaultValue={value}\n            value={value}\n        />\n    );\n}\n"]},"metadata":{},"sourceType":"module"}