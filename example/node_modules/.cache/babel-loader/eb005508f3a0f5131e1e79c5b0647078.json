{"ast":null,"code":"/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nimport { ConsoleLogger as Logger, Parser } from '@aws-amplify/core';\nimport { AWSS3Provider } from './providers';\nimport axios from 'axios';\nimport { AWSS3UploadTask } from './providers/AWSS3UploadTask';\nvar logger = new Logger('StorageClass');\nvar DEFAULT_PROVIDER = 'AWSS3';\n/**\n * Provide storage methods to use AWS S3\n */\nvar Storage = /** @class */function () {\n  /**\n   * Initialize Storage\n   * @param {Object} config - Configuration object for storage\n   */\n  function Storage() {\n    this._config = {};\n    this._pluggables = [];\n    this._cancelTokenSourceMap = new WeakMap();\n    logger.debug('Storage Options', this._config);\n    this.get = this.get.bind(this);\n    this.put = this.put.bind(this);\n    this.remove = this.remove.bind(this);\n    this.list = this.list.bind(this);\n  }\n  Storage.prototype.getModuleName = function () {\n    return 'Storage';\n  };\n  /**\n   * add plugin into Storage category\n   * @param {Object} pluggable - an instance of the plugin\n   */\n  Storage.prototype.addPluggable = function (pluggable) {\n    if (pluggable && pluggable.getCategory() === 'Storage') {\n      this._pluggables.push(pluggable);\n      var config = {};\n      config = pluggable.configure(this._config[pluggable.getProviderName()]);\n      return config;\n    }\n  };\n  /**\n   * Get the plugin object\n   * @param providerName - the name of the plugin\n   */\n  Storage.prototype.getPluggable = function (providerName) {\n    var pluggable = this._pluggables.find(function (pluggable) {\n      return pluggable.getProviderName() === providerName;\n    });\n    if (pluggable === undefined) {\n      logger.debug('No plugin found with providerName', providerName);\n      return null;\n    } else return pluggable;\n  };\n  /**\n   * Remove the plugin object\n   * @param providerName - the name of the plugin\n   */\n  Storage.prototype.removePluggable = function (providerName) {\n    this._pluggables = this._pluggables.filter(function (pluggable) {\n      return pluggable.getProviderName() !== providerName;\n    });\n    return;\n  };\n  /**\n   * Configure Storage\n   * @param {Object} config - Configuration object for storage\n   * @return {Object} - Current configuration\n   */\n  Storage.prototype.configure = function (config) {\n    var _this = this;\n    logger.debug('configure Storage');\n    if (!config) return this._config;\n    var amplifyConfig = Parser.parseMobilehubConfig(config);\n    var storageKeysFromConfig = Object.keys(amplifyConfig.Storage);\n    var storageArrayKeys = ['bucket', 'region', 'level', 'track', 'customPrefix', 'serverSideEncryption', 'SSECustomerAlgorithm', 'SSECustomerKey', 'SSECustomerKeyMD5', 'SSEKMSKeyId'];\n    var isInStorageArrayKeys = function (k) {\n      return storageArrayKeys.some(function (x) {\n        return x === k;\n      });\n    };\n    var checkConfigKeysFromArray = function (k) {\n      return k.find(function (k) {\n        return isInStorageArrayKeys(k);\n      });\n    };\n    if (storageKeysFromConfig && checkConfigKeysFromArray(storageKeysFromConfig) && !amplifyConfig.Storage[DEFAULT_PROVIDER]) {\n      amplifyConfig.Storage[DEFAULT_PROVIDER] = {};\n    }\n    Object.entries(amplifyConfig.Storage).map(function (_a) {\n      var _b = __read(_a, 2),\n        key = _b[0],\n        value = _b[1];\n      if (key && isInStorageArrayKeys(key) && value !== undefined) {\n        amplifyConfig.Storage[DEFAULT_PROVIDER][key] = value;\n        delete amplifyConfig.Storage[key];\n      }\n    });\n    // only update new values for each provider\n    Object.keys(amplifyConfig.Storage).forEach(function (providerName) {\n      if (typeof amplifyConfig.Storage[providerName] !== 'string') {\n        _this._config[providerName] = __assign(__assign({}, _this._config[providerName]), amplifyConfig.Storage[providerName]);\n      }\n    });\n    this._pluggables.forEach(function (pluggable) {\n      pluggable.configure(_this._config[pluggable.getProviderName()]);\n    });\n    if (this._pluggables.length === 0) {\n      this.addPluggable(new AWSS3Provider());\n    }\n    return this._config;\n  };\n  Storage.prototype.getCancellableTokenSource = function () {\n    return axios.CancelToken.source();\n  };\n  Storage.prototype.updateRequestToBeCancellable = function (request, cancelTokenSource) {\n    this._cancelTokenSourceMap.set(request, cancelTokenSource);\n  };\n  Storage.prototype.isUploadTask = function (x) {\n    return typeof x !== 'undefined' && typeof x['pause'] === 'function' && typeof x['resume'] === 'function';\n  };\n  Storage.prototype.cancel = function (request, message) {\n    if (request instanceof AWSS3UploadTask) {\n      return request._cancel();\n    }\n    var cancelTokenSource = this._cancelTokenSourceMap.get(request);\n    if (cancelTokenSource) {\n      cancelTokenSource.cancel(message);\n    } else {\n      logger.debug('The request does not map to any cancel token');\n    }\n  };\n  Storage.prototype.copy = function (src, dest, config) {\n    var provider = (config === null || config === void 0 ? void 0 : config.provider) || DEFAULT_PROVIDER;\n    var prov = this._pluggables.find(function (pluggable) {\n      return pluggable.getProviderName() === provider;\n    });\n    if (prov === undefined) {\n      logger.debug('No plugin found with providerName', provider);\n      return Promise.reject('No plugin found in Storage for the provider');\n    }\n    var cancelTokenSource = this.getCancellableTokenSource();\n    if (typeof prov.copy !== 'function') {\n      return Promise.reject(\".copy is not implemented on provider \" + prov.getProviderName());\n    }\n    var responsePromise = prov.copy(src, dest, __assign(__assign({}, config), {\n      cancelTokenSource: cancelTokenSource\n    }));\n    this.updateRequestToBeCancellable(responsePromise, cancelTokenSource);\n    return responsePromise;\n  };\n  Storage.prototype.get = function (key, config) {\n    var provider = (config === null || config === void 0 ? void 0 : config.provider) || DEFAULT_PROVIDER;\n    var prov = this._pluggables.find(function (pluggable) {\n      return pluggable.getProviderName() === provider;\n    });\n    if (prov === undefined) {\n      logger.debug('No plugin found with providerName', provider);\n      return Promise.reject('No plugin found in Storage for the provider');\n    }\n    var cancelTokenSource = this.getCancellableTokenSource();\n    var responsePromise = prov.get(key, __assign(__assign({}, config), {\n      cancelTokenSource: cancelTokenSource\n    }));\n    this.updateRequestToBeCancellable(responsePromise, cancelTokenSource);\n    return responsePromise;\n  };\n  Storage.prototype.isCancelError = function (error) {\n    return axios.isCancel(error);\n  };\n  Storage.prototype.put = function (key, object, config) {\n    var provider = (config === null || config === void 0 ? void 0 : config.provider) || DEFAULT_PROVIDER;\n    var prov = this._pluggables.find(function (pluggable) {\n      return pluggable.getProviderName() === provider;\n    });\n    if (prov === undefined) {\n      logger.debug('No plugin found with providerName', provider);\n      return Promise.reject('No plugin found in Storage for the provider');\n    }\n    var cancelTokenSource = this.getCancellableTokenSource();\n    var response = prov.put(key, object, __assign(__assign({}, config), {\n      cancelTokenSource: cancelTokenSource\n    }));\n    if (!this.isUploadTask(response)) {\n      this.updateRequestToBeCancellable(response, cancelTokenSource);\n    }\n    return response;\n  };\n  Storage.prototype.remove = function (key, config) {\n    var provider = (config === null || config === void 0 ? void 0 : config.provider) || DEFAULT_PROVIDER;\n    var prov = this._pluggables.find(function (pluggable) {\n      return pluggable.getProviderName() === provider;\n    });\n    if (prov === undefined) {\n      logger.debug('No plugin found with providerName', provider);\n      return Promise.reject('No plugin found in Storage for the provider');\n    }\n    return prov.remove(key, config);\n  };\n  Storage.prototype.list = function (path, config) {\n    var provider = (config === null || config === void 0 ? void 0 : config.provider) || DEFAULT_PROVIDER;\n    var prov = this._pluggables.find(function (pluggable) {\n      return pluggable.getProviderName() === provider;\n    });\n    if (prov === undefined) {\n      logger.debug('No plugin found with providerName', provider);\n      return Promise.reject('No plugin found in Storage for the provider');\n    }\n    return prov.list(path, config);\n  };\n  return Storage;\n}();\nexport { Storage };\n/**\n * @deprecated use named import\n */\nexport default Storage;","map":{"version":3,"sources":["../src/Storage.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nimport { ConsoleLogger as Logger, Parser } from '@aws-amplify/core';\nimport { AWSS3Provider } from './providers';\nimport axios from 'axios';\nimport { AWSS3UploadTask } from './providers/AWSS3UploadTask';\nvar logger = new Logger('StorageClass');\nvar DEFAULT_PROVIDER = 'AWSS3';\n/**\n * Provide storage methods to use AWS S3\n */\nvar Storage = /** @class */ (function () {\n    /**\n     * Initialize Storage\n     * @param {Object} config - Configuration object for storage\n     */\n    function Storage() {\n        this._config = {};\n        this._pluggables = [];\n        this._cancelTokenSourceMap = new WeakMap();\n        logger.debug('Storage Options', this._config);\n        this.get = this.get.bind(this);\n        this.put = this.put.bind(this);\n        this.remove = this.remove.bind(this);\n        this.list = this.list.bind(this);\n    }\n    Storage.prototype.getModuleName = function () {\n        return 'Storage';\n    };\n    /**\n     * add plugin into Storage category\n     * @param {Object} pluggable - an instance of the plugin\n     */\n    Storage.prototype.addPluggable = function (pluggable) {\n        if (pluggable && pluggable.getCategory() === 'Storage') {\n            this._pluggables.push(pluggable);\n            var config = {};\n            config = pluggable.configure(this._config[pluggable.getProviderName()]);\n            return config;\n        }\n    };\n    /**\n     * Get the plugin object\n     * @param providerName - the name of the plugin\n     */\n    Storage.prototype.getPluggable = function (providerName) {\n        var pluggable = this._pluggables.find(function (pluggable) { return pluggable.getProviderName() === providerName; });\n        if (pluggable === undefined) {\n            logger.debug('No plugin found with providerName', providerName);\n            return null;\n        }\n        else\n            return pluggable;\n    };\n    /**\n     * Remove the plugin object\n     * @param providerName - the name of the plugin\n     */\n    Storage.prototype.removePluggable = function (providerName) {\n        this._pluggables = this._pluggables.filter(function (pluggable) { return pluggable.getProviderName() !== providerName; });\n        return;\n    };\n    /**\n     * Configure Storage\n     * @param {Object} config - Configuration object for storage\n     * @return {Object} - Current configuration\n     */\n    Storage.prototype.configure = function (config) {\n        var _this = this;\n        logger.debug('configure Storage');\n        if (!config)\n            return this._config;\n        var amplifyConfig = Parser.parseMobilehubConfig(config);\n        var storageKeysFromConfig = Object.keys(amplifyConfig.Storage);\n        var storageArrayKeys = [\n            'bucket',\n            'region',\n            'level',\n            'track',\n            'customPrefix',\n            'serverSideEncryption',\n            'SSECustomerAlgorithm',\n            'SSECustomerKey',\n            'SSECustomerKeyMD5',\n            'SSEKMSKeyId',\n        ];\n        var isInStorageArrayKeys = function (k) {\n            return storageArrayKeys.some(function (x) { return x === k; });\n        };\n        var checkConfigKeysFromArray = function (k) {\n            return k.find(function (k) { return isInStorageArrayKeys(k); });\n        };\n        if (storageKeysFromConfig &&\n            checkConfigKeysFromArray(storageKeysFromConfig) &&\n            !amplifyConfig.Storage[DEFAULT_PROVIDER]) {\n            amplifyConfig.Storage[DEFAULT_PROVIDER] = {};\n        }\n        Object.entries(amplifyConfig.Storage).map(function (_a) {\n            var _b = __read(_a, 2), key = _b[0], value = _b[1];\n            if (key && isInStorageArrayKeys(key) && value !== undefined) {\n                amplifyConfig.Storage[DEFAULT_PROVIDER][key] = value;\n                delete amplifyConfig.Storage[key];\n            }\n        });\n        // only update new values for each provider\n        Object.keys(amplifyConfig.Storage).forEach(function (providerName) {\n            if (typeof amplifyConfig.Storage[providerName] !== 'string') {\n                _this._config[providerName] = __assign(__assign({}, _this._config[providerName]), amplifyConfig.Storage[providerName]);\n            }\n        });\n        this._pluggables.forEach(function (pluggable) {\n            pluggable.configure(_this._config[pluggable.getProviderName()]);\n        });\n        if (this._pluggables.length === 0) {\n            this.addPluggable(new AWSS3Provider());\n        }\n        return this._config;\n    };\n    Storage.prototype.getCancellableTokenSource = function () {\n        return axios.CancelToken.source();\n    };\n    Storage.prototype.updateRequestToBeCancellable = function (request, cancelTokenSource) {\n        this._cancelTokenSourceMap.set(request, cancelTokenSource);\n    };\n    Storage.prototype.isUploadTask = function (x) {\n        return (typeof x !== 'undefined' &&\n            typeof x['pause'] === 'function' &&\n            typeof x['resume'] === 'function');\n    };\n    Storage.prototype.cancel = function (request, message) {\n        if (request instanceof AWSS3UploadTask) {\n            return request._cancel();\n        }\n        var cancelTokenSource = this._cancelTokenSourceMap.get(request);\n        if (cancelTokenSource) {\n            cancelTokenSource.cancel(message);\n        }\n        else {\n            logger.debug('The request does not map to any cancel token');\n        }\n    };\n    Storage.prototype.copy = function (src, dest, config) {\n        var provider = (config === null || config === void 0 ? void 0 : config.provider) || DEFAULT_PROVIDER;\n        var prov = this._pluggables.find(function (pluggable) { return pluggable.getProviderName() === provider; });\n        if (prov === undefined) {\n            logger.debug('No plugin found with providerName', provider);\n            return Promise.reject('No plugin found in Storage for the provider');\n        }\n        var cancelTokenSource = this.getCancellableTokenSource();\n        if (typeof prov.copy !== 'function') {\n            return Promise.reject(\".copy is not implemented on provider \" + prov.getProviderName());\n        }\n        var responsePromise = prov.copy(src, dest, __assign(__assign({}, config), { cancelTokenSource: cancelTokenSource }));\n        this.updateRequestToBeCancellable(responsePromise, cancelTokenSource);\n        return responsePromise;\n    };\n    Storage.prototype.get = function (key, config) {\n        var provider = (config === null || config === void 0 ? void 0 : config.provider) || DEFAULT_PROVIDER;\n        var prov = this._pluggables.find(function (pluggable) { return pluggable.getProviderName() === provider; });\n        if (prov === undefined) {\n            logger.debug('No plugin found with providerName', provider);\n            return Promise.reject('No plugin found in Storage for the provider');\n        }\n        var cancelTokenSource = this.getCancellableTokenSource();\n        var responsePromise = prov.get(key, __assign(__assign({}, config), { cancelTokenSource: cancelTokenSource }));\n        this.updateRequestToBeCancellable(responsePromise, cancelTokenSource);\n        return responsePromise;\n    };\n    Storage.prototype.isCancelError = function (error) {\n        return axios.isCancel(error);\n    };\n    Storage.prototype.put = function (key, object, config) {\n        var provider = (config === null || config === void 0 ? void 0 : config.provider) || DEFAULT_PROVIDER;\n        var prov = this._pluggables.find(function (pluggable) { return pluggable.getProviderName() === provider; });\n        if (prov === undefined) {\n            logger.debug('No plugin found with providerName', provider);\n            return Promise.reject('No plugin found in Storage for the provider');\n        }\n        var cancelTokenSource = this.getCancellableTokenSource();\n        var response = prov.put(key, object, __assign(__assign({}, config), { cancelTokenSource: cancelTokenSource }));\n        if (!this.isUploadTask(response)) {\n            this.updateRequestToBeCancellable(response, cancelTokenSource);\n        }\n        return response;\n    };\n    Storage.prototype.remove = function (key, config) {\n        var provider = (config === null || config === void 0 ? void 0 : config.provider) || DEFAULT_PROVIDER;\n        var prov = this._pluggables.find(function (pluggable) { return pluggable.getProviderName() === provider; });\n        if (prov === undefined) {\n            logger.debug('No plugin found with providerName', provider);\n            return Promise.reject('No plugin found in Storage for the provider');\n        }\n        return prov.remove(key, config);\n    };\n    Storage.prototype.list = function (path, config) {\n        var provider = (config === null || config === void 0 ? void 0 : config.provider) || DEFAULT_PROVIDER;\n        var prov = this._pluggables.find(function (pluggable) { return pluggable.getProviderName() === provider; });\n        if (prov === undefined) {\n            logger.debug('No plugin found with providerName', provider);\n            return Promise.reject('No plugin found in Storage for the provider');\n        }\n        return prov.list(path, config);\n    };\n    return Storage;\n}());\nexport { Storage };\n/**\n * @deprecated use named import\n */\nexport default Storage;\n//# sourceMappingURL=Storage.js.map"]},"metadata":{},"sourceType":"module"}