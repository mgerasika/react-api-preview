{"ast":null,"code":"import { slicedToArray as i } from \"../_virtual/_rollupPluginBabelHelpers.js\";\nimport { useState as n, useEffect as r } from \"react\";\nvar e = {\n  sm: 640,\n  md: 768,\n  lg: 1024,\n  xl: 1280,\n  xxl: 1690,\n  xxxl: 1920\n};\nfunction s() {\n  var s = n(window.innerWidth),\n    o = i(s, 2),\n    l = o[0],\n    t = o[1];\n  return r(function () {\n    var i = function i() {\n      return t(window.innerWidth);\n    };\n    return window.addEventListener(\"resize\", i), function () {\n      return window.removeEventListener(\"resize\", i);\n    };\n  }, [t]), {\n    isDownSM: l < e.sm,\n    isDownMD: l < e.md,\n    isDownLG: l < e.lg,\n    isDownXL: l < e.xl,\n    isDownXXL: l < e.xxl,\n    isDownXXXL: l < e.xxxl,\n    isUpSM: l >= e.sm,\n    isUpMD: l >= e.md,\n    isUpLG: l >= e.lg,\n    isUpXL: l >= e.xl,\n    isUpXXL: l >= e.xxl,\n    isUpXXXL: l >= e.xxxl\n  };\n}\nexport { e as SCREENS, s as useScreenMediaQuery };","map":{"version":3,"sources":["../../src/hooks/use-screen-media-query.hook.ts"],"names":["SCREENS","sm","md","lg","xl","xxl","xxxl","useScreenMediaQuery","width","_useState2","setWidth","useState","window","innerWidth","useEffect","handleWindowResize","addEventListener","removeEventListener","isDownSM","isDownMD","isDownLG","isDownXL","isDownXXL","isDownXXXL","isUpSM","isUpMD","isUpLG","isUpXL","isUpXXL","isUpXXXL"],"mappings":";;AAEO,IAAMA,CAAAA,GAAU;EACnBC,EAAAA,EAAI,GAAA;EACJC,EAAAA,EAAI,GAAA;EACJC,EAAAA,EAAI,IAAA;EACJC,EAAAA,EAAI,IAAA;EACJC,GAAAA,EAAK,IAAA;EACLC,IAAAA,EAAM;AAAA,CAAA;AAGH,SAASC,CAAAA,GAAAA;EAcZ,IAAA,CAAA,GAA0BI,CAAAA,CAASC,MAAAA,CAAOC,UAAAA,CAAAA;IAAWJ,CAAAA,GAAAA,CAAAA,CAAAA,CAAAA,EAAAA,CAAAA,CAAAA;IAA9CD,CAAAA,GAAKC,CAAAA,CAAAA,CAAAA,CAAAA;IAAEC,CAAAA,GAAQD,CAAAA,CAAAA,CAAAA,CAAAA;EAOtB,OANAK,CAAAA,CAAU,YAAA;IACN,IAAMC,CAAAA,GAAqB,SAArBA,CAAAA,GAAqB;MAAH,OAAeL,CAAAA,CAASE,MAAAA,CAAOC,UAAAA,CAAW;IAAA,CAAA;IAElE,OADAD,MAAAA,CAAOI,gBAAAA,CAAiB,QAAA,EAAUD,CAAAA,CAAAA,EAC3B,YAAA;MAAA,OAAYH,MAAAA,CAAOK,mBAAAA,CAAoB,QAAA,EAAUF,CAAAA,CAAmB;IAAA,CAC/E;EAAA,CAAA,EAAG,CAACL,CAAAA,CAAAA,CAAAA,EAEG;IACHQ,QAAAA,EAAUV,CAAAA,GAAQR,CAAAA,CAAQC,EAAAA;IAC1BkB,QAAAA,EAAUX,CAAAA,GAAQR,CAAAA,CAAQE,EAAAA;IAC1BkB,QAAAA,EAAUZ,CAAAA,GAAQR,CAAAA,CAAQG,EAAAA;IAC1BkB,QAAAA,EAAUb,CAAAA,GAAQR,CAAAA,CAAQI,EAAAA;IAC1BkB,SAAAA,EAAWd,CAAAA,GAAQR,CAAAA,CAAQK,GAAAA;IAC3BkB,UAAAA,EAAYf,CAAAA,GAAQR,CAAAA,CAAQM,IAAAA;IAE5BkB,MAAAA,EAAQhB,CAAAA,IAASR,CAAAA,CAAQC,EAAAA;IACzBwB,MAAAA,EAAQjB,CAAAA,IAASR,CAAAA,CAAQE,EAAAA;IACzBwB,MAAAA,EAAQlB,CAAAA,IAASR,CAAAA,CAAQG,EAAAA;IACzBwB,MAAAA,EAAQnB,CAAAA,IAASR,CAAAA,CAAQI,EAAAA;IACzBwB,OAAAA,EAASpB,CAAAA,IAASR,CAAAA,CAAQK,GAAAA;IAC1BwB,QAAAA,EAAUrB,CAAAA,IAASR,CAAAA,CAAQM;EAAAA,CAEnC;AAAA;AAAA,SAAA,CAAA,IAAA,OAAA,EAAA,CAAA,IAAA,mBAAA","sourcesContent":["import { useEffect, useState } from 'react';\n\nexport const SCREENS = {\n    sm: 640,\n    md: 768,\n    lg: 1024,\n    xl: 1280,\n    xxl: 1690,\n    xxxl: 1920,\n};\n\nexport function useScreenMediaQuery(): {\n    isDownSM: boolean;\n    isDownMD: boolean;\n    isDownLG: boolean;\n    isDownXL: boolean;\n    isDownXXL: boolean;\n    isDownXXXL: boolean;\n    isUpSM: boolean;\n    isUpMD: boolean;\n    isUpLG: boolean;\n    isUpXL: boolean;\n    isUpXXL: boolean;\n    isUpXXXL: boolean;\n} {\n    const [width, setWidth] = useState(window.innerWidth);\n    useEffect(() => {\n        const handleWindowResize = (): void => setWidth(window.innerWidth);\n        window.addEventListener('resize', handleWindowResize);\n        return (): void => window.removeEventListener('resize', handleWindowResize);\n    }, [setWidth]);\n\n    return {\n        isDownSM: width < SCREENS.sm,\n        isDownMD: width < SCREENS.md,\n        isDownLG: width < SCREENS.lg,\n        isDownXL: width < SCREENS.xl,\n        isDownXXL: width < SCREENS.xxl,\n        isDownXXXL: width < SCREENS.xxxl,\n\n        isUpSM: width >= SCREENS.sm,\n        isUpMD: width >= SCREENS.md,\n        isUpLG: width >= SCREENS.lg,\n        isUpXL: width >= SCREENS.xl,\n        isUpXXL: width >= SCREENS.xxl,\n        isUpXXXL: width >= SCREENS.xxxl,\n    };\n}\n"]},"metadata":{},"sourceType":"module"}