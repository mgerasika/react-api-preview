{"ast":null,"code":"\"use strict\";\n\n// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.convertToBuffer = void 0;\nvar util_utf8_browser_1 = require(\"@aws-sdk/util-utf8-browser\");\n// Quick polyfill\nvar fromUtf8 = typeof Buffer !== \"undefined\" && Buffer.from ? function (input) {\n  return Buffer.from(input, \"utf8\");\n} : util_utf8_browser_1.fromUtf8;\nfunction convertToBuffer(data) {\n  // Already a Uint8, do nothing\n  if (data instanceof Uint8Array) return data;\n  if (typeof data === \"string\") {\n    return fromUtf8(data);\n  }\n  if (ArrayBuffer.isView(data)) {\n    return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n  }\n  return new Uint8Array(data);\n}\nexports.convertToBuffer = convertToBuffer;","map":{"version":3,"sources":["../src/convertToBuffer.ts"],"names":[],"mappings":";;AAAA;AACA;;;;;AAGA,IAAA,mBAAA,GAAA,OAAA,CAAA,4BAAA,CAAA;AAEA;AACA,IAAM,QAAQ,GACZ,OAAO,MAAM,KAAK,WAAW,IAAI,MAAM,CAAC,IAAI,GACxC,UAAC,KAAa,EAAA;EAAK,OAAA,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC;AAA1B,CAA0B,GAC7C,mBAAA,CAAA,QAAe;AAErB,SAAgB,eAAe,CAAC,IAAgB,EAAA;EAC9C;EACA,IAAI,IAAI,YAAY,UAAU,EAAE,OAAO,IAAI;EAE3C,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;IAC5B,OAAO,QAAQ,CAAC,IAAI,CAAC;EACtB;EAED,IAAI,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;IAC5B,OAAO,IAAI,UAAU,CACnB,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,UAAU,EACf,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC,iBAAiB,CAC/C;EACF;EAED,OAAO,IAAI,UAAU,CAAC,IAAI,CAAC;AAC7B;AAjBA,OAAA,CAAA,eAAA,GAAA,eAAA","sourceRoot":"","sourcesContent":["\"use strict\";\n// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.convertToBuffer = void 0;\nvar util_utf8_browser_1 = require(\"@aws-sdk/util-utf8-browser\");\n// Quick polyfill\nvar fromUtf8 = typeof Buffer !== \"undefined\" && Buffer.from\n    ? function (input) { return Buffer.from(input, \"utf8\"); }\n    : util_utf8_browser_1.fromUtf8;\nfunction convertToBuffer(data) {\n    // Already a Uint8, do nothing\n    if (data instanceof Uint8Array)\n        return data;\n    if (typeof data === \"string\") {\n        return fromUtf8(data);\n    }\n    if (ArrayBuffer.isView(data)) {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n    }\n    return new Uint8Array(data);\n}\nexports.convertToBuffer = convertToBuffer;\n//# sourceMappingURL=convertToBuffer.js.map"]},"metadata":{},"sourceType":"script"}