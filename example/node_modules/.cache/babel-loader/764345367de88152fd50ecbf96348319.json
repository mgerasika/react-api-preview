{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function sent() {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n          case 7:\n            op = _.ops.pop();\n            _.trys.pop();\n            continue;\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n              _.ops.push(op);\n              break;\n            }\n            if (t[2]) _.ops.pop();\n            _.trys.pop();\n            continue;\n        }\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nimport Observable from 'zen-observable-ts';\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nimport { ReachabilityMonitor } from './datastoreReachability';\nvar logger = new Logger('DataStore');\nvar RECONNECTING_IN = 5000; // 5s this may be configurable in the future\nvar DataStoreConnectivity = /** @class */function () {\n  function DataStoreConnectivity() {\n    this.connectionStatus = {\n      online: false\n    };\n  }\n  DataStoreConnectivity.prototype.status = function () {\n    var _this = this;\n    if (this.observer) {\n      throw new Error('Subscriber already exists');\n    }\n    return new Observable(function (observer) {\n      _this.observer = observer;\n      // Will be used to forward socket connection changes, enhancing Reachability\n      _this.subscription = ReachabilityMonitor.subscribe(function (_a) {\n        var online = _a.online;\n        _this.connectionStatus.online = online;\n        var observerResult = __assign({}, _this.connectionStatus); // copyOf status\n        observer.next(observerResult);\n      });\n      return function () {\n        clearTimeout(_this.timeout);\n        _this.unsubscribe();\n      };\n    });\n  };\n  DataStoreConnectivity.prototype.unsubscribe = function () {\n    if (this.subscription) {\n      clearTimeout(this.timeout);\n      this.subscription.unsubscribe();\n    }\n  };\n  // for consistency with other background processors.\n  DataStoreConnectivity.prototype.stop = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        this.unsubscribe();\n        return [2 /*return*/];\n      });\n    });\n  };\n\n  DataStoreConnectivity.prototype.socketDisconnected = function () {\n    var _this = this;\n    if (this.observer && typeof this.observer.next === 'function') {\n      this.observer.next({\n        online: false\n      }); // Notify network issue from the socket\n      this.timeout = setTimeout(function () {\n        var observerResult = __assign({}, _this.connectionStatus); // copyOf status\n        _this.observer.next(observerResult);\n      }, RECONNECTING_IN); // giving time for socket cleanup and network status stabilization\n    }\n  };\n\n  return DataStoreConnectivity;\n}();\nexport default DataStoreConnectivity;","map":{"version":3,"sources":["../../src/sync/datastoreConnectivity.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,UAA6B,MAAM,mBAAmB;AAC7D,SAAS,aAAa,IAAI,MAAM,QAAQ,mBAAmB;AAC3D,SAAS,mBAAmB,QAAQ,yBAAyB;AAE7D,IAAM,MAAM,GAAG,IAAI,MAAM,CAAC,WAAW,CAAC;AAEtC,IAAM,eAAe,GAAG,IAAI,CAAC,CAAC;AAO9B,IAAA,qBAAA,GAAA,aAAA,YAAA;EAKC,SAAA,qBAAA,GAAA;IACC,IAAI,CAAC,gBAAgB,GAAG;MACvB,MAAM,EAAE;KACR;EACF;EAEA,qBAAA,CAAA,SAAA,CAAA,MAAM,GAAN,YAAA;IAAA,IAAA,KAAA,GAAA,IAAA;IACC,IAAI,IAAI,CAAC,QAAQ,EAAE;MAClB,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC;IAC5C;IACD,OAAO,IAAI,UAAU,CAAC,UAAA,QAAQ,EAAA;MAC7B,KAAI,CAAC,QAAQ,GAAG,QAAQ;MACxB;MAEA,KAAI,CAAC,YAAY,GAAG,mBAAmB,CAAC,SAAS,CAAC,UAAC,EAAU,EAAA;YAAR,MAAA,GAAA,EAAA,CAAA,MAAM;QAC1D,KAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,MAAM;QAErC,IAAM,cAAc,GAAA,QAAA,CAAA,CAAA,CAAA,EAAQ,KAAI,CAAC,gBAAgB,CAAE,CAAC,CAAC;QAErD,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC;MAC9B,CAAC,CAAC;MAEF,OAAO,YAAA;QACN,YAAY,CAAC,KAAI,CAAC,OAAO,CAAC;QAC1B,KAAI,CAAC,WAAW,EAAE;MACnB,CAAC;IACF,CAAC,CAAC;EACH,CAAC;EAED,qBAAA,CAAA,SAAA,CAAA,WAAW,GAAX,YAAA;IACC,IAAI,IAAI,CAAC,YAAY,EAAE;MACtB,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC;MAC1B,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE;IAC/B;EACF,CAAC;EAED;EACM,qBAAA,CAAA,SAAA,CAAA,IAAI,GAAV,YAAA;;;QACC,IAAI,CAAC,WAAW,EAAE;QAClB,OAAA,CAAA,CAAA,CAAA,WAAA;;;GACA;;EAED,qBAAA,CAAA,SAAA,CAAA,kBAAkB,GAAlB,YAAA;IAAA,IAAA,KAAA,GAAA,IAAA;IACC,IAAI,IAAI,CAAC,QAAQ,IAAI,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,KAAK,UAAU,EAAE;MAC9D,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;QAAE,MAAM,EAAE;MAAK,CAAE,CAAC,CAAC,CAAC;MAEvC,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC,YAAA;QACzB,IAAM,cAAc,GAAA,QAAA,CAAA,CAAA,CAAA,EAAQ,KAAI,CAAC,gBAAgB,CAAE,CAAC,CAAC;QACrD,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC;MACnC,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC;IACrB;EACF,CAAC;;EACF,OAAA,qBAAC;AAAD,CAAC,EAAA","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport Observable from 'zen-observable-ts';\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nimport { ReachabilityMonitor } from './datastoreReachability';\nvar logger = new Logger('DataStore');\nvar RECONNECTING_IN = 5000; // 5s this may be configurable in the future\nvar DataStoreConnectivity = /** @class */ (function () {\n    function DataStoreConnectivity() {\n        this.connectionStatus = {\n            online: false,\n        };\n    }\n    DataStoreConnectivity.prototype.status = function () {\n        var _this = this;\n        if (this.observer) {\n            throw new Error('Subscriber already exists');\n        }\n        return new Observable(function (observer) {\n            _this.observer = observer;\n            // Will be used to forward socket connection changes, enhancing Reachability\n            _this.subscription = ReachabilityMonitor.subscribe(function (_a) {\n                var online = _a.online;\n                _this.connectionStatus.online = online;\n                var observerResult = __assign({}, _this.connectionStatus); // copyOf status\n                observer.next(observerResult);\n            });\n            return function () {\n                clearTimeout(_this.timeout);\n                _this.unsubscribe();\n            };\n        });\n    };\n    DataStoreConnectivity.prototype.unsubscribe = function () {\n        if (this.subscription) {\n            clearTimeout(this.timeout);\n            this.subscription.unsubscribe();\n        }\n    };\n    // for consistency with other background processors.\n    DataStoreConnectivity.prototype.stop = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                this.unsubscribe();\n                return [2 /*return*/];\n            });\n        });\n    };\n    DataStoreConnectivity.prototype.socketDisconnected = function () {\n        var _this = this;\n        if (this.observer && typeof this.observer.next === 'function') {\n            this.observer.next({ online: false }); // Notify network issue from the socket\n            this.timeout = setTimeout(function () {\n                var observerResult = __assign({}, _this.connectionStatus); // copyOf status\n                _this.observer.next(observerResult);\n            }, RECONNECTING_IN); // giving time for socket cleanup and network status stabilization\n        }\n    };\n    return DataStoreConnectivity;\n}());\nexport default DataStoreConnectivity;\n//# sourceMappingURL=datastoreConnectivity.js.map"]},"metadata":{},"sourceType":"module"}