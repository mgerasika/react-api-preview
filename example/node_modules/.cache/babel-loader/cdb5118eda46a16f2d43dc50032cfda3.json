{"ast":null,"code":"import { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport { useField } from '../../hooks/use-field.hook.js';\nimport { useCallback } from 'react';\nimport { RangePicker } from './range-picker.component.js';\nimport { jsx } from '@emotion/react';\nfunction FormRangePicker(props) {\n  const {\n    onChange,\n    onBlur,\n    getCustomErrorMessage\n  } = props;\n  const {\n    setFieldValue,\n    setFieldTouched,\n    value,\n    errorMessage,\n    triggerValidate\n  } = useField({\n    ...props,\n    getCustomErrorMessage\n  });\n  const handleChange = useCallback(e => {\n    onChange && onChange(e);\n    setFieldValue({\n      valueFrom: e.valueFrom,\n      valueTo: e.valueTo\n    });\n    triggerValidate();\n  }, [setFieldValue, onChange, triggerValidate]);\n  const handleBlur = useCallback(e => {\n    onBlur && onBlur(e);\n    setFieldTouched();\n  }, [onBlur, setFieldTouched]);\n  return jsx(RangePicker, _extends({\n    errorMessage: errorMessage\n  }, props, {\n    onChange: handleChange,\n    onBlur: handleBlur,\n    name: props.name,\n    value: value\n  }));\n}\nexport { FormRangePicker };","map":{"version":3,"sources":["../../../../src/general-ui/range-picker/form-range-picker.component.tsx"],"names":["FormRangePicker","props","onChange","onBlur","getCustomErrorMessage","setFieldValue","setFieldTouched","value","errorMessage","triggerValidate","useField","handleChange","useCallback","e","valueFrom","valueTo","handleBlur","___EmotionJSX","name"],"mappings":";;;;;AAKO,SAASA,eAAe,CAC3BC,KAA2E,EAChE;EACX,MAAM;IAAEC,QAAQ;IAAEC,MAAM;IAAEC;EAAsB,CAAC,GAAGH,KAAK;EACzD,MAAM;IAAEI,aAAa;IAAEC,eAAe;IAAEC,KAAK;IAAEC,YAAY;IAAEC;GAAiB,GAAGC,QAAQ,CAAa;IAClG,GAAGT,KAAK;IACRG;EACJ,CAAC,CAAC;EAEF,MAAMO,YAAY,GAAGC,WAAW,CAC3BC,CAAC,IAAK;IACHX,QAAQ,IAAIA,QAAQ,CAACW,CAAC,CAAC;IACvBR,aAAa,CAAC;MAAES,SAAS,EAAED,CAAC,CAACC,SAAS;MAAEC,OAAO,EAAEF,CAAC,CAACE;IAAQ,CAAC,CAAC;IAE7DN,eAAe,EAAE;GACpB,EACD,CAACJ,aAAa,EAAEH,QAAQ,EAAEO,eAAe,CAAC,CAC7C;EAED,MAAMO,UAAU,GAAGJ,WAAW,CACzBC,CAAqC,IAAK;IACvCV,MAAM,IAAIA,MAAM,CAACU,CAAC,CAAC;IACnBP,eAAe,EAAE;EACrB,CAAC,EACD,CAACH,MAAM,EAAEG,eAAe,CAAC,CAC5B;EAED,OACIW,GAAAA,CAAC,WAAW,EAAA,QAAA,CAAA;IACR,YAAY,EAAET;EAAa,CAAA,EACvBP,KAAK,EAAA;IACT,QAAQ,EAAEU,YAAa;IACvB,MAAM,EAAEK,UAAW;IACnB,IAAI,EAAEf,KAAK,CAACiB,IAAe;IAC3B,KAAK,EAAEX;GACT,CAAA,CAAA;AAEV","sourcesContent":["import { useField } from '@common/hooks/use-field.hook';\nimport { IDateRange } from '@common/interfaces/date-range.interface';\nimport React, { useCallback } from 'react';\nimport { IRangePickerChangeHandler, IRangePickerProps, RangePicker } from './range-picker.component';\n\nexport function FormRangePicker<TFormValues>(\n    props: Omit<IRangePickerProps<keyof TFormValues>, 'value' | 'defaultValue'>,\n): JSX.Element {\n    const { onChange, onBlur, getCustomErrorMessage } = props;\n    const { setFieldValue, setFieldTouched, value, errorMessage, triggerValidate } = useField<IDateRange>({\n        ...props,\n        getCustomErrorMessage,\n    });\n\n    const handleChange = useCallback<IRangePickerChangeHandler>(\n        (e) => {\n            onChange && onChange(e);\n            setFieldValue({ valueFrom: e.valueFrom, valueTo: e.valueTo });\n\n            triggerValidate();\n        },\n        [setFieldValue, onChange, triggerValidate],\n    );\n\n    const handleBlur = useCallback(\n        (e: React.FocusEvent<HTMLInputElement>) => {\n            onBlur && onBlur(e);\n            setFieldTouched();\n        },\n        [onBlur, setFieldTouched],\n    );\n\n    return (\n        <RangePicker\n            errorMessage={errorMessage}\n            {...props}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            name={props.name as string}\n            value={value}\n        />\n    );\n}\n"]},"metadata":{},"sourceType":"module"}