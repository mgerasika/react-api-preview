{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction _regeneratorRuntime() {\n  \"use strict\";\n\n  /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  };\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    defineProperty = Object.defineProperty || function (obj, key, desc) {\n      obj[key] = desc.value;\n    },\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", {\n      value: makeInvokeMethod(innerFn, self, context)\n    }), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", {\n      value: function value(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function (method, arg) {\n      if (\"executing\" === state) throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method) throw arg;\n        return doneResult();\n      }\n      for (context.method = method, context.arg = arg;;) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (undefined === method) {\n      if (context.delegate = null, \"throw\" === context.method) {\n        if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel;\n        context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n      return ContinueSentinel;\n    }\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) {\n              if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            }\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (val) {\n    var object = Object(val),\n      keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) {\n        \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n      }\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    catch: function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _s, _e;\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n  return _arr;\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nimport { StatusTag } from '../tag/status-tag.component.js';\nimport { t } from '../../hooks/use-t.hook.js';\nimport { consoleService } from '../../services/console.service.js';\nimport { useStripe, PaymentRequestButtonElement } from '@stripe/react-stripe-js';\nimport React, { useState, useEffect, useMemo } from 'react';\nvar PaymentButton = function PaymentButton(_ref) {\n  var onTokenInit = _ref.onTokenInit,\n    clientSecret = _ref.clientSecret;\n  var stripe = useStripe();\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    paymentRequest = _useState2[0],\n    setPaymentRequest = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    message = _useState4[0],\n    setMessage = _useState4[1];\n  useEffect(function () {\n    if (stripe) {\n      var pr = stripe.paymentRequest({\n        country: 'GB',\n        currency: 'gbp',\n        total: {\n          label: 'Subscribe',\n          amount: 0\n        },\n        requestPayerName: true,\n        requestPayerEmail: true,\n        requestPayerPhone: true,\n        requestShipping: false\n      });\n\n      // Full example https://github.com/stripe-samples/accept-a-payment/blob/main/custom-payment-flow/client/react-cra/src/GooglePay.js\n      // Check the availability of the Payment Request API.\n      pr.canMakePayment().then(function (result) {\n        if (result) {\n          setPaymentRequest(pr);\n        } else {\n          setMessage(t('Google Pay / Apple Pay not detected, please check your device settings or choose Credit / Debit card'));\n        }\n      }).catch(function (e) {\n        return consoleService.log('error =', e);\n      });\n    }\n  }, [onTokenInit, stripe]);\n  useEffect(function () {\n    if (paymentRequest && stripe) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      paymentRequest === null || paymentRequest === void 0 ? void 0 : paymentRequest.on('paymentmethod', /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(ev) {\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  stripe === null || stripe === void 0 ? void 0 : stripe.confirmCardSetup(clientSecret, {\n                    payment_method: ev.paymentMethod.id\n                  }).then(function (setupIndent) {\n                    if (!setupIndent.error) {\n                      onTokenInit && onTokenInit(setupIndent);\n                      setMessage(t('Card successfully initialized'));\n                      consoleService.log('confirmCardSetup success', setupIndent);\n                      ev.complete('success');\n                    } else {\n                      consoleService.log('confirmCardSetup error', setupIndent);\n                      ev.complete('fail');\n                    }\n                  }).catch(function (e) {\n                    consoleService.log('confirmCardSetup error', e);\n                    ev.complete('fail');\n                  });\n                case 1:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n        return function (_x) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n    }\n  }, [clientSecret, onTokenInit, paymentRequest, stripe]);\n  var handleReady = function handleReady(e) {\n    consoleService.log('handleReady', e);\n  };\n  var options = useMemo(function () {\n    return {\n      paymentRequest: paymentRequest,\n      style: {\n        paymentRequestButton: {\n          // theme: 'dark',\n          height: '42px',\n          type: 'default'\n        }\n      }\n    };\n  }, [paymentRequest]);\n  if (options && paymentRequest) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PaymentRequestButtonElement, {\n      options: options,\n      onReady: handleReady\n    }), message && /*#__PURE__*/React.createElement(StatusTag, {\n      tw: \"mt-1\",\n      status: \"success\"\n    }, message));\n  } else {\n    if (message) {\n      return /*#__PURE__*/React.createElement(StatusTag, {\n        status: \"info\"\n      }, message);\n    }\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null);\n};\nexport { PaymentButton };","map":{"version":3,"sources":["../../../../src/general-ui/stripe/payment-button.component.tsx"],"names":["PaymentButton","onTokenInit","clientSecret","stripe","useStripe","paymentRequest","setPaymentRequest","useState","message","setMessage","useEffect","pr","country","currency","total","label","amount","requestPayerName","requestPayerEmail","requestPayerPhone","requestShipping","canMakePayment","then","result","t","catch","e","consoleService","log","on","ev","confirmCardSetup","payment_method","paymentMethod","id","setupIndent","error","complete","handleReady","options","useMemo","style","paymentRequestButton","height","type","React","PaymentRequestButtonElement","onReady","StatusTag","tw","status"],"mappings":"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","sourcesContent":["import { StatusTag } from '@common/general-ui/tag/status-tag.component';\nimport { t } from '@common/hooks/use-t.hook';\nimport { consoleService } from '@common/services/console.service';\nimport { PaymentRequestButtonElement, useStripe } from '@stripe/react-stripe-js';\nimport { SetupIntentResult, StripePaymentRequestButtonElementOptions } from '@stripe/stripe-js';\nimport React, { useEffect, useMemo, useState } from 'react';\n\ninterface IProps {\n    onTokenInit?: (token: SetupIntentResult) => void;\n    clientSecret: string;\n}\nexport const PaymentButton = ({ onTokenInit, clientSecret }: IProps): JSX.Element => {\n    const stripe = useStripe();\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const [paymentRequest, setPaymentRequest] = useState<any>(null);\n    const [message, setMessage] = useState('');\n\n    useEffect(() => {\n        if (stripe) {\n            const pr = stripe.paymentRequest({\n                country: 'GB',\n                currency: 'gbp',\n                total: {\n                    label: 'Subscribe',\n                    amount: 0,\n                },\n                requestPayerName: true,\n                requestPayerEmail: true,\n                requestPayerPhone: true,\n                requestShipping: false,\n            });\n\n            // Full example https://github.com/stripe-samples/accept-a-payment/blob/main/custom-payment-flow/client/react-cra/src/GooglePay.js\n            // Check the availability of the Payment Request API.\n            pr.canMakePayment()\n                .then((result) => {\n                    if (result) {\n                        setPaymentRequest(pr);\n                    } else {\n                        setMessage(\n                            t(\n                                'Google Pay / Apple Pay not detected, please check your device settings or choose Credit / Debit card',\n                            ),\n                        );\n                    }\n                })\n                .catch((e) => consoleService.log('error =', e));\n        }\n    }, [onTokenInit, stripe]);\n\n    useEffect(() => {\n        if (paymentRequest && stripe) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            paymentRequest?.on('paymentmethod', async (ev: any) => {\n                stripe\n                    ?.confirmCardSetup(clientSecret, {\n                        payment_method: ev.paymentMethod.id,\n                    })\n                    .then((setupIndent) => {\n                        if (!setupIndent.error) {\n                            onTokenInit && onTokenInit(setupIndent);\n                            setMessage(t('Card successfully initialized'));\n                            consoleService.log('confirmCardSetup success', setupIndent);\n                            ev.complete('success');\n                        } else {\n                            consoleService.log('confirmCardSetup error', setupIndent);\n                            ev.complete('fail');\n                        }\n                    })\n                    .catch((e) => {\n                        consoleService.log('confirmCardSetup error', e);\n                        ev.complete('fail');\n                    });\n            });\n        }\n    }, [clientSecret, onTokenInit, paymentRequest, stripe]);\n\n    const handleReady = (e: unknown): void => {\n        consoleService.log('handleReady', e);\n    };\n    const options = useMemo(\n        () =>\n            ({\n                paymentRequest,\n                style: {\n                    paymentRequestButton: {\n                        // theme: 'dark',\n                        height: '42px',\n                        type: 'default',\n                    },\n                },\n            } as unknown as StripePaymentRequestButtonElementOptions),\n        [paymentRequest],\n    );\n\n    if (options && paymentRequest) {\n        return (\n            <>\n                <PaymentRequestButtonElement options={options} onReady={handleReady} />\n\n                {message && (\n                    <StatusTag tw=\"mt-1\" status=\"success\">\n                        {message}\n                    </StatusTag>\n                )}\n            </>\n        );\n    } else {\n        if (message) {\n            return <StatusTag status=\"info\">{message}</StatusTag>;\n        }\n    }\n\n    return <></>;\n};\n"]},"metadata":{},"sourceType":"module"}