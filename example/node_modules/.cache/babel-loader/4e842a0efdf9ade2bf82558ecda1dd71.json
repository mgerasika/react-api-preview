{"ast":null,"code":"import { objectWithoutProperties as t, extends as r } from \"../_virtual/_rollupPluginBabelHelpers.js\";\nimport { getCurrentLocaleTranslationPrefix as e, getTranslationPrefix as i } from \"../utils/get-translation-prefix.util.js\";\nimport o from \"i18next\";\nimport n from \"react\";\nimport { Trans as a } from \"react-i18next\";\nimport { jsx as c } from \"@emotion/react\";\nvar m = [\"children\", \"i18nKey\"];\nfunction l(t, r, n) {\n  var a = o.exists(t) ? e() : \"\";\n  return \"\".concat(i()).concat(a).concat(o.t(t, n) || t);\n}\nfunction s(l) {\n  var s = l.children,\n    p = l.i18nKey,\n    u = t(l, m),\n    f = p && o.exists(p) ? e() : \"\";\n  return c(n.Fragment, null, i(), f, c(a, r({\n    i18nKey: p\n  }, u), s));\n}\nexport { s as T, l as t };","map":{"version":3,"sources":["../../src/hooks/use-t.hook.tsx"],"names":["t","i18nKey","_description","options","localePrefix","i18n","exists","getCurrentLocaleTranslationPrefix","getTranslationPrefix","T","children","rest","_objectWithoutProperties","_ref","___EmotionJSX","Trans","_extends"],"mappings":";;;;;;;AAsBO,SAASA,CAAAA,CAAEC,CAAAA,EAAiBC,CAAAA,EAAqCC,CAAAA,EAAAA;EACpE,IAAMC,CAAAA,GAAeC,CAAAA,CAAKC,MAAAA,CAAOL,CAAAA,CAAAA,GAAWM,CAAAA,EAAAA,GAAsC,EAAA;EAClF,OAAA,EAAA,CAAA,MAAA,CAAUC,CAAAA,EAAAA,CAAAA,CAAyBJ,MAAAA,CAAAA,CAAAA,CAAAA,CAAAA,MAAAA,CAAeC,CAAAA,CAAKL,CAAAA,CAAEC,CAAAA,EAASE,CAAAA,CAAAA,IAAYF,CAAAA,CAClF;AAAA;AAQO,SAASQ,CAAAA,CAA6DI,CAAAA,EAAAA;EAAAA,IAAzDH,CAAAA,GAAAA,CAAAA,CAAAA,QAAAA;IAAUT,CAAAA,GAAAA,CAAAA,CAAAA,OAAAA;IAAYU,CAAAA,GAAIC,CAAAA,CAAAA,CAAAA,EAAAA,CAAAA,CAAAA;IACpCR,CAAAA,GAAeH,CAAAA,IAAWI,CAAAA,CAAKC,MAAAA,CAAOL,CAAAA,CAAAA,GAAWM,CAAAA,EAAAA,GAAsC,EAAA;EAC7F,OACIO,CAAAA,CAAAA,CAAAA,CAAAA,QAAAA,EAAAA,IAAAA,EACKN,CAAAA,EAAAA,EACAJ,CAAAA,EACDU,CAAAA,CAACC,CAAAA,EAAKC,CAAAA,CAAAA;IAACf,OAAAA,EAASA;EAAAA,CAAAA,EAAaU,CAAAA,CAAAA,EACxBD,CAAAA,CAAAA,CAIjB;AAAA;AAAA,SAAA,CAAA,IAAA,CAAA,EAAA,CAAA,IAAA,CAAA","sourcesContent":["import { getCurrentLocaleTranslationPrefix, getTranslationPrefix } from '@common/utils/get-translation-prefix.util';\nimport i18n, { TOptions } from 'i18next';\nimport React, { ReactNode } from 'react';\nimport { Trans } from 'react-i18next';\n\n// interface IReturn {\n//     t: (i18nKey: string, description?: TTranslationCategory, options?: any) => any;\n// }\n\ntype TTranslationCategory = string;\n// export const useT = (): IReturn => {\n//     const { t } = useTranslation();\n//     return {\n//         t: (translation, _description, options): string => {\n//             const localePrefix = i18n.exists(translation) ? getCurrentLocaleTranslationPrefix() : '';\n//             return `${getTranslationPrefix()}${localePrefix}${t(translation, options)}`;\n//         },\n//     };\n// };\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function t(i18nKey: string, _description?: TTranslationCategory, options?: string | TOptions | any): string {\n    const localePrefix = i18n.exists(i18nKey) ? getCurrentLocaleTranslationPrefix() : '';\n    return `${getTranslationPrefix()}${localePrefix}${i18n.t(i18nKey, options) || i18nKey}`;\n}\n\ninterface IProps {\n    i18nKey?: string;\n    children: JSX.Element | JSX.Element[] | ReactNode;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function T({ children, i18nKey, ...rest }: IProps & any): JSX.Element {\n    const localePrefix = i18nKey && i18n.exists(i18nKey) ? getCurrentLocaleTranslationPrefix() : '';\n    return (\n        <>\n            {getTranslationPrefix()}\n            {localePrefix}\n            <Trans i18nKey={i18nKey} {...rest}>\n                {children}\n            </Trans>\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}