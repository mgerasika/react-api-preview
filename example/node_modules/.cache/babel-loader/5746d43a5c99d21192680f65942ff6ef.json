{"ast":null,"code":"import { Link } from '@common/general-ui/link/link.component';\nimport { t } from '@common/hooks/use-t.hook';\nimport React, { useCallback } from 'react';\nimport { jsx } from '@emotion/react';\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() {\n  return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";\n}\nvar _ref = process.env.NODE_ENV === \"production\" ? {\n  name: \"1nvpuag\",\n  styles: \"text-align:right;padding:0.5rem\"\n} : {\n  name: \"7wkrs5-Pagination\",\n  styles: \"text-align:right;padding:0.5rem;label:Pagination;\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\nvar _ref2 = process.env.NODE_ENV === \"production\" ? {\n  name: \"e0dnmk\",\n  styles: \"cursor:pointer\"\n} : {\n  name: \"10wsok6-Pagination\",\n  styles: \"cursor:pointer;label:Pagination;\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\nfunction Pagination(_ref3) {\n  let {\n    dataSource: dataSource,\n    onFetchMore\n  } = _ref3;\n  const handleCbPaginationChange = useCallback(() => {\n    onFetchMore && onFetchMore({\n      next_page: dataSource.next_page\n    });\n  }, [onFetchMore, dataSource]);\n  if (!dataSource?.next_page) {\n    return jsx(React.Fragment, null);\n  }\n  return jsx(\"div\", {\n    css: _ref\n  }, jsx(Link, {\n    name: \"next\",\n    onClick: handleCbPaginationChange,\n    css: _ref2\n  }, t('Load more')));\n}\nexport { Pagination };","map":{"version":3,"sources":["../../../../src/general-ui/pagination/pagination.component.tsx"],"names":["Pagination","dataSource","onFetchMore","handleCbPaginationChange","useCallback","next_page","___EmotionJSX","t"],"mappings":";;;;;;;AAI2C,IAAA,IAAA,GAAA,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,YAAA,GAAA;EAAA,IAAA,EAAA,SAAA;EAAA,MAAA,EAAA;AAAA,CAAA,GAAA;EAAA,IAAA,EAAA,mBAAA;EAAA,MAAA,EAAA,mDAAA;EAAA,QAAA,EAAA;AAAA,CAAA;AAAA,IAAA,KAAA,GAAA,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,YAAA,GAAA;EAAA,IAAA,EAAA,QAAA;EAAA,MAAA,EAAA;AAAA,CAAA,GAAA;EAAA,IAAA,EAAA,oBAAA;EAAA,MAAA,EAAA,kCAAA;EAAA,QAAA,EAAA;AAAA,CAAA;AASpC,SAASA,UAAU,QAA+D;EAAA,IAA9D;IAAEC,UAAU,EAAEA,UAAU;IAAEC;EAAoB,CAAC;EACtE,MAAMC,wBAAwB,GAAGC,WAAW,CAAC,MAAM;IAC/CF,WAAW,IACPA,WAAW,CAAC;MACRG,SAAS,EAAEJ,UAAU,CAACI;IAC1B,CAAC,CAAC;EACV,CAAC,EAAE,CAACH,WAAW,EAAED,UAAU,CAAC,CAAC;EAE7B,IAAI,CAACA,UAAU,EAAEI,SAAS,EAAE;IACxB,OAAOC,GAAK,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,CAAA;EAChB;EACA,OACI,GAAA,CAAA,KAAA,EAAA;IAAA,GAAA,EAAA;EAAA,CAAA,EACIA,GAAAA,CAAC,IAAI,EAAA;IAAC,IAAI,EAAC,MAAM;IAAC,OAAO,EAAEH,wBAAyB;IAAA,GAAA,EAAA;EAAA,CAAA,EAC/CI,CAAC,CAAC,WAAW,CAAC,CACZ,CACL;AAEd","sourcesContent":["import { Link } from '@common/general-ui/link/link.component';\nimport { t } from '@common/hooks/use-t.hook';\nimport { IFetchMoreRequestOptions } from '@common/interfaces/collection-request-options.interface';\nimport { ICollection } from '@common/interfaces/collection.interface';\nimport React, { useCallback } from 'react';\nimport 'twin.macro';\n\ninterface IProps {\n    dataSource: ICollection<unknown>;\n    className?: string;\n    onFetchMore?: (pagination: IFetchMoreRequestOptions) => void;\n}\n\nexport function Pagination({ dataSource: dataSource, onFetchMore }: IProps): JSX.Element {\n    const handleCbPaginationChange = useCallback(() => {\n        onFetchMore &&\n            onFetchMore({\n                next_page: dataSource.next_page,\n            });\n    }, [onFetchMore, dataSource]);\n\n    if (!dataSource?.next_page) {\n        return <></>;\n    }\n    return (\n        <div tw=\"text-right p-2\">\n            <Link name=\"next\" onClick={handleCbPaginationChange} tw=\"cursor-pointer\">\n                {t('Load more')}\n            </Link>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}