{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = validateNode;\nvar _validate = require(\"../validators/validate\");\nvar _ = require(\"..\");\nfunction validateNode(node) {\n  const keys = _.BUILDER_KEYS[node.type];\n  for (const key of keys) {\n    (0, _validate.default)(node, key, node[key]);\n  }\n  return node;\n}","map":{"version":3,"sources":["../../src/builders/validateNode.ts"],"names":["validateNode","node","keys","BUILDER_KEYS","type","key"],"mappings":";;;;;;AAAA,IAAA,SAAA,GAAA,OAAA,CAAA,wBAAA,CAAA;AAEA,IAAA,CAAA,GAAA,OAAA,CAAA,IAAA,CAAA;AAEe,SAASA,YAAT,CAAwCC,IAAxC,EAAiD;EAE9D,MAAMC,IAAI,GAAGC,CAAAA,CAAAA,YAAAA,CAAaF,IAAI,CAACG,IAAlBD,CAAb;EACA,KAAK,MAAME,GAAX,IAAkBH,IAAlB,EAAwB;IACtB,CAAA,CAAA,EAAA,SAAA,CAAA,OAAA,EAASD,IAAT,EAAeI,GAAf,EAAoBJ,IAAI,CAACI,GAAD,CAAxB,CAAA;EACD;EACD,OAAOJ,IAAP;AACD","sourcesContent":["import validate from \"../validators/validate\";\nimport type * as t from \"..\";\nimport { BUILDER_KEYS } from \"..\";\n\nexport default function validateNode<N extends t.Node>(node: N) {\n  // todo: because keys not in BUILDER_KEYS are not validated - this actually allows invalid nodes in some cases\n  const keys = BUILDER_KEYS[node.type] as (keyof N & string)[];\n  for (const key of keys) {\n    validate(node, key, node[key]);\n  }\n  return node;\n}\n"]},"metadata":{},"sourceType":"script"}