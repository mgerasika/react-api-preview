{"ast":null,"code":"import { __assign, __awaiter, __generator } from \"tslib\";\nimport { HttpRequest as __HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { extendedEncodeURIComponent as __extendedEncodeURIComponent } from \"@aws-sdk/smithy-client\";\nexport var serializeAws_restJson1DeleteLexiconCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/lexicons/{Name}\";\n          if (input.Name !== undefined) {\n            labelValue = input.Name;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Name.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Name}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Name.\");\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DescribeVoicesCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/voices\";\n          query = __assign(__assign(__assign(__assign({}, input.Engine !== undefined && {\n            Engine: input.Engine\n          }), input.LanguageCode !== undefined && {\n            LanguageCode: input.LanguageCode\n          }), input.IncludeAdditionalLanguageCodes !== undefined && {\n            IncludeAdditionalLanguageCodes: input.IncludeAdditionalLanguageCodes.toString()\n          }), input.NextToken !== undefined && {\n            NextToken: input.NextToken\n          });\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetLexiconCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/lexicons/{Name}\";\n          if (input.Name !== undefined) {\n            labelValue = input.Name;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Name.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Name}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Name.\");\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetSpeechSynthesisTaskCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/synthesisTasks/{TaskId}\";\n          if (input.TaskId !== undefined) {\n            labelValue = input.TaskId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TaskId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{TaskId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TaskId.\");\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1ListLexiconsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/lexicons\";\n          query = __assign({}, input.NextToken !== undefined && {\n            NextToken: input.NextToken\n          });\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1ListSpeechSynthesisTasksCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/synthesisTasks\";\n          query = __assign(__assign(__assign({}, input.MaxResults !== undefined && {\n            MaxResults: input.MaxResults.toString()\n          }), input.NextToken !== undefined && {\n            NextToken: input.NextToken\n          }), input.Status !== undefined && {\n            Status: input.Status\n          });\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1PutLexiconCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/lexicons/{Name}\";\n          if (input.Name !== undefined) {\n            labelValue = input.Name;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Name.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Name}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Name.\");\n          }\n          body = JSON.stringify(__assign({}, input.Content !== undefined && input.Content !== null && {\n            Content: input.Content\n          }));\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1StartSpeechSynthesisTaskCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/synthesisTasks\";\n          body = JSON.stringify(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.Engine !== undefined && input.Engine !== null && {\n            Engine: input.Engine\n          }), input.LanguageCode !== undefined && input.LanguageCode !== null && {\n            LanguageCode: input.LanguageCode\n          }), input.LexiconNames !== undefined && input.LexiconNames !== null && {\n            LexiconNames: serializeAws_restJson1LexiconNameList(input.LexiconNames, context)\n          }), input.OutputFormat !== undefined && input.OutputFormat !== null && {\n            OutputFormat: input.OutputFormat\n          }), input.OutputS3BucketName !== undefined && input.OutputS3BucketName !== null && {\n            OutputS3BucketName: input.OutputS3BucketName\n          }), input.OutputS3KeyPrefix !== undefined && input.OutputS3KeyPrefix !== null && {\n            OutputS3KeyPrefix: input.OutputS3KeyPrefix\n          }), input.SampleRate !== undefined && input.SampleRate !== null && {\n            SampleRate: input.SampleRate\n          }), input.SnsTopicArn !== undefined && input.SnsTopicArn !== null && {\n            SnsTopicArn: input.SnsTopicArn\n          }), input.SpeechMarkTypes !== undefined && input.SpeechMarkTypes !== null && {\n            SpeechMarkTypes: serializeAws_restJson1SpeechMarkTypeList(input.SpeechMarkTypes, context)\n          }), input.Text !== undefined && input.Text !== null && {\n            Text: input.Text\n          }), input.TextType !== undefined && input.TextType !== null && {\n            TextType: input.TextType\n          }), input.VoiceId !== undefined && input.VoiceId !== null && {\n            VoiceId: input.VoiceId\n          }));\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1SynthesizeSpeechCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/speech\";\n          body = JSON.stringify(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.Engine !== undefined && input.Engine !== null && {\n            Engine: input.Engine\n          }), input.LanguageCode !== undefined && input.LanguageCode !== null && {\n            LanguageCode: input.LanguageCode\n          }), input.LexiconNames !== undefined && input.LexiconNames !== null && {\n            LexiconNames: serializeAws_restJson1LexiconNameList(input.LexiconNames, context)\n          }), input.OutputFormat !== undefined && input.OutputFormat !== null && {\n            OutputFormat: input.OutputFormat\n          }), input.SampleRate !== undefined && input.SampleRate !== null && {\n            SampleRate: input.SampleRate\n          }), input.SpeechMarkTypes !== undefined && input.SpeechMarkTypes !== null && {\n            SpeechMarkTypes: serializeAws_restJson1SpeechMarkTypeList(input.SpeechMarkTypes, context)\n          }), input.Text !== undefined && input.Text !== null && {\n            Text: input.Text\n          }), input.TextType !== undefined && input.TextType !== null && {\n            TextType: input.TextType\n          }), input.VoiceId !== undefined && input.VoiceId !== null && {\n            VoiceId: input.VoiceId\n          }));\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1DeleteLexiconCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1DeleteLexiconCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1DeleteLexiconCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;\n    var _e;\n    return __generator(this, function (_f) {\n      switch (_f.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _e = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"LexiconNotFoundException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.polly#LexiconNotFoundException\":\n              return [3 /*break*/, 2];\n            case \"ServiceFailureException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.polly#ServiceFailureException\":\n              return [3 /*break*/, 4];\n          }\n          return [3 /*break*/, 6];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1LexiconNotFoundExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 7];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 7];\n        case 6:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _f.label = 7;\n        case 7:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1DescribeVoicesCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1DescribeVoicesCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            NextToken: undefined,\n            Voices: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          if (data.NextToken !== undefined && data.NextToken !== null) {\n            contents.NextToken = data.NextToken;\n          }\n          if (data.Voices !== undefined && data.Voices !== null) {\n            contents.Voices = deserializeAws_restJson1VoiceList(data.Voices, context);\n          }\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1DescribeVoicesCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;\n    var _e;\n    return __generator(this, function (_f) {\n      switch (_f.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _e = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidNextTokenException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.polly#InvalidNextTokenException\":\n              return [3 /*break*/, 2];\n            case \"ServiceFailureException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.polly#ServiceFailureException\":\n              return [3 /*break*/, 4];\n          }\n          return [3 /*break*/, 6];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InvalidNextTokenExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 7];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 7];\n        case 6:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _f.label = 7;\n        case 7:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1GetLexiconCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1GetLexiconCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Lexicon: undefined,\n            LexiconAttributes: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          if (data.Lexicon !== undefined && data.Lexicon !== null) {\n            contents.Lexicon = deserializeAws_restJson1Lexicon(data.Lexicon, context);\n          }\n          if (data.LexiconAttributes !== undefined && data.LexiconAttributes !== null) {\n            contents.LexiconAttributes = deserializeAws_restJson1LexiconAttributes(data.LexiconAttributes, context);\n          }\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1GetLexiconCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;\n    var _e;\n    return __generator(this, function (_f) {\n      switch (_f.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _e = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"LexiconNotFoundException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.polly#LexiconNotFoundException\":\n              return [3 /*break*/, 2];\n            case \"ServiceFailureException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.polly#ServiceFailureException\":\n              return [3 /*break*/, 4];\n          }\n          return [3 /*break*/, 6];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1LexiconNotFoundExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 7];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 7];\n        case 6:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _f.label = 7;\n        case 7:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1GetSpeechSynthesisTaskCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1GetSpeechSynthesisTaskCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            SynthesisTask: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          if (data.SynthesisTask !== undefined && data.SynthesisTask !== null) {\n            contents.SynthesisTask = deserializeAws_restJson1SynthesisTask(data.SynthesisTask, context);\n          }\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1GetSpeechSynthesisTaskCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidTaskIdException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.polly#InvalidTaskIdException\":\n              return [3 /*break*/, 2];\n            case \"ServiceFailureException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.polly#ServiceFailureException\":\n              return [3 /*break*/, 4];\n            case \"SynthesisTaskNotFoundException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.polly#SynthesisTaskNotFoundException\":\n              return [3 /*break*/, 6];\n          }\n          return [3 /*break*/, 8];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InvalidTaskIdExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1SynthesisTaskNotFoundExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1ListLexiconsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1ListLexiconsCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Lexicons: undefined,\n            NextToken: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          if (data.Lexicons !== undefined && data.Lexicons !== null) {\n            contents.Lexicons = deserializeAws_restJson1LexiconDescriptionList(data.Lexicons, context);\n          }\n          if (data.NextToken !== undefined && data.NextToken !== null) {\n            contents.NextToken = data.NextToken;\n          }\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1ListLexiconsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;\n    var _e;\n    return __generator(this, function (_f) {\n      switch (_f.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _e = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidNextTokenException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.polly#InvalidNextTokenException\":\n              return [3 /*break*/, 2];\n            case \"ServiceFailureException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.polly#ServiceFailureException\":\n              return [3 /*break*/, 4];\n          }\n          return [3 /*break*/, 6];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InvalidNextTokenExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 7];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 7];\n        case 6:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _f.label = 7;\n        case 7:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1ListSpeechSynthesisTasksCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1ListSpeechSynthesisTasksCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            NextToken: undefined,\n            SynthesisTasks: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          if (data.NextToken !== undefined && data.NextToken !== null) {\n            contents.NextToken = data.NextToken;\n          }\n          if (data.SynthesisTasks !== undefined && data.SynthesisTasks !== null) {\n            contents.SynthesisTasks = deserializeAws_restJson1SynthesisTasks(data.SynthesisTasks, context);\n          }\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1ListSpeechSynthesisTasksCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;\n    var _e;\n    return __generator(this, function (_f) {\n      switch (_f.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _e = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidNextTokenException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.polly#InvalidNextTokenException\":\n              return [3 /*break*/, 2];\n            case \"ServiceFailureException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.polly#ServiceFailureException\":\n              return [3 /*break*/, 4];\n          }\n          return [3 /*break*/, 6];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InvalidNextTokenExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 7];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 7];\n        case 6:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _f.label = 7;\n        case 7:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1PutLexiconCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1PutLexiconCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1PutLexiconCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidLexiconException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.polly#InvalidLexiconException\":\n              return [3 /*break*/, 2];\n            case \"LexiconSizeExceededException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.polly#LexiconSizeExceededException\":\n              return [3 /*break*/, 4];\n            case \"MaxLexemeLengthExceededException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.polly#MaxLexemeLengthExceededException\":\n              return [3 /*break*/, 6];\n            case \"MaxLexiconsNumberExceededException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.polly#MaxLexiconsNumberExceededException\":\n              return [3 /*break*/, 8];\n            case \"ServiceFailureException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.polly#ServiceFailureException\":\n              return [3 /*break*/, 10];\n            case \"UnsupportedPlsAlphabetException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.polly#UnsupportedPlsAlphabetException\":\n              return [3 /*break*/, 12];\n            case \"UnsupportedPlsLanguageException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.polly#UnsupportedPlsLanguageException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InvalidLexiconExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1LexiconSizeExceededExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MaxLexemeLengthExceededExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MaxLexiconsNumberExceededExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1UnsupportedPlsAlphabetExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1UnsupportedPlsLanguageExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1StartSpeechSynthesisTaskCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1StartSpeechSynthesisTaskCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            SynthesisTask: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          if (data.SynthesisTask !== undefined && data.SynthesisTask !== null) {\n            contents.SynthesisTask = deserializeAws_restJson1SynthesisTask(data.SynthesisTask, context);\n          }\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1StartSpeechSynthesisTaskCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, parsedBody, message;\n    var _q;\n    return __generator(this, function (_r) {\n      switch (_r.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _q = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_q.body = _r.sent(), _q)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"EngineNotSupportedException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.polly#EngineNotSupportedException\":\n              return [3 /*break*/, 2];\n            case \"InvalidS3BucketException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.polly#InvalidS3BucketException\":\n              return [3 /*break*/, 4];\n            case \"InvalidS3KeyException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.polly#InvalidS3KeyException\":\n              return [3 /*break*/, 6];\n            case \"InvalidSampleRateException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.polly#InvalidSampleRateException\":\n              return [3 /*break*/, 8];\n            case \"InvalidSnsTopicArnException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.polly#InvalidSnsTopicArnException\":\n              return [3 /*break*/, 10];\n            case \"InvalidSsmlException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.polly#InvalidSsmlException\":\n              return [3 /*break*/, 12];\n            case \"LanguageNotSupportedException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.polly#LanguageNotSupportedException\":\n              return [3 /*break*/, 14];\n            case \"LexiconNotFoundException\":\n              return [3 /*break*/, 16];\n            case \"com.amazonaws.polly#LexiconNotFoundException\":\n              return [3 /*break*/, 16];\n            case \"MarksNotSupportedForFormatException\":\n              return [3 /*break*/, 18];\n            case \"com.amazonaws.polly#MarksNotSupportedForFormatException\":\n              return [3 /*break*/, 18];\n            case \"ServiceFailureException\":\n              return [3 /*break*/, 20];\n            case \"com.amazonaws.polly#ServiceFailureException\":\n              return [3 /*break*/, 20];\n            case \"SsmlMarksNotSupportedForTextTypeException\":\n              return [3 /*break*/, 22];\n            case \"com.amazonaws.polly#SsmlMarksNotSupportedForTextTypeException\":\n              return [3 /*break*/, 22];\n            case \"TextLengthExceededException\":\n              return [3 /*break*/, 24];\n            case \"com.amazonaws.polly#TextLengthExceededException\":\n              return [3 /*break*/, 24];\n          }\n          return [3 /*break*/, 26];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1EngineNotSupportedExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_r.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 27];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InvalidS3BucketExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_r.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 27];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InvalidS3KeyExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_r.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 27];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InvalidSampleRateExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_r.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 27];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InvalidSnsTopicArnExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_r.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 27];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InvalidSsmlExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_r.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 27];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1LanguageNotSupportedExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_r.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 27];\n        case 16:\n          _k = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1LexiconNotFoundExceptionResponse(parsedOutput, context)];\n        case 17:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([_r.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 27];\n        case 18:\n          _l = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MarksNotSupportedForFormatExceptionResponse(parsedOutput, context)];\n        case 19:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _l.concat([_r.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 27];\n        case 20:\n          _m = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context)];\n        case 21:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _m.concat([_r.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 27];\n        case 22:\n          _o = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1SsmlMarksNotSupportedForTextTypeExceptionResponse(parsedOutput, context)];\n        case 23:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _o.concat([_r.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 27];\n        case 24:\n          _p = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TextLengthExceededExceptionResponse(parsedOutput, context)];\n        case 25:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _p.concat([_r.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 27];\n        case 26:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _r.label = 27;\n        case 27:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1SynthesizeSpeechCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return [2 /*return*/, deserializeAws_restJson1SynthesizeSpeechCommandError(output, context)];\n      }\n      contents = {\n        $metadata: deserializeMetadata(output),\n        AudioStream: undefined,\n        ContentType: undefined,\n        RequestCharacters: undefined\n      };\n      if (output.headers[\"content-type\"] !== undefined) {\n        contents.ContentType = output.headers[\"content-type\"];\n      }\n      if (output.headers[\"x-amzn-requestcharacters\"] !== undefined) {\n        contents.RequestCharacters = parseInt(output.headers[\"x-amzn-requestcharacters\"], 10);\n      }\n      data = output.body;\n      contents.AudioStream = data;\n      return [2 /*return*/, Promise.resolve(contents)];\n    });\n  });\n};\nvar deserializeAws_restJson1SynthesizeSpeechCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, parsedBody, message;\n    var _m;\n    return __generator(this, function (_o) {\n      switch (_o.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _m = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_m.body = _o.sent(), _m)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"EngineNotSupportedException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.polly#EngineNotSupportedException\":\n              return [3 /*break*/, 2];\n            case \"InvalidSampleRateException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.polly#InvalidSampleRateException\":\n              return [3 /*break*/, 4];\n            case \"InvalidSsmlException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.polly#InvalidSsmlException\":\n              return [3 /*break*/, 6];\n            case \"LanguageNotSupportedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.polly#LanguageNotSupportedException\":\n              return [3 /*break*/, 8];\n            case \"LexiconNotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.polly#LexiconNotFoundException\":\n              return [3 /*break*/, 10];\n            case \"MarksNotSupportedForFormatException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.polly#MarksNotSupportedForFormatException\":\n              return [3 /*break*/, 12];\n            case \"ServiceFailureException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.polly#ServiceFailureException\":\n              return [3 /*break*/, 14];\n            case \"SsmlMarksNotSupportedForTextTypeException\":\n              return [3 /*break*/, 16];\n            case \"com.amazonaws.polly#SsmlMarksNotSupportedForTextTypeException\":\n              return [3 /*break*/, 16];\n            case \"TextLengthExceededException\":\n              return [3 /*break*/, 18];\n            case \"com.amazonaws.polly#TextLengthExceededException\":\n              return [3 /*break*/, 18];\n          }\n          return [3 /*break*/, 20];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1EngineNotSupportedExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 21];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InvalidSampleRateExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 21];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InvalidSsmlExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 21];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1LanguageNotSupportedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 21];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1LexiconNotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 21];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MarksNotSupportedForFormatExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 21];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 21];\n        case 16:\n          _k = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1SsmlMarksNotSupportedForTextTypeExceptionResponse(parsedOutput, context)];\n        case 17:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 21];\n        case 18:\n          _l = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TextLengthExceededExceptionResponse(parsedOutput, context)];\n        case 19:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _l.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 21];\n        case 20:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _o.label = 21;\n        case 21:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1EngineNotSupportedExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"EngineNotSupportedException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined\n      };\n      data = parsedOutput.body;\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = data.message;\n      }\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_restJson1InvalidLexiconExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"InvalidLexiconException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined\n      };\n      data = parsedOutput.body;\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = data.message;\n      }\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_restJson1InvalidNextTokenExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"InvalidNextTokenException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined\n      };\n      data = parsedOutput.body;\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = data.message;\n      }\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_restJson1InvalidS3BucketExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"InvalidS3BucketException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined\n      };\n      data = parsedOutput.body;\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = data.message;\n      }\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_restJson1InvalidS3KeyExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"InvalidS3KeyException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined\n      };\n      data = parsedOutput.body;\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = data.message;\n      }\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_restJson1InvalidSampleRateExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"InvalidSampleRateException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined\n      };\n      data = parsedOutput.body;\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = data.message;\n      }\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_restJson1InvalidSnsTopicArnExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"InvalidSnsTopicArnException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined\n      };\n      data = parsedOutput.body;\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = data.message;\n      }\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_restJson1InvalidSsmlExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"InvalidSsmlException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined\n      };\n      data = parsedOutput.body;\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = data.message;\n      }\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_restJson1InvalidTaskIdExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"InvalidTaskIdException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined\n      };\n      data = parsedOutput.body;\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = data.message;\n      }\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_restJson1LanguageNotSupportedExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"LanguageNotSupportedException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined\n      };\n      data = parsedOutput.body;\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = data.message;\n      }\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_restJson1LexiconNotFoundExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"LexiconNotFoundException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined\n      };\n      data = parsedOutput.body;\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = data.message;\n      }\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_restJson1LexiconSizeExceededExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"LexiconSizeExceededException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined\n      };\n      data = parsedOutput.body;\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = data.message;\n      }\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_restJson1MarksNotSupportedForFormatExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"MarksNotSupportedForFormatException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined\n      };\n      data = parsedOutput.body;\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = data.message;\n      }\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_restJson1MaxLexemeLengthExceededExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"MaxLexemeLengthExceededException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined\n      };\n      data = parsedOutput.body;\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = data.message;\n      }\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_restJson1MaxLexiconsNumberExceededExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"MaxLexiconsNumberExceededException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined\n      };\n      data = parsedOutput.body;\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = data.message;\n      }\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_restJson1ServiceFailureExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"ServiceFailureException\",\n        $fault: \"server\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined\n      };\n      data = parsedOutput.body;\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = data.message;\n      }\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_restJson1SsmlMarksNotSupportedForTextTypeExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"SsmlMarksNotSupportedForTextTypeException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined\n      };\n      data = parsedOutput.body;\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = data.message;\n      }\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_restJson1SynthesisTaskNotFoundExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"SynthesisTaskNotFoundException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined\n      };\n      data = parsedOutput.body;\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = data.message;\n      }\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_restJson1TextLengthExceededExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"TextLengthExceededException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined\n      };\n      data = parsedOutput.body;\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = data.message;\n      }\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_restJson1UnsupportedPlsAlphabetExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"UnsupportedPlsAlphabetException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined\n      };\n      data = parsedOutput.body;\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = data.message;\n      }\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_restJson1UnsupportedPlsLanguageExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"UnsupportedPlsLanguageException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined\n      };\n      data = parsedOutput.body;\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = data.message;\n      }\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar serializeAws_restJson1LexiconNameList = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return entry;\n  });\n};\nvar serializeAws_restJson1SpeechMarkTypeList = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return entry;\n  });\n};\nvar deserializeAws_restJson1EngineList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return entry;\n  });\n};\nvar deserializeAws_restJson1LanguageCodeList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return entry;\n  });\n};\nvar deserializeAws_restJson1Lexicon = function (output, context) {\n  return {\n    Content: output.Content !== undefined && output.Content !== null ? output.Content : undefined,\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined\n  };\n};\nvar deserializeAws_restJson1LexiconAttributes = function (output, context) {\n  return {\n    Alphabet: output.Alphabet !== undefined && output.Alphabet !== null ? output.Alphabet : undefined,\n    LanguageCode: output.LanguageCode !== undefined && output.LanguageCode !== null ? output.LanguageCode : undefined,\n    LastModified: output.LastModified !== undefined && output.LastModified !== null ? new Date(Math.round(output.LastModified * 1000)) : undefined,\n    LexemesCount: output.LexemesCount !== undefined && output.LexemesCount !== null ? output.LexemesCount : undefined,\n    LexiconArn: output.LexiconArn !== undefined && output.LexiconArn !== null ? output.LexiconArn : undefined,\n    Size: output.Size !== undefined && output.Size !== null ? output.Size : undefined\n  };\n};\nvar deserializeAws_restJson1LexiconDescription = function (output, context) {\n  return {\n    Attributes: output.Attributes !== undefined && output.Attributes !== null ? deserializeAws_restJson1LexiconAttributes(output.Attributes, context) : undefined,\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined\n  };\n};\nvar deserializeAws_restJson1LexiconDescriptionList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_restJson1LexiconDescription(entry, context);\n  });\n};\nvar deserializeAws_restJson1LexiconNameList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return entry;\n  });\n};\nvar deserializeAws_restJson1SpeechMarkTypeList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return entry;\n  });\n};\nvar deserializeAws_restJson1SynthesisTask = function (output, context) {\n  return {\n    CreationTime: output.CreationTime !== undefined && output.CreationTime !== null ? new Date(Math.round(output.CreationTime * 1000)) : undefined,\n    Engine: output.Engine !== undefined && output.Engine !== null ? output.Engine : undefined,\n    LanguageCode: output.LanguageCode !== undefined && output.LanguageCode !== null ? output.LanguageCode : undefined,\n    LexiconNames: output.LexiconNames !== undefined && output.LexiconNames !== null ? deserializeAws_restJson1LexiconNameList(output.LexiconNames, context) : undefined,\n    OutputFormat: output.OutputFormat !== undefined && output.OutputFormat !== null ? output.OutputFormat : undefined,\n    OutputUri: output.OutputUri !== undefined && output.OutputUri !== null ? output.OutputUri : undefined,\n    RequestCharacters: output.RequestCharacters !== undefined && output.RequestCharacters !== null ? output.RequestCharacters : undefined,\n    SampleRate: output.SampleRate !== undefined && output.SampleRate !== null ? output.SampleRate : undefined,\n    SnsTopicArn: output.SnsTopicArn !== undefined && output.SnsTopicArn !== null ? output.SnsTopicArn : undefined,\n    SpeechMarkTypes: output.SpeechMarkTypes !== undefined && output.SpeechMarkTypes !== null ? deserializeAws_restJson1SpeechMarkTypeList(output.SpeechMarkTypes, context) : undefined,\n    TaskId: output.TaskId !== undefined && output.TaskId !== null ? output.TaskId : undefined,\n    TaskStatus: output.TaskStatus !== undefined && output.TaskStatus !== null ? output.TaskStatus : undefined,\n    TaskStatusReason: output.TaskStatusReason !== undefined && output.TaskStatusReason !== null ? output.TaskStatusReason : undefined,\n    TextType: output.TextType !== undefined && output.TextType !== null ? output.TextType : undefined,\n    VoiceId: output.VoiceId !== undefined && output.VoiceId !== null ? output.VoiceId : undefined\n  };\n};\nvar deserializeAws_restJson1SynthesisTasks = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_restJson1SynthesisTask(entry, context);\n  });\n};\nvar deserializeAws_restJson1Voice = function (output, context) {\n  return {\n    AdditionalLanguageCodes: output.AdditionalLanguageCodes !== undefined && output.AdditionalLanguageCodes !== null ? deserializeAws_restJson1LanguageCodeList(output.AdditionalLanguageCodes, context) : undefined,\n    Gender: output.Gender !== undefined && output.Gender !== null ? output.Gender : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    LanguageCode: output.LanguageCode !== undefined && output.LanguageCode !== null ? output.LanguageCode : undefined,\n    LanguageName: output.LanguageName !== undefined && output.LanguageName !== null ? output.LanguageName : undefined,\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    SupportedEngines: output.SupportedEngines !== undefined && output.SupportedEngines !== null ? deserializeAws_restJson1EngineList(output.SupportedEngines, context) : undefined\n  };\n};\nvar deserializeAws_restJson1VoiceList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_restJson1Voice(entry, context);\n  });\n};\nvar deserializeMetadata = function (output) {\n  var _a;\n  return {\n    httpStatusCode: output.statusCode,\n    requestId: (_a = output.headers[\"x-amzn-requestid\"]) !== null && _a !== void 0 ? _a : output.headers[\"x-amzn-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"]\n  };\n};\n// Collect low-level response body stream to Uint8Array.\nvar collectBody = function (streamBody, context) {\n  if (streamBody === void 0) {\n    streamBody = new Uint8Array();\n  }\n  if (streamBody instanceof Uint8Array) {\n    return Promise.resolve(streamBody);\n  }\n  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\n// Encode Uint8Array data into string with utf-8.\nvar collectBodyString = function (streamBody, context) {\n  return collectBody(streamBody, context).then(function (body) {\n    return context.utf8Encoder(body);\n  });\n};\nvar isSerializableHeaderValue = function (value) {\n  return value !== undefined && value !== null && value !== \"\" && (!Object.getOwnPropertyNames(value).includes(\"length\") || value.length != 0) && (!Object.getOwnPropertyNames(value).includes(\"size\") || value.size != 0);\n};\nvar parseBody = function (streamBody, context) {\n  return collectBodyString(streamBody, context).then(function (encoded) {\n    if (encoded.length) {\n      return JSON.parse(encoded);\n    }\n    return {};\n  });\n};\n/**\n * Load an error code for the aws.rest-json-1.1 protocol.\n */\nvar loadRestJsonErrorCode = function (output, data) {\n  var findKey = function (object, key) {\n    return Object.keys(object).find(function (k) {\n      return k.toLowerCase() === key.toLowerCase();\n    });\n  };\n  var sanitizeErrorCode = function (rawValue) {\n    var cleanValue = rawValue;\n    if (cleanValue.indexOf(\":\") >= 0) {\n      cleanValue = cleanValue.split(\":\")[0];\n    }\n    if (cleanValue.indexOf(\"#\") >= 0) {\n      cleanValue = cleanValue.split(\"#\")[1];\n    }\n    return cleanValue;\n  };\n  var headerKey = findKey(output.headers, \"x-amzn-errortype\");\n  if (headerKey !== undefined) {\n    return sanitizeErrorCode(output.headers[headerKey]);\n  }\n  if (data.code !== undefined) {\n    return sanitizeErrorCode(data.code);\n  }\n  if (data[\"__type\"] !== undefined) {\n    return sanitizeErrorCode(data[\"__type\"]);\n  }\n  return \"\";\n};","map":{"version":3,"sources":["../../../protocols/Aws_restJson1.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __assign, __awaiter, __generator } from \"tslib\";\nimport { HttpRequest as __HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { extendedEncodeURIComponent as __extendedEncodeURIComponent, } from \"@aws-sdk/smithy-client\";\nexport var serializeAws_restJson1DeleteLexiconCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = {};\n                resolvedPath = \"/v1/lexicons/{Name}\";\n                if (input.Name !== undefined) {\n                    labelValue = input.Name;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Name.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Name}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Name.\");\n                }\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1DescribeVoicesCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = {};\n                resolvedPath = \"/v1/voices\";\n                query = __assign(__assign(__assign(__assign({}, (input.Engine !== undefined && { Engine: input.Engine })), (input.LanguageCode !== undefined && { LanguageCode: input.LanguageCode })), (input.IncludeAdditionalLanguageCodes !== undefined && {\n                    IncludeAdditionalLanguageCodes: input.IncludeAdditionalLanguageCodes.toString(),\n                })), (input.NextToken !== undefined && { NextToken: input.NextToken }));\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1GetLexiconCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = {};\n                resolvedPath = \"/v1/lexicons/{Name}\";\n                if (input.Name !== undefined) {\n                    labelValue = input.Name;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Name.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Name}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Name.\");\n                }\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1GetSpeechSynthesisTaskCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = {};\n                resolvedPath = \"/v1/synthesisTasks/{TaskId}\";\n                if (input.TaskId !== undefined) {\n                    labelValue = input.TaskId;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: TaskId.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{TaskId}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: TaskId.\");\n                }\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1ListLexiconsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = {};\n                resolvedPath = \"/v1/lexicons\";\n                query = __assign({}, (input.NextToken !== undefined && { NextToken: input.NextToken }));\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1ListSpeechSynthesisTasksCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = {};\n                resolvedPath = \"/v1/synthesisTasks\";\n                query = __assign(__assign(__assign({}, (input.MaxResults !== undefined && { MaxResults: input.MaxResults.toString() })), (input.NextToken !== undefined && { NextToken: input.NextToken })), (input.Status !== undefined && { Status: input.Status }));\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1PutLexiconCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = {\n                    \"content-type\": \"application/json\",\n                };\n                resolvedPath = \"/v1/lexicons/{Name}\";\n                if (input.Name !== undefined) {\n                    labelValue = input.Name;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Name.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Name}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Name.\");\n                }\n                body = JSON.stringify(__assign({}, (input.Content !== undefined && input.Content !== null && { Content: input.Content })));\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1StartSpeechSynthesisTaskCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = {\n                    \"content-type\": \"application/json\",\n                };\n                resolvedPath = \"/v1/synthesisTasks\";\n                body = JSON.stringify(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, (input.Engine !== undefined && input.Engine !== null && { Engine: input.Engine })), (input.LanguageCode !== undefined && input.LanguageCode !== null && { LanguageCode: input.LanguageCode })), (input.LexiconNames !== undefined &&\n                    input.LexiconNames !== null && {\n                    LexiconNames: serializeAws_restJson1LexiconNameList(input.LexiconNames, context),\n                })), (input.OutputFormat !== undefined && input.OutputFormat !== null && { OutputFormat: input.OutputFormat })), (input.OutputS3BucketName !== undefined &&\n                    input.OutputS3BucketName !== null && { OutputS3BucketName: input.OutputS3BucketName })), (input.OutputS3KeyPrefix !== undefined &&\n                    input.OutputS3KeyPrefix !== null && { OutputS3KeyPrefix: input.OutputS3KeyPrefix })), (input.SampleRate !== undefined && input.SampleRate !== null && { SampleRate: input.SampleRate })), (input.SnsTopicArn !== undefined && input.SnsTopicArn !== null && { SnsTopicArn: input.SnsTopicArn })), (input.SpeechMarkTypes !== undefined &&\n                    input.SpeechMarkTypes !== null && {\n                    SpeechMarkTypes: serializeAws_restJson1SpeechMarkTypeList(input.SpeechMarkTypes, context),\n                })), (input.Text !== undefined && input.Text !== null && { Text: input.Text })), (input.TextType !== undefined && input.TextType !== null && { TextType: input.TextType })), (input.VoiceId !== undefined && input.VoiceId !== null && { VoiceId: input.VoiceId })));\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"POST\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1SynthesizeSpeechCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = {\n                    \"content-type\": \"application/json\",\n                };\n                resolvedPath = \"/v1/speech\";\n                body = JSON.stringify(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, (input.Engine !== undefined && input.Engine !== null && { Engine: input.Engine })), (input.LanguageCode !== undefined && input.LanguageCode !== null && { LanguageCode: input.LanguageCode })), (input.LexiconNames !== undefined &&\n                    input.LexiconNames !== null && {\n                    LexiconNames: serializeAws_restJson1LexiconNameList(input.LexiconNames, context),\n                })), (input.OutputFormat !== undefined && input.OutputFormat !== null && { OutputFormat: input.OutputFormat })), (input.SampleRate !== undefined && input.SampleRate !== null && { SampleRate: input.SampleRate })), (input.SpeechMarkTypes !== undefined &&\n                    input.SpeechMarkTypes !== null && {\n                    SpeechMarkTypes: serializeAws_restJson1SpeechMarkTypeList(input.SpeechMarkTypes, context),\n                })), (input.Text !== undefined && input.Text !== null && { Text: input.Text })), (input.TextType !== undefined && input.TextType !== null && { TextType: input.TextType })), (input.VoiceId !== undefined && input.VoiceId !== null && { VoiceId: input.VoiceId })));\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"POST\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1DeleteLexiconCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restJson1DeleteLexiconCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1DeleteLexiconCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;\n    var _e;\n    return __generator(this, function (_f) {\n        switch (_f.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _e = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"LexiconNotFoundException\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.polly#LexiconNotFoundException\": return [3 /*break*/, 2];\n                    case \"ServiceFailureException\": return [3 /*break*/, 4];\n                    case \"com.amazonaws.polly#ServiceFailureException\": return [3 /*break*/, 4];\n                }\n                return [3 /*break*/, 6];\n            case 2:\n                _c = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1LexiconNotFoundExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_f.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 7];\n            case 4:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_f.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 7];\n            case 6:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _f.label = 7;\n            case 7:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1DescribeVoicesCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restJson1DescribeVoicesCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    NextToken: undefined,\n                    Voices: undefined,\n                };\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                if (data.NextToken !== undefined && data.NextToken !== null) {\n                    contents.NextToken = data.NextToken;\n                }\n                if (data.Voices !== undefined && data.Voices !== null) {\n                    contents.Voices = deserializeAws_restJson1VoiceList(data.Voices, context);\n                }\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1DescribeVoicesCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;\n    var _e;\n    return __generator(this, function (_f) {\n        switch (_f.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _e = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"InvalidNextTokenException\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.polly#InvalidNextTokenException\": return [3 /*break*/, 2];\n                    case \"ServiceFailureException\": return [3 /*break*/, 4];\n                    case \"com.amazonaws.polly#ServiceFailureException\": return [3 /*break*/, 4];\n                }\n                return [3 /*break*/, 6];\n            case 2:\n                _c = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1InvalidNextTokenExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_f.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 7];\n            case 4:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_f.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 7];\n            case 6:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _f.label = 7;\n            case 7:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1GetLexiconCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restJson1GetLexiconCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    Lexicon: undefined,\n                    LexiconAttributes: undefined,\n                };\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                if (data.Lexicon !== undefined && data.Lexicon !== null) {\n                    contents.Lexicon = deserializeAws_restJson1Lexicon(data.Lexicon, context);\n                }\n                if (data.LexiconAttributes !== undefined && data.LexiconAttributes !== null) {\n                    contents.LexiconAttributes = deserializeAws_restJson1LexiconAttributes(data.LexiconAttributes, context);\n                }\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1GetLexiconCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;\n    var _e;\n    return __generator(this, function (_f) {\n        switch (_f.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _e = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"LexiconNotFoundException\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.polly#LexiconNotFoundException\": return [3 /*break*/, 2];\n                    case \"ServiceFailureException\": return [3 /*break*/, 4];\n                    case \"com.amazonaws.polly#ServiceFailureException\": return [3 /*break*/, 4];\n                }\n                return [3 /*break*/, 6];\n            case 2:\n                _c = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1LexiconNotFoundExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_f.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 7];\n            case 4:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_f.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 7];\n            case 6:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _f.label = 7;\n            case 7:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1GetSpeechSynthesisTaskCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restJson1GetSpeechSynthesisTaskCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    SynthesisTask: undefined,\n                };\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                if (data.SynthesisTask !== undefined && data.SynthesisTask !== null) {\n                    contents.SynthesisTask = deserializeAws_restJson1SynthesisTask(data.SynthesisTask, context);\n                }\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1GetSpeechSynthesisTaskCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n        switch (_g.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _f = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"InvalidTaskIdException\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.polly#InvalidTaskIdException\": return [3 /*break*/, 2];\n                    case \"ServiceFailureException\": return [3 /*break*/, 4];\n                    case \"com.amazonaws.polly#ServiceFailureException\": return [3 /*break*/, 4];\n                    case \"SynthesisTaskNotFoundException\": return [3 /*break*/, 6];\n                    case \"com.amazonaws.polly#SynthesisTaskNotFoundException\": return [3 /*break*/, 6];\n                }\n                return [3 /*break*/, 8];\n            case 2:\n                _c = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1InvalidTaskIdExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 9];\n            case 4:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 9];\n            case 6:\n                _e = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1SynthesisTaskNotFoundExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 9];\n            case 8:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _g.label = 9;\n            case 9:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1ListLexiconsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restJson1ListLexiconsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    Lexicons: undefined,\n                    NextToken: undefined,\n                };\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                if (data.Lexicons !== undefined && data.Lexicons !== null) {\n                    contents.Lexicons = deserializeAws_restJson1LexiconDescriptionList(data.Lexicons, context);\n                }\n                if (data.NextToken !== undefined && data.NextToken !== null) {\n                    contents.NextToken = data.NextToken;\n                }\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1ListLexiconsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;\n    var _e;\n    return __generator(this, function (_f) {\n        switch (_f.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _e = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"InvalidNextTokenException\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.polly#InvalidNextTokenException\": return [3 /*break*/, 2];\n                    case \"ServiceFailureException\": return [3 /*break*/, 4];\n                    case \"com.amazonaws.polly#ServiceFailureException\": return [3 /*break*/, 4];\n                }\n                return [3 /*break*/, 6];\n            case 2:\n                _c = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1InvalidNextTokenExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_f.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 7];\n            case 4:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_f.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 7];\n            case 6:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _f.label = 7;\n            case 7:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1ListSpeechSynthesisTasksCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restJson1ListSpeechSynthesisTasksCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    NextToken: undefined,\n                    SynthesisTasks: undefined,\n                };\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                if (data.NextToken !== undefined && data.NextToken !== null) {\n                    contents.NextToken = data.NextToken;\n                }\n                if (data.SynthesisTasks !== undefined && data.SynthesisTasks !== null) {\n                    contents.SynthesisTasks = deserializeAws_restJson1SynthesisTasks(data.SynthesisTasks, context);\n                }\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1ListSpeechSynthesisTasksCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;\n    var _e;\n    return __generator(this, function (_f) {\n        switch (_f.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _e = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"InvalidNextTokenException\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.polly#InvalidNextTokenException\": return [3 /*break*/, 2];\n                    case \"ServiceFailureException\": return [3 /*break*/, 4];\n                    case \"com.amazonaws.polly#ServiceFailureException\": return [3 /*break*/, 4];\n                }\n                return [3 /*break*/, 6];\n            case 2:\n                _c = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1InvalidNextTokenExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_f.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 7];\n            case 4:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_f.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 7];\n            case 6:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _f.label = 7;\n            case 7:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1PutLexiconCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restJson1PutLexiconCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1PutLexiconCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n        switch (_l.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _k = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"InvalidLexiconException\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.polly#InvalidLexiconException\": return [3 /*break*/, 2];\n                    case \"LexiconSizeExceededException\": return [3 /*break*/, 4];\n                    case \"com.amazonaws.polly#LexiconSizeExceededException\": return [3 /*break*/, 4];\n                    case \"MaxLexemeLengthExceededException\": return [3 /*break*/, 6];\n                    case \"com.amazonaws.polly#MaxLexemeLengthExceededException\": return [3 /*break*/, 6];\n                    case \"MaxLexiconsNumberExceededException\": return [3 /*break*/, 8];\n                    case \"com.amazonaws.polly#MaxLexiconsNumberExceededException\": return [3 /*break*/, 8];\n                    case \"ServiceFailureException\": return [3 /*break*/, 10];\n                    case \"com.amazonaws.polly#ServiceFailureException\": return [3 /*break*/, 10];\n                    case \"UnsupportedPlsAlphabetException\": return [3 /*break*/, 12];\n                    case \"com.amazonaws.polly#UnsupportedPlsAlphabetException\": return [3 /*break*/, 12];\n                    case \"UnsupportedPlsLanguageException\": return [3 /*break*/, 14];\n                    case \"com.amazonaws.polly#UnsupportedPlsLanguageException\": return [3 /*break*/, 14];\n                }\n                return [3 /*break*/, 16];\n            case 2:\n                _c = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1InvalidLexiconExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 17];\n            case 4:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1LexiconSizeExceededExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 17];\n            case 6:\n                _e = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1MaxLexemeLengthExceededExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 17];\n            case 8:\n                _f = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1MaxLexiconsNumberExceededExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 17];\n            case 10:\n                _g = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context)];\n            case 11:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 17];\n            case 12:\n                _h = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1UnsupportedPlsAlphabetExceptionResponse(parsedOutput, context)];\n            case 13:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 17];\n            case 14:\n                _j = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1UnsupportedPlsLanguageExceptionResponse(parsedOutput, context)];\n            case 15:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 17];\n            case 16:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _l.label = 17;\n            case 17:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1StartSpeechSynthesisTaskCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2 /*return*/, deserializeAws_restJson1StartSpeechSynthesisTaskCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    SynthesisTask: undefined,\n                };\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                if (data.SynthesisTask !== undefined && data.SynthesisTask !== null) {\n                    contents.SynthesisTask = deserializeAws_restJson1SynthesisTask(data.SynthesisTask, context);\n                }\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1StartSpeechSynthesisTaskCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, parsedBody, message;\n    var _q;\n    return __generator(this, function (_r) {\n        switch (_r.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _q = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_q.body = _r.sent(), _q)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"EngineNotSupportedException\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.polly#EngineNotSupportedException\": return [3 /*break*/, 2];\n                    case \"InvalidS3BucketException\": return [3 /*break*/, 4];\n                    case \"com.amazonaws.polly#InvalidS3BucketException\": return [3 /*break*/, 4];\n                    case \"InvalidS3KeyException\": return [3 /*break*/, 6];\n                    case \"com.amazonaws.polly#InvalidS3KeyException\": return [3 /*break*/, 6];\n                    case \"InvalidSampleRateException\": return [3 /*break*/, 8];\n                    case \"com.amazonaws.polly#InvalidSampleRateException\": return [3 /*break*/, 8];\n                    case \"InvalidSnsTopicArnException\": return [3 /*break*/, 10];\n                    case \"com.amazonaws.polly#InvalidSnsTopicArnException\": return [3 /*break*/, 10];\n                    case \"InvalidSsmlException\": return [3 /*break*/, 12];\n                    case \"com.amazonaws.polly#InvalidSsmlException\": return [3 /*break*/, 12];\n                    case \"LanguageNotSupportedException\": return [3 /*break*/, 14];\n                    case \"com.amazonaws.polly#LanguageNotSupportedException\": return [3 /*break*/, 14];\n                    case \"LexiconNotFoundException\": return [3 /*break*/, 16];\n                    case \"com.amazonaws.polly#LexiconNotFoundException\": return [3 /*break*/, 16];\n                    case \"MarksNotSupportedForFormatException\": return [3 /*break*/, 18];\n                    case \"com.amazonaws.polly#MarksNotSupportedForFormatException\": return [3 /*break*/, 18];\n                    case \"ServiceFailureException\": return [3 /*break*/, 20];\n                    case \"com.amazonaws.polly#ServiceFailureException\": return [3 /*break*/, 20];\n                    case \"SsmlMarksNotSupportedForTextTypeException\": return [3 /*break*/, 22];\n                    case \"com.amazonaws.polly#SsmlMarksNotSupportedForTextTypeException\": return [3 /*break*/, 22];\n                    case \"TextLengthExceededException\": return [3 /*break*/, 24];\n                    case \"com.amazonaws.polly#TextLengthExceededException\": return [3 /*break*/, 24];\n                }\n                return [3 /*break*/, 26];\n            case 2:\n                _c = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1EngineNotSupportedExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_r.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 27];\n            case 4:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1InvalidS3BucketExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_r.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 27];\n            case 6:\n                _e = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1InvalidS3KeyExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_r.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 27];\n            case 8:\n                _f = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1InvalidSampleRateExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_r.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 27];\n            case 10:\n                _g = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1InvalidSnsTopicArnExceptionResponse(parsedOutput, context)];\n            case 11:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_r.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 27];\n            case 12:\n                _h = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1InvalidSsmlExceptionResponse(parsedOutput, context)];\n            case 13:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_r.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 27];\n            case 14:\n                _j = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1LanguageNotSupportedExceptionResponse(parsedOutput, context)];\n            case 15:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_r.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 27];\n            case 16:\n                _k = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1LexiconNotFoundExceptionResponse(parsedOutput, context)];\n            case 17:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([(_r.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 27];\n            case 18:\n                _l = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1MarksNotSupportedForFormatExceptionResponse(parsedOutput, context)];\n            case 19:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _l.concat([(_r.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 27];\n            case 20:\n                _m = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context)];\n            case 21:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _m.concat([(_r.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 27];\n            case 22:\n                _o = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1SsmlMarksNotSupportedForTextTypeExceptionResponse(parsedOutput, context)];\n            case 23:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _o.concat([(_r.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 27];\n            case 24:\n                _p = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1TextLengthExceededExceptionResponse(parsedOutput, context)];\n            case 25:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _p.concat([(_r.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 27];\n            case 26:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _r.label = 27;\n            case 27:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1SynthesizeSpeechCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1SynthesizeSpeechCommandError(output, context)];\n        }\n        contents = {\n            $metadata: deserializeMetadata(output),\n            AudioStream: undefined,\n            ContentType: undefined,\n            RequestCharacters: undefined,\n        };\n        if (output.headers[\"content-type\"] !== undefined) {\n            contents.ContentType = output.headers[\"content-type\"];\n        }\n        if (output.headers[\"x-amzn-requestcharacters\"] !== undefined) {\n            contents.RequestCharacters = parseInt(output.headers[\"x-amzn-requestcharacters\"], 10);\n        }\n        data = output.body;\n        contents.AudioStream = data;\n        return [2 /*return*/, Promise.resolve(contents)];\n    });\n}); };\nvar deserializeAws_restJson1SynthesizeSpeechCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, parsedBody, message;\n    var _m;\n    return __generator(this, function (_o) {\n        switch (_o.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _m = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_m.body = _o.sent(), _m)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"EngineNotSupportedException\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.polly#EngineNotSupportedException\": return [3 /*break*/, 2];\n                    case \"InvalidSampleRateException\": return [3 /*break*/, 4];\n                    case \"com.amazonaws.polly#InvalidSampleRateException\": return [3 /*break*/, 4];\n                    case \"InvalidSsmlException\": return [3 /*break*/, 6];\n                    case \"com.amazonaws.polly#InvalidSsmlException\": return [3 /*break*/, 6];\n                    case \"LanguageNotSupportedException\": return [3 /*break*/, 8];\n                    case \"com.amazonaws.polly#LanguageNotSupportedException\": return [3 /*break*/, 8];\n                    case \"LexiconNotFoundException\": return [3 /*break*/, 10];\n                    case \"com.amazonaws.polly#LexiconNotFoundException\": return [3 /*break*/, 10];\n                    case \"MarksNotSupportedForFormatException\": return [3 /*break*/, 12];\n                    case \"com.amazonaws.polly#MarksNotSupportedForFormatException\": return [3 /*break*/, 12];\n                    case \"ServiceFailureException\": return [3 /*break*/, 14];\n                    case \"com.amazonaws.polly#ServiceFailureException\": return [3 /*break*/, 14];\n                    case \"SsmlMarksNotSupportedForTextTypeException\": return [3 /*break*/, 16];\n                    case \"com.amazonaws.polly#SsmlMarksNotSupportedForTextTypeException\": return [3 /*break*/, 16];\n                    case \"TextLengthExceededException\": return [3 /*break*/, 18];\n                    case \"com.amazonaws.polly#TextLengthExceededException\": return [3 /*break*/, 18];\n                }\n                return [3 /*break*/, 20];\n            case 2:\n                _c = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1EngineNotSupportedExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_o.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 21];\n            case 4:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1InvalidSampleRateExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_o.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 21];\n            case 6:\n                _e = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1InvalidSsmlExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_o.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 21];\n            case 8:\n                _f = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1LanguageNotSupportedExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_o.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 21];\n            case 10:\n                _g = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1LexiconNotFoundExceptionResponse(parsedOutput, context)];\n            case 11:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_o.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 21];\n            case 12:\n                _h = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1MarksNotSupportedForFormatExceptionResponse(parsedOutput, context)];\n            case 13:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_o.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 21];\n            case 14:\n                _j = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context)];\n            case 15:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_o.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 21];\n            case 16:\n                _k = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1SsmlMarksNotSupportedForTextTypeExceptionResponse(parsedOutput, context)];\n            case 17:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([(_o.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 21];\n            case 18:\n                _l = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1TextLengthExceededExceptionResponse(parsedOutput, context)];\n            case 19:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _l.concat([(_o.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 21];\n            case 20:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _o.label = 21;\n            case 21:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nvar deserializeAws_restJson1EngineNotSupportedExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"EngineNotSupportedException\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput),\n            message: undefined,\n        };\n        data = parsedOutput.body;\n        if (data.message !== undefined && data.message !== null) {\n            contents.message = data.message;\n        }\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_restJson1InvalidLexiconExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"InvalidLexiconException\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput),\n            message: undefined,\n        };\n        data = parsedOutput.body;\n        if (data.message !== undefined && data.message !== null) {\n            contents.message = data.message;\n        }\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_restJson1InvalidNextTokenExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"InvalidNextTokenException\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput),\n            message: undefined,\n        };\n        data = parsedOutput.body;\n        if (data.message !== undefined && data.message !== null) {\n            contents.message = data.message;\n        }\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_restJson1InvalidS3BucketExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"InvalidS3BucketException\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput),\n            message: undefined,\n        };\n        data = parsedOutput.body;\n        if (data.message !== undefined && data.message !== null) {\n            contents.message = data.message;\n        }\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_restJson1InvalidS3KeyExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"InvalidS3KeyException\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput),\n            message: undefined,\n        };\n        data = parsedOutput.body;\n        if (data.message !== undefined && data.message !== null) {\n            contents.message = data.message;\n        }\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_restJson1InvalidSampleRateExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"InvalidSampleRateException\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput),\n            message: undefined,\n        };\n        data = parsedOutput.body;\n        if (data.message !== undefined && data.message !== null) {\n            contents.message = data.message;\n        }\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_restJson1InvalidSnsTopicArnExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"InvalidSnsTopicArnException\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput),\n            message: undefined,\n        };\n        data = parsedOutput.body;\n        if (data.message !== undefined && data.message !== null) {\n            contents.message = data.message;\n        }\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_restJson1InvalidSsmlExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"InvalidSsmlException\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput),\n            message: undefined,\n        };\n        data = parsedOutput.body;\n        if (data.message !== undefined && data.message !== null) {\n            contents.message = data.message;\n        }\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_restJson1InvalidTaskIdExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"InvalidTaskIdException\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput),\n            message: undefined,\n        };\n        data = parsedOutput.body;\n        if (data.message !== undefined && data.message !== null) {\n            contents.message = data.message;\n        }\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_restJson1LanguageNotSupportedExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"LanguageNotSupportedException\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput),\n            message: undefined,\n        };\n        data = parsedOutput.body;\n        if (data.message !== undefined && data.message !== null) {\n            contents.message = data.message;\n        }\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_restJson1LexiconNotFoundExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"LexiconNotFoundException\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput),\n            message: undefined,\n        };\n        data = parsedOutput.body;\n        if (data.message !== undefined && data.message !== null) {\n            contents.message = data.message;\n        }\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_restJson1LexiconSizeExceededExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"LexiconSizeExceededException\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput),\n            message: undefined,\n        };\n        data = parsedOutput.body;\n        if (data.message !== undefined && data.message !== null) {\n            contents.message = data.message;\n        }\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_restJson1MarksNotSupportedForFormatExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"MarksNotSupportedForFormatException\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput),\n            message: undefined,\n        };\n        data = parsedOutput.body;\n        if (data.message !== undefined && data.message !== null) {\n            contents.message = data.message;\n        }\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_restJson1MaxLexemeLengthExceededExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"MaxLexemeLengthExceededException\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput),\n            message: undefined,\n        };\n        data = parsedOutput.body;\n        if (data.message !== undefined && data.message !== null) {\n            contents.message = data.message;\n        }\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_restJson1MaxLexiconsNumberExceededExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"MaxLexiconsNumberExceededException\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput),\n            message: undefined,\n        };\n        data = parsedOutput.body;\n        if (data.message !== undefined && data.message !== null) {\n            contents.message = data.message;\n        }\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_restJson1ServiceFailureExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"ServiceFailureException\",\n            $fault: \"server\",\n            $metadata: deserializeMetadata(parsedOutput),\n            message: undefined,\n        };\n        data = parsedOutput.body;\n        if (data.message !== undefined && data.message !== null) {\n            contents.message = data.message;\n        }\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_restJson1SsmlMarksNotSupportedForTextTypeExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"SsmlMarksNotSupportedForTextTypeException\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput),\n            message: undefined,\n        };\n        data = parsedOutput.body;\n        if (data.message !== undefined && data.message !== null) {\n            contents.message = data.message;\n        }\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_restJson1SynthesisTaskNotFoundExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"SynthesisTaskNotFoundException\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput),\n            message: undefined,\n        };\n        data = parsedOutput.body;\n        if (data.message !== undefined && data.message !== null) {\n            contents.message = data.message;\n        }\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_restJson1TextLengthExceededExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"TextLengthExceededException\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput),\n            message: undefined,\n        };\n        data = parsedOutput.body;\n        if (data.message !== undefined && data.message !== null) {\n            contents.message = data.message;\n        }\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_restJson1UnsupportedPlsAlphabetExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"UnsupportedPlsAlphabetException\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput),\n            message: undefined,\n        };\n        data = parsedOutput.body;\n        if (data.message !== undefined && data.message !== null) {\n            contents.message = data.message;\n        }\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_restJson1UnsupportedPlsLanguageExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"UnsupportedPlsLanguageException\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput),\n            message: undefined,\n        };\n        data = parsedOutput.body;\n        if (data.message !== undefined && data.message !== null) {\n            contents.message = data.message;\n        }\n        return [2 /*return*/, contents];\n    });\n}); };\nvar serializeAws_restJson1LexiconNameList = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return entry;\n    });\n};\nvar serializeAws_restJson1SpeechMarkTypeList = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return entry;\n    });\n};\nvar deserializeAws_restJson1EngineList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return entry;\n    });\n};\nvar deserializeAws_restJson1LanguageCodeList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return entry;\n    });\n};\nvar deserializeAws_restJson1Lexicon = function (output, context) {\n    return {\n        Content: output.Content !== undefined && output.Content !== null ? output.Content : undefined,\n        Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    };\n};\nvar deserializeAws_restJson1LexiconAttributes = function (output, context) {\n    return {\n        Alphabet: output.Alphabet !== undefined && output.Alphabet !== null ? output.Alphabet : undefined,\n        LanguageCode: output.LanguageCode !== undefined && output.LanguageCode !== null ? output.LanguageCode : undefined,\n        LastModified: output.LastModified !== undefined && output.LastModified !== null\n            ? new Date(Math.round(output.LastModified * 1000))\n            : undefined,\n        LexemesCount: output.LexemesCount !== undefined && output.LexemesCount !== null ? output.LexemesCount : undefined,\n        LexiconArn: output.LexiconArn !== undefined && output.LexiconArn !== null ? output.LexiconArn : undefined,\n        Size: output.Size !== undefined && output.Size !== null ? output.Size : undefined,\n    };\n};\nvar deserializeAws_restJson1LexiconDescription = function (output, context) {\n    return {\n        Attributes: output.Attributes !== undefined && output.Attributes !== null\n            ? deserializeAws_restJson1LexiconAttributes(output.Attributes, context)\n            : undefined,\n        Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    };\n};\nvar deserializeAws_restJson1LexiconDescriptionList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1LexiconDescription(entry, context);\n    });\n};\nvar deserializeAws_restJson1LexiconNameList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return entry;\n    });\n};\nvar deserializeAws_restJson1SpeechMarkTypeList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return entry;\n    });\n};\nvar deserializeAws_restJson1SynthesisTask = function (output, context) {\n    return {\n        CreationTime: output.CreationTime !== undefined && output.CreationTime !== null\n            ? new Date(Math.round(output.CreationTime * 1000))\n            : undefined,\n        Engine: output.Engine !== undefined && output.Engine !== null ? output.Engine : undefined,\n        LanguageCode: output.LanguageCode !== undefined && output.LanguageCode !== null ? output.LanguageCode : undefined,\n        LexiconNames: output.LexiconNames !== undefined && output.LexiconNames !== null\n            ? deserializeAws_restJson1LexiconNameList(output.LexiconNames, context)\n            : undefined,\n        OutputFormat: output.OutputFormat !== undefined && output.OutputFormat !== null ? output.OutputFormat : undefined,\n        OutputUri: output.OutputUri !== undefined && output.OutputUri !== null ? output.OutputUri : undefined,\n        RequestCharacters: output.RequestCharacters !== undefined && output.RequestCharacters !== null\n            ? output.RequestCharacters\n            : undefined,\n        SampleRate: output.SampleRate !== undefined && output.SampleRate !== null ? output.SampleRate : undefined,\n        SnsTopicArn: output.SnsTopicArn !== undefined && output.SnsTopicArn !== null ? output.SnsTopicArn : undefined,\n        SpeechMarkTypes: output.SpeechMarkTypes !== undefined && output.SpeechMarkTypes !== null\n            ? deserializeAws_restJson1SpeechMarkTypeList(output.SpeechMarkTypes, context)\n            : undefined,\n        TaskId: output.TaskId !== undefined && output.TaskId !== null ? output.TaskId : undefined,\n        TaskStatus: output.TaskStatus !== undefined && output.TaskStatus !== null ? output.TaskStatus : undefined,\n        TaskStatusReason: output.TaskStatusReason !== undefined && output.TaskStatusReason !== null ? output.TaskStatusReason : undefined,\n        TextType: output.TextType !== undefined && output.TextType !== null ? output.TextType : undefined,\n        VoiceId: output.VoiceId !== undefined && output.VoiceId !== null ? output.VoiceId : undefined,\n    };\n};\nvar deserializeAws_restJson1SynthesisTasks = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1SynthesisTask(entry, context);\n    });\n};\nvar deserializeAws_restJson1Voice = function (output, context) {\n    return {\n        AdditionalLanguageCodes: output.AdditionalLanguageCodes !== undefined && output.AdditionalLanguageCodes !== null\n            ? deserializeAws_restJson1LanguageCodeList(output.AdditionalLanguageCodes, context)\n            : undefined,\n        Gender: output.Gender !== undefined && output.Gender !== null ? output.Gender : undefined,\n        Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n        LanguageCode: output.LanguageCode !== undefined && output.LanguageCode !== null ? output.LanguageCode : undefined,\n        LanguageName: output.LanguageName !== undefined && output.LanguageName !== null ? output.LanguageName : undefined,\n        Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n        SupportedEngines: output.SupportedEngines !== undefined && output.SupportedEngines !== null\n            ? deserializeAws_restJson1EngineList(output.SupportedEngines, context)\n            : undefined,\n    };\n};\nvar deserializeAws_restJson1VoiceList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1Voice(entry, context);\n    });\n};\nvar deserializeMetadata = function (output) {\n    var _a;\n    return ({\n        httpStatusCode: output.statusCode,\n        requestId: (_a = output.headers[\"x-amzn-requestid\"]) !== null && _a !== void 0 ? _a : output.headers[\"x-amzn-request-id\"],\n        extendedRequestId: output.headers[\"x-amz-id-2\"],\n        cfId: output.headers[\"x-amz-cf-id\"],\n    });\n};\n// Collect low-level response body stream to Uint8Array.\nvar collectBody = function (streamBody, context) {\n    if (streamBody === void 0) { streamBody = new Uint8Array(); }\n    if (streamBody instanceof Uint8Array) {\n        return Promise.resolve(streamBody);\n    }\n    return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\n// Encode Uint8Array data into string with utf-8.\nvar collectBodyString = function (streamBody, context) {\n    return collectBody(streamBody, context).then(function (body) { return context.utf8Encoder(body); });\n};\nvar isSerializableHeaderValue = function (value) {\n    return value !== undefined &&\n        value !== null &&\n        value !== \"\" &&\n        (!Object.getOwnPropertyNames(value).includes(\"length\") || value.length != 0) &&\n        (!Object.getOwnPropertyNames(value).includes(\"size\") || value.size != 0);\n};\nvar parseBody = function (streamBody, context) {\n    return collectBodyString(streamBody, context).then(function (encoded) {\n        if (encoded.length) {\n            return JSON.parse(encoded);\n        }\n        return {};\n    });\n};\n/**\n * Load an error code for the aws.rest-json-1.1 protocol.\n */\nvar loadRestJsonErrorCode = function (output, data) {\n    var findKey = function (object, key) { return Object.keys(object).find(function (k) { return k.toLowerCase() === key.toLowerCase(); }); };\n    var sanitizeErrorCode = function (rawValue) {\n        var cleanValue = rawValue;\n        if (cleanValue.indexOf(\":\") >= 0) {\n            cleanValue = cleanValue.split(\":\")[0];\n        }\n        if (cleanValue.indexOf(\"#\") >= 0) {\n            cleanValue = cleanValue.split(\"#\")[1];\n        }\n        return cleanValue;\n    };\n    var headerKey = findKey(output.headers, \"x-amzn-errortype\");\n    if (headerKey !== undefined) {\n        return sanitizeErrorCode(output.headers[headerKey]);\n    }\n    if (data.code !== undefined) {\n        return sanitizeErrorCode(data.code);\n    }\n    if (data[\"__type\"] !== undefined) {\n        return sanitizeErrorCode(data[\"__type\"]);\n    }\n    return \"\";\n};\n//# sourceMappingURL=Aws_restJson1.js.map"]},"metadata":{},"sourceType":"module"}