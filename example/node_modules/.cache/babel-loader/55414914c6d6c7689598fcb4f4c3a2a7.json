{"ast":null,"code":"import { css, jsx } from '@emotion/react';\nimport { THEME } from '../../constants/theme.constant.js';\nimport { Button } from '../button/button.component.js';\nimport { useScreenMediaQuery } from '../../hooks/use-screen-media-query.hook.js';\nimport { t } from '../../hooks/use-t.hook.js';\nimport { useState, useRef, useCallback } from 'react';\nimport ReactSlider from 'react-slick';\nimport 'slick-carousel/slick/slick-theme.css';\nimport 'slick-carousel/slick/slick.css';\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() {\n  return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";\n}\nvar _ref = process.env.NODE_ENV === \"production\" ? {\n  name: \"1st9kbp\",\n  styles: \"height:100%;position:relative\"\n} : {\n  name: \"16ewthi-Slider\",\n  styles: \"height:100%;position:relative;label:Slider;\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\nvar _ref2 = process.env.NODE_ENV === \"production\" ? {\n  name: \"w1atjl\",\n  styles: \"width:100%;height:100%\"\n} : {\n  name: \"t6ndm3-Slider\",\n  styles: \"width:100%;height:100%;label:Slider;\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\nvar _ref3 = process.env.NODE_ENV === \"production\" ? {\n  name: \"fbgsxg\",\n  styles: \"display:grid;grid-template-columns:repeat(2, minmax(0, 1fr));grid-auto-flow:column;grid-column-gap:16px;padding:1rem;position:absolute;bottom:0px;right:0px;left:0px;@media (min-width: 768px){padding:1.5rem;}\"\n} : {\n  name: \"1r09v6d-Slider\",\n  styles: \"display:grid;grid-template-columns:repeat(2, minmax(0, 1fr));grid-auto-flow:column;grid-column-gap:16px;padding:1rem;position:absolute;bottom:0px;right:0px;left:0px;@media (min-width: 768px){padding:1.5rem;};label:Slider;\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\nconst Slider = _ref4 => {\n  let {\n    children,\n    className,\n    slidesToScroll,\n    slidesToShow,\n    slidesAmount,\n    finishButtonTitle,\n    onFinish\n  } = _ref4;\n  const [focusedSlideIndex, setFocusedSlideIndex] = useState(0);\n  const sliderRef = useRef();\n  const {\n    isDownMD\n  } = useScreenMediaQuery();\n  const isLastSlideFocused = focusedSlideIndex === slidesAmount - 1;\n  const finishButtonText = isLastSlideFocused && finishButtonTitle ? finishButtonTitle : t('Next');\n  const handleBackClick = useCallback(() => {\n    sliderRef.current?.slickPrev();\n  }, []);\n  const handleNextClick = useCallback(() => {\n    if (isLastSlideFocused && onFinish) {\n      onFinish();\n    } else {\n      sliderRef.current?.slickNext();\n    }\n  }, [onFinish, isLastSlideFocused]);\n  const handleSlideChange = useCallback((_, next) => {\n    setFocusedSlideIndex(next);\n  }, []);\n  return jsx(\"div\", {\n    css: styles.root,\n    className: className\n  }, jsx(\"div\", {\n    css: _ref\n  }, jsx(\"div\", {\n    css: _ref2\n  }, jsx(ReactSlider, {\n    ref: sliderRef,\n    lazyLoad: \"progressive\",\n    infinite: false,\n    dots: true,\n    arrows: false,\n    slidesToShow: slidesToShow,\n    slidesToScroll: slidesToScroll,\n    slidesPerRow: 1,\n    adaptiveHeight: true,\n    swipe: isDownMD,\n    beforeChange: handleSlideChange\n  }, children))), jsx(\"div\", {\n    css: _ref3\n  }, jsx(Button, {\n    onClick: handleBackClick,\n    name: \"back\",\n    variant: \"black-outline\",\n    size: \"large\",\n    disabled: focusedSlideIndex === 0,\n    css: [\"display:flex;justify-content:center;align-items:center;font-size:16px;\", styles.button, process.env.NODE_ENV === \"production\" ? \"\" : \";label:Slider;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\", process.env.NODE_ENV === \"production\" ? \"\" : \";label:Slider;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"]\n  }, jsx(\"svg\", {\n    width: \"16\",\n    height: \"12\",\n    viewBox: \"0 0 12 16\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, jsx(\"path\", {\n    d: \"M2.01519 9.41524L0.600973 8.00103L7.99997 0.602036L9.41418 2.01625L2.01519 9.41524Z\"\n  }), jsx(\"path\", {\n    d: \"M0.600973 8.00103L2.01519 6.58682L9.41418 13.9858L7.99997 15.4L0.600973 8.00103Z\"\n  })), jsx(\"span\", null, t('Back'))), jsx(Button, {\n    onClick: handleNextClick,\n    name: \"next\",\n    variant: \"orange-transparent\",\n    size: \"large\",\n    css: [\"display:flex;justify-content:center;align-items:center;font-size:16px;\", styles.button, process.env.NODE_ENV === \"production\" ? \"\" : \";label:Slider;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNsaWRlci5jb21wb25lbnQudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWdHb0IiLCJmaWxlIjoic2xpZGVyLmNvbXBvbmVudC50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUSEVNRSB9IGZyb20gJ0Bjb21tb24vY29uc3RhbnRzL3RoZW1lLmNvbnN0YW50JztcbmltcG9ydCB7IEJ1dHRvbiB9IGZyb20gJ0Bjb21tb24vZ2VuZXJhbC11aS9idXR0b24vYnV0dG9uLmNvbXBvbmVudCc7XG5pbXBvcnQgeyB1c2VTY3JlZW5NZWRpYVF1ZXJ5IH0gZnJvbSAnQGNvbW1vbi9ob29rcy91c2Utc2NyZWVuLW1lZGlhLXF1ZXJ5Lmhvb2snO1xuaW1wb3J0IHsgdCB9IGZyb20gJ0Bjb21tb24vaG9va3MvdXNlLXQuaG9vayc7XG5pbXBvcnQgUmVhY3QsIHsgUmVhY3ROb2RlLCB1c2VDYWxsYmFjaywgdXNlUmVmLCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBSZWFjdFNsaWRlciBmcm9tICdyZWFjdC1zbGljayc7XG5pbXBvcnQgJ3NsaWNrLWNhcm91c2VsL3NsaWNrL3NsaWNrLXRoZW1lLmNzcyc7XG5pbXBvcnQgJ3NsaWNrLWNhcm91c2VsL3NsaWNrL3NsaWNrLmNzcyc7XG5pbXBvcnQgeyBjc3MgfSBmcm9tICd0d2luLm1hY3JvJztcblxuaW50ZXJmYWNlIElQcm9wcyB7XG4gICAgZG90czogYm9vbGVhbjtcbiAgICBhcnJvd3M6IGJvb2xlYW47XG4gICAgc2xpZGVzVG9TaG93OiBudW1iZXI7XG4gICAgc2xpZGVzVG9TY3JvbGw6IG51bWJlcjtcbiAgICBzbGlkZXNBbW91bnQ6IG51bWJlcjtcbiAgICBjaGlsZHJlbjogUmVhY3ROb2RlO1xuICAgIGNsYXNzTmFtZT86IHN0cmluZztcbiAgICBvbkZpbmlzaD86ICgpID0+IHZvaWQ7XG4gICAgZmluaXNoQnV0dG9uVGl0bGU/OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBjb25zdCBTbGlkZXIgPSAoe1xuICAgIGNoaWxkcmVuLFxuICAgIGNsYXNzTmFtZSxcbiAgICBzbGlkZXNUb1Njcm9sbCxcbiAgICBzbGlkZXNUb1Nob3csXG4gICAgc2xpZGVzQW1vdW50LFxuICAgIGZpbmlzaEJ1dHRvblRpdGxlLFxuICAgIG9uRmluaXNoLFxufTogSVByb3BzKTogSlNYLkVsZW1lbnQgPT4ge1xuICAgIGNvbnN0IFtmb2N1c2VkU2xpZGVJbmRleCwgc2V0Rm9jdXNlZFNsaWRlSW5kZXhdID0gdXNlU3RhdGU8bnVtYmVyPigwKTtcbiAgICBjb25zdCBzbGlkZXJSZWYgPSB1c2VSZWY8UmVhY3RTbGlkZXIgfCB1bmRlZmluZWQ+KCk7XG4gICAgY29uc3QgeyBpc0Rvd25NRCB9ID0gdXNlU2NyZWVuTWVkaWFRdWVyeSgpO1xuICAgIGNvbnN0IGlzTGFzdFNsaWRlRm9jdXNlZCA9IGZvY3VzZWRTbGlkZUluZGV4ID09PSBzbGlkZXNBbW91bnQgLSAxO1xuICAgIGNvbnN0IGZpbmlzaEJ1dHRvblRleHQgPSBpc0xhc3RTbGlkZUZvY3VzZWQgJiYgZmluaXNoQnV0dG9uVGl0bGUgPyBmaW5pc2hCdXR0b25UaXRsZSA6IHQoJ05leHQnKTtcblxuICAgIGNvbnN0IGhhbmRsZUJhY2tDbGljayA9IHVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICAgICAgc2xpZGVyUmVmLmN1cnJlbnQ/LnNsaWNrUHJldigpO1xuICAgIH0sIFtdKTtcblxuICAgIGNvbnN0IGhhbmRsZU5leHRDbGljayA9IHVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICAgICAgaWYgKGlzTGFzdFNsaWRlRm9jdXNlZCAmJiBvbkZpbmlzaCkge1xuICAgICAgICAgICAgb25GaW5pc2goKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHNsaWRlclJlZi5jdXJyZW50Py5zbGlja05leHQoKTtcbiAgICAgICAgfVxuICAgIH0sIFtvbkZpbmlzaCwgaXNMYXN0U2xpZGVGb2N1c2VkXSk7XG5cbiAgICBjb25zdCBoYW5kbGVTbGlkZUNoYW5nZSA9IHVzZUNhbGxiYWNrKChfLCBuZXh0KSA9PiB7XG4gICAgICAgIHNldEZvY3VzZWRTbGlkZUluZGV4KG5leHQgYXMgbnVtYmVyKTtcbiAgICB9LCBbXSk7XG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8ZGl2IGNzcz17c3R5bGVzLnJvb3R9IGNsYXNzTmFtZT17Y2xhc3NOYW1lfT5cbiAgICAgICAgICAgIDxkaXYgdHc9XCJoLWZ1bGwgcmVsYXRpdmVcIj5cbiAgICAgICAgICAgICAgICA8ZGl2IHR3PVwidy1mdWxsIGgtZnVsbFwiPlxuICAgICAgICAgICAgICAgICAgICA8UmVhY3RTbGlkZXJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlZj17c2xpZGVyUmVmIGFzIHVua25vd24gYXMgUmVhY3QuTGVnYWN5UmVmPFJlYWN0U2xpZGVyPn1cbiAgICAgICAgICAgICAgICAgICAgICAgIGxhenlMb2FkPVwicHJvZ3Jlc3NpdmVcIlxuICAgICAgICAgICAgICAgICAgICAgICAgaW5maW5pdGU9e2ZhbHNlfVxuICAgICAgICAgICAgICAgICAgICAgICAgZG90cz17dHJ1ZX1cbiAgICAgICAgICAgICAgICAgICAgICAgIGFycm93cz17ZmFsc2V9XG4gICAgICAgICAgICAgICAgICAgICAgICBzbGlkZXNUb1Nob3c9e3NsaWRlc1RvU2hvd31cbiAgICAgICAgICAgICAgICAgICAgICAgIHNsaWRlc1RvU2Nyb2xsPXtzbGlkZXNUb1Njcm9sbH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHNsaWRlc1BlclJvdz17MX1cbiAgICAgICAgICAgICAgICAgICAgICAgIGFkYXB0aXZlSGVpZ2h0PXt0cnVlfVxuICAgICAgICAgICAgICAgICAgICAgICAgc3dpcGU9e2lzRG93bk1EfVxuICAgICAgICAgICAgICAgICAgICAgICAgYmVmb3JlQ2hhbmdlPXtoYW5kbGVTbGlkZUNoYW5nZX1cbiAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAge2NoaWxkcmVuIGFzIHVua25vd24gYXMgSlNYLkVsZW1lbnR9XG4gICAgICAgICAgICAgICAgICAgIDwvUmVhY3RTbGlkZXI+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgdHc9XCJncmlkIGdyaWQtY29scy0yIGdyaWQtZmxvdy1jb2wgZ3JpZC1jb2x1bW4tZ2FwWzE2cHhdIHAtNCBtZDpwLTYgYWJzb2x1dGUgYm90dG9tLTAgcmlnaHQtMCBsZWZ0LTBcIj5cbiAgICAgICAgICAgICAgICA8QnV0dG9uXG4gICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e2hhbmRsZUJhY2tDbGlja31cbiAgICAgICAgICAgICAgICAgICAgbmFtZT1cImJhY2tcIlxuICAgICAgICAgICAgICAgICAgICB2YXJpYW50PVwiYmxhY2stb3V0bGluZVwiXG4gICAgICAgICAgICAgICAgICAgIHNpemU9XCJsYXJnZVwiXG4gICAgICAgICAgICAgICAgICAgIHR3PVwiZmxleCBqdXN0aWZ5LWNlbnRlciBpdGVtcy1jZW50ZXIgdGV4dC1iYXNlXCJcbiAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ9e2ZvY3VzZWRTbGlkZUluZGV4ID09PSAwfVxuICAgICAgICAgICAgICAgICAgICBjc3M9e3N0eWxlcy5idXR0b259XG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICA8c3ZnIHdpZHRoPVwiMTZcIiBoZWlnaHQ9XCIxMlwiIHZpZXdCb3g9XCIwIDAgMTIgMTZcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPVwiTTIuMDE1MTkgOS40MTUyNEwwLjYwMDk3MyA4LjAwMTAzTDcuOTk5OTcgMC42MDIwMzZMOS40MTQxOCAyLjAxNjI1TDIuMDE1MTkgOS40MTUyNFpcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGggZD1cIk0wLjYwMDk3MyA4LjAwMTAzTDIuMDE1MTkgNi41ODY4Mkw5LjQxNDE4IDEzLjk4NThMNy45OTk5NyAxNS40TDAuNjAwOTczIDguMDAxMDNaXCIgLz5cbiAgICAgICAgICAgICAgICAgICAgPC9zdmc+XG4gICAgICAgICAgICAgICAgICAgIDxzcGFuPnt0KCdCYWNrJyl9PC9zcGFuPlxuICAgICAgICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICAgICAgICAgIDxCdXR0b25cbiAgICAgICAgICAgICAgICAgICAgb25DbGljaz17aGFuZGxlTmV4dENsaWNrfVxuICAgICAgICAgICAgICAgICAgICBuYW1lPVwibmV4dFwiXG4gICAgICAgICAgICAgICAgICAgIHZhcmlhbnQ9XCJvcmFuZ2UtdHJhbnNwYXJlbnRcIlxuICAgICAgICAgICAgICAgICAgICBzaXplPVwibGFyZ2VcIlxuICAgICAgICAgICAgICAgICAgICB0dz1cImZsZXgganVzdGlmeS1jZW50ZXIgaXRlbXMtY2VudGVyIHRleHQtYmFzZVwiXG4gICAgICAgICAgICAgICAgICAgIGNzcz17c3R5bGVzLmJ1dHRvbn1cbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgIDxzcGFuPntmaW5pc2hCdXR0b25UZXh0fTwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAge2lzTGFzdFNsaWRlRm9jdXNlZCA/IChcbiAgICAgICAgICAgICAgICAgICAgICAgICcgJ1xuICAgICAgICAgICAgICAgICAgICApIDogKFxuICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB3aWR0aD1cIjE2XCIgaGVpZ2h0PVwiMTJcIiB2aWV3Qm94PVwiMCAwIDEyIDE2XCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIGQ9XCJNNy40ODQ4MSA2LjU4NDc2TDguODk5MDMgNy45OTg5N0wxLjUwMDAzIDE1LjM5OEwwLjA4NTgxNyAxMy45ODM4TDcuNDg0ODEgNi41ODQ3NlpcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIGQ9XCJNOC44OTkwMyA3Ljk5ODk3TDcuNDg0ODEgOS40MTMxOEwwLjA4NTgxNTQgMi4wMTQxOUwxLjUwMDAzIDAuNTk5OTc2TDguODk5MDMgNy45OTg5N1pcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9zdmc+XG4gICAgICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgKTtcbn07XG5cbmNvbnN0IHN0eWxlcyA9IHtcbiAgICByb290OiBjc3NgXG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBtYXgtd2lkdGg6IDEwMCU7XG5cbiAgICAgICAgLnNsaWNrLWRvdHMge1xuICAgICAgICAgICAgYm90dG9tOiAtMzZweDtcblxuICAgICAgICAgICAgJiBsaSB7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDEycHg7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAxMnB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbjogMCA4cHg7XG5cbiAgICAgICAgICAgICAgICAmIGJ1dHRvbiB7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMnB4O1xuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDEycHg7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDA7XG5cbiAgICAgICAgICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAgICAgICAgICAgICAmOmJlZm9yZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICR7VEhFTUUuQkxBQ0t9O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wYWNpdHk6IDE7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyOiAwO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTRweDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDE0cHg7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDE0cHg7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAmOmJlZm9yZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTJweDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogMTJweDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxMnB4O1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgICAgICAgICAgICAgICAgICAgICAgb3BhY2l0eTogMTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICR7VEhFTUUuQkxBQ0t9O1xuICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLnNsaWNrLWRvdHMgbGkuc2xpY2stYWN0aXZlIGJ1dHRvbjpiZWZvcmUge1xuICAgICAgICAgICAgb3BhY2l0eTogMTtcbiAgICAgICAgICAgIGJvcmRlcjogMDtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgICAgICAgIHdpZHRoOiAxNHB4O1xuICAgICAgICAgICAgaGVpZ2h0OiAxNHB4O1xuICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDE0cHg7XG4gICAgICAgIH1cbiAgICBgLFxuICAgIGJ1dHRvbjogY3NzYFxuICAgICAgICAmIHN2ZyB7XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiA0cHg7XG5cbiAgICAgICAgICAgICYgcGF0aCB7XG4gICAgICAgICAgICAgICAgZmlsbDogJHtUSEVNRS5CTEFDS307XG4gICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZS1pbi1vdXQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAmOm5vdChbZGlzYWJsZWRdKVtuYW1lPSdiYWNrJ106aG92ZXIgc3ZnIHBhdGgsXG4gICAgICAgICY6bm90KFtkaXNhYmxlZF0pW25hbWU9J2JhY2snXTpob3Zlcjpmb2N1cyBzdmcgcGF0aCB7XG4gICAgICAgICAgICBmaWxsOiAke1RIRU1FLldISVRFfTtcbiAgICAgICAgICAgIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2UtaW4tb3V0O1xuICAgICAgICB9XG5cbiAgICAgICAgJltkaXNhYmxlZF1bbmFtZT0nYmFjayddIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuXG4gICAgICAgICAgICAmIHN2ZyBwYXRoIHtcbiAgICAgICAgICAgICAgICBmaWxsOiAjZDlkOWQ5O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgYCxcbn07XG4iXX0= */\", process.env.NODE_ENV === \"production\" ? \"\" : \";label:Slider;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"]\n  }, jsx(\"span\", null, finishButtonText), isLastSlideFocused ? ' ' : jsx(\"svg\", {\n    width: \"16\",\n    height: \"12\",\n    viewBox: \"0 0 12 16\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, jsx(\"path\", {\n    d: \"M7.48481 6.58476L8.89903 7.99897L1.50003 15.398L0.085817 13.9838L7.48481 6.58476Z\"\n  }), jsx(\"path\", {\n    d: \"M8.89903 7.99897L7.48481 9.41318L0.0858154 2.01419L1.50003 0.599976L8.89903 7.99897Z\"\n  })))));\n};\nconst styles = {\n  root: /*#__PURE__*/\n  /*#__PURE__*/\n  css(\"width:100%;max-width:100%;.slick-dots{bottom:-36px;& li{width:12px;height:12px;margin:0 8px;& button{width:12px;height:12px;padding:0;&:hover{&:before{color:\", THEME.BLACK, \";opacity:1;border:0;font-size:14px;width:14px;height:14px;line-height:14px;}}&:before{width:12px;height:12px;line-height:12px;font-size:12px;opacity:1;border:1px solid \", THEME.BLACK, \";border-radius:50%;color:transparent;}}}}.slick-dots li.slick-active button:before{opacity:1;border:0;font-size:14px;width:14px;height:14px;line-height:14px;}\" + (process.env.NODE_ENV === \"production\" ? \"\" : \";label:root;\"), process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNsaWRlci5jb21wb25lbnQudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWtIYSIsImZpbGUiOiJzbGlkZXIuY29tcG9uZW50LnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRIRU1FIH0gZnJvbSAnQGNvbW1vbi9jb25zdGFudHMvdGhlbWUuY29uc3RhbnQnO1xuaW1wb3J0IHsgQnV0dG9uIH0gZnJvbSAnQGNvbW1vbi9nZW5lcmFsLXVpL2J1dHRvbi9idXR0b24uY29tcG9uZW50JztcbmltcG9ydCB7IHVzZVNjcmVlbk1lZGlhUXVlcnkgfSBmcm9tICdAY29tbW9uL2hvb2tzL3VzZS1zY3JlZW4tbWVkaWEtcXVlcnkuaG9vayc7XG5pbXBvcnQgeyB0IH0gZnJvbSAnQGNvbW1vbi9ob29rcy91c2UtdC5ob29rJztcbmltcG9ydCBSZWFjdCwgeyBSZWFjdE5vZGUsIHVzZUNhbGxiYWNrLCB1c2VSZWYsIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IFJlYWN0U2xpZGVyIGZyb20gJ3JlYWN0LXNsaWNrJztcbmltcG9ydCAnc2xpY2stY2Fyb3VzZWwvc2xpY2svc2xpY2stdGhlbWUuY3NzJztcbmltcG9ydCAnc2xpY2stY2Fyb3VzZWwvc2xpY2svc2xpY2suY3NzJztcbmltcG9ydCB7IGNzcyB9IGZyb20gJ3R3aW4ubWFjcm8nO1xuXG5pbnRlcmZhY2UgSVByb3BzIHtcbiAgICBkb3RzOiBib29sZWFuO1xuICAgIGFycm93czogYm9vbGVhbjtcbiAgICBzbGlkZXNUb1Nob3c6IG51bWJlcjtcbiAgICBzbGlkZXNUb1Njcm9sbDogbnVtYmVyO1xuICAgIHNsaWRlc0Ftb3VudDogbnVtYmVyO1xuICAgIGNoaWxkcmVuOiBSZWFjdE5vZGU7XG4gICAgY2xhc3NOYW1lPzogc3RyaW5nO1xuICAgIG9uRmluaXNoPzogKCkgPT4gdm9pZDtcbiAgICBmaW5pc2hCdXR0b25UaXRsZT86IHN0cmluZztcbn1cblxuZXhwb3J0IGNvbnN0IFNsaWRlciA9ICh7XG4gICAgY2hpbGRyZW4sXG4gICAgY2xhc3NOYW1lLFxuICAgIHNsaWRlc1RvU2Nyb2xsLFxuICAgIHNsaWRlc1RvU2hvdyxcbiAgICBzbGlkZXNBbW91bnQsXG4gICAgZmluaXNoQnV0dG9uVGl0bGUsXG4gICAgb25GaW5pc2gsXG59OiBJUHJvcHMpOiBKU1guRWxlbWVudCA9PiB7XG4gICAgY29uc3QgW2ZvY3VzZWRTbGlkZUluZGV4LCBzZXRGb2N1c2VkU2xpZGVJbmRleF0gPSB1c2VTdGF0ZTxudW1iZXI+KDApO1xuICAgIGNvbnN0IHNsaWRlclJlZiA9IHVzZVJlZjxSZWFjdFNsaWRlciB8IHVuZGVmaW5lZD4oKTtcbiAgICBjb25zdCB7IGlzRG93bk1EIH0gPSB1c2VTY3JlZW5NZWRpYVF1ZXJ5KCk7XG4gICAgY29uc3QgaXNMYXN0U2xpZGVGb2N1c2VkID0gZm9jdXNlZFNsaWRlSW5kZXggPT09IHNsaWRlc0Ftb3VudCAtIDE7XG4gICAgY29uc3QgZmluaXNoQnV0dG9uVGV4dCA9IGlzTGFzdFNsaWRlRm9jdXNlZCAmJiBmaW5pc2hCdXR0b25UaXRsZSA/IGZpbmlzaEJ1dHRvblRpdGxlIDogdCgnTmV4dCcpO1xuXG4gICAgY29uc3QgaGFuZGxlQmFja0NsaWNrID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgICAgICBzbGlkZXJSZWYuY3VycmVudD8uc2xpY2tQcmV2KCk7XG4gICAgfSwgW10pO1xuXG4gICAgY29uc3QgaGFuZGxlTmV4dENsaWNrID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgICAgICBpZiAoaXNMYXN0U2xpZGVGb2N1c2VkICYmIG9uRmluaXNoKSB7XG4gICAgICAgICAgICBvbkZpbmlzaCgpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgc2xpZGVyUmVmLmN1cnJlbnQ/LnNsaWNrTmV4dCgpO1xuICAgICAgICB9XG4gICAgfSwgW29uRmluaXNoLCBpc0xhc3RTbGlkZUZvY3VzZWRdKTtcblxuICAgIGNvbnN0IGhhbmRsZVNsaWRlQ2hhbmdlID0gdXNlQ2FsbGJhY2soKF8sIG5leHQpID0+IHtcbiAgICAgICAgc2V0Rm9jdXNlZFNsaWRlSW5kZXgobmV4dCBhcyBudW1iZXIpO1xuICAgIH0sIFtdKTtcblxuICAgIHJldHVybiAoXG4gICAgICAgIDxkaXYgY3NzPXtzdHlsZXMucm9vdH0gY2xhc3NOYW1lPXtjbGFzc05hbWV9PlxuICAgICAgICAgICAgPGRpdiB0dz1cImgtZnVsbCByZWxhdGl2ZVwiPlxuICAgICAgICAgICAgICAgIDxkaXYgdHc9XCJ3LWZ1bGwgaC1mdWxsXCI+XG4gICAgICAgICAgICAgICAgICAgIDxSZWFjdFNsaWRlclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVmPXtzbGlkZXJSZWYgYXMgdW5rbm93biBhcyBSZWFjdC5MZWdhY3lSZWY8UmVhY3RTbGlkZXI+fVxuICAgICAgICAgICAgICAgICAgICAgICAgbGF6eUxvYWQ9XCJwcm9ncmVzc2l2ZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICBpbmZpbml0ZT17ZmFsc2V9XG4gICAgICAgICAgICAgICAgICAgICAgICBkb3RzPXt0cnVlfVxuICAgICAgICAgICAgICAgICAgICAgICAgYXJyb3dzPXtmYWxzZX1cbiAgICAgICAgICAgICAgICAgICAgICAgIHNsaWRlc1RvU2hvdz17c2xpZGVzVG9TaG93fVxuICAgICAgICAgICAgICAgICAgICAgICAgc2xpZGVzVG9TY3JvbGw9e3NsaWRlc1RvU2Nyb2xsfVxuICAgICAgICAgICAgICAgICAgICAgICAgc2xpZGVzUGVyUm93PXsxfVxuICAgICAgICAgICAgICAgICAgICAgICAgYWRhcHRpdmVIZWlnaHQ9e3RydWV9XG4gICAgICAgICAgICAgICAgICAgICAgICBzd2lwZT17aXNEb3duTUR9XG4gICAgICAgICAgICAgICAgICAgICAgICBiZWZvcmVDaGFuZ2U9e2hhbmRsZVNsaWRlQ2hhbmdlfVxuICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICB7Y2hpbGRyZW4gYXMgdW5rbm93biBhcyBKU1guRWxlbWVudH1cbiAgICAgICAgICAgICAgICAgICAgPC9SZWFjdFNsaWRlcj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPGRpdiB0dz1cImdyaWQgZ3JpZC1jb2xzLTIgZ3JpZC1mbG93LWNvbCBncmlkLWNvbHVtbi1nYXBbMTZweF0gcC00IG1kOnAtNiBhYnNvbHV0ZSBib3R0b20tMCByaWdodC0wIGxlZnQtMFwiPlxuICAgICAgICAgICAgICAgIDxCdXR0b25cbiAgICAgICAgICAgICAgICAgICAgb25DbGljaz17aGFuZGxlQmFja0NsaWNrfVxuICAgICAgICAgICAgICAgICAgICBuYW1lPVwiYmFja1wiXG4gICAgICAgICAgICAgICAgICAgIHZhcmlhbnQ9XCJibGFjay1vdXRsaW5lXCJcbiAgICAgICAgICAgICAgICAgICAgc2l6ZT1cImxhcmdlXCJcbiAgICAgICAgICAgICAgICAgICAgdHc9XCJmbGV4IGp1c3RpZnktY2VudGVyIGl0ZW1zLWNlbnRlciB0ZXh0LWJhc2VcIlxuICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZD17Zm9jdXNlZFNsaWRlSW5kZXggPT09IDB9XG4gICAgICAgICAgICAgICAgICAgIGNzcz17c3R5bGVzLmJ1dHRvbn1cbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgIDxzdmcgd2lkdGg9XCIxNlwiIGhlaWdodD1cIjEyXCIgdmlld0JveD1cIjAgMCAxMiAxNlwiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIGQ9XCJNMi4wMTUxOSA5LjQxNTI0TDAuNjAwOTczIDguMDAxMDNMNy45OTk5NyAwLjYwMjAzNkw5LjQxNDE4IDIuMDE2MjVMMi4wMTUxOSA5LjQxNTI0WlwiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPVwiTTAuNjAwOTczIDguMDAxMDNMMi4wMTUxOSA2LjU4NjgyTDkuNDE0MTggMTMuOTg1OEw3Ljk5OTk3IDE1LjRMMC42MDA5NzMgOC4wMDEwM1pcIiAvPlxuICAgICAgICAgICAgICAgICAgICA8L3N2Zz5cbiAgICAgICAgICAgICAgICAgICAgPHNwYW4+e3QoJ0JhY2snKX08L3NwYW4+XG4gICAgICAgICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgICAgICAgPEJ1dHRvblxuICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXtoYW5kbGVOZXh0Q2xpY2t9XG4gICAgICAgICAgICAgICAgICAgIG5hbWU9XCJuZXh0XCJcbiAgICAgICAgICAgICAgICAgICAgdmFyaWFudD1cIm9yYW5nZS10cmFuc3BhcmVudFwiXG4gICAgICAgICAgICAgICAgICAgIHNpemU9XCJsYXJnZVwiXG4gICAgICAgICAgICAgICAgICAgIHR3PVwiZmxleCBqdXN0aWZ5LWNlbnRlciBpdGVtcy1jZW50ZXIgdGV4dC1iYXNlXCJcbiAgICAgICAgICAgICAgICAgICAgY3NzPXtzdHlsZXMuYnV0dG9ufVxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgPHNwYW4+e2ZpbmlzaEJ1dHRvblRleHR9PC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICB7aXNMYXN0U2xpZGVGb2N1c2VkID8gKFxuICAgICAgICAgICAgICAgICAgICAgICAgJyAnXG4gICAgICAgICAgICAgICAgICAgICkgOiAoXG4gICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHdpZHRoPVwiMTZcIiBoZWlnaHQ9XCIxMlwiIHZpZXdCb3g9XCIwIDAgMTIgMTZcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGggZD1cIk03LjQ4NDgxIDYuNTg0NzZMOC44OTkwMyA3Ljk5ODk3TDEuNTAwMDMgMTUuMzk4TDAuMDg1ODE3IDEzLjk4MzhMNy40ODQ4MSA2LjU4NDc2WlwiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGggZD1cIk04Ljg5OTAzIDcuOTk4OTdMNy40ODQ4MSA5LjQxMzE4TDAuMDg1ODE1NCAyLjAxNDE5TDEuNTAwMDMgMC41OTk5NzZMOC44OTkwMyA3Ljk5ODk3WlwiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L3N2Zz5cbiAgICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICA8L0J1dHRvbj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICApO1xufTtcblxuY29uc3Qgc3R5bGVzID0ge1xuICAgIHJvb3Q6IGNzc2BcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIG1heC13aWR0aDogMTAwJTtcblxuICAgICAgICAuc2xpY2stZG90cyB7XG4gICAgICAgICAgICBib3R0b206IC0zNnB4O1xuXG4gICAgICAgICAgICAmIGxpIHtcbiAgICAgICAgICAgICAgICB3aWR0aDogMTJweDtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEycHg7XG4gICAgICAgICAgICAgICAgbWFyZ2luOiAwIDhweDtcblxuICAgICAgICAgICAgICAgICYgYnV0dG9uIHtcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDEycHg7XG4gICAgICAgICAgICAgICAgICAgIGhlaWdodDogMTJweDtcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMDtcblxuICAgICAgICAgICAgICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICY6YmVmb3JlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogJHtUSEVNRS5CTEFDS307XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb3BhY2l0eTogMTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3JkZXI6IDA7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxNHB4O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogMTRweDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaW5lLWhlaWdodDogMTRweDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICY6YmVmb3JlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMnB4O1xuICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAxMnB4O1xuICAgICAgICAgICAgICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDEycHg7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICAgICAgICAgICAgICAgICAgICBvcGFjaXR5OiAxO1xuICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgJHtUSEVNRS5CTEFDS307XG4gICAgICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAuc2xpY2stZG90cyBsaS5zbGljay1hY3RpdmUgYnV0dG9uOmJlZm9yZSB7XG4gICAgICAgICAgICBvcGFjaXR5OiAxO1xuICAgICAgICAgICAgYm9yZGVyOiAwO1xuICAgICAgICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgICAgICAgd2lkdGg6IDE0cHg7XG4gICAgICAgICAgICBoZWlnaHQ6IDE0cHg7XG4gICAgICAgICAgICBsaW5lLWhlaWdodDogMTRweDtcbiAgICAgICAgfVxuICAgIGAsXG4gICAgYnV0dG9uOiBjc3NgXG4gICAgICAgICYgc3ZnIHtcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDRweDtcblxuICAgICAgICAgICAgJiBwYXRoIHtcbiAgICAgICAgICAgICAgICBmaWxsOiAke1RIRU1FLkJMQUNLfTtcbiAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlLWluLW91dDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgICY6bm90KFtkaXNhYmxlZF0pW25hbWU9J2JhY2snXTpob3ZlciBzdmcgcGF0aCxcbiAgICAgICAgJjpub3QoW2Rpc2FibGVkXSlbbmFtZT0nYmFjayddOmhvdmVyOmZvY3VzIHN2ZyBwYXRoIHtcbiAgICAgICAgICAgIGZpbGw6ICR7VEhFTUUuV0hJVEV9O1xuICAgICAgICAgICAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZS1pbi1vdXQ7XG4gICAgICAgIH1cblxuICAgICAgICAmW2Rpc2FibGVkXVtuYW1lPSdiYWNrJ10ge1xuICAgICAgICAgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG5cbiAgICAgICAgICAgICYgc3ZnIHBhdGgge1xuICAgICAgICAgICAgICAgIGZpbGw6ICNkOWQ5ZDk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICBgLFxufTtcbiJdfQ== */\", process.env.NODE_ENV === \"production\" ? \"\" : \";label:root;\"),\n  button: /*#__PURE__*/\n  /*#__PURE__*/\n  css(\"& svg{margin-bottom:4px;& path{fill:\", THEME.BLACK, \";transition:all 0.3s ease-in-out;}}&:not([disabled])[name='back']:hover svg path,&:not([disabled])[name='back']:hover:focus svg path{fill:\", THEME.WHITE, \";transition:all 0.3s ease-in-out;}&[disabled][name='back']{background:transparent;& svg path{fill:#d9d9d9;}}\" + (process.env.NODE_ENV === \"production\" ? \"\" : \";label:button;\"), process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\", process.env.NODE_ENV === \"production\" ? \"\" : \";label:button;\")\n};\nexport { Slider };","map":{"version":3,"sources":["../../../../src/general-ui/slider/slider.component.tsx"],"names":["Slider","children","className","slidesToScroll","slidesToShow","slidesAmount","finishButtonTitle","onFinish","focusedSlideIndex","setFocusedSlideIndex","useState","sliderRef","useRef","isDownMD","useScreenMediaQuery","isLastSlideFocused","finishButtonText","t","handleBackClick","useCallback","current","slickPrev","handleNextClick","slickNext","handleSlideChange","_","next","___EmotionJSX","styles","root","button","css","THEME","BLACK","WHITE"],"mappings":"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","sourcesContent":["import { THEME } from '@common/constants/theme.constant';\nimport { Button } from '@common/general-ui/button/button.component';\nimport { useScreenMediaQuery } from '@common/hooks/use-screen-media-query.hook';\nimport { t } from '@common/hooks/use-t.hook';\nimport React, { ReactNode, useCallback, useRef, useState } from 'react';\nimport ReactSlider from 'react-slick';\nimport 'slick-carousel/slick/slick-theme.css';\nimport 'slick-carousel/slick/slick.css';\nimport { css } from 'twin.macro';\n\ninterface IProps {\n    dots: boolean;\n    arrows: boolean;\n    slidesToShow: number;\n    slidesToScroll: number;\n    slidesAmount: number;\n    children: ReactNode;\n    className?: string;\n    onFinish?: () => void;\n    finishButtonTitle?: string;\n}\n\nexport const Slider = ({\n    children,\n    className,\n    slidesToScroll,\n    slidesToShow,\n    slidesAmount,\n    finishButtonTitle,\n    onFinish,\n}: IProps): JSX.Element => {\n    const [focusedSlideIndex, setFocusedSlideIndex] = useState<number>(0);\n    const sliderRef = useRef<ReactSlider | undefined>();\n    const { isDownMD } = useScreenMediaQuery();\n    const isLastSlideFocused = focusedSlideIndex === slidesAmount - 1;\n    const finishButtonText = isLastSlideFocused && finishButtonTitle ? finishButtonTitle : t('Next');\n\n    const handleBackClick = useCallback(() => {\n        sliderRef.current?.slickPrev();\n    }, []);\n\n    const handleNextClick = useCallback(() => {\n        if (isLastSlideFocused && onFinish) {\n            onFinish();\n        } else {\n            sliderRef.current?.slickNext();\n        }\n    }, [onFinish, isLastSlideFocused]);\n\n    const handleSlideChange = useCallback((_, next) => {\n        setFocusedSlideIndex(next as number);\n    }, []);\n\n    return (\n        <div css={styles.root} className={className}>\n            <div tw=\"h-full relative\">\n                <div tw=\"w-full h-full\">\n                    <ReactSlider\n                        ref={sliderRef as unknown as React.LegacyRef<ReactSlider>}\n                        lazyLoad=\"progressive\"\n                        infinite={false}\n                        dots={true}\n                        arrows={false}\n                        slidesToShow={slidesToShow}\n                        slidesToScroll={slidesToScroll}\n                        slidesPerRow={1}\n                        adaptiveHeight={true}\n                        swipe={isDownMD}\n                        beforeChange={handleSlideChange}\n                    >\n                        {children as unknown as JSX.Element}\n                    </ReactSlider>\n                </div>\n            </div>\n            <div tw=\"grid grid-cols-2 grid-flow-col grid-column-gap[16px] p-4 md:p-6 absolute bottom-0 right-0 left-0\">\n                <Button\n                    onClick={handleBackClick}\n                    name=\"back\"\n                    variant=\"black-outline\"\n                    size=\"large\"\n                    tw=\"flex justify-center items-center text-base\"\n                    disabled={focusedSlideIndex === 0}\n                    css={styles.button}\n                >\n                    <svg width=\"16\" height=\"12\" viewBox=\"0 0 12 16\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M2.01519 9.41524L0.600973 8.00103L7.99997 0.602036L9.41418 2.01625L2.01519 9.41524Z\" />\n                        <path d=\"M0.600973 8.00103L2.01519 6.58682L9.41418 13.9858L7.99997 15.4L0.600973 8.00103Z\" />\n                    </svg>\n                    <span>{t('Back')}</span>\n                </Button>\n                <Button\n                    onClick={handleNextClick}\n                    name=\"next\"\n                    variant=\"orange-transparent\"\n                    size=\"large\"\n                    tw=\"flex justify-center items-center text-base\"\n                    css={styles.button}\n                >\n                    <span>{finishButtonText}</span>\n                    {isLastSlideFocused ? (\n                        ' '\n                    ) : (\n                        <svg width=\"16\" height=\"12\" viewBox=\"0 0 12 16\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path d=\"M7.48481 6.58476L8.89903 7.99897L1.50003 15.398L0.085817 13.9838L7.48481 6.58476Z\" />\n                            <path d=\"M8.89903 7.99897L7.48481 9.41318L0.0858154 2.01419L1.50003 0.599976L8.89903 7.99897Z\" />\n                        </svg>\n                    )}\n                </Button>\n            </div>\n        </div>\n    );\n};\n\nconst styles = {\n    root: css`\n        width: 100%;\n        max-width: 100%;\n\n        .slick-dots {\n            bottom: -36px;\n\n            & li {\n                width: 12px;\n                height: 12px;\n                margin: 0 8px;\n\n                & button {\n                    width: 12px;\n                    height: 12px;\n                    padding: 0;\n\n                    &:hover {\n                        &:before {\n                            color: ${THEME.BLACK};\n                            opacity: 1;\n                            border: 0;\n                            font-size: 14px;\n                            width: 14px;\n                            height: 14px;\n                            line-height: 14px;\n                        }\n                    }\n\n                    &:before {\n                        width: 12px;\n                        height: 12px;\n                        line-height: 12px;\n                        font-size: 12px;\n                        opacity: 1;\n                        border: 1px solid ${THEME.BLACK};\n                        border-radius: 50%;\n                        color: transparent;\n                    }\n                }\n            }\n        }\n\n        .slick-dots li.slick-active button:before {\n            opacity: 1;\n            border: 0;\n            font-size: 14px;\n            width: 14px;\n            height: 14px;\n            line-height: 14px;\n        }\n    `,\n    button: css`\n        & svg {\n            margin-bottom: 4px;\n\n            & path {\n                fill: ${THEME.BLACK};\n                transition: all 0.3s ease-in-out;\n            }\n        }\n\n        &:not([disabled])[name='back']:hover svg path,\n        &:not([disabled])[name='back']:hover:focus svg path {\n            fill: ${THEME.WHITE};\n            transition: all 0.3s ease-in-out;\n        }\n\n        &[disabled][name='back'] {\n            background: transparent;\n\n            & svg path {\n                fill: #d9d9d9;\n            }\n        }\n    `,\n};\n"]},"metadata":{},"sourceType":"module"}