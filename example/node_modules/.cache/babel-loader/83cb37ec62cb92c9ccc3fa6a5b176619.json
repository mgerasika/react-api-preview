{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function sent() {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n          case 7:\n            op = _.ops.pop();\n            _.trys.pop();\n            continue;\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n              _.ops.push(op);\n              break;\n            }\n            if (t[2]) _.ops.pop();\n            _.trys.pop();\n            continue;\n        }\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\n/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { print, parse, GraphQLError } from 'graphql';\nimport { Amplify, ConsoleLogger as Logger, Credentials, getAmplifyUserAgent, INTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER } from '@aws-amplify/core';\nimport { PubSub } from '@aws-amplify/pubsub';\nimport Auth from '@aws-amplify/auth';\nimport Cache from '@aws-amplify/cache';\nimport { GraphQLAuthError } from './types';\nimport { RestClient } from '@aws-amplify/api-rest';\nvar USER_AGENT_HEADER = 'x-amz-user-agent';\nvar logger = new Logger('GraphQLAPI');\nexport var graphqlOperation = function graphqlOperation(query, variables, authToken, userAgentSuffix) {\n  if (variables === void 0) {\n    variables = {};\n  }\n  return {\n    query: query,\n    variables: variables,\n    authToken: authToken,\n    userAgentSuffix: userAgentSuffix\n  };\n};\n/**\n * Export Cloud Logic APIs\n */\nvar GraphQLAPIClass = /** @class */function () {\n  /**\n   * Initialize GraphQL API with AWS configuration\n   * @param {Object} options - Configuration object for API\n   */\n  function GraphQLAPIClass(options) {\n    this._api = null;\n    this.Auth = Auth;\n    this.Cache = Cache;\n    this.Credentials = Credentials;\n    this._options = options;\n    logger.debug('API Options', this._options);\n  }\n  GraphQLAPIClass.prototype.getModuleName = function () {\n    return 'GraphQLAPI';\n  };\n  /**\n   * Configure API\n   * @param {Object} config - Configuration of the API\n   * @return {Object} - The current configuration\n   */\n  GraphQLAPIClass.prototype.configure = function (options) {\n    var _a = options || {},\n      _b = _a.API,\n      API = _b === void 0 ? {} : _b,\n      otherOptions = __rest(_a, [\"API\"]);\n    var opt = __assign(__assign({}, otherOptions), API);\n    logger.debug('configure GraphQL API', {\n      opt: opt\n    });\n    if (opt['aws_project_region']) {\n      opt = Object.assign({}, opt, {\n        region: opt['aws_project_region'],\n        header: {}\n      });\n    }\n    if (typeof opt.graphql_headers !== 'undefined' && typeof opt.graphql_headers !== 'function') {\n      logger.warn('graphql_headers should be a function');\n      opt.graphql_headers = undefined;\n    }\n    this._options = Object.assign({}, this._options, opt);\n    this.createInstance();\n    return this._options;\n  };\n  /**\n   * Create an instance of API for the library\n   * @return - A promise of true if Success\n   */\n  GraphQLAPIClass.prototype.createInstance = function () {\n    logger.debug('create Rest instance');\n    if (this._options) {\n      this._api = new RestClient(this._options);\n      // Share instance Credentials with client for SSR\n      this._api.Credentials = this.Credentials;\n      return true;\n    } else {\n      return Promise.reject('API not configured');\n    }\n  };\n  GraphQLAPIClass.prototype._headerBasedAuth = function (defaultAuthenticationType, additionalHeaders) {\n    if (additionalHeaders === void 0) {\n      additionalHeaders = {};\n    }\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, aws_appsync_authenticationType, apiKey, authenticationType, headers, _b, credentialsOK, token, federatedInfo, currentUser, e_1, session, e_2;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            _a = this._options, aws_appsync_authenticationType = _a.aws_appsync_authenticationType, apiKey = _a.aws_appsync_apiKey;\n            authenticationType = defaultAuthenticationType || aws_appsync_authenticationType || 'AWS_IAM';\n            headers = {};\n            _b = authenticationType;\n            switch (_b) {\n              case 'API_KEY':\n                return [3 /*break*/, 1];\n              case 'AWS_IAM':\n                return [3 /*break*/, 2];\n              case 'OPENID_CONNECT':\n                return [3 /*break*/, 4];\n              case 'AMAZON_COGNITO_USER_POOLS':\n                return [3 /*break*/, 11];\n              case 'AWS_LAMBDA':\n                return [3 /*break*/, 15];\n            }\n            return [3 /*break*/, 16];\n          case 1:\n            if (!apiKey) {\n              throw new Error(GraphQLAuthError.NO_API_KEY);\n            }\n            headers = {\n              Authorization: null,\n              'X-Api-Key': apiKey\n            };\n            return [3 /*break*/, 17];\n          case 2:\n            return [4 /*yield*/, this._ensureCredentials()];\n          case 3:\n            credentialsOK = _c.sent();\n            if (!credentialsOK) {\n              throw new Error(GraphQLAuthError.NO_CREDENTIALS);\n            }\n            return [3 /*break*/, 17];\n          case 4:\n            _c.trys.push([4, 9,, 10]);\n            token = void 0;\n            return [4 /*yield*/, Cache.getItem('federatedInfo')];\n          case 5:\n            federatedInfo = _c.sent();\n            if (!federatedInfo) return [3 /*break*/, 6];\n            token = federatedInfo.token;\n            return [3 /*break*/, 8];\n          case 6:\n            return [4 /*yield*/, Auth.currentAuthenticatedUser()];\n          case 7:\n            currentUser = _c.sent();\n            if (currentUser) {\n              token = currentUser.token;\n            }\n            _c.label = 8;\n          case 8:\n            if (!token) {\n              throw new Error(GraphQLAuthError.NO_FEDERATED_JWT);\n            }\n            headers = {\n              Authorization: token\n            };\n            return [3 /*break*/, 10];\n          case 9:\n            e_1 = _c.sent();\n            throw new Error(GraphQLAuthError.NO_CURRENT_USER);\n          case 10:\n            return [3 /*break*/, 17];\n          case 11:\n            _c.trys.push([11, 13,, 14]);\n            return [4 /*yield*/, this.Auth.currentSession()];\n          case 12:\n            session = _c.sent();\n            headers = {\n              Authorization: session.getAccessToken().getJwtToken()\n            };\n            return [3 /*break*/, 14];\n          case 13:\n            e_2 = _c.sent();\n            throw new Error(GraphQLAuthError.NO_CURRENT_USER);\n          case 14:\n            return [3 /*break*/, 17];\n          case 15:\n            if (!additionalHeaders.Authorization) {\n              throw new Error(GraphQLAuthError.NO_AUTH_TOKEN);\n            }\n            headers = {\n              Authorization: additionalHeaders.Authorization\n            };\n            return [3 /*break*/, 17];\n          case 16:\n            headers = {\n              Authorization: null\n            };\n            return [3 /*break*/, 17];\n          case 17:\n            return [2 /*return*/, headers];\n        }\n      });\n    });\n  };\n  /**\n   * to get the operation type\n   * @param operation\n   */\n  GraphQLAPIClass.prototype.getGraphqlOperationType = function (operation) {\n    var doc = parse(operation);\n    var definitions = doc.definitions;\n    var _a = __read(definitions, 1),\n      operationType = _a[0].operation;\n    return operationType;\n  };\n  /**\n   * Executes a GraphQL operation\n   *\n   * @param options - GraphQL Options\n   * @param [additionalHeaders] - headers to merge in after any `graphql_headers` set in the config\n   * @returns An Observable if the query is a subscription query, else a promise of the graphql result.\n   */\n  GraphQLAPIClass.prototype.graphql = function (_a, additionalHeaders) {\n    var paramQuery = _a.query,\n      _b = _a.variables,\n      variables = _b === void 0 ? {} : _b,\n      authMode = _a.authMode,\n      authToken = _a.authToken,\n      userAgentSuffix = _a.userAgentSuffix;\n    var query = typeof paramQuery === 'string' ? parse(paramQuery) : parse(print(paramQuery));\n    var _c = __read(query.definitions.filter(function (def) {\n        return def.kind === 'OperationDefinition';\n      }), 1),\n      _d = _c[0],\n      operationDef = _d === void 0 ? {} : _d;\n    var operationType = operationDef.operation;\n    var headers = additionalHeaders || {};\n    // if an authorization header is set, have the explicit authToken take precedence\n    if (authToken) {\n      headers.Authorization = authToken;\n    }\n    switch (operationType) {\n      case 'query':\n      case 'mutation':\n        this.createInstanceIfNotCreated();\n        var cancellableToken = this._api.getCancellableToken();\n        var initParams = {\n          cancellableToken: cancellableToken\n        };\n        var responsePromise = this._graphql({\n          query: query,\n          variables: variables,\n          authMode: authMode,\n          userAgentSuffix: userAgentSuffix\n        }, headers, initParams);\n        this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n        return responsePromise;\n      case 'subscription':\n        return this._graphqlSubscribe({\n          query: query,\n          variables: variables,\n          authMode: authMode\n        }, headers);\n      default:\n        throw new Error(\"invalid operation type: \" + operationType);\n    }\n  };\n  GraphQLAPIClass.prototype._graphql = function (_a, additionalHeaders, initParams) {\n    var query = _a.query,\n      variables = _a.variables,\n      authMode = _a.authMode,\n      userAgentSuffix = _a.userAgentSuffix;\n    if (additionalHeaders === void 0) {\n      additionalHeaders = {};\n    }\n    if (initParams === void 0) {\n      initParams = {};\n    }\n    return __awaiter(this, void 0, void 0, function () {\n      var _b, region, appSyncGraphqlEndpoint, _c, graphql_headers, customGraphqlEndpoint, customEndpointRegion, headers, _d, _e, _f, _g, _h, _j, body, init, endpoint, error, response, err_1, errors;\n      var _k;\n      return __generator(this, function (_l) {\n        switch (_l.label) {\n          case 0:\n            this.createInstanceIfNotCreated();\n            _b = this._options, region = _b.aws_appsync_region, appSyncGraphqlEndpoint = _b.aws_appsync_graphqlEndpoint, _c = _b.graphql_headers, graphql_headers = _c === void 0 ? function () {\n              return {};\n            } : _c, customGraphqlEndpoint = _b.graphql_endpoint, customEndpointRegion = _b.graphql_endpoint_iam_region;\n            _d = [{}];\n            _e = !customGraphqlEndpoint;\n            if (!_e) return [3 /*break*/, 2];\n            return [4 /*yield*/, this._headerBasedAuth(authMode, additionalHeaders)];\n          case 1:\n            _e = _l.sent();\n            _l.label = 2;\n          case 2:\n            _f = [__assign.apply(void 0, _d.concat([_e]))];\n            _g = customGraphqlEndpoint;\n            if (!_g) return [3 /*break*/, 6];\n            if (!customEndpointRegion) return [3 /*break*/, 4];\n            return [4 /*yield*/, this._headerBasedAuth(authMode, additionalHeaders)];\n          case 3:\n            _h = _l.sent();\n            return [3 /*break*/, 5];\n          case 4:\n            _h = {\n              Authorization: null\n            };\n            _l.label = 5;\n          case 5:\n            _g = _h;\n            _l.label = 6;\n          case 6:\n            _j = [__assign.apply(void 0, _f.concat([_g]))];\n            return [4 /*yield*/, graphql_headers({\n              query: query,\n              variables: variables\n            })];\n          case 7:\n            headers = __assign.apply(void 0, [__assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), additionalHeaders]), !customGraphqlEndpoint && (_k = {}, _k[USER_AGENT_HEADER] = getAmplifyUserAgent(userAgentSuffix), _k)]);\n            body = {\n              query: print(query),\n              variables: variables\n            };\n            init = Object.assign({\n              headers: headers,\n              body: body,\n              signerServiceInfo: {\n                service: !customGraphqlEndpoint ? 'appsync' : 'execute-api',\n                region: !customGraphqlEndpoint ? region : customEndpointRegion\n              }\n            }, initParams);\n            endpoint = customGraphqlEndpoint || appSyncGraphqlEndpoint;\n            if (!endpoint) {\n              error = new GraphQLError('No graphql endpoint provided.');\n              throw {\n                data: {},\n                errors: [error]\n              };\n            }\n            _l.label = 8;\n          case 8:\n            _l.trys.push([8, 10,, 11]);\n            return [4 /*yield*/, this._api.post(endpoint, init)];\n          case 9:\n            response = _l.sent();\n            return [3 /*break*/, 11];\n          case 10:\n            err_1 = _l.sent();\n            // If the exception is because user intentionally\n            // cancelled the request, do not modify the exception\n            // so that clients can identify the exception correctly.\n            if (this._api.isCancel(err_1)) {\n              throw err_1;\n            }\n            response = {\n              data: {},\n              errors: [new GraphQLError(err_1.message, null, null, null, null, err_1)]\n            };\n            return [3 /*break*/, 11];\n          case 11:\n            errors = response.errors;\n            if (errors && errors.length) {\n              throw response;\n            }\n            return [2 /*return*/, response];\n        }\n      });\n    });\n  };\n  GraphQLAPIClass.prototype.createInstanceIfNotCreated = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!!this._api) return [3 /*break*/, 2];\n            return [4 /*yield*/, this.createInstance()];\n          case 1:\n            _a.sent();\n            _a.label = 2;\n          case 2:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\n   * Checks to see if an error thrown is from an api request cancellation\n   * @param {any} error - Any error\n   * @return {boolean} - A boolean indicating if the error was from an api request cancellation\n   */\n  GraphQLAPIClass.prototype.isCancel = function (error) {\n    return this._api.isCancel(error);\n  };\n  /**\n   * Cancels an inflight request. Only applicable for graphql queries and mutations\n   * @param {any} request - request to cancel\n   * @return {boolean} - A boolean indicating if the request was cancelled\n   */\n  GraphQLAPIClass.prototype.cancel = function (request, message) {\n    return this._api.cancel(request, message);\n  };\n  /**\n   * Check if the request has a corresponding cancel token in the WeakMap.\n   * @params request - The request promise\n   * @return if the request has a corresponding cancel token.\n   */\n  GraphQLAPIClass.prototype.hasCancelToken = function (request) {\n    return this._api.hasCancelToken(request);\n  };\n  GraphQLAPIClass.prototype._graphqlSubscribe = function (_a, additionalHeaders) {\n    var query = _a.query,\n      variables = _a.variables,\n      defaultAuthenticationType = _a.authMode,\n      authToken = _a.authToken;\n    if (additionalHeaders === void 0) {\n      additionalHeaders = {};\n    }\n    var _b = this._options,\n      region = _b.aws_appsync_region,\n      appSyncGraphqlEndpoint = _b.aws_appsync_graphqlEndpoint,\n      aws_appsync_authenticationType = _b.aws_appsync_authenticationType,\n      apiKey = _b.aws_appsync_apiKey,\n      _c = _b.graphql_headers,\n      graphql_headers = _c === void 0 ? function () {\n        return {};\n      } : _c;\n    var authenticationType = defaultAuthenticationType || aws_appsync_authenticationType || 'AWS_IAM';\n    if (PubSub && typeof PubSub.subscribe === 'function') {\n      return PubSub.subscribe('', {\n        provider: INTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER,\n        appSyncGraphqlEndpoint: appSyncGraphqlEndpoint,\n        authenticationType: authenticationType,\n        apiKey: apiKey,\n        query: print(query),\n        region: region,\n        variables: variables,\n        graphql_headers: graphql_headers,\n        additionalHeaders: additionalHeaders,\n        authToken: authToken\n      });\n    } else {\n      logger.debug('No pubsub module applied for subscription');\n      throw new Error('No pubsub module applied for subscription');\n    }\n  };\n  /**\n   * @private\n   */\n  GraphQLAPIClass.prototype._ensureCredentials = function () {\n    var _this = this;\n    return this.Credentials.get().then(function (credentials) {\n      if (!credentials) return false;\n      var cred = _this.Credentials.shear(credentials);\n      logger.debug('set credentials for api', cred);\n      return true;\n    }).catch(function (err) {\n      logger.warn('ensure credentials error', err);\n      return false;\n    });\n  };\n  return GraphQLAPIClass;\n}();\nexport { GraphQLAPIClass };\nexport var GraphQLAPI = new GraphQLAPIClass(null);\nAmplify.register(GraphQLAPI);","map":{"version":3,"sources":["../src/GraphQLAPI.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\n/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { print, parse, GraphQLError, } from 'graphql';\nimport { Amplify, ConsoleLogger as Logger, Credentials, getAmplifyUserAgent, INTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER, } from '@aws-amplify/core';\nimport { PubSub } from '@aws-amplify/pubsub';\nimport Auth from '@aws-amplify/auth';\nimport Cache from '@aws-amplify/cache';\nimport { GraphQLAuthError, } from './types';\nimport { RestClient } from '@aws-amplify/api-rest';\nvar USER_AGENT_HEADER = 'x-amz-user-agent';\nvar logger = new Logger('GraphQLAPI');\nexport var graphqlOperation = function (query, variables, authToken, userAgentSuffix) {\n    if (variables === void 0) { variables = {}; }\n    return ({\n        query: query,\n        variables: variables,\n        authToken: authToken,\n        userAgentSuffix: userAgentSuffix,\n    });\n};\n/**\n * Export Cloud Logic APIs\n */\nvar GraphQLAPIClass = /** @class */ (function () {\n    /**\n     * Initialize GraphQL API with AWS configuration\n     * @param {Object} options - Configuration object for API\n     */\n    function GraphQLAPIClass(options) {\n        this._api = null;\n        this.Auth = Auth;\n        this.Cache = Cache;\n        this.Credentials = Credentials;\n        this._options = options;\n        logger.debug('API Options', this._options);\n    }\n    GraphQLAPIClass.prototype.getModuleName = function () {\n        return 'GraphQLAPI';\n    };\n    /**\n     * Configure API\n     * @param {Object} config - Configuration of the API\n     * @return {Object} - The current configuration\n     */\n    GraphQLAPIClass.prototype.configure = function (options) {\n        var _a = options || {}, _b = _a.API, API = _b === void 0 ? {} : _b, otherOptions = __rest(_a, [\"API\"]);\n        var opt = __assign(__assign({}, otherOptions), API);\n        logger.debug('configure GraphQL API', { opt: opt });\n        if (opt['aws_project_region']) {\n            opt = Object.assign({}, opt, {\n                region: opt['aws_project_region'],\n                header: {},\n            });\n        }\n        if (typeof opt.graphql_headers !== 'undefined' &&\n            typeof opt.graphql_headers !== 'function') {\n            logger.warn('graphql_headers should be a function');\n            opt.graphql_headers = undefined;\n        }\n        this._options = Object.assign({}, this._options, opt);\n        this.createInstance();\n        return this._options;\n    };\n    /**\n     * Create an instance of API for the library\n     * @return - A promise of true if Success\n     */\n    GraphQLAPIClass.prototype.createInstance = function () {\n        logger.debug('create Rest instance');\n        if (this._options) {\n            this._api = new RestClient(this._options);\n            // Share instance Credentials with client for SSR\n            this._api.Credentials = this.Credentials;\n            return true;\n        }\n        else {\n            return Promise.reject('API not configured');\n        }\n    };\n    GraphQLAPIClass.prototype._headerBasedAuth = function (defaultAuthenticationType, additionalHeaders) {\n        if (additionalHeaders === void 0) { additionalHeaders = {}; }\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, aws_appsync_authenticationType, apiKey, authenticationType, headers, _b, credentialsOK, token, federatedInfo, currentUser, e_1, session, e_2;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        _a = this._options, aws_appsync_authenticationType = _a.aws_appsync_authenticationType, apiKey = _a.aws_appsync_apiKey;\n                        authenticationType = defaultAuthenticationType || aws_appsync_authenticationType || 'AWS_IAM';\n                        headers = {};\n                        _b = authenticationType;\n                        switch (_b) {\n                            case 'API_KEY': return [3 /*break*/, 1];\n                            case 'AWS_IAM': return [3 /*break*/, 2];\n                            case 'OPENID_CONNECT': return [3 /*break*/, 4];\n                            case 'AMAZON_COGNITO_USER_POOLS': return [3 /*break*/, 11];\n                            case 'AWS_LAMBDA': return [3 /*break*/, 15];\n                        }\n                        return [3 /*break*/, 16];\n                    case 1:\n                        if (!apiKey) {\n                            throw new Error(GraphQLAuthError.NO_API_KEY);\n                        }\n                        headers = {\n                            Authorization: null,\n                            'X-Api-Key': apiKey,\n                        };\n                        return [3 /*break*/, 17];\n                    case 2: return [4 /*yield*/, this._ensureCredentials()];\n                    case 3:\n                        credentialsOK = _c.sent();\n                        if (!credentialsOK) {\n                            throw new Error(GraphQLAuthError.NO_CREDENTIALS);\n                        }\n                        return [3 /*break*/, 17];\n                    case 4:\n                        _c.trys.push([4, 9, , 10]);\n                        token = void 0;\n                        return [4 /*yield*/, Cache.getItem('federatedInfo')];\n                    case 5:\n                        federatedInfo = _c.sent();\n                        if (!federatedInfo) return [3 /*break*/, 6];\n                        token = federatedInfo.token;\n                        return [3 /*break*/, 8];\n                    case 6: return [4 /*yield*/, Auth.currentAuthenticatedUser()];\n                    case 7:\n                        currentUser = _c.sent();\n                        if (currentUser) {\n                            token = currentUser.token;\n                        }\n                        _c.label = 8;\n                    case 8:\n                        if (!token) {\n                            throw new Error(GraphQLAuthError.NO_FEDERATED_JWT);\n                        }\n                        headers = {\n                            Authorization: token,\n                        };\n                        return [3 /*break*/, 10];\n                    case 9:\n                        e_1 = _c.sent();\n                        throw new Error(GraphQLAuthError.NO_CURRENT_USER);\n                    case 10: return [3 /*break*/, 17];\n                    case 11:\n                        _c.trys.push([11, 13, , 14]);\n                        return [4 /*yield*/, this.Auth.currentSession()];\n                    case 12:\n                        session = _c.sent();\n                        headers = {\n                            Authorization: session.getAccessToken().getJwtToken(),\n                        };\n                        return [3 /*break*/, 14];\n                    case 13:\n                        e_2 = _c.sent();\n                        throw new Error(GraphQLAuthError.NO_CURRENT_USER);\n                    case 14: return [3 /*break*/, 17];\n                    case 15:\n                        if (!additionalHeaders.Authorization) {\n                            throw new Error(GraphQLAuthError.NO_AUTH_TOKEN);\n                        }\n                        headers = {\n                            Authorization: additionalHeaders.Authorization,\n                        };\n                        return [3 /*break*/, 17];\n                    case 16:\n                        headers = {\n                            Authorization: null,\n                        };\n                        return [3 /*break*/, 17];\n                    case 17: return [2 /*return*/, headers];\n                }\n            });\n        });\n    };\n    /**\n     * to get the operation type\n     * @param operation\n     */\n    GraphQLAPIClass.prototype.getGraphqlOperationType = function (operation) {\n        var doc = parse(operation);\n        var definitions = doc.definitions;\n        var _a = __read(definitions, 1), operationType = _a[0].operation;\n        return operationType;\n    };\n    /**\n     * Executes a GraphQL operation\n     *\n     * @param options - GraphQL Options\n     * @param [additionalHeaders] - headers to merge in after any `graphql_headers` set in the config\n     * @returns An Observable if the query is a subscription query, else a promise of the graphql result.\n     */\n    GraphQLAPIClass.prototype.graphql = function (_a, additionalHeaders) {\n        var paramQuery = _a.query, _b = _a.variables, variables = _b === void 0 ? {} : _b, authMode = _a.authMode, authToken = _a.authToken, userAgentSuffix = _a.userAgentSuffix;\n        var query = typeof paramQuery === 'string'\n            ? parse(paramQuery)\n            : parse(print(paramQuery));\n        var _c = __read(query.definitions.filter(function (def) { return def.kind === 'OperationDefinition'; }), 1), _d = _c[0], operationDef = _d === void 0 ? {} : _d;\n        var operationType = operationDef.operation;\n        var headers = additionalHeaders || {};\n        // if an authorization header is set, have the explicit authToken take precedence\n        if (authToken) {\n            headers.Authorization = authToken;\n        }\n        switch (operationType) {\n            case 'query':\n            case 'mutation':\n                this.createInstanceIfNotCreated();\n                var cancellableToken = this._api.getCancellableToken();\n                var initParams = { cancellableToken: cancellableToken };\n                var responsePromise = this._graphql({ query: query, variables: variables, authMode: authMode, userAgentSuffix: userAgentSuffix }, headers, initParams);\n                this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n                return responsePromise;\n            case 'subscription':\n                return this._graphqlSubscribe({ query: query, variables: variables, authMode: authMode }, headers);\n            default:\n                throw new Error(\"invalid operation type: \" + operationType);\n        }\n    };\n    GraphQLAPIClass.prototype._graphql = function (_a, additionalHeaders, initParams) {\n        var query = _a.query, variables = _a.variables, authMode = _a.authMode, userAgentSuffix = _a.userAgentSuffix;\n        if (additionalHeaders === void 0) { additionalHeaders = {}; }\n        if (initParams === void 0) { initParams = {}; }\n        return __awaiter(this, void 0, void 0, function () {\n            var _b, region, appSyncGraphqlEndpoint, _c, graphql_headers, customGraphqlEndpoint, customEndpointRegion, headers, _d, _e, _f, _g, _h, _j, body, init, endpoint, error, response, err_1, errors;\n            var _k;\n            return __generator(this, function (_l) {\n                switch (_l.label) {\n                    case 0:\n                        this.createInstanceIfNotCreated();\n                        _b = this._options, region = _b.aws_appsync_region, appSyncGraphqlEndpoint = _b.aws_appsync_graphqlEndpoint, _c = _b.graphql_headers, graphql_headers = _c === void 0 ? function () { return ({}); } : _c, customGraphqlEndpoint = _b.graphql_endpoint, customEndpointRegion = _b.graphql_endpoint_iam_region;\n                        _d = [{}];\n                        _e = !customGraphqlEndpoint;\n                        if (!_e) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this._headerBasedAuth(authMode, additionalHeaders)];\n                    case 1:\n                        _e = (_l.sent());\n                        _l.label = 2;\n                    case 2:\n                        _f = [__assign.apply(void 0, _d.concat([(_e)]))];\n                        _g = customGraphqlEndpoint;\n                        if (!_g) return [3 /*break*/, 6];\n                        if (!customEndpointRegion) return [3 /*break*/, 4];\n                        return [4 /*yield*/, this._headerBasedAuth(authMode, additionalHeaders)];\n                    case 3:\n                        _h = _l.sent();\n                        return [3 /*break*/, 5];\n                    case 4:\n                        _h = { Authorization: null };\n                        _l.label = 5;\n                    case 5:\n                        _g = (_h);\n                        _l.label = 6;\n                    case 6:\n                        _j = [__assign.apply(void 0, _f.concat([(_g)]))];\n                        return [4 /*yield*/, graphql_headers({ query: query, variables: variables })];\n                    case 7:\n                        headers = __assign.apply(void 0, [__assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_l.sent())])), additionalHeaders]), (!customGraphqlEndpoint && (_k = {},\n                                _k[USER_AGENT_HEADER] = getAmplifyUserAgent(userAgentSuffix),\n                                _k))]);\n                        body = {\n                            query: print(query),\n                            variables: variables,\n                        };\n                        init = Object.assign({\n                            headers: headers,\n                            body: body,\n                            signerServiceInfo: {\n                                service: !customGraphqlEndpoint ? 'appsync' : 'execute-api',\n                                region: !customGraphqlEndpoint ? region : customEndpointRegion,\n                            },\n                        }, initParams);\n                        endpoint = customGraphqlEndpoint || appSyncGraphqlEndpoint;\n                        if (!endpoint) {\n                            error = new GraphQLError('No graphql endpoint provided.');\n                            throw {\n                                data: {},\n                                errors: [error],\n                            };\n                        }\n                        _l.label = 8;\n                    case 8:\n                        _l.trys.push([8, 10, , 11]);\n                        return [4 /*yield*/, this._api.post(endpoint, init)];\n                    case 9:\n                        response = _l.sent();\n                        return [3 /*break*/, 11];\n                    case 10:\n                        err_1 = _l.sent();\n                        // If the exception is because user intentionally\n                        // cancelled the request, do not modify the exception\n                        // so that clients can identify the exception correctly.\n                        if (this._api.isCancel(err_1)) {\n                            throw err_1;\n                        }\n                        response = {\n                            data: {},\n                            errors: [new GraphQLError(err_1.message, null, null, null, null, err_1)],\n                        };\n                        return [3 /*break*/, 11];\n                    case 11:\n                        errors = response.errors;\n                        if (errors && errors.length) {\n                            throw response;\n                        }\n                        return [2 /*return*/, response];\n                }\n            });\n        });\n    };\n    GraphQLAPIClass.prototype.createInstanceIfNotCreated = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!!this._api) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.createInstance()];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Checks to see if an error thrown is from an api request cancellation\n     * @param {any} error - Any error\n     * @return {boolean} - A boolean indicating if the error was from an api request cancellation\n     */\n    GraphQLAPIClass.prototype.isCancel = function (error) {\n        return this._api.isCancel(error);\n    };\n    /**\n     * Cancels an inflight request. Only applicable for graphql queries and mutations\n     * @param {any} request - request to cancel\n     * @return {boolean} - A boolean indicating if the request was cancelled\n     */\n    GraphQLAPIClass.prototype.cancel = function (request, message) {\n        return this._api.cancel(request, message);\n    };\n    /**\n     * Check if the request has a corresponding cancel token in the WeakMap.\n     * @params request - The request promise\n     * @return if the request has a corresponding cancel token.\n     */\n    GraphQLAPIClass.prototype.hasCancelToken = function (request) {\n        return this._api.hasCancelToken(request);\n    };\n    GraphQLAPIClass.prototype._graphqlSubscribe = function (_a, additionalHeaders) {\n        var query = _a.query, variables = _a.variables, defaultAuthenticationType = _a.authMode, authToken = _a.authToken;\n        if (additionalHeaders === void 0) { additionalHeaders = {}; }\n        var _b = this._options, region = _b.aws_appsync_region, appSyncGraphqlEndpoint = _b.aws_appsync_graphqlEndpoint, aws_appsync_authenticationType = _b.aws_appsync_authenticationType, apiKey = _b.aws_appsync_apiKey, _c = _b.graphql_headers, graphql_headers = _c === void 0 ? function () { return ({}); } : _c;\n        var authenticationType = defaultAuthenticationType || aws_appsync_authenticationType || 'AWS_IAM';\n        if (PubSub && typeof PubSub.subscribe === 'function') {\n            return PubSub.subscribe('', {\n                provider: INTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER,\n                appSyncGraphqlEndpoint: appSyncGraphqlEndpoint,\n                authenticationType: authenticationType,\n                apiKey: apiKey,\n                query: print(query),\n                region: region,\n                variables: variables,\n                graphql_headers: graphql_headers,\n                additionalHeaders: additionalHeaders,\n                authToken: authToken,\n            });\n        }\n        else {\n            logger.debug('No pubsub module applied for subscription');\n            throw new Error('No pubsub module applied for subscription');\n        }\n    };\n    /**\n     * @private\n     */\n    GraphQLAPIClass.prototype._ensureCredentials = function () {\n        var _this = this;\n        return this.Credentials.get()\n            .then(function (credentials) {\n            if (!credentials)\n                return false;\n            var cred = _this.Credentials.shear(credentials);\n            logger.debug('set credentials for api', cred);\n            return true;\n        })\n            .catch(function (err) {\n            logger.warn('ensure credentials error', err);\n            return false;\n        });\n    };\n    return GraphQLAPIClass;\n}());\nexport { GraphQLAPIClass };\nexport var GraphQLAPI = new GraphQLAPIClass(null);\nAmplify.register(GraphQLAPI);\n//# sourceMappingURL=GraphQLAPI.js.map"]},"metadata":{},"sourceType":"module"}