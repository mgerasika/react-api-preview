{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\nvar _postcss = _interopRequireDefault(require(\"postcss\"));\nvar _node = _interopRequireDefault(require(\"postcss/lib/node\"));\nvar _isFunction = _interopRequireDefault(require(\"lodash/isFunction\"));\nvar _escapeClassName = _interopRequireDefault(require(\"../util/escapeClassName\"));\nvar _generateVariantFunction = _interopRequireDefault(require(\"../util/generateVariantFunction\"));\nvar _parseObjectStyles = _interopRequireDefault(require(\"../util/parseObjectStyles\"));\nvar _prefixSelector = _interopRequireDefault(require(\"../util/prefixSelector\"));\nvar _wrapWithVariants = _interopRequireDefault(require(\"../util/wrapWithVariants\"));\nvar _cloneNodes = _interopRequireDefault(require(\"../util/cloneNodes\"));\nvar _transformThemeValue = _interopRequireDefault(require(\"./transformThemeValue\"));\nvar _nameClass = _interopRequireDefault(require(\"../util/nameClass\"));\nvar _isKeyframeRule = _interopRequireDefault(require(\"../util/isKeyframeRule\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction parseStyles(styles) {\n  if (!Array.isArray(styles)) {\n    return parseStyles([styles]);\n  }\n  return _lodash.default.flatMap(styles, style => style instanceof _node.default ? style : (0, _parseObjectStyles.default)(style));\n}\nfunction wrapWithLayer(rules, layer) {\n  return _postcss.default.atRule({\n    name: 'layer',\n    params: layer\n  }).append((0, _cloneNodes.default)(Array.isArray(rules) ? rules : [rules]));\n}\nfunction _default(plugins, config) {\n  const pluginBaseStyles = [];\n  const pluginComponents = [];\n  const pluginUtilities = [];\n  const pluginVariantGenerators = {};\n  const applyConfiguredPrefix = selector => {\n    return (0, _prefixSelector.default)(config.prefix, selector);\n  };\n  function addUtilities(utilities, options) {\n    const defaultOptions = {\n      variants: [],\n      respectPrefix: true,\n      respectImportant: true\n    };\n    options = Array.isArray(options) ? Object.assign({}, defaultOptions, {\n      variants: options\n    }) : _lodash.default.defaults(options, defaultOptions);\n    const styles = _postcss.default.root({\n      nodes: parseStyles(utilities)\n    });\n    styles.walkRules(rule => {\n      if (options.respectPrefix && !(0, _isKeyframeRule.default)(rule)) {\n        rule.selector = applyConfiguredPrefix(rule.selector);\n      }\n      if (options.respectImportant && config.important) {\n        rule.__tailwind = {\n          ...rule.__tailwind,\n          important: config.important\n        };\n      }\n    });\n    pluginUtilities.push(wrapWithLayer((0, _wrapWithVariants.default)(styles.nodes, options.variants), 'utilities'));\n  }\n  const getConfigValue = (path, defaultValue) => path ? _lodash.default.get(config, path, defaultValue) : config;\n  plugins.forEach(plugin => {\n    if (plugin.__isOptionsFunction) {\n      plugin = plugin();\n    }\n    const handler = (0, _isFunction.default)(plugin) ? plugin : _lodash.default.get(plugin, 'handler', () => {});\n    handler({\n      postcss: _postcss.default,\n      config: getConfigValue,\n      theme: (path, defaultValue) => {\n        const [pathRoot, ...subPaths] = _lodash.default.toPath(path);\n        const value = getConfigValue(['theme', pathRoot, ...subPaths], defaultValue);\n        return (0, _transformThemeValue.default)(pathRoot)(value);\n      },\n      corePlugins: path => {\n        if (Array.isArray(config.corePlugins)) {\n          return config.corePlugins.includes(path);\n        }\n        return getConfigValue(`corePlugins.${path}`, true);\n      },\n      variants: (path, defaultValue) => {\n        if (Array.isArray(config.variants)) {\n          return config.variants;\n        }\n        return getConfigValue(`variants.${path}`, defaultValue);\n      },\n      e: _escapeClassName.default,\n      prefix: applyConfiguredPrefix,\n      addUtilities,\n      matchUtilities: (matches, _ref) => {\n        let {\n          values,\n          variants,\n          respectPrefix,\n          respectImportant\n        } = _ref;\n        let modifierValues = Object.entries(values || {});\n        let result = Object.entries(matches).flatMap(_ref2 => {\n          let [name, utilityFunction] = _ref2;\n          return modifierValues.map(_ref3 => {\n            let [modifier, value] = _ref3;\n            let declarations = utilityFunction(value, {\n              includeRules(rules, options) {\n                addUtilities(rules, options);\n              }\n            });\n            if (!declarations) {\n              return null;\n            }\n            return {\n              [(0, _nameClass.default)(name, modifier)]: declarations\n            };\n          }).filter(Boolean);\n        });\n        addUtilities(result, {\n          variants,\n          respectPrefix,\n          respectImportant\n        });\n      },\n      addComponents: (components, options) => {\n        const defaultOptions = {\n          variants: [],\n          respectPrefix: true\n        };\n        options = Array.isArray(options) ? Object.assign({}, defaultOptions, {\n          variants: options\n        }) : _lodash.default.defaults(options, defaultOptions);\n        const styles = _postcss.default.root({\n          nodes: parseStyles(components)\n        });\n        styles.walkRules(rule => {\n          if (options.respectPrefix && !(0, _isKeyframeRule.default)(rule)) {\n            rule.selector = applyConfiguredPrefix(rule.selector);\n          }\n        });\n        pluginComponents.push(wrapWithLayer((0, _wrapWithVariants.default)(styles.nodes, options.variants), 'components'));\n      },\n      addBase: baseStyles => {\n        pluginBaseStyles.push(wrapWithLayer(parseStyles(baseStyles), 'base'));\n      },\n      addVariant: function (name, generator) {\n        let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n        pluginVariantGenerators[name] = (0, _generateVariantFunction.default)(generator, options);\n      }\n    });\n  });\n  return {\n    base: pluginBaseStyles,\n    components: pluginComponents,\n    utilities: pluginUtilities,\n    variantGenerators: pluginVariantGenerators\n  };\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_default","_lodash","_interopRequireDefault","require","_postcss","_node","_isFunction","_escapeClassName","_generateVariantFunction","_parseObjectStyles","_prefixSelector","_wrapWithVariants","_cloneNodes","_transformThemeValue","_nameClass","_isKeyframeRule","obj","__esModule","parseStyles","styles","Array","isArray","flatMap","style","wrapWithLayer","rules","layer","atRule","name","params","append","plugins","config","pluginBaseStyles","pluginComponents","pluginUtilities","pluginVariantGenerators","applyConfiguredPrefix","selector","prefix","addUtilities","utilities","options","defaultOptions","variants","respectPrefix","respectImportant","assign","defaults","root","nodes","walkRules","rule","important","__tailwind","push","getConfigValue","path","defaultValue","get","forEach","plugin","__isOptionsFunction","handler","postcss","theme","pathRoot","subPaths","toPath","corePlugins","includes","e","matchUtilities","matches","values","modifierValues","entries","result","utilityFunction","map","modifier","declarations","includeRules","filter","Boolean","addComponents","components","addBase","baseStyles","addVariant","generator","base","variantGenerators"],"sources":["/home/mgerasika/Documents/git/oddbox/oddbox-frontend-npm-usage-example/node_modules/tailwindcss/lib/util/processPlugins.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _postcss = _interopRequireDefault(require(\"postcss\"));\n\nvar _node = _interopRequireDefault(require(\"postcss/lib/node\"));\n\nvar _isFunction = _interopRequireDefault(require(\"lodash/isFunction\"));\n\nvar _escapeClassName = _interopRequireDefault(require(\"../util/escapeClassName\"));\n\nvar _generateVariantFunction = _interopRequireDefault(require(\"../util/generateVariantFunction\"));\n\nvar _parseObjectStyles = _interopRequireDefault(require(\"../util/parseObjectStyles\"));\n\nvar _prefixSelector = _interopRequireDefault(require(\"../util/prefixSelector\"));\n\nvar _wrapWithVariants = _interopRequireDefault(require(\"../util/wrapWithVariants\"));\n\nvar _cloneNodes = _interopRequireDefault(require(\"../util/cloneNodes\"));\n\nvar _transformThemeValue = _interopRequireDefault(require(\"./transformThemeValue\"));\n\nvar _nameClass = _interopRequireDefault(require(\"../util/nameClass\"));\n\nvar _isKeyframeRule = _interopRequireDefault(require(\"../util/isKeyframeRule\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction parseStyles(styles) {\n  if (!Array.isArray(styles)) {\n    return parseStyles([styles]);\n  }\n\n  return _lodash.default.flatMap(styles, style => style instanceof _node.default ? style : (0, _parseObjectStyles.default)(style));\n}\n\nfunction wrapWithLayer(rules, layer) {\n  return _postcss.default.atRule({\n    name: 'layer',\n    params: layer\n  }).append((0, _cloneNodes.default)(Array.isArray(rules) ? rules : [rules]));\n}\n\nfunction _default(plugins, config) {\n  const pluginBaseStyles = [];\n  const pluginComponents = [];\n  const pluginUtilities = [];\n  const pluginVariantGenerators = {};\n\n  const applyConfiguredPrefix = selector => {\n    return (0, _prefixSelector.default)(config.prefix, selector);\n  };\n\n  function addUtilities(utilities, options) {\n    const defaultOptions = {\n      variants: [],\n      respectPrefix: true,\n      respectImportant: true\n    };\n    options = Array.isArray(options) ? Object.assign({}, defaultOptions, {\n      variants: options\n    }) : _lodash.default.defaults(options, defaultOptions);\n\n    const styles = _postcss.default.root({\n      nodes: parseStyles(utilities)\n    });\n\n    styles.walkRules(rule => {\n      if (options.respectPrefix && !(0, _isKeyframeRule.default)(rule)) {\n        rule.selector = applyConfiguredPrefix(rule.selector);\n      }\n\n      if (options.respectImportant && config.important) {\n        rule.__tailwind = { ...rule.__tailwind,\n          important: config.important\n        };\n      }\n    });\n    pluginUtilities.push(wrapWithLayer((0, _wrapWithVariants.default)(styles.nodes, options.variants), 'utilities'));\n  }\n\n  const getConfigValue = (path, defaultValue) => path ? _lodash.default.get(config, path, defaultValue) : config;\n\n  plugins.forEach(plugin => {\n    if (plugin.__isOptionsFunction) {\n      plugin = plugin();\n    }\n\n    const handler = (0, _isFunction.default)(plugin) ? plugin : _lodash.default.get(plugin, 'handler', () => {});\n    handler({\n      postcss: _postcss.default,\n      config: getConfigValue,\n      theme: (path, defaultValue) => {\n        const [pathRoot, ...subPaths] = _lodash.default.toPath(path);\n\n        const value = getConfigValue(['theme', pathRoot, ...subPaths], defaultValue);\n        return (0, _transformThemeValue.default)(pathRoot)(value);\n      },\n      corePlugins: path => {\n        if (Array.isArray(config.corePlugins)) {\n          return config.corePlugins.includes(path);\n        }\n\n        return getConfigValue(`corePlugins.${path}`, true);\n      },\n      variants: (path, defaultValue) => {\n        if (Array.isArray(config.variants)) {\n          return config.variants;\n        }\n\n        return getConfigValue(`variants.${path}`, defaultValue);\n      },\n      e: _escapeClassName.default,\n      prefix: applyConfiguredPrefix,\n      addUtilities,\n      matchUtilities: (matches, {\n        values,\n        variants,\n        respectPrefix,\n        respectImportant\n      }) => {\n        let modifierValues = Object.entries(values || {});\n        let result = Object.entries(matches).flatMap(([name, utilityFunction]) => {\n          return modifierValues.map(([modifier, value]) => {\n            let declarations = utilityFunction(value, {\n              includeRules(rules, options) {\n                addUtilities(rules, options);\n              }\n\n            });\n\n            if (!declarations) {\n              return null;\n            }\n\n            return {\n              [(0, _nameClass.default)(name, modifier)]: declarations\n            };\n          }).filter(Boolean);\n        });\n        addUtilities(result, {\n          variants,\n          respectPrefix,\n          respectImportant\n        });\n      },\n      addComponents: (components, options) => {\n        const defaultOptions = {\n          variants: [],\n          respectPrefix: true\n        };\n        options = Array.isArray(options) ? Object.assign({}, defaultOptions, {\n          variants: options\n        }) : _lodash.default.defaults(options, defaultOptions);\n\n        const styles = _postcss.default.root({\n          nodes: parseStyles(components)\n        });\n\n        styles.walkRules(rule => {\n          if (options.respectPrefix && !(0, _isKeyframeRule.default)(rule)) {\n            rule.selector = applyConfiguredPrefix(rule.selector);\n          }\n        });\n        pluginComponents.push(wrapWithLayer((0, _wrapWithVariants.default)(styles.nodes, options.variants), 'components'));\n      },\n      addBase: baseStyles => {\n        pluginBaseStyles.push(wrapWithLayer(parseStyles(baseStyles), 'base'));\n      },\n      addVariant: (name, generator, options = {}) => {\n        pluginVariantGenerators[name] = (0, _generateVariantFunction.default)(generator, options);\n      }\n    });\n  });\n  return {\n    base: pluginBaseStyles,\n    components: pluginComponents,\n    utilities: pluginUtilities,\n    variantGenerators: pluginVariantGenerators\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}