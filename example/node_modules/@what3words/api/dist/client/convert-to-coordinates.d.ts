import { ApiClient } from '../lib';
import type { ApiClientConfiguration, Transport } from '../lib';
import type { FeatureCollectionResponse, LocationGeoJsonResponse, LocationJsonResponse } from './response.model';
export declare type ConvertToCoordinatesOptions = {
    words: string;
    format?: 'json' | 'geojson';
};
export declare class ConvertToCoordinatesClient extends ApiClient<LocationJsonResponse, ConvertToCoordinatesOptions, FeatureCollectionResponse<LocationGeoJsonResponse>> {
    protected readonly method = "get";
    protected readonly url = "/convert-to-coordinates";
    static init(apiKey?: string, config?: ApiClientConfiguration, transport?: Transport): ConvertToCoordinatesClient;
    protected query(options: ConvertToCoordinatesOptions): {
        words: string;
        format: "json" | "geojson";
    };
    protected validate(options: ConvertToCoordinatesOptions): Promise<{
        valid: boolean;
        message: string;
    } | {
        valid: boolean;
        message?: undefined;
    }>;
}
