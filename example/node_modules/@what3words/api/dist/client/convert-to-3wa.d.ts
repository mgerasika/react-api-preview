import { ApiClient } from '../lib';
import type { ApiClientConfiguration, Transport } from '../lib';
import type { Coordinates, FeatureCollectionResponse, LocationGeoJsonResponse, LocationJsonResponse } from './response.model';
export declare type ConvertTo3waOptions = {
    coordinates: Coordinates;
    language?: string;
    format?: 'json' | 'geojson';
};
export declare class ConvertTo3waClient extends ApiClient<LocationJsonResponse, ConvertTo3waOptions, FeatureCollectionResponse<LocationGeoJsonResponse>> {
    protected readonly method = "get";
    protected readonly url = "/convert-to-3wa";
    static init(apiKey?: string, config?: ApiClientConfiguration, transport?: Transport): ConvertTo3waClient;
    protected query(options: ConvertTo3waOptions): {
        coordinates: string;
        language: string;
        format: "json" | "geojson";
    };
    protected validate(options: ConvertTo3waOptions): Promise<{
        valid: boolean;
        message: string;
    } | {
        valid: boolean;
        message?: undefined;
    }>;
}
