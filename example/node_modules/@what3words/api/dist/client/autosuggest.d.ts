import { ApiClient } from '../lib';
import type { ApiClientConfiguration, Transport } from '../lib';
import { Bounds, Coordinates } from './response.model';
export interface AutosuggestSuggestion {
    country: string;
    nearestPlace: string;
    words: string;
    distanceToFocusKm: number;
    rank: number;
    language: string;
}
export interface AutosuggestResponse {
    suggestions: AutosuggestSuggestion[];
}
export declare enum AutosuggestInputType {
    Text = "text",
    VoconHybrid = "vocon-hybrid",
    NMDP_ASR = "nmdp-asr",
    GenericVoice = "generic-voice"
}
export interface AutosuggestOptions {
    input: string;
    nResults?: number;
    focus?: Coordinates;
    nFocusResults?: number;
    clipToCountry?: string[];
    clipToBoundingBox?: Bounds;
    clipToCircle?: {
        center: Coordinates;
        radius: number;
    };
    clipToPolygon?: Coordinates[];
    inputType?: AutosuggestInputType;
    language?: string;
    preferLand?: boolean;
}
export declare class AutosuggestClient extends ApiClient<AutosuggestResponse, AutosuggestOptions> {
    private lastReqOpts;
    protected readonly url = "/autosuggest";
    protected readonly method = "get";
    static init(apiKey?: string, config?: ApiClientConfiguration, transport?: Transport): AutosuggestClient;
    protected query(options: AutosuggestOptions): {
        input: string;
    };
    protected validate(options: AutosuggestOptions): Promise<{
        valid: boolean;
        message: string | undefined;
    }>;
    onSelected(selected: AutosuggestSuggestion, initialRequestOptions?: AutosuggestOptions): Promise<void>;
    private autosuggestOptionsToQuery;
}
