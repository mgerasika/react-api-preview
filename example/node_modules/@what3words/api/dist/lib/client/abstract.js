"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ApiClient = void 0;
var client_model_1 = require("./client.model");
var transport_1 = require("../transport");
var constants_1 = require("../constants");
var ApiClient = /** @class */ (function () {
    function ApiClient(_apiKey, config, transport) {
        if (_apiKey === void 0) { _apiKey = ''; }
        if (config === void 0) { config = {}; }
        if (transport === void 0) { transport = transport_1.fetchTransport(); }
        this._apiKey = _apiKey;
        this._config = Object.assign({}, ApiClient.DEFAULT_CONFIG, config);
        this.transport = transport;
    }
    ApiClient.prototype.apiKey = function (apiKey) {
        if (apiKey !== undefined) {
            this._apiKey = apiKey;
            return this;
        }
        return this._apiKey;
    };
    ApiClient.prototype.config = function (config) {
        if (config !== undefined) {
            this._config = Object.assign({}, this._config, config);
            return this;
        }
        return this._config;
    };
    ApiClient.prototype.run = function (options) {
        return __awaiter(this, void 0, void 0, function () {
            var validation, params, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.validate(options)];
                    case 1:
                        validation = _a.sent();
                        if (!validation.valid) {
                            throw new Error(validation.message ||
                                'There was a problem validating your request options');
                        }
                        params = {
                            headers: __assign(__assign({}, this.headers()), (this._config.headers || {})),
                            body: this.body(options),
                            query: this.query(options),
                        };
                        return [4 /*yield*/, this.makeClientRequest(this.method, this.url, params)];
                    case 2:
                        response = _a.sent();
                        if (!response.body)
                            throw new Error('No response body set');
                        return [2 /*return*/, response.body];
                }
            });
        });
    };
    ApiClient.prototype.makeClientRequest = function (method, url, params) {
        return __awaiter(this, void 0, void 0, function () {
            var clientRequest, response, result;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        clientRequest = this.getClientRequest(method, url, params);
                        return [4 /*yield*/, this.transport(clientRequest)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, transport_1.errorHandler(response)];
                    case 2:
                        result = _a.sent();
                        return [2 /*return*/, result];
                }
            });
        });
    };
    ApiClient.prototype.getClientRequest = function (method, url, params) {
        var _a;
        return {
            method: method,
            host: ((_a = this._config.host) === null || _a === void 0 ? void 0 : _a.replace(/\/$/, '')) + "/" + this._config.apiVersion,
            url: url,
            query: __assign(__assign({}, ((params === null || params === void 0 ? void 0 : params.query) || {})), { key: this._apiKey }),
            headers: __assign(__assign(__assign({}, ((params === null || params === void 0 ? void 0 : params.headers) || {})), { 'X-Api-Key': this._apiKey }), constants_1.HEADERS),
            body: (params === null || params === void 0 ? void 0 : params.body) || null,
        };
    };
    ApiClient.prototype.validate = function (
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    options) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, { valid: true, message: undefined }];
            });
        });
    };
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    ApiClient.prototype.headers = function (options) {
        return {};
    };
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    ApiClient.prototype.body = function (options) {
        return null;
    };
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    ApiClient.prototype.query = function (options) {
        return {};
    };
    ApiClient.DEFAULT_CONFIG = {
        host: 'https://api.what3words.com',
        apiVersion: client_model_1.ApiVersion.Version3,
    };
    return ApiClient;
}());
exports.ApiClient = ApiClient;
//# sourceMappingURL=abstract.js.map